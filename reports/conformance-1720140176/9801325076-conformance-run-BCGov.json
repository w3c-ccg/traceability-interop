{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b131c142-00fe-46fd-acc1-63b1a522954e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3c8c9744-2d22-4687-ae28-e5c63ce25203",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d7efb4cd-dfe4-4240-8943-c7556beb5582",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "89fd6d6b-04e0-4fc3-b24e-51ad690cef0e"
                }
              }
            ]
          },
          {
            "id": "6d0bff2e-5b3d-437c-9783-77ce5313f717",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ebd237c4-c5ca-4c46-8c32-69bab80442de",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "69d59b66-6477-4ef0-8631-65543ecc7282"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "be3ea966-2ad9-4029-8459-1906051a8210",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "fd6a7831-8f30-483d-a19f-95f39e33cb5c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4675498d-8e80-4457-b582-01787cf2c9a3",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "981d66a9-9f5d-45f4-b97d-09224e1120e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7025cd33-9dcf-4f6d-8929-935e909134a4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c9f6df4a-2d3c-4acb-8d2a-698e409435c3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c91f0c91-7b3c-4435-84c5-3e8c99c2e197"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2d765d39-f95a-4f66-a4b1-de70414f8613",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7db2f95a-a2b5-4089-9b6e-9932212c30d2"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b581d2d1-0d6d-49bd-ba58-52cf87a23f0c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "39bc3b8f-a7fe-4ce1-88f2-3cf599db5698"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "17f6bf7b-02fc-4f11-95a5-8e2a79d906c4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3de83be9-e840-4ccd-a23b-a217c5e78248"
            }
          }
        ]
      },
      {
        "id": "7db1ac32-64ae-4770-a533-e53b264ffbd7",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7ab42989-8814-4147-a919-cccf526f1bb9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5c5b2b16-9503-4ea8-b186-dbd96cbb79a8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "366152ac-c9e6-4e81-8162-364acc22c461",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb415cb-bfeb-4b4b-8adc-368992cdc67e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a9e49cdc-7e8f-43de-9265-05ccff064f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf83a875-534b-4a81-9ae4-84df5437dc83",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc13568-f888-46ed-8b9a-c61ecedcceaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc6b6b3e-9e65-417d-93d9-21540c787d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88bbf4e8-3a89-4e37-805f-73d38835414b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e0eb1e-19c7-426c-ac1d-476085b52837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "129eaf1b-ff51-44a9-93a7-add157e8866d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9d463de9-7a0c-40b3-9d51-d53674cc14d5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "acb9e41e-0fce-4a1c-8fe1-f4359d5da5d3",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b1c577-fbbe-4899-98c5-9b3f3a478b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c441a90c-fd28-4d43-b4e3-777a9cba9bce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78eca53e-dbe2-4e0c-b16f-7f41e4b7564a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b001fddc-ecb1-4b8e-b716-1ca32ee88155"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f94f1463-c77b-4901-8eab-aa93b27735ba",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dd5a44e7-567d-4ff4-8a48-4c3d7e611419",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "41ca2c78-c6fb-40f4-a7d2-a0dab2de0546",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "badb4c8d-4be7-4d7b-9e9c-93d63646772e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "911acae5-f1fd-4bba-b942-c47775839418",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "5b2bbbf8-5bee-4222-acf5-52a82a03b1df"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e1a9c5c8-2a28-466c-8d59-20db8bfd5a8b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "038c848f-c0d3-4878-8477-13e8c1d71ad4"
            }
          }
        ]
      },
      {
        "id": "85a39649-9621-44f5-bddb-7fa62dd05214",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9ef28d70-fd21-4bd5-ae15-d5ac2f79f692",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8807ce73-f3e5-4a98-a8df-923a07d2d53f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "fab7eb48-3d98-4abc-80d6-5e7829166ad2",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e34439f9-39be-43a3-8583-2c18fffab504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f393469-f2d6-417f-9195-41c92fd2861b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55b40ed8-064b-4ee1-9ed2-6d631d4bd524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c92b6006-ddb7-447a-97b8-9ef5c693cac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e9d9e2-b04d-477a-995c-c1c5b443e08b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb4fe0b-2605-41cc-8c10-7a032de287b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c0d40bc-14b7-4ef3-a198-da2a714555f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c9eadc-ee2f-4961-bb1c-a09b587e182a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "873848ab-d424-4375-82b1-9059b16b20c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc4bd07-2ca2-4ed3-8ba6-f1547675a366",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92fe41be-e8a6-4880-81cb-cb4c88c13204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92f66637-030b-41f4-9a70-d0ca75e66116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52ca7a4-fd53-402b-b331-52e15659a0f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "caf24d07-9714-4ffc-859d-ff7d7f05efc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27c761e-9dd3-49d1-b67f-2e8901464695",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c19140c-7417-45dc-a01e-4c565e6c2652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0d99e1c-981e-4708-8533-9a9015eb6bcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9195166d-6847-4c1a-955e-2291929a47cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09f87f51-74ce-44c8-9410-dcb2080ce8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807b7861-65c5-46ff-bb8b-fa56a1aef810",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfad09c9-fcac-4d61-bb0d-8dc4d3614e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b0f8a8a-b7ab-401a-989b-0225eebc8835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d15bc19-91f6-4ac7-8a3a-5424a002e6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27111e82-7623-4310-8053-aa5405f84f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "846dd689-655b-42e9-9298-1d7edcc0154d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d6c2ed1-e06d-4ab3-b8dd-56d2f8d20633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1cd0b5d-50fc-4c77-84dd-d49a84147070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ef88e0-51bd-412c-92b1-9119e045b153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2367b772-691d-4650-8711-82b4cbe6e10d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4288c6-f071-4aef-a07e-f88f47886e75",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70aa88f7-058b-47c8-bac9-2a11eccd88e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9c69a90-88b0-4700-97c8-9f548e63431d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2674a066-1609-419c-a9e6-af431c0c3b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d45af53-7bfe-48fb-b704-e673025d04b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab9d33a9-97f0-47e6-a8a2-e8aa68707091",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d978317-c876-41fb-a121-9fd05219cbfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03ede991-f61e-45a4-9087-a05137a1b5f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8544dbc-95a3-4306-9f09-8d3d1e7c4e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e82e8fbe-4e92-47bc-a059-cf910fd9e1ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e64d2026-cd68-4679-8079-2188ec19b879",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09bf5a7a-3ac7-40e9-8b7c-246976d6a9d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a6b3044-be4f-4deb-8ce7-6d9698e3ddd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47dbec2a-906c-4fa3-87b9-f500d9d6e293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ed9cafa-7bc3-4e2c-9f0e-bca6e73cf53b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c8a8ad-7425-4472-a279-061502b3a32b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7374c3-1d0d-4ffa-815e-03e434e482b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93fb69bc-ee39-4dcb-9fed-91514cf474f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18250f6-75a2-4ccb-8361-b5a515a97fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a29881f-fbeb-4670-aa4d-3c6559c93ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "922c2a5c-ddee-4d79-82f6-46fbcf31a728",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ee5e11-46dd-4418-b43d-ddb15477af92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c4cc6d4-257c-49f4-b3a6-a6511a399eb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57070aec-78c4-4dc5-95aa-de0b71c91bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e78f8aa5-f14f-47d0-b530-e1779866e5ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b93d676b-ecd4-41a9-bf53-3433dd522bb6",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b76726f8-040a-423e-9b25-d81ef1dfdc80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d496d9aa-f54f-46de-b2d4-7b34af8abbb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e62ed89f-7153-4be0-811d-7d7326827408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dcf74ed7-f248-45ea-b311-ebd336b308f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "117b8731-ac7f-4451-83ca-347855868e6e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0304946-01c9-4369-9855-3ff8b844e41d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1864b157-1852-401d-94c3-e185eb555663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb3a59d-bae8-4061-ad69-2068957ede30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6325ffbf-3de5-4b78-a08c-f6c4eee0adb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a96f6586-c8ec-42c5-98ea-78731200ad76",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "238f112a-fe60-4339-bd70-d89d2019ced1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "726c706a-9ade-4fc5-b807-c2d0add69187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22714e0c-1c6a-473e-91b4-ab32e7aeb4dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "899560f1-6db5-499a-b1e2-fed734a6aeca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec2bba2b-d820-49ec-93de-41fabc622e92",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2094645e-bda3-4b90-a31d-707a1b61dfb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1fa3c7b-ebc7-41ce-8e5c-57fcd2807eb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2daf589c-cd82-4309-a7d3-6e48236429ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83521149-7ad8-4d22-a43f-b5a26fb3e6a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a52ba4-1f77-4eaf-95f9-2cb3ebb11b66",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9133d728-36f3-4796-afc8-241e12b759ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ed90329-1d06-4569-acd7-aba852b3d8b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639858f3-af95-40f6-9384-450904434cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95a34aa0-2088-4040-88c6-405c48432483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23b116d-ac92-4cdf-81b3-48d3cba8b846",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1daab89-b4ab-47fd-897e-eb5ef3c85257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27b46a27-0351-411f-bd9b-30f11a9afff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08da101-9301-4418-8727-a1cfd0fed924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78320bea-5e38-4d9b-96d4-a0b65ee98bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c4e91d8-23a9-4ee9-b43d-bbaaad9fcd6c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "222bcf08-4afb-43e0-9f39-7fa622e96f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58348087-b976-4919-8019-f9e4fd10402f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e2bdfd4-f0a0-4a45-b440-ab99a637b628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "23c2d5f9-c2e1-44f0-888b-b6b267ff80c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0210ad04-bd79-45c3-99fb-9079fd9bf133",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a71f151a-93f5-4a89-81e2-df46e432d511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c680a90e-d828-4c70-8ea3-08393f9600f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "722cfd4a-7d91-4496-83cf-1ecee405adb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a51fe719-d37e-4ad6-b5d5-b7f07eac89e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf89ffb-db49-4101-a805-6193833bfbb6",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a2d5fa6-40cd-4bfe-a98e-79e7b8a84264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efbe047b-2fd6-47fa-8109-a510f30cdafa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae23f791-21e5-41da-a7b5-20799b8d3f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b38a24ae-bbd3-47ba-95de-0fe78bb9a066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68664c67-4329-407c-9055-c3f67fea33fa",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "632c87cd-1aca-4e70-b769-3527a0fbbdb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9a1ee28-f69a-4bf5-a776-be8ae569f40e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f964f6-d675-4df1-b2dd-8e3d33913eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8233966a-02a9-4957-9592-a355af2129dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c52178a-4610-4ef5-89c2-6853a23f2d3c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf6a417-30b4-485a-bee6-68c6726de990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a149df7-623a-4a98-86ad-a1a0da74fb03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac743236-e83c-422f-b51e-78aaf630f44d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "14cab9a7-2ce4-4f5a-9658-fa9b5b2ae7d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5720c713-6bba-4e09-8f59-7339acf956ec",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b87ec1e-ee9e-4b3c-b0fc-3639ba1ca2ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21ef4421-1ee7-429a-abb9-90a56e00f06a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b4f796-1e75-4396-891b-9abdb3168545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b765f5c9-83f8-415b-8059-e3784a9bd9fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6479d4ac-911a-4b61-bc47-b55f67d22f19",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c41e35-d1c1-4c44-9ca6-33d5f6e67d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38a5098b-b0d0-47d9-aff7-28a14ab518fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b336223-e2de-4e96-811b-c5f20c014a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5da3c541-b9ff-4f9b-8cf6-c58aa0902be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1deec2c4-77f4-4891-8f03-8b175b3c00e8",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d0116e-4feb-488d-81e3-91545de659c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f74793d-fa12-45af-a7e4-7ff535137630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de17ce5b-536b-4611-81d1-df25118852f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "18e4d2b0-5882-4930-88c2-7ab7b1867d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f0129fd-2486-4493-98d5-f0c016f94aa5",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5955c31c-3f3a-40e3-a0e0-363c3d218c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "984ab027-b234-4207-beb8-2ce36fa22983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2195b215-e1a0-41e9-ac51-594729757d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "91223018-b1e4-4c17-8bd6-cec4aedff2ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "259f443c-2c38-488b-8073-14c64c24124a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c79f2aa3-5ef2-43cc-8b88-38db9bcb5fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c3fccc0-9ac9-46cf-adae-a6c87f5e3264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e90ef4-6322-416f-9744-cf6e242ea18f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a5374c2-7b79-4beb-9a4f-f9776524d553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6764df9-2da7-4447-998f-de29dfb25cb8",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1227a410-01e9-4753-805b-1d7e7e20866a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "528e02f9-1376-4e29-80d3-9265a57329d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1943cf99-771d-48fc-9630-c39266f0216f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b21574f-9d85-47c9-aa22-cd3720738d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5533a98e-5356-4d9e-8565-6498e69ffe33",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df10801-944a-46d7-8a38-9e9781cf90be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6eec660-18cd-4158-81dc-591868457f19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90aa553f-f3f2-4fce-950a-da0ed7e8ba3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "38ebc1c8-bbf5-45e3-9819-bca910a9d6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be4ef223-225b-40f8-acb4-ddcd1c6a835a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a0a3c4-5148-4e80-824a-3d2d5316783b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7293a50e-eaf1-498b-90c7-4acb7470d40b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d675d1-326c-4cfb-a7b9-c73d602c5411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "756e549f-97e5-445e-9b9a-e0bbf2de541f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a820e287-f775-4b7b-a6cf-76156f0dbdbd",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ccdb50a-dfe7-4757-b34c-3f2277f0fb0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4570abde-9a96-4378-b098-094fcdd3403e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15267d45-86db-4979-8d52-5d8f9c1ba9a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "053ced4a-15ba-43c2-82b9-bfcc58d417d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eccc0c5-44b5-4a3f-a146-f0e33001c83b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6518b4a0-e750-40a1-a331-aafd3f864dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7010706e-64d8-40f8-b22d-42ac96f79a76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "038218fe-4225-41ae-ab39-9dac1a60fa7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "56e5b13a-0ef1-45a7-974a-4d880628396b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2071a29d-52f0-471a-be05-90f387dd13b4",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ba50a2-ea1f-417e-8c96-8f814d63f0ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b92be2f3-3a6b-4d38-a16b-a16672efb50f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50cb4020-caad-433f-a978-cea8a9c36b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee5601f8-931a-49c6-a456-1c948a252a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54362fee-ad98-4c8a-bb1c-e0f38bfc07c5",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b763155b-c79a-4936-9988-66e7304c67e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f087604a-ef25-4d5e-b08b-33b4cc96cdc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06715dbe-c314-47c1-b3b6-19b638566256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4632e104-c162-4264-b7bb-f73360a12eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3294168b-e4b7-4c46-89ba-263eac14239b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00e81f7-9eeb-4e16-9bec-e64cf964d6a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aa88c1f-67de-4b69-823a-a64c520056c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296c337b-a9a1-4b1c-84e2-649d5e459890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6953e66f-ef3f-4d4b-9461-25c479abcb0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "310d96c8-0bb7-4d87-9793-a18c411973b6",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a519d3-915b-441e-8fb6-4d3fa5654f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1064d6ae-165f-4218-b64f-15fddc9e3d06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f86711b2-7b58-49df-9bea-9dea73ce8873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ede1d5cf-e94e-4c86-b73d-571287e83eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7432fa2-b2b8-4aba-9b34-b31ed54deeca",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "614e60e4-4497-4fd5-a8f2-70121d45fc24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52b44345-b56b-4534-a25f-bbb55009bb3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a96ce601-a670-4759-b76a-938ff2956f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b2e972f-b909-4232-a9c5-9a355a2a8f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a1a954-3b6f-43de-a98d-9564eeec0f6f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e858b42-96fc-43d0-9af2-0b6c071aea34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aad8fb2-3430-4c6b-9374-c18cfecbea64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e292838-f235-4af4-8c1e-0416a293ed7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7151c7d4-b689-4e4d-8323-53ec1f3680cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed3359d-3b37-4322-bb85-07500810379b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e477f7-fcd8-4fe1-9fab-3249b9df1994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88f10b0c-c45f-4017-8c74-0694206b0015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1dd0f8a-6444-484e-8b2b-81ea3ba3a993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc65228d-682b-4315-b0ac-d1dd563ed1ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aac597c-21eb-44e7-bf1e-6bc7e402dfd1",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba17f21-7304-41bc-bf98-ad9a2d43cb59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0ec248a-7439-4e1e-ba59-4051db0d0215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f9b718-fba9-4d7c-8d6c-be8ac09ff0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e741e7f0-d78e-4207-9964-e20691a932a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "618ad343-5059-4a7c-a7d1-331e20c0171f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "296e4671-9bc7-4473-b990-e4de2b9d4a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0f2a0a1-edc2-4b36-a990-181f20742dad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f7e132-eb50-4aea-beaf-1725575e3aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a81afc6f-bce5-466e-9ce8-f67ad448f778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38683cbe-81fe-493a-9b2a-966e3547495b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c190dfd-e573-4227-9af2-bc19bffde62a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0c32ad4-7043-4154-b005-b9cffe72f574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d753e133-48cc-4d0c-97b2-5b71a9f4135f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4a80b1e8-3119-4dad-9f78-05d269c6274a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d657079d-2921-4f7e-a768-9438d0dbc310",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13dbbba2-fa36-492d-841b-47f8ae1b705a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bf84216-ed99-40f6-a9d0-78fb6ebfdd17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52850f0f-e111-4a43-bc09-8c5d0b7f829a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec438071-f8c9-42a0-a9e1-7dc07c466a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd6aca66-8063-42b4-a22d-9246c5708e1a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f8bf655-a78e-4543-9c3d-4f0c5cf1a39c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81d9605e-5109-4ee9-8c11-d1caea0c2758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ed61cf-a17e-426e-aa81-5254ee66aef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a187da2-ba97-4a20-85ec-47ef033848d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7844871-6999-4e17-84e7-1bdc0c188a8d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7323cb8-2046-4538-bd13-69404d9a9c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9e0cc8f-9ecc-4357-abf2-94df84a4f7d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3067d90-2a66-4b36-9840-c2b133c3fcca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "555dc3de-d0c2-4baa-bfc0-dfa7dc023283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8a7cc6-28e3-425d-b64c-654035298562",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceefbe7d-fbb0-406d-8f71-a439f743b7a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e55629a0-c355-4ab6-bb72-70544d6a77c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6afed8-fcbe-474c-8c5e-8d3da02426ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3400c8fd-927d-4f2b-8952-8eea671a516e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e8ec643-41e8-492a-a634-5866cc21c6d0",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f0c472-f96b-43d1-b5b1-6c02751791b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0427ea3-5209-4ea8-ab06-ccc7631f4df0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb2b0e8-ae6b-426b-a322-996e5ba17b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "438aff85-e7db-419c-8a16-4940b348c672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a7fa5ac-0147-4d45-833a-f5269b11f453",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc05a58-4cb4-4cf6-bda8-c78d603b55f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12ea8ef7-405a-4ef3-a976-0312ad084cdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce96aa7-14d7-4507-8138-1b9ed2fbcfdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f4cb597-19b7-4962-a133-13f814bfe646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ab9069-2d6b-4d5a-8db0-6dbaf23f5928",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e883049-ffb2-4f47-a363-142e9d0c693f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56e96e62-05fb-4375-926b-e8a48410c99b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "580e8539-2528-4705-b184-d8fd124a101d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1fddf2b0-cbd2-43db-862b-f51c4b8cf7ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e8aec30-3b99-4236-8cdf-2a76df39c18f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9252eb29-d320-4c8e-8c08-f0004bc09eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57d32cb4-b05e-4624-a284-ff2c13e4c160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d6243f-36ed-4eca-851d-3b8d6429ccf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "78e0e44c-870c-42f1-bb69-b4780c168a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7568c9fb-f449-4219-9ead-6c1eb723ac81",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3ac01b-eedf-4695-b887-dd49ec2e9c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aa485dc-ba55-4cb3-8deb-7c12a8bbc2fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67262c8b-2aca-4333-852d-04af77b77f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9f34c13-c146-4af0-b255-443c6230a41d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a1fed7f-c2af-496d-b9e7-7baa3d749579",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d68af0-0ab4-424f-a39a-3349b57b950f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5db86c2-06c4-4b87-ba79-861a47926ab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af2054ab-a2bd-4a21-850a-3158cad55af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d019370c-6a8d-4dbd-9cf7-e14e5fe93826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20457e53-3a66-49cf-9e8c-07980d8895d1",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd3fa58-a848-48e5-8eec-fd36156e8a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f100f41e-ba0c-44b6-88bc-a676de533a22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f823589d-edf2-4f7f-8ebe-3c0e452b1c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "53ea2f04-3acf-4c76-b40a-6e13396a3d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b49394a-99cc-44e8-a26e-e441a4fb55dd",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34fedc52-9181-44a8-974b-d2260482aa5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3482f1f8-cd3d-49ed-a769-ba7ccba49234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e49cf549-918f-493d-bb83-bf6d826afa6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee367de2-28c3-4516-89a5-05021ee05177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c210ef85-e158-4e92-aed9-06da3d826d07",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0d704b-70ab-4632-8e03-b961bbcb56dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "885968b3-2585-49b0-843d-ca4e7beaf494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "297c0e9f-2282-41e7-ba84-1ef7a355785e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8646178f-e6fa-401c-a388-9a4f386f03f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e99e2f68-055b-4ad7-9d90-a4d53ad28ed5",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf1512e4-2baa-4f74-af80-54d2fd3db4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74ddc2e8-6abd-4ab6-a6b2-037f2c0e3313"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5023ad2c-a1b3-4b94-b4ad-a959142c7a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f696cd48-b8c4-48fc-909e-a2e92fb08371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "648e992e-7dce-491c-b2f7-ecbf6862b68d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d7a6ad9-890f-4e23-8b3f-922a1d85f1ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b672116-24fd-49ef-9e68-d179ac2a6ab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632991d8-0866-4d14-92e1-39ad02c8bfc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "10ae1e9f-771d-4496-852e-0c6e6c3811ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3515cb13-235d-4c5b-a16f-12818d2ebb63",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f9d863-0fc7-4d26-9052-e62951edc431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43e8934a-119e-4432-ab5d-b98156dd3bd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e142cb-6701-4db5-b227-289b6033f73c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "91869723-e31b-4925-8432-b7124b8d1d15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ec8f26-f854-4285-96d9-d544a84995a1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d8b593-5bea-4eed-a39b-8f073935a661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f1a63b1-ed67-4a8c-bbf6-ef2d137e36fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7747e29c-8972-4a69-b059-336076083344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1614de92-e7c6-4da8-a904-8952a8df4d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9abdce3a-d750-45e8-af38-acbb83d64041",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7aad15c-5d83-4dd4-a331-20554ef2c9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af9d4ad1-56b8-479e-b8eb-96f059355f96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d14f5cd-f89b-43e8-9845-22b82e5ec886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0822f0f-f665-4f00-b144-7437ebad51b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a970935-d7a3-4527-a59b-10c3b3f2cb40",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db065b8-ad2f-4765-98a0-4f661e6faaec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e98af164-c9aa-4935-aa77-0ac2426994dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a79008e-6228-44d0-a1de-99a7f358ae89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "079957b5-141e-46ce-8435-f27af1280ab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b317ecc5-6ac0-41f9-a811-c808a040e10e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e38dec84-39be-40a5-8008-25af098e8cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef9b31a4-b997-4156-a73d-c82dca5c2328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b57f69-3c43-45f5-bcdb-d99176aa6f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "07551f12-49e1-4f6f-9533-4b7cefa22845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f356da0f-cd4b-4a5c-844a-b45c556e2b16",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23dc9486-d3b6-4c61-ab1f-e8cf39f92352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcba6750-30d1-4e12-a46c-9a896439eddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3157563-0e97-430a-ab9f-b7970090a466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b560add-5c23-4c94-953e-491b29387cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "551d10a7-0745-4bbe-800c-c16c2e4d1af5",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca64c3b-c177-46bf-bcb4-ff6bf8e62235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d2b5c2f-47dc-4a14-bdd7-ad0a3b9d5869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ecda64-35bf-4fbe-8c22-01df4077a3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "52e42210-5d3b-49a5-be8d-6bb622e8ea12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9609a042-4b55-43c4-8548-4e51fac1522e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b68168-a6d3-419a-940c-229bd53a8b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37ccab05-ff0a-4f5d-bc2a-a9ad466f8ba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "569a3ce8-3195-4eb5-aac3-8c7d56f259b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e919cb7-2463-43e1-91c8-730275744381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3abf534a-d274-4cc0-ad88-ce89b1aea99f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6068224-817c-4c52-a547-5d15e4f384ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e4e7544-4c2f-4a92-a697-ef4673456a9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0105364a-d262-4a51-bf1c-eff82e809679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "756091b0-6efd-4a26-a90e-05219f0c0370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f35b7d-5a4f-491f-9c77-82a3f537cda8",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce6f4bf-0330-4c3f-93f4-ded655a0a7b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cef0f69-2fab-4c28-b247-fe1bb9a624ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cffef14-654b-441e-ab45-b90090da7195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "84a0ba82-2f49-4412-b472-ef49a0e51655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc680af-2267-40fb-9c47-a05752a3128b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e75c52-bfc1-4aef-9317-06ceb34e3120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "debdad7a-36f5-4888-89f7-906ec2cc296f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "460afa8a-90e5-408d-a5a5-f18800958927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb1ffdf8-2732-4837-9a34-3a03aae8f09b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539275a2-a6ac-47b4-b144-9320056baf27",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec1912f-17ff-4fe3-a8eb-619988cf52d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b17469a7-616f-4135-a4b5-24a294714aca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eebefdd1-dfcf-419e-a6b0-62048aea7410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "880db42e-40e5-4ac4-aae0-c40156d6d21b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649c83e7-368c-4375-869a-d02da2fc8894",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8382c5-e4c0-4e92-bb6c-91c2a1ea7116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36dce358-3ef4-4736-9170-676ae7d31bab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d3a8c5e-a774-4b4d-b8b3-92fbed7a0bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d42e282-9a8f-4ad8-bcbf-b60b6da28cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3fdd497-d69a-4098-8104-ea869faba057",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08be404-8fd4-4684-8113-d804e484314e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a93fca40-d9cd-445d-a610-e4c92d17a949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da65357-9872-43be-b3c0-f51cdf5a22b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2ef5df3-c640-4766-9a95-ff2814d0271f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c494d6cd-b287-4065-a6f2-3a02d0ac12f6",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6475313f-47b4-4b8e-a1f7-dcd3542417bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abced8b0-c6e7-4c0f-8399-969b58a62a68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b748dde-673f-4ae0-aa7a-bb7be18be673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "65772608-4bb6-4ea8-ab05-92c8aab0d825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a2a35b-646e-4991-ba4c-c5ccb51cf51e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81425559-1a77-4918-8420-71255c554603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b746a1a-6c8b-4556-a80f-11f1fbd159fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41547543-2256-48f0-a7ee-d1d7ff258a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d56faaa-5694-44d3-b58c-b889df009871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9ae0bdc-bcfc-4823-b4fd-9b0943152726",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d2d06a-bdca-4d99-ba50-d12a4c5ba933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cebeccd-a3c7-47e4-a29a-b9c9bef263d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1c3960-54bf-4f62-8850-388d9112e243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9c7af83b-e1c6-4d37-a1e0-008c1650e3d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f60ec793-8c16-45ad-851a-2264d627f17b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "516a38d8-bcc9-46b0-b714-595970376385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00c13bb0-5c3c-4c9b-9310-41016e4e450f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68bfe1f2-796e-49a6-ad0b-e58369417cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "037b0b53-6242-4367-8987-c8474847cb05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce5118e-af40-464d-b2c0-b924d838bc8a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5496a04-c6ef-47ef-ae2b-ec6bb695b26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ab6d398-6784-416a-8c27-3417df21470a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2546f5-5890-40dd-868e-c9ddf603e18d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "534e0c2f-b24c-4c6a-b95d-d9300dcb5d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d00fa58-e810-418f-b1b0-4ac62a37d36b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9283cf5-10a3-4fcd-9224-659017037625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e698b36e-c59b-4792-989e-05cdea51bd1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7fa303a-e414-4dfd-a882-e36b3026827c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb32a172-bf68-4517-8c3c-091ea682b95c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dadce66-8a69-431e-9003-f752f4b710df",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93495a62-1dd3-476d-849b-7fc75a275c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f1b8f70-f384-43b9-8305-fda669e4fe1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb7e809-5899-4e97-be91-449d2a83f6d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a88e418-ebb3-4be5-a99d-0c2be9d0a3b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad5fcb9-8b23-4cb1-aee4-ad661740d502",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc4ada8-79d0-4f37-9609-bcc288f2fb58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1d234b9-4b20-40df-9513-8b56dcdb1d12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed43dea2-097d-4c6e-ae53-710832e9167c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f65d98bd-ebaa-4906-b670-09e941dc6d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9aba2e9-2636-4ad7-adb4-95fe731609e3",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8ff46c-4fc0-4058-a7f4-9498916a2210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c33dd6bf-9539-4982-9f4c-f2db8947d126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbbeab39-1446-493f-b054-844936d90794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d2ee97f7-6f75-45a2-9806-976bf6384cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3114936a-62bf-45e9-831c-db520edf5f17",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00574ea-0a29-4754-b7fe-d4ce2c4e5fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05c0d78e-7ad8-4b44-9a5c-18a38df88ece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e1c227b-48f5-4563-bbad-3464d83555b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3af687bc-9ed1-43d9-92c6-4cd324d401b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac76ccc-09a1-4ebe-aa79-a5805fdd7588",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b314aa0a-67ae-4661-b696-d7791e5d2e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bacc9b7-37cd-46e1-8d91-0899ff6a9f88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02281d69-60b1-4cc7-b475-2f9478fde97c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5d5896d-c8de-47fb-ae4f-3847c012d5b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b6ec5f-14fc-4874-86d0-0bcf57049301",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50deab7-13aa-43ca-8b82-f7301fe5deb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e14ef8a9-513f-4c8b-a46d-80dcc60fc1cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "944c9381-2dfc-49d6-bbdc-2eedd0d9933a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d07663fb-4e5d-4851-872d-b9157ee04f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a7d5da-8ca0-40f5-aca2-640c9b8d64d1",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31cf19a1-d896-4ae6-98de-dd33943aced1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea57a7ef-f62b-4c31-87a9-73f43e43e06f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e85f4d92-c7f4-4763-9ef7-20f4be3e88f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f84d791-a693-42cf-8e1e-d2a789a24ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f5b8def-b222-4ca7-b9eb-6b0ea76c66c1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a648f5dc-a9c0-49b6-9c63-64501f90d2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c660570-f72c-4db8-99fe-b66e2cca669e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f16c8a-3563-4df8-b9a1-eb3f67443958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aee2565a-4a15-4833-b695-808a6355d282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c0cc08-1e90-43ca-a9c7-76cfea6c513f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51291d4-d4cd-4b7b-be23-3e5ffba1bec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e89f9f4d-3466-4b4e-bdad-7aad7cb0db0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8037044-21eb-471f-b9a3-91db9bebc684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "10297372-9b2a-4c44-9d3d-d097c9dab030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0411d0df-a77a-44c4-9f92-bb8b521f8a1b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f7736d-d379-4b11-9e25-9d34dc47037f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2b49bdf-9e6b-4e57-8592-e029cd153cbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f78f9d1a-2220-441b-911b-e4e1d31b2912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8ad7287-affc-433a-a424-d8aff82b0537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84392345-86b7-4f42-8f25-b3202172cb28",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64779448-fc90-4b00-9fe0-7c692e451e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2826f879-985f-4137-8bae-80f3074fb94f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "900feae9-78cd-4386-9a60-4694910852d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "52f2fffe-7558-464e-b370-7918ee334a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df08ce1-1ba3-413e-8c60-c871bf8ca201",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5571a01d-3b28-43f9-8c2a-919daa8fb8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d523835f-6ab2-49c4-ba0b-05d00e590510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f2a33a3-9811-4f9c-bf57-45100c78e9f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fd302aa-b142-45ba-aa19-e06d279023ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a89225fa-accf-4bde-8df7-7de2bb4de0f1",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4df1b7-3960-4683-801a-c36b280bee60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2def085f-d7ad-4602-a420-8e159638209b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8eb86b7-7455-497e-bf02-d914f7ec3929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "25556cec-e481-41af-94bf-5bb39092c61f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4edb4901-eb8f-4c61-b9e6-7d9aa7bb04af",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c619f991-40e9-4d4e-9a42-cfe7db9288ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3690dc50-38c2-433d-b8b5-f21683db339d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19be66c9-919c-46e0-a843-17e09e32f56b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d3661c2-bf97-409a-8cbc-0fb902dcc700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "679cd083-6137-48d2-baf8-307a94c1cd59",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e1bec7-7e63-4e30-a5da-9f4c289dc82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d2e95778-1f0e-4d86-a4c8-f653247304dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeaffe4e-28a1-4864-a2ae-1e6f597892df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c036720-5f82-4344-9554-7766dd44963b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5c5c4b52-52e0-4c77-afb5-5fac3eeaeecf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "80bade46-de5c-4e62-b472-c2779639f2cd",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1121e837-5942-4bc9-a8d6-9dd3d8afd4e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f9ed5e70-5a00-467b-b8f8-86ab80fc936b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714cbc17-fbd2-497f-9ee2-3308d9946059",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9b069c6-3e12-4162-9a0c-a8dc4e9607e2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "070b46df-21a0-4bdb-b0a7-2553dacf34d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba42ca18-bb83-4719-b3ef-2160c8ce952c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "37f9a60f-3c87-47b0-9765-61fe29c340bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "afc1991f-59ca-4967-a427-002830f3942a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "20c19884-4b21-407a-ac13-3179bbcf8fcc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "df95e90c-5519-45d4-a191-9a3ddb5b22b4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a7185a2f-3a48-493c-8149-30b8ec1bc0e1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "654289a3-907d-459d-9404-e4dcb72d2f5b"
                }
              }
            ]
          },
          {
            "id": "d6369d22-c6d4-480d-acbb-47d410b7633e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6419f2ef-3579-48c5-9086-c93e42ccbf2b",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "12be2455-8bbb-4b52-bdf6-cc5f29a3221c",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af0b185-3829-478d-923a-ad6c4f22c1c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9170844b-78af-4510-bfb4-2b15c21c47ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad564cae-7732-483c-9548-0a974cafefad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68c463ab-f158-4295-8a13-33f0bb20f561"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9477bf40-54a2-436d-8cc2-473b4b07ac71",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d74bf019-2eb6-4efb-9968-530febd528bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "df4f9f23-347e-412a-956a-802f855523e1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a620fc37-8281-4215-b757-60b67b77932b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ccf922c1-d467-496c-85ce-9da782b1773a"
                    }
                  }
                ]
              },
              {
                "id": "6dcb32ae-ec38-4c23-8c7c-33afc28e1f5d",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c7def0d-e0f5-42a0-9545-8a9f27a96635",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b82c917f-bbf8-4cda-85ed-26a3bbe587c0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7aca1bbe-5c05-46f5-b268-a3f759b07492",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c7e1ce01-8f60-4e2c-a384-89341fc73460"
                    }
                  }
                ]
              },
              {
                "id": "4c5f9981-f7c2-4303-87fd-ce25315d1b4d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "687343f8-8544-41a9-90dd-1d2e1d3f1478",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "24792112-c60f-432e-b6d0-c7595bbe51b1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e66db650-09da-4d33-91dc-b9e178302c8c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "65b11edc-eed0-4c43-b633-7d4d2993ed9d"
                    }
                  }
                ]
              },
              {
                "id": "aedb9e13-a8c0-4085-9190-afe20149f5b4",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f74c982-9416-48fa-b3c2-c0eb5e51f271",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f813f331-64ad-4a52-bb3a-55e3e2608944"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16b3a441-1583-4e34-933e-83a9fa41aa51",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6794d3f8-7851-46c6-9c33-79681d8e0245"
                    }
                  }
                ]
              },
              {
                "id": "da1c407b-0f29-4127-a9fa-d1d96a64f773",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "423d83e3-6d4f-46bd-9170-3975d213e1bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4fae6604-4902-4b42-8079-1dc712a69d5f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43b21136-016d-4e1e-88e9-0ba0725f991d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d59933ae-efe2-43b6-84eb-01e5afb81ec8"
                    }
                  }
                ]
              },
              {
                "id": "efb4637e-d972-41f9-81fb-18fa88354c46",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aaed8cfe-e6b4-4df1-a471-252f94c90621",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "550942f4-bd57-41f0-875b-0cdee4678b7c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81ccc866-5ed3-4c8b-bcb2-cdba126b719d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4121e0d7-a860-4069-809f-0080d78dba72"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5252148f-fb98-44e9-9fdc-a20939effd14",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "be000481-a0e0-4d49-9d55-d099808167e5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4121493c-7fae-4764-a490-700f5739b292",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "29f82504-08ab-4abd-b0ce-5089a0feaf0e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "244754e2-166a-42fb-9c89-d7a666b6bc14",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "aa907b36-187d-415e-9965-34056f450a56"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fd87681a-6b25-4c6d-86c2-9d0e3d1d8f53",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b12f9f57-63b1-4b0a-aff1-72ac1fd158a4"
            }
          }
        ]
      },
      {
        "id": "86f57535-a57f-4411-8b32-bbfc74ec49dc",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c421b7f6-e94f-47ec-bb01-f417bb48e70b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ae71e919-c250-4af9-b5dd-f28594f36c72",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4257f618-5b64-48ee-9f2f-beb8a3a401ac",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d7fa8f8-28f4-4dc9-a088-4ca76ae98809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cac8e36-01e0-4bdf-8632-7b0a50b76188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88137351-b142-49bd-8f21-5aaabd773c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "60455184-ec52-4f76-9f46-8e0336748706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b5055d-6fbb-4341-89ff-b71f1db7c2cb",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df39674a-0be9-400d-bf3e-b31aa82dd1c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2f16642-1cad-4e12-a6b5-a41f78eaec86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56d73638-a359-40f8-80c3-1971b530db69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "83c86f12-b448-4bc7-9275-75be456cf3a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3632fb1f-c598-42bc-9f68-6526f885d9b7",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6675866-e410-4c91-a646-f1ae310bdbb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b3f8079-06ca-44ad-aff9-3d1901261bce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a886381-a221-4388-a127-90f238ec1f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5894578e-83b4-4c31-902a-1ab37f6edb95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cdc7eb5-0d5a-496c-b2ec-3ebc435320d9",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2803a21-c22d-471f-9964-39a33a558201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd5311fb-e385-4ab1-84a1-3bc28dd0537b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "367be99a-ba9a-4ea1-b3fe-985bc6a8f4fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "125330e9-b7f3-458f-97ab-ca676ab2ee66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75484230-997d-4a3f-9729-63ed3d671698",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce1b117-54e7-4746-b1c0-c2f967073198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "241de460-3c03-47a8-b129-5a566ed609cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a8976e0-6179-474b-baf9-43439ad9b278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "77b67ec2-dcba-4d27-ae2e-e3b88b4b46b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a72f2a-ffe3-4862-99fe-d8ce805a07e5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ccfdc16-8a1a-455c-a3a5-18923ee092ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eb6fdef-4e39-4573-ab50-b108a015a14b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0006158-6fbd-4c0d-bdf8-11625a0a0e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9486ead1-a6f9-4110-abe6-d08af311e760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c84dcf0-84c0-4a17-bef1-caccd83f45a3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37348315-1c5b-4b81-b4fb-2e84d12163af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59590dd2-b799-44a6-b5d3-35d884cf95f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6662d65f-5f50-401b-8193-498d445e45d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e5fba6b-b937-45f2-9c55-25f1e9ff362e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d180ed6a-67e3-4d4d-8f4f-6f236470e02d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f2b9ad-49c2-44b8-ae42-e616d726ac24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57ee7a43-0e77-43d3-b3d9-352a2bc7f74c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b52fbe-77d8-4918-b990-58642074e1b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a89aa49b-bba4-43a3-b182-c547e0851e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed597445-eff7-4151-9a2b-228a54bae088",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1835f37-62f2-4a79-8229-3af30c4edd81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6adf3265-461c-48e5-a548-97b6cef8ee92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9539c5d4-f63b-42b4-acea-bab1de73ee5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a5ae73a-7e40-4a8e-bf72-2e2ada1d0ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db7076b3-b353-4869-9fa2-7e8002802658",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff3534eb-3d00-4eab-be98-c2590d6a612e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f154e67-b99d-4cce-94cc-22eea13423e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "360016fa-8db5-42d1-9715-e1493d2d9b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "78fed422-8c40-4810-a9c7-0c03db7d499a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb643a49-c980-45e4-a9fc-864becc2faae",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "521b5e56-d1bb-4218-b6fd-520bf8a0c0d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b82a7f7f-7885-447b-a5af-965c8b8dc9f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc3c5e7b-d307-451e-b057-18ce6b4c4ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "299c10c6-b723-4cd7-81b5-b56de96265d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ad9796-e549-4331-ba2f-d3f57f140d7c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d39a1e-4c21-4219-b897-9e84cdbe8cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f066455-1756-4c24-8ed6-7489eb67ca42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c0cde3-d72a-4a5d-9384-5843973a48de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "464f61e7-b04a-4c37-b2a9-15c9780a71c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0599ef13-ba8a-47b2-ad64-bcd390267476",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d948fb-1ed4-4d2d-b96e-bcc3c1c4253c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "347d292c-e6d6-4299-ae1c-744876a4c706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dbda938-9572-4e84-837b-9a4c5598bd5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "881cfbcf-ae63-42e3-a581-608a37e1f0fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff68477-34dc-43ba-8014-7278cb745c90",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7983bc6-d130-4988-9e9f-36f09ae3826a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da0184c4-7d7f-48e7-b487-07999ef8bd12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "816744ed-60c9-43d5-b1ee-e8e8cabe0831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f58dc199-5ff8-4191-8a40-1de2d2dbfd9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3228f8ab-354c-4016-a435-ddd104114b13",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18970839-9fcd-4637-a02a-163c3eedb0c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6c884f7-0d53-41be-bced-cdf033358da8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c8c38f0-5b4b-4be4-bd1a-94cc8c1dbf8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ac9e33f-36bf-445b-be27-c68153d4c428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9717b161-aafd-4b19-ad49-76da63e3b7b7",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "901752d0-b1b1-4300-9f37-2fad2b53f08c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf42f966-2e58-4fc4-bd20-63805d5e6753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d54897-4ce5-4aab-95c0-7ade4bac76ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "035df9d1-b90a-468f-8d04-2001114c274b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67314dde-0a24-47f4-a20d-624972da5c36",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f776ec1-a9cf-4dcb-8ece-721dd4dbe3d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dac4e89-9de3-4b28-a2f1-7d619263a47a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d3ad3b-3965-4f08-9734-ea15c2337d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ecf07d1-3648-4a69-b9e8-ff00762b6c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566a36ef-ef04-4fb2-b036-284a7d6e8484",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e4ca5e-aa6e-4f78-af4a-99af96368c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4021ac3-6eec-4d52-aa21-797cf6193e5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada6f5d3-7e0d-4fd3-a9e9-e36e014c1ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "15c10c03-37c5-48b2-adfa-f4511ec6d0dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d611212-9929-453b-96c0-02f9a2f73aae",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5bbb8ab-3dd3-4384-94f1-94f13785df1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a6bd9d9-c254-45c1-b123-88b08e2ee25f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "240b9e69-dc83-47e3-8c22-d6dc171bead7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "862ae64a-04ec-4a63-8087-d8ebd3106fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1053808c-ec3f-41a8-a7e5-e2939d36ebbd",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c98981-0a7a-46e2-960c-3dc7f6571bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54ffdcbe-9543-4ecd-9a21-729b57f7b81c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e87d7e5-fe0d-4dd0-adc6-a8325d004aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f68b7497-c360-4380-bee2-c27fdf2a8a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71820bf1-c05e-41f9-92b9-b8d8f249b255",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "868ea23b-159d-4026-baa3-01b92e2e7da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bda83dc1-0b80-4da9-8f8f-957803e8f06e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6ea920-4a4c-4b9f-8167-e30fa769c897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e327186-eaa2-44ac-954c-94f9e5a72b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d58191-462d-42aa-b071-a2460233bdcb",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "377a33b6-52ff-4ab7-b986-2e45ea831bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53277e7d-1d92-4640-a29f-42cd1dbe0cbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0c0314-15e6-42fe-baf4-a45b485b3ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c08a3e8-9404-46d8-acd2-6ed330e7d4eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e23348e-d065-4161-8ac9-3911477ba9ca",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05de8e55-5a0e-4509-a26b-0982f9db9a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "920b83ac-973c-455a-8940-9c14aa5bdc4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a04dd3-3373-42d5-b57c-396fa7112c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4cc4dac-44e4-427f-a578-4b4268aaefdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57752d85-ccf5-4418-a5d9-edbf4813b0a1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc262a4-e28f-4f9b-834e-e296e8c265ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41f78751-3195-4030-ac16-d21f1e6445c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbdb0988-dbe2-40de-acf1-632dc303348f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6238522a-ea09-4f28-b82b-15c325e37172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b72a4bfc-2379-4564-ab66-c77cd4541a97",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f30fff6d-b3b3-497c-982d-6a13477a6664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeced755-13c0-45ff-ad07-f9d7d227e3e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb78b79-47c3-47b2-81a9-4f22ea2b4a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d45c7bc7-2b4c-4f54-b031-bffe75706160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c4aa7a-ea54-4f00-99ec-dc7c0de7163a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18996d6f-b822-4d6a-bdf5-044aec5a90da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83824886-702c-4dd6-82ca-acdce467b18b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa75b5f1-bbb0-4cda-9f06-abfaaab31406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eebec8fe-a128-4500-ae00-b4ac0a78a5ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "588a9b4a-c587-4a82-89f1-b14c73f15c24",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c33b949-2db6-4f77-96aa-df09239da69d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d4c2d02-d39b-4884-b97f-75eaca39145d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba401c7d-5157-4e97-bb16-b45fac459d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a2fae2f-1343-44a8-ab38-f6ecbc15f54e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0981cf2f-5941-42d4-9fe3-4bd34ceae3e8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0092eff9-950f-4ea2-a537-1ed059dc9d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24c151fd-0188-4faf-904f-bd754f841600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8e0bf4-37cc-47db-9cd4-b415d5f16152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b65c45a-e6b5-4763-9fc5-334792407c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d246d60-516e-4a49-8765-8feb096093d0",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d61c408-447a-4689-81f8-1c71d3c21c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "633a3667-4124-4e48-84e6-c87bf7129ebb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50af48bd-79b6-4029-879a-a3a06fab5742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f6f9013-7c79-40d8-8a42-7f914ebe0723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "589d81b1-5041-4c7f-b457-20412492b3bb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d77d64-a842-4ecd-98b9-6c73028fc96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c976d4c-e9ef-43d2-a76b-48cb3dc70894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66784b72-747f-4b4b-bb4e-9d7ac512692b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd231145-9a5c-4175-b99d-5187bbe44ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ffbcfe2-3576-4c74-8dfd-93a7392af4c0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c355f59c-a071-40c7-9404-293e297df5e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "300753d6-cbae-4d40-aee2-0f9efbf90e81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aebd9293-d4e2-4f1c-a872-4582a7608ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0bc1fd0-9fcf-479a-a656-a45ed42579ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a82b62b-c13d-4c30-9e18-0ae13652b719",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "621d7379-6dc5-48fa-9722-777b6a3d945b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87fcbf0c-779b-4246-bd52-075b9f26457a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91756df3-ff2d-43d6-8dc8-89c74fcca036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29c17c1d-5756-4ac8-9d5d-67a79ef6d225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40126c4a-96a0-4a7d-810d-a0eb99958f64",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2197b0c-a773-4a8a-930e-210ac45de0b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b4f2001-d2de-4fdb-8822-7fa359326903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d58797-eea6-49d5-94f7-58f2ec039b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bf9113d-750e-4f7b-b664-c1e0504c45c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af80628-2f14-4d3b-92a7-fd1429868cab",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b6ac927-dbf0-4883-ac46-e58c95ca3576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72250eaa-8cc9-48a9-abc4-0330035ba1d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "935c084d-06fb-49e3-aa7a-26c09d43b745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b21cb7f-37d2-4873-88b6-0bfe8b6eb08e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de80027-c378-44ed-a662-86f881b299e5",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71cd22ea-cbca-4fb4-bcb7-c4b251173cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcaf24f0-f150-4ea9-951e-3ccd9227eb41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a81c24f-f79a-4a7f-96ee-21c48743d819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38645929-29b1-4f80-8bd3-c162ef7f2ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b71e85-706b-45bc-b248-1533fcc324cd",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f72af35-43e6-4e31-ac9b-69943ae0542a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbc0a457-bc43-4133-9baf-d3c31072a2a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a0008f-b005-4c67-bdfc-e935128abbfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bd79d7f-cd5a-4173-a352-7031af3694fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4888a766-e68f-4a25-a256-7d9adb62e586",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b3546d-7f48-4b6c-b60c-54568bce1e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8779ded-0e33-44f4-845e-1749b694fd25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9235d4f0-c0ff-4612-9788-e55f321f4d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a656d8cd-7033-4825-87b3-751c46abaeac"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c8bc2239-1551-43f1-8114-121dc5cdcef0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a3e8c857-b69b-41b7-b0fe-9ed94ee5de60",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbac4172-0ea9-4288-9a92-85a88f3508af",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "656e261e-ad2c-45f0-b88b-22e02b9747dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff98722-1e5e-410f-a00b-77d26b55e6d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "295669b0-ceee-4a4c-a882-5c7ca8c4cea6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b92654aa-67a5-497a-ad8e-71680afe429b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d3e601d4-c1d5-43b8-b8be-9e999d233ba9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2df15358-95f8-4b8c-9ace-c339f7ff20f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9477c20b-38dc-41ea-a658-2a1eaa14db61"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d1709f8a-6220-455f-9604-342dee6b3528",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "590c12fb-1d6b-475c-9f33-94b264695b79"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b3801be5-704d-4c0b-a0e5-8e27290377c0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "527cdfa8-584d-4708-90d0-eeae007524f7"
            }
          }
        ]
      },
      {
        "id": "d525b546-93cb-4904-9821-91522068c92a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "48853279-f727-431a-ae37-d938d9159fe2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "904c4689-cf08-4dd4-8791-de9a7208cc93",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6c3100cc-57af-4c3b-8006-350c8ef16f8b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9c8420-082d-4f39-9bff-b92ebbac202a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4220693f-586b-4aff-af4b-9211401e5b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bccb80c-3814-4024-898f-198a674a6a3d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6d9612-271f-4bef-acff-cb6bce51ffee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c9a4ef9-c845-444f-a521-62ee4411fe38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da4f23c2-2836-423d-8545-7b703265e9b2",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c72f0bff-3d69-4092-975e-d92ecabaa8aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72f0ed32-2ffe-498e-8975-0fe3bd998afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38496153-1104-403c-8506-0bcc67d51db4",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddec90f2-5310-49cd-ab35-55fc204e1ecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c38b2fce-f8dd-41a7-b66d-c06eb30306aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c13d6479-e516-4058-89db-a900cb0dc9c8",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb32179-4641-4c2f-b817-c78b9f0cdddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e8da187-913e-4117-8179-9910c08b11d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f35a0a-941e-402f-844d-10fb4530a896",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32680488-b892-497e-a4a9-cd93bb32da4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5e4f638-eb95-425e-94e0-ffa105d55f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4557bbbb-1eb4-4204-b61c-29fa282dff68",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c939d93a-9ac0-4804-9742-0950cbb8e34e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38eacc2a-1ae4-4974-9955-a7565ad332bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef455fd-b4a3-4373-b075-cd79ef5d4efe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ed3d025-8cbf-4d65-a8cc-795da6de176f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e33391-a962-4a84-95a7-f375cd4f9401",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b59e8da-a300-45f4-9d9e-316f36c020a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d18f26b7-13fb-45de-b414-413fa9871b14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "250a8870-1317-4aa7-892d-2ccdc89b9cc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f3b2a03-028b-4fb4-8b23-1d81caf41aa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77fabbe8-6628-4950-9848-d8194a01305a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f0b52ca-8bb5-4e9a-9833-7cb3213289d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6f4ef6a-e80d-4d09-9edf-b7f53cdc9de1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "884df50e-a205-4d62-bcc1-247ec915a447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2643dff-7d65-4848-95cb-ef78bb7e58d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d8380d-b1bb-4523-8594-5ff9a40d37cd",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f5bf8c9-8554-46f0-8356-5c6c840b3f84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0ddb659-f551-4386-99a3-99322122b75a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e6071d6-4233-4ae4-9cb5-17bc73830164",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d4d1723-6708-4b04-b03d-d5b9b80fb89c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c583a3-22ae-4dfe-b58b-97c9c88072a6",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca86e72e-ae39-49c7-b4de-3a9de55f0477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42baaffe-e076-45ce-9d2a-626dcb0a7e89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c1df15-c72e-4431-9e03-191458639e6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d6c9380-fd8c-48bd-8248-9a3f77b85689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3826c971-256f-4bea-b66b-860a797f6434",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c0bddbc-3f52-438c-a6a5-f1f9bd25a4f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0789f31-c822-4d89-b302-413ae9989a6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f34bc1-c6bf-497d-990a-136f77d4174d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba2319a0-9d92-462f-9201-7d7a57b4e7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f345738-3a34-42ba-a2b0-693f3cf6164a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ecc8da9-e744-48f3-9d05-299a3871eb18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09d77e5e-6649-4129-a802-eb6a6cfa82be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1007d4-6e02-415e-b0b4-2e50e5201232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "101575cd-80d7-43c8-8950-e790a2290251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c909f70-66a8-4680-8c90-fc99d0d25201",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4306ed1-8307-4439-842f-5cb9af085096",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d1c3921-6538-483a-bda3-c5c343608619"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c310e209-b60f-4dda-a774-17230c89aba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79db5a61-c2a0-4af2-98dd-6b7ba645f44f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "277c9adc-72f8-46ee-bfc8-b617fa56088c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeabf6b7-6fb2-405f-bdcd-1894d9fc5e5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99964ec1-1eb9-40f2-b8ee-4894bfcefc6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba43f6f5-c3db-4982-a237-ef3aa774653a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "176859f7-41d0-430d-b5b6-adbef2bacf19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94fb0e14-f12c-47ff-9eac-a277a3c85d92",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28782737-a0ae-4ef5-a684-ecb58fcf8d0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08900f1b-cb62-43f8-83eb-953c26666f05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e857cb10-5369-4fe9-b264-af88dba15a21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d26cd12e-3175-4884-ab08-dfd1196e4dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a7b3bc-2a6b-45ee-a245-0a7133f3fba1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a74089b-f236-44b3-b953-fb0e68555a06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a3df130-bb67-41bd-90d5-695d2d7725a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa31b06e-c1bc-4f3f-8cfa-1543cd0a4181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75105273-e609-4fc3-aeb0-3d1deac16542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "818a492a-0a1e-46f4-a6d0-570972d0120b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a696ea01-e32d-4673-af19-de59a05faa89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5b4544b-3905-4c36-86aa-0d08e9731402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c4dccc8-a229-4d23-a017-7cd451c253ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66e26359-0860-4ecd-b0dd-a1a12d3fdcea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d35f797b-63c4-45ac-b3b5-db12323ec9fc",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb27a1c6-f81d-47ba-b593-f8751b6720b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd302c8e-53d2-4814-88ba-97b31abc93c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda029c2-f81c-496b-a23f-76c79efa2234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f441260a-d467-40aa-aef3-f93c19e26f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b641e0f6-1350-495f-94e5-2fee6da40605",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb55c1a-6da1-4889-afe6-42da4956bf5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "403f64ed-1a75-4cea-92f8-6e9eb24b4076"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a89d1f62-8497-4f88-943c-48e00071656b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e79f158a-ef7d-4605-9555-5b1a146eece3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81051ca1-54d8-44f7-a32c-acecc89bc56e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbafcdc1-19d4-4a9b-8ac4-f3af4239d1a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a32d728c-1cf5-4bdb-9069-794daa3cefbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c29d8f-fda7-4a89-9ab6-a561825b0fe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8d30cb6-8183-4a2c-96a7-12cd902c1729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92516c3f-e631-41d0-ac76-2f693294a482",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5969632-3514-48e5-9d00-bd4429cd6218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d1af590-9433-4800-9681-9e9e710eeb84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e49fe06d-bd62-426c-a0c4-ec88f81920a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdfed3fb-8602-4497-bc10-b2702974e2a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd40d010-3f22-42e0-95b0-dc663f53b525",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0141c7c-e06b-4573-81c4-82925f4fb92b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9ab6275-811f-4466-978f-b61171574166"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c52b32-dcd1-4a4e-9c32-f3aa46e1fa31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e43d95b-f5c8-4627-869b-7f4763331196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c18e66-b9e7-4700-83d8-70ccce64480d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac52bb08-e645-460c-9f4d-40aedbd59764",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18185617-a87a-4d0c-a111-fbb7709c0997"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e7f923-e0aa-4889-b6a0-d2435960e0ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f63cc50f-f814-425d-bc51-7cbf116c6e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b08932b-22cf-446b-9b2f-d41411354d23",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d445da1-14a1-456f-9267-9e0b038d2402",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ad4a232-5b26-4e79-9c28-d913bc342eea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22029a25-c272-4f4c-a323-bdf78475a78d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38a5ba86-a86a-4d99-92ef-8d6c8ceaa930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8772ac-877b-4fd2-bcd9-6986a9dd65a1",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf7757c-b32f-48f0-90fc-e03ca89ae446",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a393e876-60b9-458f-aa09-211ed243123b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2adbe64d-e82c-4052-bed1-db3a26e5a5c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f749287-7ddf-4ec1-a36f-890affa589d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abce4c0c-4351-484c-9a76-64554e87a183",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b838e6-4bd6-486f-914a-91da57a90d4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58e207c0-c9b7-42cc-8b05-86859e29a3b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b8b5716-32b3-46bf-b42f-57d70170d747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30af2eb1-b4c2-442e-9f6e-edcbef168073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5d42eb-504f-47a6-ac44-7bd8a138e7a0",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7816fea-01b3-43ca-b0ad-dbaadddb8f8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38c17b39-44b9-4bd4-b9d6-f52386e8b505"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb028365-7948-4563-814e-4ac897cc2a0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "803df923-6f5f-442e-b932-01552d648a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e31744c-0384-47e9-945a-83f57f169ba4",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d3d6e13-4791-4acc-9897-ec0cc0044d2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "273c02df-e359-457a-9d3e-cc06384bccb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae023963-fe96-40f7-99d5-f61fdc2f966b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e08569e8-5094-4db0-a970-bbcfdd6bc265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18e8eb8e-803e-4c16-828c-94d5590cd6d1",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0561f03-ec42-4ef1-8e75-de4f3a0bcea6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d88d3a13-0b44-40a4-8b24-54b7b47bd65e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1853076-fe5b-4f65-9019-64acb5331006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3744e7b8-73ad-4219-89ba-03ad1a8b0662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53a4561-9c39-4f26-a558-fe3042316c69",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb62cfd-d0bf-4289-8b75-e3aa7fed6155",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f37b934-77f9-4f8c-8a8f-9e64b1255c90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "459d0d0d-f159-4bee-84cd-8c4f48995517",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fd88f51-5c4a-49c6-892d-3811e949618c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2030323-c5ac-4f56-a611-08cb559630b7",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd98d99-ee97-4639-aa15-ec2d406a9939",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20037e82-cc31-4601-bec4-ea2008e38925"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b9c26f-fe48-4cac-a994-2b33fe448957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6292dfe1-4c11-4f78-b199-5d3acd3a2ee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4559b543-c682-4fa9-85d4-fe546c3855f7",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e731421-2e3a-4a7b-a946-a10456030c7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11ddb016-c91a-454d-94c9-ecfe7029f107"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17c675ac-eada-4bdb-a21f-124e54a6712d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e633af0-ada0-4579-8d78-1cc38bab08df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d910c3-a8c9-4079-83cb-e21aa5b2641d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "536d0c86-51bd-46d3-985e-38847f68bbff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab6ab644-0147-4468-9f6c-28d4785f477b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "704b7a54-743e-41ff-a218-cf8c0a8ceb7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d35bccb1-3573-44af-a613-75b107302c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7624e7f4-ffd7-4796-a553-26c01a833fd9",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b94b78ad-064b-4f0d-864d-d319ab0c3b9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "794c7c01-2de7-4a08-9d92-acc725ad856a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00be8d52-1387-4300-ad9e-4d1db8dad50c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "407ca4ce-fcba-4324-a876-efe5e177b471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5498126-784c-45bc-a431-8b66ac6d8a50",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46bce946-cf82-41d8-9029-493f3af67335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb6265f3-ffaa-46ec-9559-c40cb5109e69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64021c2-a2e4-48ae-bf67-8c8e8ff7d8df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b87dbb5-7872-42c9-bdcc-f616a8e51bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a7cd5b4-c46d-4e4a-93f1-98d9b6998478",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62641e5d-1462-4044-ad70-945a4c2b2687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0372e9d1-b03b-42ab-a025-9830c3f8d8c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc035928-197e-4a42-a166-f418e16e1b50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f759481-14ae-4c88-a125-13f21082ec91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced9c38a-cc95-4e7c-8898-88399527ab15",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6526308-c3b9-4c66-a4a6-a0a88673f2ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca2f9a46-6c05-4bf5-abe1-b05725d1cbfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49de7abb-36c3-480e-8136-0e8c12ff0baf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9480e295-c089-4938-8acc-4302b2129599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce24165b-39d2-4143-b692-5e9d07b7bf55",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47346f38-48cc-43c9-8c3a-87122be0a6e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc6fdf90-9fc4-4908-93a5-79fe9c35d9d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c30423-2ffb-48f9-83ba-5d8a599e40e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a5e5d2e-dffd-488e-8461-9a9072528014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d67262-acc7-43bd-ab75-9232fe81e73b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0aa75c8-7039-4ad4-b9dc-185a505da10f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7babf03f-bcb5-4f7a-94ab-acbc135aa489"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec08188e-c377-4f89-a33d-5823a6ef13c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42bcd96e-e1de-427d-8159-e5945f7ed956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd1cf72-9ea3-4c4b-b4ed-142cd6966c60",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485f502f-bace-4c04-b978-3f25a8e2c3dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "029930f2-224b-478a-9247-50609401a65d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c71713c-7ed4-4500-b41e-db102694dce6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8edb82c-1b50-4ead-bb25-17aa2cd965d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52552de1-35ae-4269-a2fb-e27e98f2d831",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aead0cbb-caf7-4e51-9849-74a888de162a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab1fd180-a0a0-4e0c-94a7-c04f9cb63fb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b56bec-b003-44b4-af9a-3e6f037c09a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db43ae2b-7131-48e5-b52f-1c14f0ce39e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f1dc451-e2a8-4508-bab5-412236a69648",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7744066-545a-4bdb-a9f2-8310114589f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e48fc7e-b64a-4b9e-a4be-049fba7b89a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef059db-eb1b-4752-b2ae-cbf2d938c35e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1576a213-496d-4488-9698-62a84f239433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e4fea4-6374-4a9c-8de8-81ed94214891",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "717356fe-9aab-41d6-8a0b-ef9d366981b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8d18194-7497-463f-a0cc-59c4082f4c2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63cc0da5-cbba-4371-b439-5fc6491e35eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b158ef37-3162-4194-8717-ab18733c7929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b7849d-b9e0-44c7-919b-312c7a3ae973",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05279dd1-dcfe-4640-a5e6-db7d42cf7f32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c28b9ba-3b26-4d88-9766-f4a7f149e9d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "356d0a9e-82a5-4175-8210-ad5f1cad070a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f56137ae-ef46-4d9c-8cb7-fd0fd77cffef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd072e0f-236c-4779-8fcb-6ad049793047",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39762809-e449-432b-bfaf-65afc3961c90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf9836a3-b7b4-46ae-9c6a-7f0547bb2d69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ebc8b4-b283-47e9-a3c7-d5acad82edd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8084b0f1-99b2-4251-8f0b-eec582153e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "981d16e2-5e83-4cc7-923c-ee482e48de1d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3cea3af-024c-4f1d-8daf-2d593325dd6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b71e470f-ca4e-46f8-a843-ce151dc12a20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "457fad31-c858-4025-a1a7-df6157ea2b9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d138902-f095-4ba9-af13-4946fcd80fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "904aa54e-846c-4a11-aaaf-f505d0fa2e09",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f7f203-be2a-46dd-9918-00de8efe783a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16d3b09f-29e6-4bb4-800f-a3be12e93c30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c5e1812-b42a-4c85-a4a2-2ff432fdf56d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9d64334-5636-49ad-bea7-9a8c36f36f5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa71baae-2e5e-4a81-85d8-abcde60ef21b",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c23f67c-2793-432a-ab7c-7789edd83be7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dd88206-1f87-4baf-b11b-f5e64d49da51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dbe1405-7c7b-432e-91be-70f97f677b6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82bfb233-a13c-4641-9930-388001576ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f54c1a0-02ce-4206-8f93-31f66b984114",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c812cec6-b25b-44cd-a3b6-f1ee9a2c31f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "694c9153-4718-4798-ac77-466f853bde2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e56da81-944e-4737-b06d-892e77f5fa7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3c0e3ee-f9b2-435a-8a30-d73960f20824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d05cf37-da84-4856-9100-e766c53fb9d3",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c1ba356-5f51-4424-9ee1-cbd02d3ebd76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00261b00-a252-4893-a059-c62ae6668b12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a64f65ea-085a-4f7d-be0a-90b6bf85c574",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ba20336-beb6-4130-91d1-e427c68c90df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93930325-0ed6-4fa3-9445-ab1680199926",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc9e76bb-15a9-47f5-8319-1e39a820732f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40466cba-4fe9-4890-a96a-ebec8255dd97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16eba9d4-0208-43ee-bb38-bc5542686c7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edf84eb3-4b58-4624-b777-37bf7a1090ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b25368-21ef-41c4-95e1-5e56b0b04f37",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceed341a-28e1-4fcf-be2b-b7b057727046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ba06021-9f6b-4f97-ad38-3d7b7518b0fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd8200b-085f-47f9-8315-1f7a9f10f735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0e70a9d-6f55-4977-b7be-03807ab37f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad865309-f62a-44e9-9b81-48766fca7d7b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29045049-83a7-4d45-aa9e-64bb466bd565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a1a1099-4684-4ea5-9121-89c412693173"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f721ab0-4152-42f8-81f9-004e912db48b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f985a497-a1d2-4568-8c7d-c6ef1d9758f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b794b0ec-0d80-4b0c-9449-3cafc75114b9",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9eda05d-1235-4ea4-bdcd-844ab2a0df57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83c38af1-ede6-46ad-90b8-091a9d2e009f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3fa2ae7-9899-40c8-b650-774b6838bdf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06c97fdb-695b-4ec9-bc1c-af245ee8370d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9a1f21-5a4e-4154-8534-697f4074da67",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467fb722-c3db-4e4d-9a16-a23cf187289a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87686662-f89c-48fc-84e3-79b33bc18b41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79451120-778c-45e2-89a9-26332ec3f34f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1614d633-72c0-483f-8f28-851741c7ef93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a022d413-da04-44ca-bf7e-48d148a3c83e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0b545a-ce28-404b-8525-cc17aebadea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbb29ee5-25be-4115-8a6a-a2e3bd60433a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7812a90-8aec-4571-b5e1-f2dbfa428966",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ce885a2-315a-4f3c-995b-47deeb8f19ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98177978-8001-40e1-bd81-ddde9d488304",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29252fbc-ce76-4f2f-ab29-1a8248cc89df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03f1afd3-b346-48ed-b469-3b994aa00b05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7e82a5-ef18-41d4-8fa2-818222ef80af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ede25852-929e-4f9d-90bb-b7a5ede149d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dfdca20-fa54-4af0-98fa-2ef3ee8f7ea8",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f02804fe-6724-4b32-ac69-1fa4755f8b4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77ea4469-231f-4cb6-a352-406e1c4b2dfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e740fd-46ac-46e1-a46c-7581bcdf514e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09d80c6a-067b-4fd1-9681-669df353cc70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60bf8eb5-5dfc-4012-b154-d9ac8ab42c67",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65bbcc4f-7253-46cf-a83b-f6ffcf953e6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed7815ff-e239-43f4-9258-bc7dad2ee0dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a694846d-2ef4-4d03-b3c2-11ba9d9f0658",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f607f62b-0885-4768-862b-52d4aaec601d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab19439e-7052-47ce-a0bf-5d6bad29c735",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c8d583d-e27e-4b2f-8285-f4bbce4f1369",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cd335d8-eb13-4eea-b687-656f5dd79f8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b253801-3609-4999-a52c-777c6b828d71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26e87042-8a78-45dc-836d-24db02fcaa3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "163e3b0b-7560-4474-95bf-a8a833d0ef71",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79fbe98e-9e3c-4f1d-a08f-d8fa75b8638b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b0d4ec1-96ab-408d-a3b1-9e03305eb2bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ca3fcea-db05-427f-9364-21715274b863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de7e5f36-7678-4f3b-a134-df9eba7ad9db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f19a5575-20b3-4595-9618-228ec9721297",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fed9b06-fbe3-4dd9-bd32-842a7b8393cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38cd303d-e8f4-47e6-9aad-35fc46d5035a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde2e544-f7e8-4cda-92a5-787a849d37fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79b4daa2-75e5-429c-983b-f80ac5aebc8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e07083-1d34-4438-a0c6-c5acd5d36b31",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb3fdf7-6f92-4bab-a0db-1b021efdb6d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4e26907-e2a5-465c-996e-923d2a54dbbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e43ed9-9b86-46b7-82d4-fd1a8f3f80dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ee77635-6de4-4cc5-8157-8e3785791336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97555f13-e63e-4282-a92c-1257e3c15737",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c5eb757-ef68-40c5-adc2-a611938cb825",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2eb7c10b-474e-4fba-a899-24903108b83e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d42ba83f-29dc-4147-a828-7492af3ce2c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d4ccc91-ec30-438d-9209-9df24de2fa45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5651505c-dc2c-4f63-8bf5-6a9012d24fb5",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea3213e-c7ff-4cab-8ffb-72a759a33aac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d18a46f-ee24-499e-84d2-4eaafd687a82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a6a6150-d80a-42aa-86ef-b41933b9a91c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b758a181-ddb7-42c9-98f8-eaee38a26fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ac01f49-8f7c-46aa-85a8-d80a996e79ae",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61511d05-0bff-410c-8463-738c8364af59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a6e4f29-516c-4eb1-8c1f-e737498b16a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7776f52a-2053-4e64-a931-96198a0872f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb3e68b9-755b-4e7f-89fd-7625ecab8145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cce44f2-a40d-46a7-9e41-79bdae1ae7ad",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c353934-b7b1-46f3-a5a0-db3b8ad18f9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52d2f2f9-8ac5-4563-b39e-9106fe4cd736"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a4fac58-7b68-4ee0-bc10-2fefcaa3d6b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f348ee95-fc45-41f9-a5ba-8c3fe68bf693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c2bbcf-16fd-4b6c-bd18-ff5a36771e0f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a26c868-1b3c-4e7c-a7da-3405a6b527b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02d090ff-88e9-4c58-b7cc-7d48042e752e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67693304-3295-4bc8-8218-17221575324f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e84ac76-5925-4d17-a7b5-d51db3230ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d8082b-b2fe-40fc-8a79-31cda8a430c8",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ec6799-4140-497c-80f1-7151f4f0ae22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7263dca-34d2-48d7-98d3-7388b0414c26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbcc8709-1013-41c9-a9da-20bc1d5760f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "166edbf3-6166-4be3-9aea-dbb5c6723b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dabd51b-a2ac-44a5-afcf-c0c33e407cc6",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b2da909-d708-4120-b593-9f305cc3c355",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a38dea79-309b-455b-b3b3-3092794a3e50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65fadc29-8471-41d2-80f6-c663ce30b353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf7e78a3-94cf-4b71-ab47-17b0dc3dc616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be66bcc2-d1fc-409a-b9cf-c4ae630ad950",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051e2433-3291-4aad-a279-22a07d309bb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29be5d33-72e6-43bb-92c1-a003244ccb9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85167267-ab1a-4880-9b4d-6bb80e150e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "823cb5b1-aae9-4c5a-b2e6-e58b61a7fda5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d414fadf-711f-4547-b0a5-27cebb7cf1d3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59420557-322f-4ef1-bbcc-89eb33e8e2eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "481a3a44-ada8-4918-8324-5bbb0c6f9ffd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ded1e3-32e1-4b57-9fd0-fba9568ccb41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee931748-095b-4042-afa7-e15375467695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "804632cf-eec6-4a8c-996b-414ebe01bf52",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c715ec9-b6ae-4fa1-a4b0-155dd76d1995",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6805c4d7-151e-4e1c-8f20-844d7311c47b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef4d1e2-6d8f-40e4-a071-5deee17b7e79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c95c1887-c635-461d-b0b8-5b897978eee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5396ad8-150a-4e2b-8e87-74258e493aba",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c4a1b1d-ab5f-4795-89ce-1de6d4227d4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "650ec176-4eab-45af-83d3-a722ea6889df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbac36db-9ae4-42c5-ad5f-64ccb9d28f04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00273fdb-5690-4487-b613-2c19b063c9e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e939bb20-a482-4aba-860e-c91bf350870e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f502a688-e4fa-482d-80f8-e7b1f25c121d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a653f260-43e6-4bbe-b871-ebc23f3e8624"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a4fa4d-0a63-4886-b204-3db5c1fb111c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82c55625-4b96-47e9-bd31-d7c75681208e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5ba876-afb9-4d25-8407-902ded671c77",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12df799d-d408-4200-aad5-77bc53120cba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f92b10bd-356a-4c78-9074-25e2d756180c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f455067-d566-4955-9d6e-56c5ab29568b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40641302-3f46-498c-a9c4-5183d234c4d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158cb0fc-ebac-4597-8f5e-ae9bcb431258",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c77d3a5-e1d2-4a2e-84b1-74d834c92f4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7a76179-5a33-4abb-8dfb-821efe788b6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d60b9eb-b5e1-4445-bf7c-638e8528dee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f50ab6f6-38fe-4cd7-990c-4d9ae68e7853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab05132-7181-4293-8139-58a9d51d47ae",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5373a6c4-11ca-45db-a86d-9791a64c5ba0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f317c256-8bd7-445f-883c-d7cb7ca523e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e2f9e9-5d3a-4300-9136-480da8a1c3e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8551fe49-cb95-42d0-b185-aea9ea64ee6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1071d77-804c-4582-b562-50ec9eb1de97",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21669e62-d004-44b6-9181-20893c5b7f8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d709cbb-b792-4882-a369-e3049b4a840b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a8ae99-4998-4205-8d42-9b4f39c9bb8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ad4966b-3b27-485c-89db-2b00ea3d61fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06016651-edc8-4c36-b6bf-5f4d5e7c434a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f2bf0a-a2f0-486b-a696-b7bcd6aa2609",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a85db57a-a53a-4d1b-97a3-d9444d34ff19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea89cf1-99a7-47e7-af2b-b55b6b628727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31dc883a-4ef0-4790-8181-1bae99d0975e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f74baa5-d15d-4db1-ac86-8c67a2b037f2",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a6998c-825c-4bd4-ac5a-5fb0e1987e5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad497094-1b1f-48cc-9e81-6080914d1741"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a714fcc5-817c-419d-b32c-425f8dee55ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ee90dc3-7002-48d7-89cc-04ec0c501532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c29611-98da-44ab-afc8-6f7a2626bd5b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0db163-6996-4c02-b6d8-a37fda12b402",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71bca760-f15a-403c-959d-aef9896fc3cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "035ccbd6-2043-42d8-81e9-77038aed90b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8153f386-8509-4b0a-9975-18bb8ddf78ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "894866c4-c55e-4ed4-9fd6-5772bd6d3d40",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10602ced-520e-4417-a54d-5e4b872af7e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae658737-80e0-4000-a221-205c1bfd3728"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba396d0-cb26-48f5-a0a9-717ae164e469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb2270ec-4e10-4eee-bcc3-7e20453bed45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8e0aa8-d488-4875-8ab6-c2f77d39ecc8",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d33c71-b93a-4eed-8878-6e8e4bf5509f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fc3957b-f81d-4da9-bc15-9cac7f5c6abf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "150af141-85f9-4380-aa24-05531e329c35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fedb21fa-4db1-4268-bf63-12a76aa2fc82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd1fc467-42c9-4b1b-b2be-681d4171ab0b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b44fa2b-013f-486a-b429-00fe09afd481",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c65e5e9-2483-45c7-860b-5288ee48771b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4cb07a5-a809-4136-a7ec-7df096e34a19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed772375-bf1b-4647-9e53-2548041fa4b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f9e1a7-f309-496d-91cb-aba44395186d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "347ad5ec-bba9-4b31-8821-e4ae0dd6449f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54464f2a-9657-42d7-8555-84ead9cab338"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "010d60f0-8a39-4427-b969-af57d64fe8e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7523530-22f4-41be-b652-9c3f9289f699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "554a51d0-8071-48db-b547-3b5a823997c0",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af951ffe-b363-4cad-bc16-4c35fbaec458",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9a78437-2c99-421d-bc9d-70b2001a1491"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d6f8b19-16c1-4dea-a144-68d425c93b99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa211499-6b5b-4f0d-b8ba-f995a2feef37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0529520-cb5b-4228-b758-c246808add33",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf0aaf1-2e38-4a73-9fcf-6b4a02e3ea91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc33533e-1c7e-4859-aeee-16042481e411"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7380182-ee5d-4446-94aa-cbbceb578944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77f6874a-bc2d-44d3-9cad-5c9a4c90a412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5a37d6-0311-445c-b946-c8a9d57dc8ee",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faca0f72-c97d-4ae5-8846-a83b4b354d13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24a29224-088f-43c0-a78b-6307743dbace"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20702199-ef46-4c7c-80ba-988b6d0ae198",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceea9c82-2525-43c8-9476-7cdbbb3a26c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcfb7404-52bd-4e1c-bcd8-7ebbee920ab4",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf7c4f5b-9db0-4968-8e33-852d62d0803a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65475c35-d141-4c80-a7ce-021269894e9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36dece05-c2ab-4a6e-917b-3cffa96d989b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "288a0e1b-0733-4b1b-b5d2-de7ac25d3fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d59c783a-28ac-47e9-becd-7b39f677b107",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c931782-df25-4f76-8143-9aee1a92351e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b2ed1d6-baa1-454f-bd71-d3da5894f54d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94098bc8-eea1-4ced-b842-79fcdd8dd76c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5030ef87-0ffa-46da-b36c-418cb77a7044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "693833e8-f905-4fcf-b881-a69004d01fa7",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "915a52a4-796e-4753-ae2b-f3fbdd8bda4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ec5c9dd-bb1a-47ec-8366-71754ce05e84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e67dadc-494e-4ac6-9892-ce85847b0ae1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "491c9b28-fa50-4ef0-a739-3ade6b17fd51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e66331-d75f-4cdc-b521-fdc9b4d547c4",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f139e586-83ae-4cf7-9078-59e854507b4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "631a906d-0f31-4e5d-b068-95666cf541f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca2173c-d096-414a-a25f-b8f1fcebc14f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be4d5a9c-c02c-4c53-9592-0ad4da12952c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b72a7ae-9ad1-4728-aa39-9a2131c9dd29",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fdd7904-f16d-4639-9ecc-741b521b4711",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "308a9cb3-cb01-480d-b582-255df7bf899e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a5c84a-8166-44b6-880f-07e421b1a8dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20209291-3619-448c-ae1a-321d2f35c33d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a073f6-bc90-41d9-87f5-35a0e4ae8ba2",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa29e94-2fc4-4391-94cb-aa9f42af331a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b46e1305-cd6d-459c-a5fb-1f2841c39495"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d620feb4-caa9-4f11-9e50-b736ba814141",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8ea6726-f5f3-41f8-8b4e-b041ef0cb4aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce58abec-c65b-41f8-8a99-a597ac7e32b8",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32510dbb-02c5-422c-b809-65862ea8161a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54b30e38-7587-4f3f-8450-2d4b5be95371"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebbc5356-40f5-4494-a986-aa7a87558eb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99a99847-0352-4286-9d88-d9e41d2d6b46"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f45dfc7-e86b-4d63-a487-536e47da85fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "075f10c9-351a-4de2-94c6-bdcd20c28c01"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e373127f-f4b1-4ad0-a8ba-136c7925d823",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7f0f18e1-8bc8-4337-adc1-5222ba21c481"
                    }
                  }
                ]
              },
              {
                "id": "a60a923c-a520-4e3c-ac3d-880b96fdf496",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "64700984-b2fc-4df0-85af-5078fa488fe7",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df9cc9bd-7db4-4576-8050-aa7d38f31aeb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e03da1e8-03a0-4f64-8933-108cc3bb52fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62156640-9d38-46d2-8ce8-57401558e4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea18ee91-a96b-47ec-8c8f-6d2d945d0859"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7b6f7ba-82d7-4649-9052-7c778dfe8785",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee6b4460-54ab-46b6-a1b2-c40b5ed70d5e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8b58f95-f208-4edd-b32c-2701f8f8304d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5430952d-317a-4455-88b1-a41780e8b6f2"
                    }
                  }
                ]
              },
              {
                "id": "70c9bb7e-cea8-46bd-bb59-1a789982c0a9",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "7531b03d-c83f-41a3-b063-e11ccbab673d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93f083b-a18c-4031-a236-57096fc055eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e07c572c-7282-41d2-b82b-2f3b5f1b86f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f25aeef8-e43b-4ed1-835d-d27016ea8cbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f8ce9e9-b72b-47b4-8a0d-5192a868d7ce"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "bd0552ff-7fb6-41e4-9d5f-892e286665c8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e34a70f6-7f6d-46e0-8f89-f54034296227",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "75fefd53-72d6-4aa8-8590-ae06828f9815",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "366d9da8-b689-4d86-b02b-7680474d99f7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cfb58d92-44d2-4fe9-98d1-579735282362",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3aedfe95-ba77-44b7-8c1c-07954e5d1880"
                    }
                  }
                ]
              },
              {
                "id": "ba0bd4fa-1a33-4e7f-a44d-2984cbb21162",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b95689c2-b977-4317-ac0a-c552c60a2346",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a5a93c1d-2ad6-41fe-bd16-89acf961a569"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f1411f8-aa89-47c9-a2ca-2a6e93266008",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c42aa264-3a2f-4a52-8232-361b31762249"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "008f9e79-faf5-449e-a1fd-e3ab5edff6aa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "8d2bfe3b-389f-4008-9e8e-ce8c1cefa655"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ec0e2f7a-35f3-4ae9-b258-ed4bb1deaa62",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cae75788-57bf-40ea-ba07-464bf8926723"
            }
          }
        ]
      },
      {
        "id": "e43834fa-a752-42ce-8a48-2d40c36ec37d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ac2e8d85-139c-4680-ab4f-0f3b053b1f2d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "073cee98-c90d-492a-b5ff-62e4fc599e4a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "751c8852-7199-46c9-9472-fba2312d5e04",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0929ff05-deed-40f9-83e5-a63a24867e1b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "89bb620d-4a60-4831-bcd6-93e5dbd1635b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66dd1e50-f387-469e-8e18-73689c7bc7f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a600397-f93f-4fc6-8963-990fd866de32"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b56af63-0c5c-494c-8645-7197bfca22a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c9e199a-9141-4186-bade-00e330c7339a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d98f94e0-321b-4312-9b38-9e309bcffd76",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c74a8f0d-3e1a-4ad4-b325-532bbc81273f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4c8bab98-85e4-4a5e-92a9-574b41cb7964",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b9026c05-e6af-4a24-974e-e2171b77c0be"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6f3200da-e040-43d5-9772-1628d67b12ec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1b5ebf3b-78ff-4fe2-a01a-57dd8bd9af35"
            }
          }
        ]
      },
      {
        "id": "cd7bb439-735e-44e1-af37-bdb9ff537e56",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "555e901a-2654-42af-a291-e02cf0cfa157",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1d8f8c26-775b-466d-a114-5be15bb52095",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d6bf975c-d873-4358-8990-c1920d9dbb82",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ea68e5-4da6-4980-ae9d-985515d393ab",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eba133f8-b6e5-44f3-8578-66cb08edc2f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ab89e5-4759-4ca1-9cee-224ba9aaf6d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8b243474-0797-4bbb-b2de-69d1fd4f93ee"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a49dc24-2b34-4f4d-8b84-5262becb52b1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "770de42b-0e8e-4d65-a08c-6de635297ad8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a16976d4-9b34-438a-a33d-5f73dd486a8d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "686d9d0a-78f5-4a1e-b477-76ff45b72978"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ff6d3de-2601-48ce-845a-aa5b36d1024e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fe30a40b-7e04-4071-a156-8a051fdd1111"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "255ffff5-2cf3-463c-ac52-008bca4d110d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "75b48be7-48f9-45a9-a98d-fde29b0436c9"
            }
          }
        ]
      },
      {
        "id": "e1f191e9-0cd1-4ffd-adde-a4fdd6a76ec4",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "dc69639c-f165-4bcc-802c-2b433f6a3cdb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7b65528d-0ccf-44f1-8651-50ee93ece45b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "daa83ad6-259f-4c80-908c-7416063e7383",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb5e362-606b-44ea-a6ae-a4c2c488d2bf",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7932e34d-cf7f-44f6-b747-ffe5fed68259"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ccc211-6f3d-4ba2-939b-909ac4e84090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22dd36af-b0aa-4e32-8b79-86b9fc186b5a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "98c29034-d45e-4a3a-af07-3a41e92795cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93bd28cf-22fc-4043-85a6-13b64578b436"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "efb95eba-a839-46a2-88eb-88447cf678b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "993053d5-1755-4409-a5c5-75b541d9c77d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5e55487f-bfc9-4995-b43a-f013702228b8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8c27e6ab-21f8-40a2-a9d3-b064925326fb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aa5c9425-e7b6-4017-9417-2dfb8d07239f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "92a8164a-afd0-4f72-b500-7b0019441f9b"
            }
          }
        ]
      },
      {
        "id": "86df807d-e92b-4f5b-b05e-d430983346b2",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5230c87a-3c08-4616-997f-98357e107162",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fddcf87d-e560-44fb-9e6e-2969201851e6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "bfd85b1b-af59-45c2-b749-f54818ddcff8",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "217c601c-a0f9-4dc0-b28b-5337046575b3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0d1a1f2c-038b-4e01-a726-4bb2421fd894",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 370.2103174603174,
      "responseMin": 11,
      "responseMax": 9933,
      "responseSd": 1476.2497044516379,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1720139901594,
      "completed": 1720140003393
    },
    "executions": [
      {
        "id": "3c8c9744-2d22-4687-ae28-e5c63ce25203",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "03dd9b40-8431-4c5f-a847-12469743e3e7",
          "httpRequestId": "a6dc6de0-2f26-4aec-9af7-26ef3873f1fb"
        },
        "item": {
          "id": "3c8c9744-2d22-4687-ae28-e5c63ce25203",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ec2ef704-8316-4825-bb0a-182af78bcfa2",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 0
        }
      },
      {
        "id": "6d0bff2e-5b3d-437c-9783-77ce5313f717",
        "cursor": {
          "ref": "69d2aefb-c073-4ae3-a605-691708a37848",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "fb4d09c7-c7b3-4472-ba44-693f1b91b843"
        },
        "item": {
          "id": "6d0bff2e-5b3d-437c-9783-77ce5313f717",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "202361fa-ea0e-4d00-8e3b-920d972339b5",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "4675498d-8e80-4457-b582-01787cf2c9a3",
        "cursor": {
          "ref": "394cf83a-10a5-452e-b9d3-0bda7086c092",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "4f0a0532-10dd-4889-84d0-fde6cc1696a0"
        },
        "item": {
          "id": "4675498d-8e80-4457-b582-01787cf2c9a3",
          "name": "did_json"
        },
        "response": {
          "id": "15b8f25b-4b37-49aa-8d0d-38a444f77531",
          "status": "OK",
          "code": 200,
          "responseTime": 425,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "366152ac-c9e6-4e81-8162-364acc22c461",
        "cursor": {
          "ref": "95c90bb3-1f4a-41fb-9d35-aef76b4eac37",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "79ea2a4c-f848-4834-ae33-b44f7cfd2510"
        },
        "item": {
          "id": "366152ac-c9e6-4e81-8162-364acc22c461",
          "name": "did:invalid"
        },
        "response": {
          "id": "10687c4c-8bf6-4f68-8fb7-4c0fab42189c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2084,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "366152ac-c9e6-4e81-8162-364acc22c461",
        "cursor": {
          "ref": "95c90bb3-1f4a-41fb-9d35-aef76b4eac37",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "79ea2a4c-f848-4834-ae33-b44f7cfd2510"
        },
        "item": {
          "id": "366152ac-c9e6-4e81-8162-364acc22c461",
          "name": "did:invalid"
        },
        "response": {
          "id": "10687c4c-8bf6-4f68-8fb7-4c0fab42189c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2084,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf83a875-534b-4a81-9ae4-84df5437dc83",
        "cursor": {
          "ref": "89d4d482-5178-41d9-bf97-a3672d47c940",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "efc22c0d-6c46-443d-8dbf-f53f94475d26"
        },
        "item": {
          "id": "cf83a875-534b-4a81-9ae4-84df5437dc83",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "54d48068-2683-48cb-bdd5-dddfe17a6f36",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2890,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88bbf4e8-3a89-4e37-805f-73d38835414b",
        "cursor": {
          "ref": "3a392313-95b2-4658-847b-40186e659a7b",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d5f17b2b-e56d-49d3-8a86-f1b7590a218a"
        },
        "item": {
          "id": "88bbf4e8-3a89-4e37-805f-73d38835414b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "05986ca7-1987-442e-9a70-a825211b77d6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2373,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb9e41e-0fce-4a1c-8fe1-f4359d5da5d3",
        "cursor": {
          "ref": "dbd2d235-dabc-4f3b-850b-75a6bca17bd6",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7a153c92-c886-4ba1-94e1-63e938282f75"
        },
        "item": {
          "id": "acb9e41e-0fce-4a1c-8fe1-f4359d5da5d3",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "307663ce-562e-479b-9b97-bd24c1930481",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd5a44e7-567d-4ff4-8a48-4c3d7e611419",
        "cursor": {
          "ref": "3ff25f91-cf3e-45f0-8e6b-bbbca4af2e83",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9f98130d-b130-4e9c-853d-c4e637f4e2b8"
        },
        "item": {
          "id": "dd5a44e7-567d-4ff4-8a48-4c3d7e611419",
          "name": "identifiers"
        },
        "response": {
          "id": "ba9f4dc5-5a40-43d6-b208-d37e3303636e",
          "status": "OK",
          "code": 200,
          "responseTime": 2227,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab7eb48-3d98-4abc-80d6-5e7829166ad2",
        "cursor": {
          "ref": "4c749657-33b9-4d32-b4bf-641584391dc6",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6ec70d0b-d35f-4520-9c97-91d90ca4f2a1"
        },
        "item": {
          "id": "fab7eb48-3d98-4abc-80d6-5e7829166ad2",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0d57a045-62cd-4622-8bbf-6893ca803ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e9d9e2-b04d-477a-995c-c1c5b443e08b",
        "cursor": {
          "ref": "f3b9d7cd-7aca-4694-874f-9bb36c45d95b",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1f3c1255-fa07-4355-9164-e1c226dd0843"
        },
        "item": {
          "id": "d5e9d9e2-b04d-477a-995c-c1c5b443e08b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "41672e9f-8d7e-40e6-b095-5556b5769522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc4bd07-2ca2-4ed3-8ba6-f1547675a366",
        "cursor": {
          "ref": "d885b624-356c-48eb-a83b-eaac3d122614",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4b4eb5a2-2ac0-4a92-a978-f8e67ebb6aca"
        },
        "item": {
          "id": "5fc4bd07-2ca2-4ed3-8ba6-f1547675a366",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "9c076bc5-c2db-4ef2-9f0a-195d5f25cfc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27c761e-9dd3-49d1-b67f-2e8901464695",
        "cursor": {
          "ref": "006887dd-1c01-4edf-8f8f-cec1c58bd59b",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c333c6c5-f565-466b-b728-ebd7b154b634"
        },
        "item": {
          "id": "e27c761e-9dd3-49d1-b67f-2e8901464695",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ec01ac06-f81c-4cf3-a9af-42d97fbb8ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807b7861-65c5-46ff-bb8b-fa56a1aef810",
        "cursor": {
          "ref": "9a4b14c8-8b13-4b97-b494-a85b0e6d8a3d",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "129041ea-110e-447e-b13d-6963cf15ad89"
        },
        "item": {
          "id": "807b7861-65c5-46ff-bb8b-fa56a1aef810",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "74258e39-390d-44cc-b149-ae23c94318af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846dd689-655b-42e9-9298-1d7edcc0154d",
        "cursor": {
          "ref": "5f39af39-b6bc-41a9-989b-f1832309cbc5",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c8f19be7-5f04-422b-a564-559eab78dc18"
        },
        "item": {
          "id": "846dd689-655b-42e9-9298-1d7edcc0154d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e83110ae-3ef9-4abd-9268-afc2890916a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4288c6-f071-4aef-a07e-f88f47886e75",
        "cursor": {
          "ref": "186b8daa-8fbf-4999-94ea-8826cc95a74e",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7ea532b8-be5e-4f92-873e-eaf86fa117f1"
        },
        "item": {
          "id": "1e4288c6-f071-4aef-a07e-f88f47886e75",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "da82474b-561b-4ff2-a911-2663d4cf2acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab9d33a9-97f0-47e6-a8a2-e8aa68707091",
        "cursor": {
          "ref": "8f7d258d-1b8b-4901-ac3d-70e456802600",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "7595eed2-840a-4326-b80a-9fa4ee218e51"
        },
        "item": {
          "id": "ab9d33a9-97f0-47e6-a8a2-e8aa68707091",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5fafbde0-28af-484c-8f8f-673be71e8454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e64d2026-cd68-4679-8079-2188ec19b879",
        "cursor": {
          "ref": "c070f70c-34f7-4222-9bd6-ae4cb094de44",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "957d101c-6a4d-43e6-806f-4631a11a3f84"
        },
        "item": {
          "id": "e64d2026-cd68-4679-8079-2188ec19b879",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "090a8910-e285-4d70-bd2d-32167b16d9af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c8a8ad-7425-4472-a279-061502b3a32b",
        "cursor": {
          "ref": "624c570e-240d-4c33-ace6-4608447d04d5",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "26d56e6b-a59b-4e52-91bb-7cca557aa4fc"
        },
        "item": {
          "id": "53c8a8ad-7425-4472-a279-061502b3a32b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a50f975f-7d84-4c67-b722-aa188998b25a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "922c2a5c-ddee-4d79-82f6-46fbcf31a728",
        "cursor": {
          "ref": "8da3a3f7-b564-4fda-a775-472b0307c205",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1551d2c4-c462-41df-af4e-31f92856a4a6"
        },
        "item": {
          "id": "922c2a5c-ddee-4d79-82f6-46fbcf31a728",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4aa70086-280c-4ccb-8d9e-f42f38b68deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93d676b-ecd4-41a9-bf53-3433dd522bb6",
        "cursor": {
          "ref": "0dc1d6c5-cf51-4fb0-badb-5b26755aadfa",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d554f5e0-243b-4d16-a7bd-841b59c565b3"
        },
        "item": {
          "id": "b93d676b-ecd4-41a9-bf53-3433dd522bb6",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "f9c324c3-db0d-4b2c-aefa-13df6edef3d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "117b8731-ac7f-4451-83ca-347855868e6e",
        "cursor": {
          "ref": "4e434a55-e6d0-4e33-8276-03789260a8ef",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "64e24a0e-da7a-4a76-9c24-9135181d1ff8"
        },
        "item": {
          "id": "117b8731-ac7f-4451-83ca-347855868e6e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6ac6d6e8-2b5d-410e-9fed-d45a0a5a595f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96f6586-c8ec-42c5-98ea-78731200ad76",
        "cursor": {
          "ref": "2c706082-96b6-4bbe-84f6-966c68eae17b",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ef7821d2-c499-46af-939f-821271c5c19c"
        },
        "item": {
          "id": "a96f6586-c8ec-42c5-98ea-78731200ad76",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1d936d3b-43ce-4786-acd0-56f65b766554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec2bba2b-d820-49ec-93de-41fabc622e92",
        "cursor": {
          "ref": "80c5713f-77fc-43dd-a812-cf753ce5fd7e",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4e8569b2-459f-4c3c-8ce0-cb307afc42ab"
        },
        "item": {
          "id": "ec2bba2b-d820-49ec-93de-41fabc622e92",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9d9216ee-0ef0-4fde-9c03-c977da131380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a52ba4-1f77-4eaf-95f9-2cb3ebb11b66",
        "cursor": {
          "ref": "a93aaa5b-0f81-4dfb-bae6-f6566602c240",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ac7dffb3-366b-441d-bf0e-86df2879da77"
        },
        "item": {
          "id": "62a52ba4-1f77-4eaf-95f9-2cb3ebb11b66",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1df25e22-047c-48d1-8686-e0615e14befc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23b116d-ac92-4cdf-81b3-48d3cba8b846",
        "cursor": {
          "ref": "376cfcf1-0226-4be6-872b-17c22fe22bc1",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "34318c76-2765-48ef-b936-12563ceed415"
        },
        "item": {
          "id": "f23b116d-ac92-4cdf-81b3-48d3cba8b846",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ad43f284-6fc0-4fd4-95c0-9b002c463533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c4e91d8-23a9-4ee9-b43d-bbaaad9fcd6c",
        "cursor": {
          "ref": "5754091b-e752-4036-9cc6-b8c85bb6250a",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2035ef54-5078-47c1-a594-3cb34f4e5254"
        },
        "item": {
          "id": "6c4e91d8-23a9-4ee9-b43d-bbaaad9fcd6c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a9d1e84e-96dd-4bf7-8580-a32f8fc30406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0210ad04-bd79-45c3-99fb-9079fd9bf133",
        "cursor": {
          "ref": "d84bba1d-96d1-4a6d-8ade-d34ddaaa8fd6",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "2546b94d-67c9-4fa8-8835-c914d2f0526e"
        },
        "item": {
          "id": "0210ad04-bd79-45c3-99fb-9079fd9bf133",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8cf0f9b1-4908-4ac9-bdbc-38d7e49e6a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf89ffb-db49-4101-a805-6193833bfbb6",
        "cursor": {
          "ref": "5b890037-fd77-4a78-b03d-c83be8fc0b23",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "15a6f85a-6f45-4ebe-8801-f7929923c304"
        },
        "item": {
          "id": "edf89ffb-db49-4101-a805-6193833bfbb6",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "10177c28-3a9e-4628-80d4-4adc0df3bc83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68664c67-4329-407c-9055-c3f67fea33fa",
        "cursor": {
          "ref": "e0f184e7-d143-4187-a011-ff75eb902b2b",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "42edf809-44fa-449e-a5b9-e0081a1fcd1a"
        },
        "item": {
          "id": "68664c67-4329-407c-9055-c3f67fea33fa",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "164b66f6-51b5-4b51-bbc3-2571e6251210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c52178a-4610-4ef5-89c2-6853a23f2d3c",
        "cursor": {
          "ref": "8f338879-06b0-4d41-96c3-6f280f15a857",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "3f9ff86d-6fc8-49ee-975b-aa21b90feae0"
        },
        "item": {
          "id": "9c52178a-4610-4ef5-89c2-6853a23f2d3c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "10b339e2-18a3-45b4-aa42-6b04778b000e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5720c713-6bba-4e09-8f59-7339acf956ec",
        "cursor": {
          "ref": "bebc95cd-bbc3-44ad-acb7-a39387705481",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7c2c627f-dd57-4173-9d3f-9287bf7e250a"
        },
        "item": {
          "id": "5720c713-6bba-4e09-8f59-7339acf956ec",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "5a9c6042-74a9-4b1f-8303-00405de80947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6479d4ac-911a-4b61-bc47-b55f67d22f19",
        "cursor": {
          "ref": "ff053930-d97a-48fb-a3c1-9bacd15b28b5",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "933ead09-f37e-4416-888c-9a41965f72ee"
        },
        "item": {
          "id": "6479d4ac-911a-4b61-bc47-b55f67d22f19",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4a85e29c-d6ee-489d-900b-ee4aabe23d80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1deec2c4-77f4-4891-8f03-8b175b3c00e8",
        "cursor": {
          "ref": "32a26b61-add1-4f16-b6b9-85a3ce17521d",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "6844aa62-bb11-4b6b-87b6-a8c17637ad12"
        },
        "item": {
          "id": "1deec2c4-77f4-4891-8f03-8b175b3c00e8",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "1d48dba8-d540-41c2-988a-a796893bbdbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f0129fd-2486-4493-98d5-f0c016f94aa5",
        "cursor": {
          "ref": "90954f04-c5eb-41d2-9fd5-d90c1561a0d7",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "113f9ed9-32d7-4fb4-abd4-5f0f50b113b0"
        },
        "item": {
          "id": "9f0129fd-2486-4493-98d5-f0c016f94aa5",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "fa468c5f-c6af-4657-bfb7-7a747ef4892c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "259f443c-2c38-488b-8073-14c64c24124a",
        "cursor": {
          "ref": "54a42228-3869-47ae-a26c-fe9823c4c698",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c0b14dc7-2c7f-4414-8922-d66022edfeb7"
        },
        "item": {
          "id": "259f443c-2c38-488b-8073-14c64c24124a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c11ee23e-1599-45ee-bf8e-e355886aafb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6764df9-2da7-4447-998f-de29dfb25cb8",
        "cursor": {
          "ref": "99b0d00b-9115-4ad4-9c36-012edde66c80",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "02b3d253-362e-4470-83c5-d7447c8b377b"
        },
        "item": {
          "id": "f6764df9-2da7-4447-998f-de29dfb25cb8",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e3fe3468-22df-4ff9-b4fd-79da8f43aa4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5533a98e-5356-4d9e-8565-6498e69ffe33",
        "cursor": {
          "ref": "90767c8f-fbca-41bb-b66d-6784c2124264",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c5c66f5c-22d5-4fc4-9219-2fbc5997723b"
        },
        "item": {
          "id": "5533a98e-5356-4d9e-8565-6498e69ffe33",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "370d397e-d587-445c-b21e-0e35d68a94c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be4ef223-225b-40f8-acb4-ddcd1c6a835a",
        "cursor": {
          "ref": "d7323d84-307a-4b74-98cc-7f3c394cdae4",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1bb56dab-dc2a-4032-b620-8bc7a933fb4e"
        },
        "item": {
          "id": "be4ef223-225b-40f8-acb4-ddcd1c6a835a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a963eee8-89de-4a28-a05b-256785eeb1c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a820e287-f775-4b7b-a6cf-76156f0dbdbd",
        "cursor": {
          "ref": "3fbb7851-1899-4a2f-b9ff-3cee0f8a2a63",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "fb58ff47-660b-472e-a2c1-d7d87caeff6d"
        },
        "item": {
          "id": "a820e287-f775-4b7b-a6cf-76156f0dbdbd",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5278f081-2498-4cf7-9559-47f244719c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eccc0c5-44b5-4a3f-a146-f0e33001c83b",
        "cursor": {
          "ref": "7942ff10-ac7a-4264-bcec-e62088944f94",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "61607b66-7531-4a0b-9378-0b29de7525bd"
        },
        "item": {
          "id": "6eccc0c5-44b5-4a3f-a146-f0e33001c83b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c6cbf81c-a7be-4515-ab6b-dc8298b27874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2071a29d-52f0-471a-be05-90f387dd13b4",
        "cursor": {
          "ref": "e8ebd173-e6b9-4342-b5bc-4960905a86f0",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "dcfe5636-cc57-499d-b81d-90455f740c68"
        },
        "item": {
          "id": "2071a29d-52f0-471a-be05-90f387dd13b4",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c55df97a-b33d-464b-baf1-e4de080b7b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54362fee-ad98-4c8a-bb1c-e0f38bfc07c5",
        "cursor": {
          "ref": "311ce2e3-fb7b-47b9-8010-32e5dff4a806",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "71e5a3a9-e829-4ab8-865c-d524d2cee8be"
        },
        "item": {
          "id": "54362fee-ad98-4c8a-bb1c-e0f38bfc07c5",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "eb1e5bea-e365-4396-95f6-ea46a24c95a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3294168b-e4b7-4c46-89ba-263eac14239b",
        "cursor": {
          "ref": "097396c4-8965-41e5-b3a3-860cf01ea983",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e7977010-fcd2-4f17-b56d-aa63e66d6f3a"
        },
        "item": {
          "id": "3294168b-e4b7-4c46-89ba-263eac14239b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ba6a3cc6-cde9-49e5-98d4-82fc54ac2e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "310d96c8-0bb7-4d87-9793-a18c411973b6",
        "cursor": {
          "ref": "8527be09-a377-45fc-988a-9852950227c1",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b21a65fb-82e1-4256-8ada-e7e624346623"
        },
        "item": {
          "id": "310d96c8-0bb7-4d87-9793-a18c411973b6",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "848a9d71-1fbd-4c01-9035-81ebacd9a43e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7432fa2-b2b8-4aba-9b34-b31ed54deeca",
        "cursor": {
          "ref": "1b7d5604-ff0d-49dc-9a4e-22335b0cf1d8",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "4cb7779d-0eed-418e-8f80-efeb5854c3a5"
        },
        "item": {
          "id": "c7432fa2-b2b8-4aba-9b34-b31ed54deeca",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "648d1291-5052-4e40-8aaf-9218a000a251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a1a954-3b6f-43de-a98d-9564eeec0f6f",
        "cursor": {
          "ref": "53851fcc-e3cd-45f7-848c-8378dfa76057",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b2edd89f-c955-4db8-8fc8-5cb56e547f69"
        },
        "item": {
          "id": "c9a1a954-3b6f-43de-a98d-9564eeec0f6f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0cb6143c-d07e-44f2-8d9f-c98d71d0f37b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed3359d-3b37-4322-bb85-07500810379b",
        "cursor": {
          "ref": "aa89be8d-9476-442f-bb9d-5cf2068228f7",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "3b1d7080-1414-4ebc-95ce-062e432f79f5"
        },
        "item": {
          "id": "3ed3359d-3b37-4322-bb85-07500810379b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "44a74935-fba5-46be-84a7-f7066ae185a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aac597c-21eb-44e7-bf1e-6bc7e402dfd1",
        "cursor": {
          "ref": "f84299c0-b90a-47ae-a0c4-0e9a3873f0d6",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d6108e58-fe83-40f5-9f08-2b0d105db169"
        },
        "item": {
          "id": "1aac597c-21eb-44e7-bf1e-6bc7e402dfd1",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "97dd1b66-7bff-4d69-8eba-cce088a83a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "618ad343-5059-4a7c-a7d1-331e20c0171f",
        "cursor": {
          "ref": "02229f1b-ad24-42e0-97b3-adcb3b90453a",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "01e27f93-c4ac-418c-865e-f9a71f6e4af1"
        },
        "item": {
          "id": "618ad343-5059-4a7c-a7d1-331e20c0171f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a272991d-0361-4ee7-9a35-c8ccd75d94c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38683cbe-81fe-493a-9b2a-966e3547495b",
        "cursor": {
          "ref": "41ee6a1f-dd30-45a0-ad3e-dc3261e98887",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "78b97776-278e-4937-aa68-b9d055f2bfb9"
        },
        "item": {
          "id": "38683cbe-81fe-493a-9b2a-966e3547495b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c6c16221-d641-4d3b-9090-8c90a059324d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d657079d-2921-4f7e-a768-9438d0dbc310",
        "cursor": {
          "ref": "90b78ca4-3d97-40ae-b4e1-a8a40d690d44",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e80abd2b-d34e-4c05-b8df-6472d7ddc694"
        },
        "item": {
          "id": "d657079d-2921-4f7e-a768-9438d0dbc310",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ece49a3f-ffee-497f-9da5-c92e48bd37c1",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 78,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd6aca66-8063-42b4-a22d-9246c5708e1a",
        "cursor": {
          "ref": "7ac48521-cb25-4148-8456-4a5f2d02a85a",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "38acc17e-5741-44d3-b6d9-89132974b2b1"
        },
        "item": {
          "id": "fd6aca66-8063-42b4-a22d-9246c5708e1a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "66c4ecdf-ba7e-4372-97f2-192f753bf55c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7844871-6999-4e17-84e7-1bdc0c188a8d",
        "cursor": {
          "ref": "2bcc9022-e48b-4f61-bb95-a22561e2dec6",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a59f250d-00a7-4274-85fc-ccd6654eb339"
        },
        "item": {
          "id": "d7844871-6999-4e17-84e7-1bdc0c188a8d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f3b81b35-3d9a-42ae-9a42-2a4ea2f9c5e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8a7cc6-28e3-425d-b64c-654035298562",
        "cursor": {
          "ref": "d4ef2f8c-eec4-4be8-b9c9-f4baae659608",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "343b21c1-8995-4ca6-9ddd-d4600ebaf77e"
        },
        "item": {
          "id": "dd8a7cc6-28e3-425d-b64c-654035298562",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8745f26c-04e5-4618-840d-3c925385044d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e8ec643-41e8-492a-a634-5866cc21c6d0",
        "cursor": {
          "ref": "f8de5198-f55c-4d3a-9997-3f73424e8919",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a4e57966-76f0-4056-98bd-d4602cec0206"
        },
        "item": {
          "id": "8e8ec643-41e8-492a-a634-5866cc21c6d0",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7a7cf9d7-cbac-47ab-b438-75a9baac661a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a7fa5ac-0147-4d45-833a-f5269b11f453",
        "cursor": {
          "ref": "e0e7336f-19c2-483e-9da4-8f3b8be91245",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "43ca246d-efce-4f8f-87e3-8590fd2f74d3"
        },
        "item": {
          "id": "0a7fa5ac-0147-4d45-833a-f5269b11f453",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "27484d94-8fe0-47b7-908f-9d3c0f6ebc86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ab9069-2d6b-4d5a-8db0-6dbaf23f5928",
        "cursor": {
          "ref": "e460e28e-e9bf-4396-a48f-7a0a398efb41",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0eec8494-43eb-4c60-a1da-2292b47628da"
        },
        "item": {
          "id": "16ab9069-2d6b-4d5a-8db0-6dbaf23f5928",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "77551233-c947-4d9e-a37f-7d8d548336c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e8aec30-3b99-4236-8cdf-2a76df39c18f",
        "cursor": {
          "ref": "15765903-82a2-46bf-8699-e01fed50a4c2",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "378fe4af-41cf-4fff-829b-ecd95f9b7614"
        },
        "item": {
          "id": "7e8aec30-3b99-4236-8cdf-2a76df39c18f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e192969e-30c1-4bfa-8f93-dda4edd58805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7568c9fb-f449-4219-9ead-6c1eb723ac81",
        "cursor": {
          "ref": "e54dd5a2-fb98-4e7c-89fd-c48bb657497d",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "351b6d31-6970-4b99-8363-91cce207d0a3"
        },
        "item": {
          "id": "7568c9fb-f449-4219-9ead-6c1eb723ac81",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d0a960c5-4cf2-467e-9e7e-70e850b2dd01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a1fed7f-c2af-496d-b9e7-7baa3d749579",
        "cursor": {
          "ref": "8c3282e7-0f70-4d52-a3c9-cfc7269e8ad7",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ffdb766d-91e6-440c-892e-ed31e02140ee"
        },
        "item": {
          "id": "7a1fed7f-c2af-496d-b9e7-7baa3d749579",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a486347a-e7ce-4e67-ac51-ecbe55f385c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20457e53-3a66-49cf-9e8c-07980d8895d1",
        "cursor": {
          "ref": "5e6e91a4-b760-44ba-a165-cff943cac342",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b5d3cb8e-0523-4dc4-8639-f1d2a31a2680"
        },
        "item": {
          "id": "20457e53-3a66-49cf-9e8c-07980d8895d1",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f7466896-7f52-43b2-9a45-8e2931303acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b49394a-99cc-44e8-a26e-e441a4fb55dd",
        "cursor": {
          "ref": "660b5d50-ee95-4aee-9afc-c4558938af4b",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "49105710-865f-434e-8781-1ce072c47fe3"
        },
        "item": {
          "id": "3b49394a-99cc-44e8-a26e-e441a4fb55dd",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "813ddc2a-461f-4d21-b94a-d175030faf47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c210ef85-e158-4e92-aed9-06da3d826d07",
        "cursor": {
          "ref": "1c8479ab-e73e-4cc7-8ca8-72f7db4a2c3d",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "fc6dfa1a-69ee-40e5-b384-8c25e3525c7d"
        },
        "item": {
          "id": "c210ef85-e158-4e92-aed9-06da3d826d07",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c9bcf550-480c-4791-adaf-5fa90fad4b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99e2f68-055b-4ad7-9d90-a4d53ad28ed5",
        "cursor": {
          "ref": "7df59d7a-cf8e-4605-b4c6-6b77928e728c",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "49a6e4c5-4abc-4cd5-8f8d-fb82e2bff862"
        },
        "item": {
          "id": "e99e2f68-055b-4ad7-9d90-a4d53ad28ed5",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0e768397-9aa5-44b7-8f64-d78de50c210d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648e992e-7dce-491c-b2f7-ecbf6862b68d",
        "cursor": {
          "ref": "0b7a5f47-85cd-4361-af7c-49f2cf4b9644",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4cd0858f-92bc-42e8-b0e6-5680dc44d502"
        },
        "item": {
          "id": "648e992e-7dce-491c-b2f7-ecbf6862b68d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b89bf90f-aabc-4cb4-a668-a72b0a035ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3515cb13-235d-4c5b-a16f-12818d2ebb63",
        "cursor": {
          "ref": "b5554299-131a-4dd8-9810-37e38187a2a7",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a284eef4-5432-406e-94d9-604302764c29"
        },
        "item": {
          "id": "3515cb13-235d-4c5b-a16f-12818d2ebb63",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5a20a525-5a17-4a3c-9b01-f160cf3cd598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ec8f26-f854-4285-96d9-d544a84995a1",
        "cursor": {
          "ref": "a7bd36fb-8d90-4ace-93f2-aa7cd26aa771",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "0cb1e35d-7987-49e6-b601-d28276be18f7"
        },
        "item": {
          "id": "d7ec8f26-f854-4285-96d9-d544a84995a1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "59b26dfb-995d-4532-9e32-9fe6bd28bd8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9abdce3a-d750-45e8-af38-acbb83d64041",
        "cursor": {
          "ref": "ef971b1e-2c8e-4b25-bb72-52b7a76c5904",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "17aa04e9-7c45-4538-b5e8-42649efdee0d"
        },
        "item": {
          "id": "9abdce3a-d750-45e8-af38-acbb83d64041",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "895e4fbd-5fb3-47fa-8671-061da466803f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a970935-d7a3-4527-a59b-10c3b3f2cb40",
        "cursor": {
          "ref": "960f9d1a-ec0b-4afc-9307-dc77314c81e4",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5420ed0f-3f9e-4a4e-b41f-8e4df6b49155"
        },
        "item": {
          "id": "6a970935-d7a3-4527-a59b-10c3b3f2cb40",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5c35fd59-29c1-4834-bbc4-d43c6267d2b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b317ecc5-6ac0-41f9-a811-c808a040e10e",
        "cursor": {
          "ref": "7473fc64-248f-4db7-a3f1-274699fd4ef8",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "853cd034-32d5-4259-a25b-9694e1eb7a1a"
        },
        "item": {
          "id": "b317ecc5-6ac0-41f9-a811-c808a040e10e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e9af3d04-917e-4824-93b8-53a25b118d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f356da0f-cd4b-4a5c-844a-b45c556e2b16",
        "cursor": {
          "ref": "05ccb3b8-3a97-4cfb-adf5-f2ecb07b1e5a",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c46b0053-0a4b-4651-b4f6-86c2635c19fb"
        },
        "item": {
          "id": "f356da0f-cd4b-4a5c-844a-b45c556e2b16",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "97796e6e-19d3-4662-b0f7-7ce788476e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "551d10a7-0745-4bbe-800c-c16c2e4d1af5",
        "cursor": {
          "ref": "297a4ee2-1ad2-4012-9843-e2f8c285bc09",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f7ed24d8-4107-4ecb-b5cc-ceb61a1fea7e"
        },
        "item": {
          "id": "551d10a7-0745-4bbe-800c-c16c2e4d1af5",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e1453569-0d05-41af-a18a-e02e7c65c8e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9609a042-4b55-43c4-8548-4e51fac1522e",
        "cursor": {
          "ref": "7b3ecf94-d335-4df1-bef4-9202f715f4dc",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d0eb20dd-e2b6-42b0-aa7b-b2c9718d8aba"
        },
        "item": {
          "id": "9609a042-4b55-43c4-8548-4e51fac1522e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c527ea2e-347d-4564-ae87-ad35e2265e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3abf534a-d274-4cc0-ad88-ce89b1aea99f",
        "cursor": {
          "ref": "b4bfb57b-3d32-4fa4-9737-ae713909d21e",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f606e271-3ebd-406b-a37d-91e8dd4f0e3d"
        },
        "item": {
          "id": "3abf534a-d274-4cc0-ad88-ce89b1aea99f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "12e9bf51-6ea6-4a77-98d2-8f322b59d03d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f35b7d-5a4f-491f-9c77-82a3f537cda8",
        "cursor": {
          "ref": "48fd1172-55a7-4ea7-aa64-2ed228a27b6c",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1dd51f27-a496-44b0-b48c-d9ba3a3874ed"
        },
        "item": {
          "id": "53f35b7d-5a4f-491f-9c77-82a3f537cda8",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f4adc5a7-2f7c-4415-a1ef-234308bacd61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc680af-2267-40fb-9c47-a05752a3128b",
        "cursor": {
          "ref": "a53074bb-9003-40b1-b134-46e9f38e1b10",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2dd9be77-2d1b-4c87-9695-ef6e39f6e330"
        },
        "item": {
          "id": "7dc680af-2267-40fb-9c47-a05752a3128b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "53e8c33f-32c5-43b6-a4cd-ffde96c5ea71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539275a2-a6ac-47b4-b144-9320056baf27",
        "cursor": {
          "ref": "4d4cd3d0-4419-4a45-b846-f40014a83492",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "727c8874-ca4c-4e8d-bda4-d9340c3b0b61"
        },
        "item": {
          "id": "539275a2-a6ac-47b4-b144-9320056baf27",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5a1aa448-281e-4061-a32c-9ef0acc6071a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649c83e7-368c-4375-869a-d02da2fc8894",
        "cursor": {
          "ref": "4ae9afda-b2a0-4530-acc3-8439708c2cac",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "95dc9964-ed9d-4598-90ff-12b96ecee5de"
        },
        "item": {
          "id": "649c83e7-368c-4375-869a-d02da2fc8894",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "5c3d7e19-b28f-4863-9163-dbfa65083387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3fdd497-d69a-4098-8104-ea869faba057",
        "cursor": {
          "ref": "77270b40-d736-42f5-a6cb-aa18cfe88ffe",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "dd09aafa-9ae0-4ae1-9902-05956d38438c"
        },
        "item": {
          "id": "b3fdd497-d69a-4098-8104-ea869faba057",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "15251c2a-44b1-4ece-bf6b-e3a03d81652a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c494d6cd-b287-4065-a6f2-3a02d0ac12f6",
        "cursor": {
          "ref": "eb050a48-5dcf-4024-bd7c-4bb708136b51",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "10e05626-afb8-42e2-8da6-3d79efd062dd"
        },
        "item": {
          "id": "c494d6cd-b287-4065-a6f2-3a02d0ac12f6",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "7ac01e29-027a-44c5-9705-5743c0a69aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a2a35b-646e-4991-ba4c-c5ccb51cf51e",
        "cursor": {
          "ref": "9b0011e2-207b-4ca4-b51b-e4faa306f7fc",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f24e2929-237c-415e-8ba9-5b36c9149532"
        },
        "item": {
          "id": "b8a2a35b-646e-4991-ba4c-c5ccb51cf51e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "cd3249a3-41ce-4746-ab57-2b79b6f75adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ae0bdc-bcfc-4823-b4fd-9b0943152726",
        "cursor": {
          "ref": "d4f5402b-dbfd-440a-8617-c0bb7ddede13",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "30ac6701-3098-4ccd-8bae-cb94542a2e7c"
        },
        "item": {
          "id": "d9ae0bdc-bcfc-4823-b4fd-9b0943152726",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e7b88a61-794e-49f1-b47a-00a4d22b5b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60ec793-8c16-45ad-851a-2264d627f17b",
        "cursor": {
          "ref": "e96ab5ad-0058-4798-bc50-b7f4fb33b27b",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "1760ce70-fd9a-412d-9c0f-ce68b2d8f30a"
        },
        "item": {
          "id": "f60ec793-8c16-45ad-851a-2264d627f17b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3c728e3a-04a8-4561-95f8-aa6041978531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce5118e-af40-464d-b2c0-b924d838bc8a",
        "cursor": {
          "ref": "1226d38e-cec0-4f54-96a1-ae915c605a52",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "521babe0-64f1-4ce4-89b1-637da20afc14"
        },
        "item": {
          "id": "9ce5118e-af40-464d-b2c0-b924d838bc8a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a9e49650-bfaa-40ce-aaf0-dd355a2f7872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d00fa58-e810-418f-b1b0-4ac62a37d36b",
        "cursor": {
          "ref": "5283f1cd-5cb6-4ae8-8a50-a8afd6edebc1",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "13396937-ed3a-4073-bb42-60b248a06b73"
        },
        "item": {
          "id": "0d00fa58-e810-418f-b1b0-4ac62a37d36b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "bc533be1-503d-49c7-a521-2a16fef217b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dadce66-8a69-431e-9003-f752f4b710df",
        "cursor": {
          "ref": "d22e793f-4e55-4b4d-8820-004c0b3768c7",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "9450b115-7f54-4ae0-b988-b22c945c7514"
        },
        "item": {
          "id": "6dadce66-8a69-431e-9003-f752f4b710df",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "595287c2-6f74-4f57-9efd-4d71f6fba6bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad5fcb9-8b23-4cb1-aee4-ad661740d502",
        "cursor": {
          "ref": "e5f578fe-61f9-49be-9d20-cac5b2bd7a49",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "11834945-8ffa-4201-866c-b28764f8781b"
        },
        "item": {
          "id": "9ad5fcb9-8b23-4cb1-aee4-ad661740d502",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ec0bfc5f-cb45-4a76-a6d4-6466665b1dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9aba2e9-2636-4ad7-adb4-95fe731609e3",
        "cursor": {
          "ref": "307e4da5-bab5-4b1d-8d73-6a4da705ac16",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "fa57e9ae-3ade-49bd-ac7c-2b0bf07b6499"
        },
        "item": {
          "id": "c9aba2e9-2636-4ad7-adb4-95fe731609e3",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "02071496-8d6d-416b-a10e-9df6d48d3acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3114936a-62bf-45e9-831c-db520edf5f17",
        "cursor": {
          "ref": "928b4027-8ea4-4b05-a6a6-64a950a8b7b5",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "46f7f73c-4a5b-4012-bfae-fee27407e658"
        },
        "item": {
          "id": "3114936a-62bf-45e9-831c-db520edf5f17",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "1882948a-1940-4d94-aac2-532069d6d5b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac76ccc-09a1-4ebe-aa79-a5805fdd7588",
        "cursor": {
          "ref": "61a0a027-1832-4101-a0df-204a30139634",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f8a3d6df-d1b6-46f8-bc30-0701ae93df58"
        },
        "item": {
          "id": "5ac76ccc-09a1-4ebe-aa79-a5805fdd7588",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3de413bb-6657-4c0d-ab4a-61ba698e5377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b6ec5f-14fc-4874-86d0-0bcf57049301",
        "cursor": {
          "ref": "51142b18-da62-4690-baaf-146dc6a8535f",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6648520f-65b7-43d9-90c0-1b1959b5c7ae"
        },
        "item": {
          "id": "79b6ec5f-14fc-4874-86d0-0bcf57049301",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "84e4d5d2-f2e9-4bd7-9b14-41f2db96065b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a7d5da-8ca0-40f5-aca2-640c9b8d64d1",
        "cursor": {
          "ref": "20cfdea4-972b-4e11-8346-0edd2cfa4904",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b0356de6-d1ff-47aa-be96-0f18565cfa50"
        },
        "item": {
          "id": "a2a7d5da-8ca0-40f5-aca2-640c9b8d64d1",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "67843dfc-c39a-4fdf-975d-17d9981e3ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5b8def-b222-4ca7-b9eb-6b0ea76c66c1",
        "cursor": {
          "ref": "381bb8be-49a8-4c03-a26d-180e7d34026f",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7a43f217-6e66-46e2-a769-bd569246c55e"
        },
        "item": {
          "id": "6f5b8def-b222-4ca7-b9eb-6b0ea76c66c1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6d079481-8585-49e5-8ed8-ad203859aef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c0cc08-1e90-43ca-a9c7-76cfea6c513f",
        "cursor": {
          "ref": "c349ebab-5a2a-45fe-898f-1778bf88dc03",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "47b63287-168d-44b4-bc70-47ebedd620ab"
        },
        "item": {
          "id": "82c0cc08-1e90-43ca-a9c7-76cfea6c513f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3fa7fc75-cd4a-4be0-9a4c-53238eaea4af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0411d0df-a77a-44c4-9f92-bb8b521f8a1b",
        "cursor": {
          "ref": "e015976a-2f10-445c-ae1a-912c50409e43",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e5bdf6ae-e62e-4581-82af-0e500b09e142"
        },
        "item": {
          "id": "0411d0df-a77a-44c4-9f92-bb8b521f8a1b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "02520fbb-d004-479c-ba8e-4e9a4cf1b5dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84392345-86b7-4f42-8f25-b3202172cb28",
        "cursor": {
          "ref": "181b157a-1822-4fb1-b08d-2739235fce8b",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f10c88f8-4db7-412a-a9a3-343101971a72"
        },
        "item": {
          "id": "84392345-86b7-4f42-8f25-b3202172cb28",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "bfc5bc79-c429-4060-bbdc-2fe7168c274c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df08ce1-1ba3-413e-8c60-c871bf8ca201",
        "cursor": {
          "ref": "eaf14ded-78cc-4cb5-8cfe-0fc61a6215d9",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "84b0db99-fe61-488e-b0eb-ec11288453a9"
        },
        "item": {
          "id": "5df08ce1-1ba3-413e-8c60-c871bf8ca201",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "498dfd35-ddb9-4a13-ba28-031e72d9b96d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a89225fa-accf-4bde-8df7-7de2bb4de0f1",
        "cursor": {
          "ref": "9d9f4fb4-0182-41cb-9712-d6028958a660",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "34633939-bfde-4713-ba39-e58d56628df6"
        },
        "item": {
          "id": "a89225fa-accf-4bde-8df7-7de2bb4de0f1",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5ceba244-9698-484d-8bfe-0d346621af25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4edb4901-eb8f-4c61-b9e6-7d9aa7bb04af",
        "cursor": {
          "ref": "e6b95607-cef8-4dab-945c-e763529c9cb9",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4d138781-2523-43a7-b5aa-635becd6e7af"
        },
        "item": {
          "id": "4edb4901-eb8f-4c61-b9e6-7d9aa7bb04af",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9badb588-fcc0-4b1f-a2df-4361485d6321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "679cd083-6137-48d2-baf8-307a94c1cd59",
        "cursor": {
          "ref": "67ec2a11-8323-4fb1-875d-073f40496133",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "1ea3c2a1-b727-4e59-8c7a-6f83328c8974"
        },
        "item": {
          "id": "679cd083-6137-48d2-baf8-307a94c1cd59",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b8a5e487-101d-4c7f-a052-71ab8e4eb76e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80bade46-de5c-4e62-b472-c2779639f2cd",
        "cursor": {
          "ref": "ed04d3f2-38de-4d1d-ab9f-4eb965d2f6db",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "8f52892b-a9ed-4dfa-93f9-ebffc622a61e"
        },
        "item": {
          "id": "80bade46-de5c-4e62-b472-c2779639f2cd",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6a581dcf-8353-4f54-a8a2-4b941f64beba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12be2455-8bbb-4b52-bdf6-cc5f29a3221c",
        "cursor": {
          "ref": "9a0df82b-f293-49e9-89e8-d9f6c9ae708e",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "7efa9ee1-185b-4211-aa28-0e8cc907302e"
        },
        "item": {
          "id": "12be2455-8bbb-4b52-bdf6-cc5f29a3221c",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "4bd7ef29-01b6-42fc-bf36-8eda6da0f29c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "9477bf40-54a2-436d-8cc2-473b4b07ac71",
        "cursor": {
          "ref": "6c2f3081-f902-4e2f-9012-28a514acb17b",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "cb155157-9d39-441c-9091-4ac25c78c358"
        },
        "item": {
          "id": "9477bf40-54a2-436d-8cc2-473b4b07ac71",
          "name": "credentials_issue"
        },
        "response": {
          "id": "bb2ab55f-5587-481c-9c4a-6b5f7abe2a5a",
          "status": "Created",
          "code": 201,
          "responseTime": 9933,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dcb32ae-ec38-4c23-8c7c-33afc28e1f5d",
        "cursor": {
          "ref": "f5081129-1f39-4a3d-aa2f-b81a0e1ffaf7",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "60317ad3-f5e6-48f9-ab58-e11f2aa14b0d"
        },
        "item": {
          "id": "6dcb32ae-ec38-4c23-8c7c-33afc28e1f5d",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ee01c320-9dc3-48be-a3a0-043cd53fb083",
          "status": "Created",
          "code": 201,
          "responseTime": 9646,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5f9981-f7c2-4303-87fd-ce25315d1b4d",
        "cursor": {
          "ref": "c1773689-9b7c-49fc-a3f8-0af6f513859d",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "fc20bab6-0a0f-427d-b4ff-f4db30d15a45"
        },
        "item": {
          "id": "4c5f9981-f7c2-4303-87fd-ce25315d1b4d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "543c8935-8de8-477a-a527-da3b5eed8801",
          "status": "Created",
          "code": 201,
          "responseTime": 9387,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "aedb9e13-a8c0-4085-9190-afe20149f5b4",
        "cursor": {
          "ref": "4f2ba3ea-5ded-423f-9154-0f547b1d26df",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ceee69e8-6c4d-42d3-b52d-82a568e6de09"
        },
        "item": {
          "id": "aedb9e13-a8c0-4085-9190-afe20149f5b4",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e9d602b8-cc88-45fb-9c37-be6769a82737",
          "status": "Created",
          "code": 201,
          "responseTime": 9309,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1c407b-0f29-4127-a9fa-d1d96a64f773",
        "cursor": {
          "ref": "1fe0b3b6-27e2-40fe-8fb0-392355f51257",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "fdf4f6c4-55b9-4115-95e3-48d068a0389e"
        },
        "item": {
          "id": "da1c407b-0f29-4127-a9fa-d1d96a64f773",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1a7bc197-47f3-4760-b071-838ab0a715e8",
          "status": "Created",
          "code": 201,
          "responseTime": 9403,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-07-05T00:39:30Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-07-05T00:39:30Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "efb4637e-d972-41f9-81fb-18fa88354c46",
        "cursor": {
          "ref": "96a8efbf-71f2-4788-ba05-871c2190ac4a",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e3f52446-38d8-4fba-b7c7-4baea054b225"
        },
        "item": {
          "id": "efb4637e-d972-41f9-81fb-18fa88354c46",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "1e3107f1-949b-4feb-bd7c-7192b6500293",
          "status": "Created",
          "code": 201,
          "responseTime": 9154,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4257f618-5b64-48ee-9f2f-beb8a3a401ac",
        "cursor": {
          "ref": "db89e7b6-193d-4675-b00b-304062a87c83",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "45df1ee8-7113-4286-8293-5e2fa91d46b8"
        },
        "item": {
          "id": "4257f618-5b64-48ee-9f2f-beb8a3a401ac",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a4c38d7a-603a-4102-adc6-07af2cfc1d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b5055d-6fbb-4341-89ff-b71f1db7c2cb",
        "cursor": {
          "ref": "c2914e2c-a22e-4f61-99b3-663f0292f40b",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "bd78e57e-5d96-457e-a4ac-355255bf3e3a"
        },
        "item": {
          "id": "79b5055d-6fbb-4341-89ff-b71f1db7c2cb",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c30d8a10-8c6e-4be5-841b-971c3c020403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3632fb1f-c598-42bc-9f68-6526f885d9b7",
        "cursor": {
          "ref": "065cb8d6-0a24-42e5-b040-b95901c6aea8",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "1b7ca862-bdd6-4e19-93e9-1f003034791b"
        },
        "item": {
          "id": "3632fb1f-c598-42bc-9f68-6526f885d9b7",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f184d380-bab2-451e-ac63-d6670666526a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cdc7eb5-0d5a-496c-b2ec-3ebc435320d9",
        "cursor": {
          "ref": "2243756c-d778-4ae2-8b6c-512638662bfd",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "cf2daf40-b38c-457f-a258-50cacdb8b37b"
        },
        "item": {
          "id": "6cdc7eb5-0d5a-496c-b2ec-3ebc435320d9",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "cec96620-b50d-4e7f-b630-515f8744f743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75484230-997d-4a3f-9729-63ed3d671698",
        "cursor": {
          "ref": "6b929c6b-4af5-4258-bc3b-c634830c00f1",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "54c201f7-7020-4df1-bf0e-57851293767f"
        },
        "item": {
          "id": "75484230-997d-4a3f-9729-63ed3d671698",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d88e0732-f25c-4723-ae18-e098246af2af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a72f2a-ffe3-4862-99fe-d8ce805a07e5",
        "cursor": {
          "ref": "38d636c8-e05a-499e-ac4e-d30211af7cc5",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "576a6350-3445-4acf-9a3c-5cf06a5a36d1"
        },
        "item": {
          "id": "66a72f2a-ffe3-4862-99fe-d8ce805a07e5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "77ef07a8-d336-4889-bb12-168c721083bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c84dcf0-84c0-4a17-bef1-caccd83f45a3",
        "cursor": {
          "ref": "4b769ce5-1635-4146-9864-88d608697b76",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "67e2e705-ff41-4aaf-8a45-c85aadc6d4d8"
        },
        "item": {
          "id": "5c84dcf0-84c0-4a17-bef1-caccd83f45a3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "01bfd027-b47a-4f98-b261-7fddc2b467fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d180ed6a-67e3-4d4d-8f4f-6f236470e02d",
        "cursor": {
          "ref": "fe0ba2a7-131a-4006-b8db-3d0adcfee3ec",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "83cf5f09-856a-4d72-b9d4-1a4a1d922e48"
        },
        "item": {
          "id": "d180ed6a-67e3-4d4d-8f4f-6f236470e02d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5c365b3f-223b-4c8d-b35a-42876ef6b105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed597445-eff7-4151-9a2b-228a54bae088",
        "cursor": {
          "ref": "09b81848-8aa3-4989-bdf4-70b2fe75b8ba",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8770b378-a70c-46a4-b866-16e6484b968f"
        },
        "item": {
          "id": "ed597445-eff7-4151-9a2b-228a54bae088",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c98346cc-1913-4c76-9291-208c0facd6b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db7076b3-b353-4869-9fa2-7e8002802658",
        "cursor": {
          "ref": "28d33159-8fca-48a9-9236-63059cb8a379",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0a5c07fc-019f-4048-945a-2655c251a5ab"
        },
        "item": {
          "id": "db7076b3-b353-4869-9fa2-7e8002802658",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "116f4a36-93a3-40c1-8e83-ad182e382a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb643a49-c980-45e4-a9fc-864becc2faae",
        "cursor": {
          "ref": "4ea532b0-18e3-4409-a0e2-e09f21537e1e",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d2ec2b13-ff6a-4801-8ca2-220c27fdde76"
        },
        "item": {
          "id": "fb643a49-c980-45e4-a9fc-864becc2faae",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0543d6a5-a916-47e6-a672-e1677154b563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ad9796-e549-4331-ba2f-d3f57f140d7c",
        "cursor": {
          "ref": "4629cc1b-bbe3-4eb3-b5e2-7e31d765384e",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e3544271-9fd6-4b88-9284-601789daaa2f"
        },
        "item": {
          "id": "e0ad9796-e549-4331-ba2f-d3f57f140d7c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "738bc978-9cbc-4610-9605-e53a95015207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0599ef13-ba8a-47b2-ad64-bcd390267476",
        "cursor": {
          "ref": "d0b32efe-2ab3-40be-866b-361ff8b9630a",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "83613c1b-4907-4c03-956e-17a1917d3ec0"
        },
        "item": {
          "id": "0599ef13-ba8a-47b2-ad64-bcd390267476",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1ae88e7c-ed35-422d-b8a6-14b17787287c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff68477-34dc-43ba-8014-7278cb745c90",
        "cursor": {
          "ref": "7de88cad-9c0d-4675-a546-7198ad1fc229",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ee5e8571-2690-4d23-87ef-2cc78c2fde31"
        },
        "item": {
          "id": "fff68477-34dc-43ba-8014-7278cb745c90",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ca47e4fc-1e23-4afe-9df7-6796ab044a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3228f8ab-354c-4016-a435-ddd104114b13",
        "cursor": {
          "ref": "28064e78-bd7e-451a-a514-ad347b3d1b52",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e857de11-5020-4301-9b72-a0d2e2ced160"
        },
        "item": {
          "id": "3228f8ab-354c-4016-a435-ddd104114b13",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "579721ab-9c5f-44a9-96e7-95843f554387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9717b161-aafd-4b19-ad49-76da63e3b7b7",
        "cursor": {
          "ref": "0c39117f-2a0f-4f2a-85f5-2dd5ada34d05",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "a693f30e-1a4e-4253-9b33-2552718ce245"
        },
        "item": {
          "id": "9717b161-aafd-4b19-ad49-76da63e3b7b7",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6f235c42-c73e-4801-83da-517f1aa3fb9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67314dde-0a24-47f4-a20d-624972da5c36",
        "cursor": {
          "ref": "c9e72d56-19a2-4434-8e92-1320ef6e683d",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "413eddaa-af1f-4d62-820e-d18b7801fdd7"
        },
        "item": {
          "id": "67314dde-0a24-47f4-a20d-624972da5c36",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9584857e-050b-4d8b-98ea-3e8974cb3a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566a36ef-ef04-4fb2-b036-284a7d6e8484",
        "cursor": {
          "ref": "a81e3db1-b118-44bd-80b4-fdbbe21a5097",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f234b113-bad6-4ab9-b785-e9a61cbf7661"
        },
        "item": {
          "id": "566a36ef-ef04-4fb2-b036-284a7d6e8484",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f864a8cf-e493-497b-a938-f8b4dee7aa27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d611212-9929-453b-96c0-02f9a2f73aae",
        "cursor": {
          "ref": "2875fbc1-50af-41ba-b6f3-a3e6cf6a08cf",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b30c9371-4dc2-4d96-9007-5f9f1b513fa8"
        },
        "item": {
          "id": "4d611212-9929-453b-96c0-02f9a2f73aae",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a8f45f85-3bbd-4efe-ba57-1cc246764e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1053808c-ec3f-41a8-a7e5-e2939d36ebbd",
        "cursor": {
          "ref": "6cf8d65f-eca2-4fc2-b5c5-4c5c3c31ea66",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5ccf7fc5-17e8-4c2e-b7f1-c02ece26fdea"
        },
        "item": {
          "id": "1053808c-ec3f-41a8-a7e5-e2939d36ebbd",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b6401d50-1c74-4737-8edc-e205c7029d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71820bf1-c05e-41f9-92b9-b8d8f249b255",
        "cursor": {
          "ref": "4ac8eda1-288d-4e01-8f71-61686f9f78c6",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b7932f70-acd2-44a5-ad18-3d28db82979f"
        },
        "item": {
          "id": "71820bf1-c05e-41f9-92b9-b8d8f249b255",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "478e48eb-8d73-44db-a148-4bb2bf5b24b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d58191-462d-42aa-b071-a2460233bdcb",
        "cursor": {
          "ref": "dc99305d-63c2-4c60-96b8-61f2e9afc39a",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "9a2e35a5-d29b-4e51-a16a-a373552578ae"
        },
        "item": {
          "id": "94d58191-462d-42aa-b071-a2460233bdcb",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9eab90cc-9fa2-4ba1-bacb-efbcfb2d8104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e23348e-d065-4161-8ac9-3911477ba9ca",
        "cursor": {
          "ref": "2dc6d715-b2ae-4691-ba09-2af63c9c96f7",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "9e38d653-a002-435e-b071-387d7a70c212"
        },
        "item": {
          "id": "6e23348e-d065-4161-8ac9-3911477ba9ca",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "92e39eb7-344d-4ce9-a0db-92d1fc07d286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57752d85-ccf5-4418-a5d9-edbf4813b0a1",
        "cursor": {
          "ref": "20e34557-8011-45bb-b651-c83a0c3901d3",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9f6e675e-2b85-452d-a998-1a782fcfeff1"
        },
        "item": {
          "id": "57752d85-ccf5-4418-a5d9-edbf4813b0a1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c7bd5c50-c8a2-49d0-9cbb-6fbd2dbf546f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72a4bfc-2379-4564-ab66-c77cd4541a97",
        "cursor": {
          "ref": "1e54ba97-f10a-4f2a-8848-9c3ec6f2bcd8",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "8cce85de-ed62-4e31-adb7-b82e7f5de63f"
        },
        "item": {
          "id": "b72a4bfc-2379-4564-ab66-c77cd4541a97",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ab435354-efad-4acc-b6ec-78f1a3200ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c4aa7a-ea54-4f00-99ec-dc7c0de7163a",
        "cursor": {
          "ref": "7122c3f1-8824-4351-b974-ee287bb04537",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4f2f901e-070f-423e-9a3e-61704ca170dc"
        },
        "item": {
          "id": "89c4aa7a-ea54-4f00-99ec-dc7c0de7163a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a69adb8b-c18d-4ee2-ade0-8df2a61502b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588a9b4a-c587-4a82-89f1-b14c73f15c24",
        "cursor": {
          "ref": "bf6edfc4-f83d-48b3-8b5b-b72d8d75384c",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "fc93c4ab-8235-4ed3-bb46-50de948cde7c"
        },
        "item": {
          "id": "588a9b4a-c587-4a82-89f1-b14c73f15c24",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "52463fc4-67e6-4cbd-b59c-3395770f6b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0981cf2f-5941-42d4-9fe3-4bd34ceae3e8",
        "cursor": {
          "ref": "d2280b7e-ce99-4064-901f-e378fb85dc73",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f42df1d2-bb02-4cfb-a708-1e23e4fea41d"
        },
        "item": {
          "id": "0981cf2f-5941-42d4-9fe3-4bd34ceae3e8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6b5fb56f-35a4-4bfd-88b7-6434279a137d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d246d60-516e-4a49-8765-8feb096093d0",
        "cursor": {
          "ref": "396e936c-343c-4f9a-9236-231257a5bf34",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2b033ff2-3007-4287-928a-f9c73ee7bcd7"
        },
        "item": {
          "id": "9d246d60-516e-4a49-8765-8feb096093d0",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6f67e29e-5269-4787-b4ba-b6973770c99c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "589d81b1-5041-4c7f-b457-20412492b3bb",
        "cursor": {
          "ref": "5be0226a-42ff-4d15-8611-0fe784975596",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "89fb4a3a-9095-4f9e-bcee-9f39e10eb7cc"
        },
        "item": {
          "id": "589d81b1-5041-4c7f-b457-20412492b3bb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ac59b8b0-ba37-466e-a347-848f8cdc1332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ffbcfe2-3576-4c74-8dfd-93a7392af4c0",
        "cursor": {
          "ref": "93e904ec-eac5-4d92-8a6c-fa2707dde9c6",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "97a033fe-c1d3-443b-8389-a594e04d5c14"
        },
        "item": {
          "id": "4ffbcfe2-3576-4c74-8dfd-93a7392af4c0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b350ae77-a3c5-4e8e-a46c-9805db1ba923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a82b62b-c13d-4c30-9e18-0ae13652b719",
        "cursor": {
          "ref": "216bb5b0-b73b-42c1-9659-09f8114f4f69",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f210ce6d-6b80-4487-82ef-0b2b8d68158b"
        },
        "item": {
          "id": "9a82b62b-c13d-4c30-9e18-0ae13652b719",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "cdcd158c-c6e4-457b-9d3e-d8ae1d102f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40126c4a-96a0-4a7d-810d-a0eb99958f64",
        "cursor": {
          "ref": "812b8c89-cbbc-4a53-8861-d18962e5b82d",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "fc85c763-ffb9-4cd0-a872-84533ee42328"
        },
        "item": {
          "id": "40126c4a-96a0-4a7d-810d-a0eb99958f64",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "1e2c11b0-e349-4b37-b03c-3088c06d58e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af80628-2f14-4d3b-92a7-fd1429868cab",
        "cursor": {
          "ref": "1b260e6d-1bb1-42c7-ba9c-2e06b8f131a6",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "6a7322a8-3b89-479c-bfe0-84eaf87e4863"
        },
        "item": {
          "id": "4af80628-2f14-4d3b-92a7-fd1429868cab",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "bdd409c4-cf96-4ceb-b66a-de79e11c11f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de80027-c378-44ed-a662-86f881b299e5",
        "cursor": {
          "ref": "da87ef55-5014-446b-b46e-e35f45d1f24a",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a42d342f-c245-42f4-ae11-35ab8b700e84"
        },
        "item": {
          "id": "3de80027-c378-44ed-a662-86f881b299e5",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "897818e7-94c2-458a-8125-b562befc2598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b71e85-706b-45bc-b248-1533fcc324cd",
        "cursor": {
          "ref": "fb757411-aafa-47ad-a6a6-f20f4ee35b15",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4f5e7264-2eca-4fea-8760-d47b0e48fa13"
        },
        "item": {
          "id": "84b71e85-706b-45bc-b248-1533fcc324cd",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f4493477-5784-4c32-ab47-01c93cb29d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4888a766-e68f-4a25-a256-7d9adb62e586",
        "cursor": {
          "ref": "0a8a1b0b-a566-40a5-b0f3-c69cecbb9945",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b5932042-eb8b-4ce7-bd52-1b56d76b15a5"
        },
        "item": {
          "id": "4888a766-e68f-4a25-a256-7d9adb62e586",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "7168b184-f2d9-4899-a2fb-15801a66fca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e8c857-b69b-41b7-b0fe-9ed94ee5de60",
        "cursor": {
          "ref": "33f37a7b-6d43-4710-be21-c093523a3ffb",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6b002a9a-80f8-42bd-a9d3-26fbea6e5b20"
        },
        "item": {
          "id": "a3e8c857-b69b-41b7-b0fe-9ed94ee5de60",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "daaac2dc-2d58-4b50-9631-e68b178ea392",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c3100cc-57af-4c3b-8006-350c8ef16f8b",
        "cursor": {
          "ref": "7fdfe26b-20ab-458f-acf2-013e264bced3",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "99ecb782-f376-43b0-a3cb-0b949bbd9ed8"
        },
        "item": {
          "id": "6c3100cc-57af-4c3b-8006-350c8ef16f8b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "118be44e-d7e6-4f34-bcb4-9498c02385a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bccb80c-3814-4024-898f-198a674a6a3d",
        "cursor": {
          "ref": "0105adec-d582-4973-abe9-fc9ed9907f78",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "26493d1e-f629-4bc3-bf46-246facd73a93"
        },
        "item": {
          "id": "5bccb80c-3814-4024-898f-198a674a6a3d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4de7576e-2479-4a86-a723-dec2d820bcbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da4f23c2-2836-423d-8545-7b703265e9b2",
        "cursor": {
          "ref": "4ba4e511-f98b-4ff6-a1d9-fc85b8c3152d",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3af47133-20ff-460f-b70c-8fec022615a5"
        },
        "item": {
          "id": "da4f23c2-2836-423d-8545-7b703265e9b2",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "5542969c-b05b-4fc2-99b5-ad4c5cc50928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38496153-1104-403c-8506-0bcc67d51db4",
        "cursor": {
          "ref": "11d27551-1b15-48bc-a25b-93b5bba54750",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "67ef2f02-d619-4085-8284-b08e5741ec50"
        },
        "item": {
          "id": "38496153-1104-403c-8506-0bcc67d51db4",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5a0cef3f-bcd4-4fa6-bcb9-df93dd0948b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c13d6479-e516-4058-89db-a900cb0dc9c8",
        "cursor": {
          "ref": "92056c0d-1395-4868-b126-afaa1eec07db",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "3919b6b2-0dd0-4bdb-98e4-c935ea6ce90e"
        },
        "item": {
          "id": "c13d6479-e516-4058-89db-a900cb0dc9c8",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2d20502b-daa3-419a-8cb2-7d3c6bcdc507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f35a0a-941e-402f-844d-10fb4530a896",
        "cursor": {
          "ref": "631fcc24-741e-46c2-aa6e-1cf63a73a16e",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c4571abd-87e0-40db-9cbd-97a623a018a0"
        },
        "item": {
          "id": "c5f35a0a-941e-402f-844d-10fb4530a896",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "18dcda08-23ee-4b64-a842-c8fd46f6ea01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4557bbbb-1eb4-4204-b61c-29fa282dff68",
        "cursor": {
          "ref": "f014897c-5d83-4b2b-9e96-4a0a2e679beb",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "1685f6fc-26a3-4567-84c8-4a455da4273f"
        },
        "item": {
          "id": "4557bbbb-1eb4-4204-b61c-29fa282dff68",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f328831c-8c12-4eb2-8ef4-43806e0c8661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e33391-a962-4a84-95a7-f375cd4f9401",
        "cursor": {
          "ref": "4a880022-d655-4b13-bb2e-451297263ebb",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7210ce42-f532-494a-8bc6-d6dbd5e3c591"
        },
        "item": {
          "id": "59e33391-a962-4a84-95a7-f375cd4f9401",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "41f28abf-37d5-464e-90e2-00ab0ea23300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77fabbe8-6628-4950-9848-d8194a01305a",
        "cursor": {
          "ref": "05de93ac-3fa3-47f9-abe2-4fdac901df07",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "17f6ec72-0951-432c-b079-c4a24245d5c5"
        },
        "item": {
          "id": "77fabbe8-6628-4950-9848-d8194a01305a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e5dbb87b-06a9-4b5f-a9b8-c593ff16d989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d8380d-b1bb-4523-8594-5ff9a40d37cd",
        "cursor": {
          "ref": "2aca20ce-dc11-4644-87fd-b449140dfcc2",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "684c31b9-cecc-458a-98b9-3e69cbfbd9bc"
        },
        "item": {
          "id": "f6d8380d-b1bb-4523-8594-5ff9a40d37cd",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ccbc5e36-2197-4ed5-979a-ca1cf61aaefd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c583a3-22ae-4dfe-b58b-97c9c88072a6",
        "cursor": {
          "ref": "3d61c144-add5-4095-a89b-9b90aa250cf9",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "80c3d654-ecce-4595-bce2-dc273cc18433"
        },
        "item": {
          "id": "06c583a3-22ae-4dfe-b58b-97c9c88072a6",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "be02dd3d-5856-4b61-b75c-16edab3aba48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3826c971-256f-4bea-b66b-860a797f6434",
        "cursor": {
          "ref": "5337476b-7d55-4651-926d-2be83cb6066b",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "797c99d9-9db0-4c94-8df1-e7ef64ba92dd"
        },
        "item": {
          "id": "3826c971-256f-4bea-b66b-860a797f6434",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d0f7afe3-e2a8-4442-af75-aeb1cc6565bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f345738-3a34-42ba-a2b0-693f3cf6164a",
        "cursor": {
          "ref": "0c4279af-41d5-4356-984e-65291fefb557",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e1f0a50b-aa2e-4954-aa8c-bb29c03f19d3"
        },
        "item": {
          "id": "7f345738-3a34-42ba-a2b0-693f3cf6164a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "56201a8b-758e-4e10-82fa-b50cb282819b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c909f70-66a8-4680-8c90-fc99d0d25201",
        "cursor": {
          "ref": "056bb2f0-7ede-438d-b4e1-ed87fdca163d",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "1d82d31e-f044-4cae-822f-8e70b9c6ee32"
        },
        "item": {
          "id": "0c909f70-66a8-4680-8c90-fc99d0d25201",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "92ca0009-ce4f-4942-8eaa-9d1e1a85b5ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "277c9adc-72f8-46ee-bfc8-b617fa56088c",
        "cursor": {
          "ref": "55107e9c-03de-4d5b-bc07-7121bac1cae9",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "35ccc3e5-f834-4ee3-b365-c5faf8bdad14"
        },
        "item": {
          "id": "277c9adc-72f8-46ee-bfc8-b617fa56088c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3a80298f-c7f0-46e4-9abf-cff52ed1e945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94fb0e14-f12c-47ff-9eac-a277a3c85d92",
        "cursor": {
          "ref": "5a593be4-bfc3-451b-8791-ba3a54a9a867",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "aa1d325a-548e-43a2-9164-6879d8bc39ba"
        },
        "item": {
          "id": "94fb0e14-f12c-47ff-9eac-a277a3c85d92",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "784bdc7b-e3ab-4609-9bbd-d82c93caed8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a7b3bc-2a6b-45ee-a245-0a7133f3fba1",
        "cursor": {
          "ref": "c2e3eac6-3a88-4529-b966-f0ca4e1da569",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "cb93bb86-8d25-4ac4-af44-f0281589322e"
        },
        "item": {
          "id": "d4a7b3bc-2a6b-45ee-a245-0a7133f3fba1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "23c75089-8813-48ce-91e6-588c82c28ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "818a492a-0a1e-46f4-a6d0-570972d0120b",
        "cursor": {
          "ref": "4dced51f-0ff9-429c-89b2-fdf9571e2474",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "57e682f3-f60c-491e-bbd2-558b29d7cb4f"
        },
        "item": {
          "id": "818a492a-0a1e-46f4-a6d0-570972d0120b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b7e095e1-e1a4-47df-815b-7bc2194b5819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d35f797b-63c4-45ac-b3b5-db12323ec9fc",
        "cursor": {
          "ref": "ff86f995-1bd1-4bb1-ad17-9b4fcd39551f",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4531678e-7b8b-46c4-b0f6-666fa073d67c"
        },
        "item": {
          "id": "d35f797b-63c4-45ac-b3b5-db12323ec9fc",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a44767be-b06a-47c9-8a4c-10d14fa18e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b641e0f6-1350-495f-94e5-2fee6da40605",
        "cursor": {
          "ref": "e7de8037-03dc-4e0c-9bcd-b06d18a8ccb3",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4a047601-6f3b-4db3-96ed-c88afc87ed00"
        },
        "item": {
          "id": "b641e0f6-1350-495f-94e5-2fee6da40605",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "547cf45f-304e-4ff4-8a3a-fff1401e60ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81051ca1-54d8-44f7-a32c-acecc89bc56e",
        "cursor": {
          "ref": "f234f085-93ae-4166-991a-e962e9c3d4bf",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "1740b94f-5336-4e66-a967-aff11c59c764"
        },
        "item": {
          "id": "81051ca1-54d8-44f7-a32c-acecc89bc56e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b19c4b7d-f6d5-42b4-a536-871e21eacddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92516c3f-e631-41d0-ac76-2f693294a482",
        "cursor": {
          "ref": "2f6a05b9-9731-423b-8aee-4819caaa51ff",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d20e3345-c237-4d50-9905-7ea272778c47"
        },
        "item": {
          "id": "92516c3f-e631-41d0-ac76-2f693294a482",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9ea8be08-67b5-4def-a117-9a45641af789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd40d010-3f22-42e0-95b0-dc663f53b525",
        "cursor": {
          "ref": "6628f917-4bf3-4e33-9fe2-53b4d50178e0",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "2fb464b6-7e4d-485e-951e-e97b91d70eee"
        },
        "item": {
          "id": "fd40d010-3f22-42e0-95b0-dc663f53b525",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a6a15fc7-6abb-4db7-8df8-785c103e0dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c18e66-b9e7-4700-83d8-70ccce64480d",
        "cursor": {
          "ref": "e1734605-9803-4613-97ff-7ef788bf726c",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "97ffc530-38c2-45fa-a9f8-ba06e52e8ece"
        },
        "item": {
          "id": "e4c18e66-b9e7-4700-83d8-70ccce64480d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "399319ee-70c3-4923-9e43-46ba62245ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b08932b-22cf-446b-9b2f-d41411354d23",
        "cursor": {
          "ref": "2a9b1edf-0314-4e7b-aa0d-8df51dda2a3f",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "1378d2c1-da35-405c-875e-17d8a3abc82a"
        },
        "item": {
          "id": "7b08932b-22cf-446b-9b2f-d41411354d23",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "778c176c-d1af-4dea-8f95-9983c4db7663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8772ac-877b-4fd2-bcd9-6986a9dd65a1",
        "cursor": {
          "ref": "5aa8e957-e5a4-4abe-b9d2-f4700c7abd26",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "45a62fae-7436-4c78-8bd3-272d94efcdbf"
        },
        "item": {
          "id": "1f8772ac-877b-4fd2-bcd9-6986a9dd65a1",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8ed4312b-6144-4e5d-9b1b-de8bc71ba124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abce4c0c-4351-484c-9a76-64554e87a183",
        "cursor": {
          "ref": "753b5421-338a-4462-b9bd-a391c542551c",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "68c9ef66-d506-4864-a0a8-42308c328463"
        },
        "item": {
          "id": "abce4c0c-4351-484c-9a76-64554e87a183",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c0c974ad-2481-4a88-8aef-bc08d98e379c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5d42eb-504f-47a6-ac44-7bd8a138e7a0",
        "cursor": {
          "ref": "6c16c40b-98b5-4ba0-a19d-fddf89e2508f",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e9a6cd7e-3bff-492d-b574-c18ae6793af3"
        },
        "item": {
          "id": "5b5d42eb-504f-47a6-ac44-7bd8a138e7a0",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6448d232-08c0-4a05-8e82-d5003a0425f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e31744c-0384-47e9-945a-83f57f169ba4",
        "cursor": {
          "ref": "5b9fcc07-99df-4bfe-9e87-cafe6021df17",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "7bc323d7-856a-4376-9573-60163cda2408"
        },
        "item": {
          "id": "0e31744c-0384-47e9-945a-83f57f169ba4",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "5b87055e-3a5d-4d44-a012-12f908f94f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18e8eb8e-803e-4c16-828c-94d5590cd6d1",
        "cursor": {
          "ref": "c2f7799e-9895-49ae-b575-954bd89d5cff",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "dd6765f9-4cfa-426d-88e3-bb9d08bf15cb"
        },
        "item": {
          "id": "18e8eb8e-803e-4c16-828c-94d5590cd6d1",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "294f01fd-d464-4ead-b8b1-54b8c2578ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53a4561-9c39-4f26-a558-fe3042316c69",
        "cursor": {
          "ref": "3640890a-8b4e-4298-833f-9b994070d6b8",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "3559dabd-1700-46d0-ba6d-3c534b07e5e7"
        },
        "item": {
          "id": "c53a4561-9c39-4f26-a558-fe3042316c69",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "861f85d5-9b2c-400e-a646-45e925f3c565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2030323-c5ac-4f56-a611-08cb559630b7",
        "cursor": {
          "ref": "b78d7223-ad79-4f4a-9fd8-3cd3c60f314e",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "50c51890-d9ae-45d9-9359-3aaf8ef2b378"
        },
        "item": {
          "id": "e2030323-c5ac-4f56-a611-08cb559630b7",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "9e732ad6-f85f-4e2f-be11-1c196c403293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4559b543-c682-4fa9-85d4-fe546c3855f7",
        "cursor": {
          "ref": "c6dab935-0fe2-40d3-95f7-9cb044e64986",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "c6dc4c76-3e60-42c7-83c7-34506f17c8ea"
        },
        "item": {
          "id": "4559b543-c682-4fa9-85d4-fe546c3855f7",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "00db130d-5032-4e54-860a-899a069b449b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d910c3-a8c9-4079-83cb-e21aa5b2641d",
        "cursor": {
          "ref": "cc859b7c-5a31-4825-9a25-1227996d8994",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "6cf84cdd-862b-4584-a762-9394315d6de3"
        },
        "item": {
          "id": "25d910c3-a8c9-4079-83cb-e21aa5b2641d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9432d784-fa7d-4a57-a114-f2d4d05ee967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7624e7f4-ffd7-4796-a553-26c01a833fd9",
        "cursor": {
          "ref": "7a9ef09d-6105-4c14-8bae-9e530ab99b98",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0b8fc625-0024-4144-86c8-efa5fbf58858"
        },
        "item": {
          "id": "7624e7f4-ffd7-4796-a553-26c01a833fd9",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "6b23a1ff-a59a-4e76-b863-b0ec4e4a85d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5498126-784c-45bc-a431-8b66ac6d8a50",
        "cursor": {
          "ref": "3d35bb07-bc36-493b-82c7-e0d0147ac7e4",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "028bb6a2-9219-40e3-8e66-44f671a7574e"
        },
        "item": {
          "id": "b5498126-784c-45bc-a431-8b66ac6d8a50",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "60b5b3e2-0e2a-43a8-a3f9-1fc95c84ba36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a7cd5b4-c46d-4e4a-93f1-98d9b6998478",
        "cursor": {
          "ref": "da333a15-e6c5-48f7-9ddb-9b1735cde283",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "50a86207-779c-41c8-b405-516246915686"
        },
        "item": {
          "id": "0a7cd5b4-c46d-4e4a-93f1-98d9b6998478",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b3a072e8-05de-49ba-a21d-f110fe4f6857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced9c38a-cc95-4e7c-8898-88399527ab15",
        "cursor": {
          "ref": "589b4e4f-806e-4da7-8d41-19d44d4205e9",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "586edf14-8666-457a-ba74-d25892f48061"
        },
        "item": {
          "id": "ced9c38a-cc95-4e7c-8898-88399527ab15",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b3a03538-f546-4571-95ae-c5efbe6a41ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce24165b-39d2-4143-b692-5e9d07b7bf55",
        "cursor": {
          "ref": "03887c95-096a-4cbd-be12-237b201cc4dc",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "10dd3c56-5514-4794-9a79-85fb0ff5fd15"
        },
        "item": {
          "id": "ce24165b-39d2-4143-b692-5e9d07b7bf55",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "056b0991-d75a-42bb-a32f-960699b14cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d67262-acc7-43bd-ab75-9232fe81e73b",
        "cursor": {
          "ref": "47eb0a18-9df8-4eaa-ad5a-05f5ef6c1f10",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c90866cf-ee46-4755-a5c6-3f5be18f8974"
        },
        "item": {
          "id": "e6d67262-acc7-43bd-ab75-9232fe81e73b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "25e4300a-c258-46cc-b869-85c93bd05637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd1cf72-9ea3-4c4b-b4ed-142cd6966c60",
        "cursor": {
          "ref": "5b6c5062-ce4f-498c-ab19-7cc8e1512d99",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "af1af6f9-0450-4db7-a6d5-21691a01fa4e"
        },
        "item": {
          "id": "ecd1cf72-9ea3-4c4b-b4ed-142cd6966c60",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "124a2a6f-b8a3-4041-82be-42d4d9e52942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52552de1-35ae-4269-a2fb-e27e98f2d831",
        "cursor": {
          "ref": "7dd87a43-04dc-4977-8a44-aa89f9ad4f4b",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a740bd5d-d9b2-467e-aa08-c41a40c942fa"
        },
        "item": {
          "id": "52552de1-35ae-4269-a2fb-e27e98f2d831",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8a97c3f8-8c9f-4db3-9f2a-631fd2ea571b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1dc451-e2a8-4508-bab5-412236a69648",
        "cursor": {
          "ref": "1b2ee6da-3fbf-47e7-874c-5b618c6deb76",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "57e856f0-a783-4df6-8edf-bf7bbb1e6fa7"
        },
        "item": {
          "id": "8f1dc451-e2a8-4508-bab5-412236a69648",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9099874c-276a-43e5-b7ad-83eaad46fc6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e4fea4-6374-4a9c-8de8-81ed94214891",
        "cursor": {
          "ref": "daf02aa5-c6a1-4747-ace3-c8a836a57234",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "11dc3626-b19f-4a76-bfd7-8f17977198f2"
        },
        "item": {
          "id": "28e4fea4-6374-4a9c-8de8-81ed94214891",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "654113b6-f69a-40fa-a24f-c60378806884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b7849d-b9e0-44c7-919b-312c7a3ae973",
        "cursor": {
          "ref": "6362d9a6-682b-46dd-ab05-13a65e4b5110",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ad4b256c-b1bd-4c3d-a288-49f7c1dd865d"
        },
        "item": {
          "id": "f7b7849d-b9e0-44c7-919b-312c7a3ae973",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "53b15b79-3a66-454b-a203-00bfaf36d578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd072e0f-236c-4779-8fcb-6ad049793047",
        "cursor": {
          "ref": "3c649dc4-773d-4721-a011-e79b7644c1d3",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b5b07335-bc58-4014-8f19-7ee1678924f2"
        },
        "item": {
          "id": "fd072e0f-236c-4779-8fcb-6ad049793047",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "fafd027a-7568-4698-ac23-75251cca9da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "981d16e2-5e83-4cc7-923c-ee482e48de1d",
        "cursor": {
          "ref": "d5d40602-5e1e-46c0-b650-e29565f66a73",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1d8c6366-a5fb-42a5-92fa-4b74b2b66646"
        },
        "item": {
          "id": "981d16e2-5e83-4cc7-923c-ee482e48de1d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "bb7f98e2-b078-4610-92fc-e764ed326bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "904aa54e-846c-4a11-aaaf-f505d0fa2e09",
        "cursor": {
          "ref": "50e2a46a-985a-4d29-b89e-e917ee14b212",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "0bcdd5dd-eeaf-4e99-a04e-74a9b0af218d"
        },
        "item": {
          "id": "904aa54e-846c-4a11-aaaf-f505d0fa2e09",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a1132a56-f562-4c2b-8e31-f6fb7bc1f341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa71baae-2e5e-4a81-85d8-abcde60ef21b",
        "cursor": {
          "ref": "cd09d04b-40e5-4d03-a8d1-44b6481a6e5c",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "77d0d05f-88d1-47be-97c6-6e888999599f"
        },
        "item": {
          "id": "aa71baae-2e5e-4a81-85d8-abcde60ef21b",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "4aedd7c4-b5f2-4743-9e0d-94d65b20a391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f54c1a0-02ce-4206-8f93-31f66b984114",
        "cursor": {
          "ref": "3dc27a9e-542b-4b2a-aa7e-1a9a5503bdd4",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "3cfd80b8-5b3d-4d8e-b48b-cdf445b5e27e"
        },
        "item": {
          "id": "8f54c1a0-02ce-4206-8f93-31f66b984114",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "414b9e71-96fd-48a9-8987-c4058817304c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d05cf37-da84-4856-9100-e766c53fb9d3",
        "cursor": {
          "ref": "e3cc5fc6-7b34-499b-a909-612a036ef408",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b4b45fa2-73c7-4fe8-a292-4ad15ef95e83"
        },
        "item": {
          "id": "4d05cf37-da84-4856-9100-e766c53fb9d3",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b43a6ab9-62d3-410d-9586-6265b3ec9287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93930325-0ed6-4fa3-9445-ab1680199926",
        "cursor": {
          "ref": "7277613b-fbb4-4591-a680-600a2f0b33b0",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "5a1038b1-1ea7-4034-babd-4e4e4c2c7e0f"
        },
        "item": {
          "id": "93930325-0ed6-4fa3-9445-ab1680199926",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "80b571a3-5f4a-42e7-9239-71e9658c6151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b25368-21ef-41c4-95e1-5e56b0b04f37",
        "cursor": {
          "ref": "542e5519-1ad0-4205-b981-06b445180b9b",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "9209c492-925a-47f6-ade7-1315089851e0"
        },
        "item": {
          "id": "e2b25368-21ef-41c4-95e1-5e56b0b04f37",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a182f304-163d-4c6d-931b-4ad2775a3f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad865309-f62a-44e9-9b81-48766fca7d7b",
        "cursor": {
          "ref": "54119143-4a4d-4702-849a-a271e51aef50",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ff9bd474-2a8a-41ce-94f8-1cbdb232e790"
        },
        "item": {
          "id": "ad865309-f62a-44e9-9b81-48766fca7d7b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8262dfed-4835-40d4-b5e4-2156d1ac0e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b794b0ec-0d80-4b0c-9449-3cafc75114b9",
        "cursor": {
          "ref": "b787ac37-5e46-410e-95cd-8cf9f25f879e",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "13e7182e-74a4-4d27-9015-b4b44e94f6e1"
        },
        "item": {
          "id": "b794b0ec-0d80-4b0c-9449-3cafc75114b9",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a218b755-9dd7-4705-a1b7-137bd435dc37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9a1f21-5a4e-4154-8534-697f4074da67",
        "cursor": {
          "ref": "c19c7205-48bb-4235-a133-ed0f90ce4eb0",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "dc97e1d0-21d7-43e9-a1ea-d470de64a6d0"
        },
        "item": {
          "id": "2e9a1f21-5a4e-4154-8534-697f4074da67",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f6fac3c7-0abd-491d-a3a4-b964d9308042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a022d413-da04-44ca-bf7e-48d148a3c83e",
        "cursor": {
          "ref": "e5e9df7b-1943-4b56-9a80-54773f96d949",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "1377b4e4-f7f5-4fb4-bcc3-389fe2b4bbe0"
        },
        "item": {
          "id": "a022d413-da04-44ca-bf7e-48d148a3c83e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "93925258-cd54-4852-8b9f-d73993633b9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98177978-8001-40e1-bd81-ddde9d488304",
        "cursor": {
          "ref": "56e91144-ea96-48f9-8782-548228130427",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0dd3e320-a719-4b31-b1b7-a5941d121c09"
        },
        "item": {
          "id": "98177978-8001-40e1-bd81-ddde9d488304",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "22dfa965-acdf-4ea6-9a0e-df12f668aeb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dfdca20-fa54-4af0-98fa-2ef3ee8f7ea8",
        "cursor": {
          "ref": "ffbbcaff-8b4d-4a2e-b9b4-516107358c11",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "be6f3eaa-8b20-484e-94c3-c23c1d4f7c4f"
        },
        "item": {
          "id": "0dfdca20-fa54-4af0-98fa-2ef3ee8f7ea8",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a9530792-4410-4d1c-943e-3e1f2bd5d815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60bf8eb5-5dfc-4012-b154-d9ac8ab42c67",
        "cursor": {
          "ref": "afb99ff2-240c-4607-aab7-fb4e34144bc5",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "abc02659-aca7-4670-83e7-bda84bf05a5c"
        },
        "item": {
          "id": "60bf8eb5-5dfc-4012-b154-d9ac8ab42c67",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9e2c8ddb-4b30-4937-99cb-2cbb469262f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab19439e-7052-47ce-a0bf-5d6bad29c735",
        "cursor": {
          "ref": "d32774c4-211e-4a0e-bec1-93ac624c62d9",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "9b58c83e-dae2-42b5-8bdb-92fab322cb77"
        },
        "item": {
          "id": "ab19439e-7052-47ce-a0bf-5d6bad29c735",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9648b139-8993-40d7-b128-3eda9c1f2193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "163e3b0b-7560-4474-95bf-a8a833d0ef71",
        "cursor": {
          "ref": "a8b15c0b-2e23-49b7-bc5e-9ac5a28124c8",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "8d17209f-99dd-4935-96c6-472b5605b252"
        },
        "item": {
          "id": "163e3b0b-7560-4474-95bf-a8a833d0ef71",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ee3ad83e-2d4e-4f21-b9d7-28e6eeb8a715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f19a5575-20b3-4595-9618-228ec9721297",
        "cursor": {
          "ref": "34e5fa40-100f-46b5-91ab-911a065fdc20",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ae0c9281-04c8-4709-90ef-2c4f93fa0fc7"
        },
        "item": {
          "id": "f19a5575-20b3-4595-9618-228ec9721297",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "0aff71f8-ed80-4c7b-b6b0-c2a54c0381b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e07083-1d34-4438-a0c6-c5acd5d36b31",
        "cursor": {
          "ref": "ffafe75a-34bc-40a4-87c9-2500224d6f85",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "df9cb85d-fa58-498f-beea-8ebfb7ad5c5e"
        },
        "item": {
          "id": "70e07083-1d34-4438-a0c6-c5acd5d36b31",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7f473726-6b8a-4cca-94df-34cec3fec7be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97555f13-e63e-4282-a92c-1257e3c15737",
        "cursor": {
          "ref": "9a5c741e-65c6-465d-9a5f-a00b9afc6379",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "15b150ff-646c-4073-9c10-f099434830b6"
        },
        "item": {
          "id": "97555f13-e63e-4282-a92c-1257e3c15737",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "481919dd-6320-4798-bf7a-255b49ebda28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5651505c-dc2c-4f63-8bf5-6a9012d24fb5",
        "cursor": {
          "ref": "b76c2965-6984-4cce-a5a1-91a136170c7f",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f213d84a-e442-45c4-996b-2cfdb6cb6bbf"
        },
        "item": {
          "id": "5651505c-dc2c-4f63-8bf5-6a9012d24fb5",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "1a9326d2-a72f-4263-87d3-535b420b54b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac01f49-8f7c-46aa-85a8-d80a996e79ae",
        "cursor": {
          "ref": "386136c4-9856-4c43-a7b7-e3ce3339aa8b",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0a7e7e3a-13c6-4f15-8fef-ef9c27260400"
        },
        "item": {
          "id": "7ac01f49-8f7c-46aa-85a8-d80a996e79ae",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "32412535-87b3-4145-82d2-fccf216e612a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cce44f2-a40d-46a7-9e41-79bdae1ae7ad",
        "cursor": {
          "ref": "8f6d504c-957e-489b-9f12-9230ce4ece73",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "de6c7c31-17fc-4f3e-9ed1-cf03c83ab947"
        },
        "item": {
          "id": "7cce44f2-a40d-46a7-9e41-79bdae1ae7ad",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f66ff644-eb8c-4df6-a044-9805e0003522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c2bbcf-16fd-4b6c-bd18-ff5a36771e0f",
        "cursor": {
          "ref": "ba4537bf-fed8-4b6f-ba37-f69085a6eacb",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1751d4b5-f391-4247-934c-039e7420c8ed"
        },
        "item": {
          "id": "82c2bbcf-16fd-4b6c-bd18-ff5a36771e0f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "0f24a267-9aea-4d9e-a480-16b915d5278e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d8082b-b2fe-40fc-8a79-31cda8a430c8",
        "cursor": {
          "ref": "59d5b8ba-e698-4128-b605-bad195d5fe5a",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "eab36758-5e72-4ad7-a21f-3f3b1343dbeb"
        },
        "item": {
          "id": "54d8082b-b2fe-40fc-8a79-31cda8a430c8",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f3206983-680a-44cc-bf0f-d5b6ae74d112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dabd51b-a2ac-44a5-afcf-c0c33e407cc6",
        "cursor": {
          "ref": "d2dead55-70e1-4f2e-b44c-a029171be67d",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "66413343-8310-4ff1-a69b-0e79cbd07adf"
        },
        "item": {
          "id": "2dabd51b-a2ac-44a5-afcf-c0c33e407cc6",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9a599561-c446-41c1-92a9-cc7a1cd52566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be66bcc2-d1fc-409a-b9cf-c4ae630ad950",
        "cursor": {
          "ref": "1b9446d3-7e4e-4a5b-8616-f359eaa3d63e",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "1d31cebf-3f5c-49c0-af7e-e6a787f110ef"
        },
        "item": {
          "id": "be66bcc2-d1fc-409a-b9cf-c4ae630ad950",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "41b2432c-e1c6-41d6-83a2-c010d3e8cd7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d414fadf-711f-4547-b0a5-27cebb7cf1d3",
        "cursor": {
          "ref": "9a56d0af-c877-40ba-a5a2-53dbfb4dc158",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "503c5316-e7a8-488b-a1fd-b5b13d88160c"
        },
        "item": {
          "id": "d414fadf-711f-4547-b0a5-27cebb7cf1d3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d088d7cb-e03d-4d0b-898c-81afc79c4c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "804632cf-eec6-4a8c-996b-414ebe01bf52",
        "cursor": {
          "ref": "981cfeba-f588-4f47-96a2-80d18281bb1e",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7f06d6ab-3631-472d-8016-04d3315d3047"
        },
        "item": {
          "id": "804632cf-eec6-4a8c-996b-414ebe01bf52",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "99267349-d83f-4496-96e1-3f912262ef4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5396ad8-150a-4e2b-8e87-74258e493aba",
        "cursor": {
          "ref": "cf0f7683-a0be-4838-9ad7-2d8122ce7065",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "35676351-57ee-42d5-87c3-b1725f5cb3a1"
        },
        "item": {
          "id": "c5396ad8-150a-4e2b-8e87-74258e493aba",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "4a6986bf-1afd-4f6e-85ec-2d21d50ac715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e939bb20-a482-4aba-860e-c91bf350870e",
        "cursor": {
          "ref": "ff5c7d2c-03a8-4afb-8d39-13b51f5809a7",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "3c32ecd1-4ac4-4f92-b804-4914cbe3b413"
        },
        "item": {
          "id": "e939bb20-a482-4aba-860e-c91bf350870e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a21581b1-279a-42b5-9645-00d3c274837f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5ba876-afb9-4d25-8407-902ded671c77",
        "cursor": {
          "ref": "4f328931-7504-47b3-ae58-b5027bad6dd8",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d1a332b5-d128-4a66-98c3-d3a10c076d4a"
        },
        "item": {
          "id": "cb5ba876-afb9-4d25-8407-902ded671c77",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "68452330-e5e6-4228-b0a3-87e73ad5369c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158cb0fc-ebac-4597-8f5e-ae9bcb431258",
        "cursor": {
          "ref": "d001e432-4f63-4e20-9241-613ee68c54c2",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ab97b9e9-9ce9-4d10-bced-fb4769de5fc4"
        },
        "item": {
          "id": "158cb0fc-ebac-4597-8f5e-ae9bcb431258",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "05758a77-0cd5-47bb-b165-3d15fe9e246e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab05132-7181-4293-8139-58a9d51d47ae",
        "cursor": {
          "ref": "7a9a17ec-2f38-49fe-8f2f-19b0822d2d2d",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c0fc6f38-a285-44be-ae4d-b759f33b189b"
        },
        "item": {
          "id": "aab05132-7181-4293-8139-58a9d51d47ae",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ce935ceb-68bd-4a2e-8931-41ac7d4f5edb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1071d77-804c-4582-b562-50ec9eb1de97",
        "cursor": {
          "ref": "bf2ab13b-8574-4f00-9205-3c5492d358d1",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "55212fe7-78ec-4b96-adb3-05ede460c3d4"
        },
        "item": {
          "id": "d1071d77-804c-4582-b562-50ec9eb1de97",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "560fb84a-7639-4887-8cb9-bbfa0647073a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06016651-edc8-4c36-b6bf-5f4d5e7c434a",
        "cursor": {
          "ref": "7ffe6d39-a1a0-4a13-b4ef-430699a5d0b6",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "031f80a3-ca6d-4b03-8a21-08ac6b3bf44e"
        },
        "item": {
          "id": "06016651-edc8-4c36-b6bf-5f4d5e7c434a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "fb1f536a-9fed-45d5-8bb1-faf342297429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f74baa5-d15d-4db1-ac86-8c67a2b037f2",
        "cursor": {
          "ref": "130e621f-1be5-499f-8a37-a4af747de035",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "3c20a4e6-22c2-412b-9704-0f407baba891"
        },
        "item": {
          "id": "8f74baa5-d15d-4db1-ac86-8c67a2b037f2",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c952313c-9615-488f-a11c-83b502502a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c29611-98da-44ab-afc8-6f7a2626bd5b",
        "cursor": {
          "ref": "45bec4b9-b9ff-4572-9e8c-88bb84a52dfa",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9bad7921-3153-4cc8-91c6-4c63543c7eb3"
        },
        "item": {
          "id": "75c29611-98da-44ab-afc8-6f7a2626bd5b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "987719d5-7e90-4215-a49c-87d548bae5a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "894866c4-c55e-4ed4-9fd6-5772bd6d3d40",
        "cursor": {
          "ref": "9d32f258-393c-4625-8454-8418f5910f31",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1e64050d-ede8-4029-8e64-a67453a53221"
        },
        "item": {
          "id": "894866c4-c55e-4ed4-9fd6-5772bd6d3d40",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "15f99ba1-5bc3-4c34-8922-59471fbe65ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8e0aa8-d488-4875-8ab6-c2f77d39ecc8",
        "cursor": {
          "ref": "717eed7d-294f-4c71-8dfc-4493ca3a5b7b",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ca603d1e-71c5-4335-83d7-cb72854df296"
        },
        "item": {
          "id": "2b8e0aa8-d488-4875-8ab6-c2f77d39ecc8",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4edbf9f4-6733-47b4-bd86-46d8fb94f1eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd1fc467-42c9-4b1b-b2be-681d4171ab0b",
        "cursor": {
          "ref": "6511489f-0cb9-4a78-8bd3-9b9be1630be0",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e5d7efc8-d7b8-4189-8409-ea649cf776e9"
        },
        "item": {
          "id": "dd1fc467-42c9-4b1b-b2be-681d4171ab0b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a34d9692-0825-450d-a603-09afbe971085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f9e1a7-f309-496d-91cb-aba44395186d",
        "cursor": {
          "ref": "4fdb6746-3eca-4877-940d-1c7b4cb8053f",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "50b28052-1dcb-457e-be06-4462796595bb"
        },
        "item": {
          "id": "d3f9e1a7-f309-496d-91cb-aba44395186d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ba9a174e-0f15-4c72-b681-60ce1ac7737f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "554a51d0-8071-48db-b547-3b5a823997c0",
        "cursor": {
          "ref": "de8dcd81-3922-43f8-aee6-f6da708c69d6",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b838d393-e301-4719-8d10-c989e2f38425"
        },
        "item": {
          "id": "554a51d0-8071-48db-b547-3b5a823997c0",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "0034fe33-887f-4b5b-b046-0f47fd96f797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0529520-cb5b-4228-b758-c246808add33",
        "cursor": {
          "ref": "f63b261a-9967-4f9f-8542-1be2827c2fb4",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ec42e4b8-a125-4215-99bc-f10dc9788c47"
        },
        "item": {
          "id": "b0529520-cb5b-4228-b758-c246808add33",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "4847d5ec-01a7-44ad-ae05-2aa6960e0030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5a37d6-0311-445c-b946-c8a9d57dc8ee",
        "cursor": {
          "ref": "3fb854de-8db9-4e0c-b5f2-07d3f98b8030",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "93c33b32-d49b-4404-8e74-9ac88610f3d8"
        },
        "item": {
          "id": "7c5a37d6-0311-445c-b946-c8a9d57dc8ee",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "977cb306-d011-424e-9c8c-31b4f68ef5ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcfb7404-52bd-4e1c-bcd8-7ebbee920ab4",
        "cursor": {
          "ref": "e32b601d-91ff-4db0-beda-410ef781da73",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b6464785-d54f-4204-9c0e-3d91edaa74d0"
        },
        "item": {
          "id": "dcfb7404-52bd-4e1c-bcd8-7ebbee920ab4",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "556730c6-2ddc-4edc-8136-36f0e1131400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59c783a-28ac-47e9-becd-7b39f677b107",
        "cursor": {
          "ref": "7d32ca66-4ca1-4c02-a060-3c3f60241c7a",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "5c32452d-b71f-4e84-ad43-e36ebf0b92d1"
        },
        "item": {
          "id": "d59c783a-28ac-47e9-becd-7b39f677b107",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "88d67827-0ade-4664-961e-501c33678682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "693833e8-f905-4fcf-b881-a69004d01fa7",
        "cursor": {
          "ref": "b081af64-7d9c-47f6-9daa-3dc708026fd8",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f72d79b4-38b6-4c45-970a-f188687b5d87"
        },
        "item": {
          "id": "693833e8-f905-4fcf-b881-a69004d01fa7",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b80bbe7e-b3dd-40e3-91be-275899e808da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e66331-d75f-4cdc-b521-fdc9b4d547c4",
        "cursor": {
          "ref": "c2d482ef-216d-441f-9f06-1c7850e0ec76",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c5d4b60d-369f-4ce4-8e4d-16278e5a5311"
        },
        "item": {
          "id": "73e66331-d75f-4cdc-b521-fdc9b4d547c4",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "8c12d2be-78ec-4b6c-abf8-99bbdda92bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b72a7ae-9ad1-4728-aa39-9a2131c9dd29",
        "cursor": {
          "ref": "75477ebe-d058-41d1-a214-720d4765e089",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5ad2eef1-7dd8-4a9f-8741-dcf253b16a89"
        },
        "item": {
          "id": "1b72a7ae-9ad1-4728-aa39-9a2131c9dd29",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "2b2076f5-31d3-427f-8cc9-cca0073c0110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a073f6-bc90-41d9-87f5-35a0e4ae8ba2",
        "cursor": {
          "ref": "86a4fc5f-4b11-4553-a095-67c9cdb1b8ad",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "029f1eb1-276f-4058-8d40-4c5e25a5d89e"
        },
        "item": {
          "id": "28a073f6-bc90-41d9-87f5-35a0e4ae8ba2",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "feee1936-dee3-4eba-8241-26f42c00eb36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce58abec-c65b-41f8-8a99-a597ac7e32b8",
        "cursor": {
          "ref": "fbbd59bc-8169-4557-8c6d-7b3270961e43",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "7bede6ba-3516-48dd-a298-49952f436155"
        },
        "item": {
          "id": "ce58abec-c65b-41f8-8a99-a597ac7e32b8",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a3769b1f-7379-4964-b6a1-b274f8d2f2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64700984-b2fc-4df0-85af-5078fa488fe7",
        "cursor": {
          "ref": "ef7814a4-4be4-4f94-a2f2-1f53f21580d0",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d79b410f-f320-4cd4-97cf-37a478b7140f"
        },
        "item": {
          "id": "64700984-b2fc-4df0-85af-5078fa488fe7",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a24d02d4-1df1-4f04-bef3-ebd831c97f43",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7531b03d-c83f-41a3-b063-e11ccbab673d",
        "cursor": {
          "ref": "385e6320-28d2-45df-ae9f-ff65945b9971",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "be22117c-2f91-412f-bec0-740fe72e83b6"
        },
        "item": {
          "id": "7531b03d-c83f-41a3-b063-e11ccbab673d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "36b2a056-d635-485b-8bdd-95ab233fe0f9",
          "status": "OK",
          "code": 200,
          "responseTime": 2270,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e34a70f6-7f6d-46e0-8f89-f54034296227",
        "cursor": {
          "ref": "94620b77-0808-4a10-9dbb-dc36a13bde57",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4a89f8a1-e81d-4cef-8553-8d4637d47c81"
        },
        "item": {
          "id": "e34a70f6-7f6d-46e0-8f89-f54034296227",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8ed4d140-2391-4f7e-a843-7a17d1edfc0e",
          "status": "OK",
          "code": 200,
          "responseTime": 2859,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba0bd4fa-1a33-4e7f-a44d-2984cbb21162",
        "cursor": {
          "ref": "349909cc-777d-42f7-8aae-517c22dc64df",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6f774ccd-9dc8-4465-ad4c-93b9f851dfb6"
        },
        "item": {
          "id": "ba0bd4fa-1a33-4e7f-a44d-2984cbb21162",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "62a07a1d-6828-4f36-add8-bc43b9f85ef1",
          "status": "OK",
          "code": 200,
          "responseTime": 2578,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "751c8852-7199-46c9-9472-fba2312d5e04",
        "cursor": {
          "ref": "91c25188-a906-49e3-9523-73c9ab677836",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ac21ca2a-7081-4b38-8d11-18289617a46e"
        },
        "item": {
          "id": "751c8852-7199-46c9-9472-fba2312d5e04",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5dd539d6-ef5f-4c8d-b895-80ed783e5940",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751c8852-7199-46c9-9472-fba2312d5e04",
        "cursor": {
          "ref": "91c25188-a906-49e3-9523-73c9ab677836",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ac21ca2a-7081-4b38-8d11-18289617a46e"
        },
        "item": {
          "id": "751c8852-7199-46c9-9472-fba2312d5e04",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5dd539d6-ef5f-4c8d-b895-80ed783e5940",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6bf975c-d873-4358-8990-c1920d9dbb82",
        "cursor": {
          "ref": "c6199216-c731-42b8-b9cd-aefff50564b0",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d4ab8e70-346c-45c4-9882-c640975c3a35"
        },
        "item": {
          "id": "d6bf975c-d873-4358-8990-c1920d9dbb82",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "35aed185-f10e-4ca1-8f29-0d3d4080aab4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa83ad6-259f-4c80-908c-7416063e7383",
        "cursor": {
          "ref": "77509149-9f10-4706-8851-d2c78a269716",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "04cb460a-4c55-4dd2-93f3-1b83f141906c"
        },
        "item": {
          "id": "daa83ad6-259f-4c80-908c-7416063e7383",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "06870fd8-b6d0-4dc1-803c-3054332eebaf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}