{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "336cf83d-5d9a-4652-9de4-3097732b07c1",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f916dfce-32a8-4511-99b3-9730ab283d76",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5f0cc92c-4fc0-45a9-8295-7a95a47d24df",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7feeb71f-0b51-4830-9839-2c90bbed56f2"
                }
              }
            ]
          },
          {
            "id": "497f93d3-dcc8-4e1a-bd4d-6e76215ce1f9",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "db6030c1-7b59-4b1b-914a-0bb906b838e6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bc5557bb-0b94-4310-aba6-0dc9fe625b30"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2d02d751-8c73-4e28-be17-56022201a780",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9a280d58-1778-46ed-9891-1642ab01838f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "443fb91b-4fac-4970-8871-d15218cfe4e4",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "90e9243d-010f-45e1-8167-010a82cdf725",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4b6f2c68-c53f-49ca-9115-5966e7a71de7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f135a070-c9ee-46fa-b519-1af45f275d0a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "01314349-9b82-494f-859a-7ceb95589c97"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a5efae3f-0aa8-4e49-ac39-8fc12a541b15",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ddb5d824-3a48-4490-a3e0-0ce67ee8c389"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "57bd5861-55cd-4a3b-93b9-f865007e5018",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "56470ae7-6a04-47ee-9488-576fa5db7cb3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "055692b7-c59e-424a-a6f0-e0dcf00eb0a8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "588a4039-899c-40b3-8431-4e9c04163ff8"
            }
          }
        ]
      },
      {
        "id": "91b67994-d94f-4554-8d07-74683545faf7",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4536ff06-a146-4c82-a122-cfcc38cf84b6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "35e36626-f0a5-436c-9a33-6b4c41d7b3e4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4b371e6a-223b-429e-ba45-4fa4ac613e35",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae4702a-86c6-4530-a7fc-ca4f19e389e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9134dcae-20de-4c89-a88e-03d42690c217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230a4a3e-6180-4696-993f-eb0dcd623bb3",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4441086f-8530-4b18-8ee2-4d30dc65e309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b6263503-5472-4f33-81b4-9dbcdf2458ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b72784f9-8567-4e3b-84eb-fc12fb8fac68",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74db854c-34ab-40bd-abcf-ddf3fcbf90c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a42244e-53ae-4ee8-8207-b20c8574a978"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "82ee0773-fef6-4a03-b2c2-4b86b8086f95",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "62394fdf-36a6-418a-ad70-ccf10c97471d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "144b6a08-6590-4e62-9d28-920eecd54412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "63038a6f-9ed4-4b20-80b7-8a28ce16855f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bdfe50b-f447-4006-b3c6-abefc03c8b8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2c61fd3-10d3-44e5-ac13-7f07d0339dd8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "68915055-d8db-435d-89dd-32724ff99e37",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0657f123-c313-41e4-8514-0e3e8077f1ca",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "80525fd5-3ce3-4d93-86b0-c781a8f3d73a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b44217e8-4ed6-485f-8474-4a4a705a4528"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "16a3d004-e593-4959-9962-207743a9d06a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "3cbde09e-8f68-4006-9433-d89c9b05ecba"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ed8691b-748c-4097-9930-749c5410aa01",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c6de1efe-48ad-43dd-b103-4821dc1d30ee"
            }
          }
        ]
      },
      {
        "id": "ea85aa19-d56b-4339-9c2d-c68c0c36a20a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "42faebb7-cc7a-417c-b1a4-c686c9761a50",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2d1eee0f-7549-44bb-81da-76fb5eae9b44",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ab668bed-e416-49c7-955f-2c95e27fea0c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "808e22c5-bd59-4f30-b373-39b562095623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8132a260-f978-43ab-833a-86390147778b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25739082-2548-4b5d-b525-6d156c997ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9833ff6-8a67-4288-8167-ee505d8ac571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "139e0416-cf5e-431c-8dcf-fcf8ad79cece",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2654a3-6771-494f-bbb3-5bca8a4dedb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cbf3978-b855-4b9d-b8c8-e10966c81f48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a73a784-ec88-44e7-81dc-6455a44c8b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7f5f00d-6994-4c0b-8785-dad035001de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807aa4f5-8921-4301-a609-845877b15eca",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e896e1b-567e-4cc4-ab1d-c59fb338f9ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79608154-40cc-46aa-9887-46445cc67f35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2094d7-2a2e-457d-9b3e-ce79764c0aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce2c4897-4c4f-4e8e-847e-f79ecf2f84ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9861f7af-2a94-4c17-bf8d-b5d3d5197fe7",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce0a035-695d-41c9-a195-058e6dd41de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "573c27f3-e6f4-4b55-bc0c-e5c82c776aa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779dd839-8725-48a5-8e91-79c30cf5ea35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7dfc0ec7-265f-49e0-ac80-96ef606bc5dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4574a31-fbc6-43af-bfd7-2d96a80af76d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cebd258-94e7-4487-9f42-c3750cc540e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ececbae-ba0d-492f-8c07-14d47bed139c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4be1c66e-d992-43c4-8fa4-1484374ceaec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b983f56-bffd-4831-a0ce-4a9310478e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f73748f-b520-4fe0-bc74-c707ca10edcc",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e08035f-b4f7-44f4-b56f-8d4a7fa6e757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30ac2702-5f87-4dc8-88c6-3c648846292e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc0417f-7ad3-4350-8416-a259d19fbc05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c4471f4-7712-4fca-96a6-5b5e5cc3b4fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd38e621-f9e4-450e-8124-409b87fe937d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a20d2b7-b62b-4c37-8d4c-59d247944edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8948e90-ae0f-4865-8b26-d6c82efabb87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2e60fc-3beb-4c35-b312-91eaec81727a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c8921a9-4c64-4dba-aa05-d7260fb8894d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec7418b0-8d0f-4a0a-b36a-348bea27dfb6",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb3a0d1e-50ae-49e5-b4c8-05da1cce9c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27303ce4-a091-4374-ae02-9b7def41ab2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "377b068a-4ec4-44eb-adb8-3b0b47c2a0d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5aa146db-a85e-429e-a950-a8b774bf9938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f845969c-0ca7-40ae-92cf-5068429f64cf",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c6306c-d8b5-44fc-8765-6ffa089ddea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0285ca80-7e50-459f-abb7-d72f77f66f9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2a977d-9917-4b9e-a83f-a0423bb588dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5fff74e-bb4c-4281-8fea-0afa7238deb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a1a14e-6bfc-41b8-a40e-e3a99628ed27",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a3142c0-b4cc-4c02-873f-64d5296ca6d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf4c8c9b-95a4-46ec-ac64-ca593957e62d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c23f7a1-25c0-441a-823d-87f0e980723e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a760b2e-e096-4fda-9e5c-ac099e32282d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb19c63-7226-45c5-b938-b3c4cba1f18f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b43fbd66-bae1-4ff4-95c6-f7f6722d7661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbffe720-73c5-4887-bacf-999eed3abc47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "852e8828-ac18-47cb-80e1-37e948018acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e6eb8d1-b9e2-4033-b8c7-61d72f761bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a0c6ee-10cf-4ca7-9d2c-f027c49eb394",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7315ffa-b3b0-4cdd-a8c9-da73986abfbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "986aa5c7-3f12-48bc-a8c7-c61b94849de8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e22a6e3-5a40-45fb-938d-648bd2e4a9fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "070b75df-efa7-473e-a04a-7799cccdb25a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fdd7355-d6ea-4116-aa78-9379f865135b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5270730d-73e7-4682-8799-052f6cf92168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c957bd95-ec90-4772-b9bc-5889e2335365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef951cd1-f19a-4597-9d58-db6c787a125b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b6bc5cd-404f-402d-886e-38eae06b7ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e00a78-7571-4ca2-81f4-36d0f04e094f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebcdd290-5b81-43bd-81cd-b1f70612f2ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a984666-81f1-4ade-b4d8-a71a82b6dd08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ed362c-9103-48cb-841a-b5b9b4c8124d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f872e67a-3af5-456f-a376-69d26517e468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb04787-da44-4417-85e8-e0c8e021c8d6",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc67077d-66f6-46e1-a02f-65546e8cc893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53b8fb58-9c02-4bc7-a63b-e7e8a548ae10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d6a98a1-ec3f-46ad-933f-0c5ddbcf0eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ca5bb4f-df14-4962-b549-bc7f0d31669c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74485843-ce80-4992-ab25-e99fd88f46b9",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2a5d96-2f55-4cc2-b151-a8753b4f1280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc0f0d98-9d9a-432b-9951-d5c328c7b99f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82dccf5f-5f52-4932-bb43-84ecf1d0cc80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54be21b5-3458-496c-8700-69ec45aa459a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b05302df-ea2e-4d8d-99fb-77095411d057",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ad83156-6285-4853-af30-dd20449588a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfad304a-54f7-4b00-9c59-ab30b2425a63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8655c453-e04c-4e41-8528-e9121a38e541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ba2d360-3856-4b02-9a87-1a6f1dac0acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd8ec54d-be6c-480e-96df-53df6e1ff149",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "734bb16c-656c-45a9-96af-aff1be82a60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b5f2ab5-951a-443b-aea2-7cc60bb1b70a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2c5b51-c989-4331-864d-8099acfc0c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "01d5b48f-bee7-4b6d-b2ac-9f46fe3f6cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ffcdced-b150-4604-9672-014d0bcdb426",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d35cdbce-e1d3-4269-914f-3e44764b352d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd347089-2602-49f2-92d9-699e32ab6c84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb9dc9c-12d1-478d-84b1-289336dda75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "72302c08-f202-4541-ad82-ae1a74fb5c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e9d5109-5989-4e47-b09a-9507ccb49ccf",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e1d4f7-ea50-4f8d-b212-901124e7858e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08db6357-5f8d-417b-8a0d-330b6d21e438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7553da6e-58a8-4a44-928d-5ed86f34d4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a96179c7-2c6b-41b2-af22-bf70cbd16210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d8b551-70e9-4dab-a1e4-a8daa200e30d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d731670-9ed2-401a-bf74-50b159247173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1acdbce2-cb8e-43a9-a18c-f79445991093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b82f368d-ada2-4f96-86b9-1d4d8ca4dc94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "21ddafe8-db25-4799-ba42-ceb4a5823d24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e30b83-6a58-4479-b0ea-13c85439cb99",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44dcc8c8-3160-4158-9de0-e746a9faa7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8869f33-fc10-4a88-860e-6c5561e83115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "954ec52b-51c4-4a78-bd13-6531f2dedeab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e424618-2ad4-475e-8fcf-f3f1ca8f171d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "704bed95-f86e-4cba-a641-6ec03dfa0d75",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "223a4a4b-aafb-4f29-9773-a958013d83f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3251c67-2a04-4f25-87a5-a1b818ee3aca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9168356-0985-44f1-97dc-d30de9337b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "420cc974-85d2-4d58-8da8-1cb5f3472921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f58fca-f15a-4a84-bca2-ad885d9dbd70",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4be9275-fd23-4e8a-993d-3923828b13ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "881f0ec6-645a-4a57-bea6-8ff4c9da4514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c78b0e-d48b-40c1-becb-51e2ce7df950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9411474e-712f-491f-8a70-e63d63760de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d15e57-f8bf-48ce-8458-43d317a40fad",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba3c354-b8ac-47a0-8be0-792a3e92c8d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d43d66a-9014-42dd-911f-15fdc235d441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8261e945-c9bf-4f85-b38f-77c39839a7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbe195ee-de0e-429d-9c30-b1926191ae81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "877ed11c-4abb-46d4-8cd5-27712d15bb61",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93db2ca-0fe6-4912-bdbe-303b3aa77617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85c9c2ef-6229-4232-b24d-5a169e87bb52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2318384-719a-4b3d-bcbf-bf4931267ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "04192b86-dc9c-4688-ab26-c6a4545a497b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db33b530-7497-4324-933b-b6a7672f0400",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db8f081-b48d-48a7-831d-bbd5518690b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23e3a670-5cfb-4c49-a774-564b229d88fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7da4136-e06a-4bcf-a5ab-80e83b01e162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "483a31f6-67a6-434e-baeb-96cd4abcd839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "656399f7-2eac-4770-88d8-f617544ef2e0",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d6748d-6604-40bd-a256-3006af57d02d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e7b046c-9931-429d-b0e2-860078f749bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ada0e89-339b-4cec-9e61-347fc7a2c1c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "21e50860-3f19-4799-befc-755e5fba15cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "812533fe-b0fb-40fb-96ff-e82fdb8c9bec",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f99f60-e835-4ab7-aa82-976da3ad4f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1b90087-78c2-4033-9c21-f0aba599e3df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d376d808-0b10-4f5c-88bc-bf84f00d46b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c79b403d-1c1b-47f1-8cdb-97ee865bcbb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd665f1-5374-4ad9-ae5a-d3eb20320c64",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b850086-f8ac-4b09-8e02-a15f5d547b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67c35e6c-7068-41f9-a8c1-30b5a8e10287"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f8a55e-506d-4842-b237-8103a99680d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "01b72607-6dcd-48eb-8b59-364bc0fc1517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b4971dd-f6fb-4215-9af0-6425da45c077",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f17579-d2d6-4801-89d9-3cc4bdac9871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcf2abc9-1cd5-4e03-83b6-58c56c7a58d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7341dea-7fd6-44c7-b8da-f49f380f0a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bb16d16-14f7-4c5e-8961-8a2d6750e057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c8204a5-2d8e-4949-95d9-c5344eb1a042",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb43193a-2662-42a0-bc0d-205f1e7dbdc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0312f143-60a7-4b89-9d66-04d9f64a3050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c673365f-eb2d-473a-bc41-5d31122b70a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd59618c-c66d-4ea2-a067-79096f89a562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c96a3d00-2e06-4d95-b35a-9043a9c26308",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa0a81d-90a7-4da7-b98e-eeb3c8b7c776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac930145-3343-413a-a046-a0a5276300be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ddc6aa-81f9-4756-9131-10dec83d710e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a412735-838a-46f9-84ed-db23be768021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc41598b-96e9-456c-a458-8f9b939776d0",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "affa6fec-4262-4ea9-b3ff-8af5d8cc8adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af3cd560-5a38-4e0d-bd49-c730d3e1ef9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf39935b-e4b4-4262-93bb-544adf7d3809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6ea9101-fa7d-42fa-8f2e-0ce90406cbd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba44bde0-65c1-4ad2-b013-75072db0569f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1debb954-d3b9-4f2d-81a3-8239e17458df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e337796-f7c0-4ac3-b48f-e2c42ebf0bbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab29043-0cd8-4c36-9d5b-4b33649d843a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "403cb1d9-f1e8-4cd4-9d89-4c62f2f19579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9abc3e8d-748f-4e74-972d-fbda8ad1c8e0",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2480c64-9dc0-4627-8ea4-cd86f77de263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2dae0df-87e7-468e-aec8-17f56d958a19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "944e7afc-eeb5-43b1-b37e-bfbe7094f757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a0200266-b3f0-4e85-9515-04a299dcb8ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fde8ea3-ee81-42e4-9353-127b6e0f3228",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f5d257-b944-4966-84a1-65fc3aa7b293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e744be3c-d39e-41f8-9127-bcbd6f36e554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c3abbc-84e1-4018-bf41-ade82aca548b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b06d7fab-a86f-4d17-8c56-b9802db70719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec162726-4624-4e0c-8a71-3f8cf43cadc3",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd18eb50-3e1c-4380-bbcc-4c873864e738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c305851-60d2-46ea-b728-225a6793f78d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae48b1a-4880-4d69-b01f-53bdcbf547c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6165c2c-a256-404d-a1ad-ad6071d8d323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbeaa41d-5fbd-423a-b514-2bd1eee89cab",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "706dea04-f798-45ed-bfb2-c10b276510db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0f7d5fb-924a-45b2-bf1c-db8d46a45447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb7e44b-836a-4a5d-b78f-f76d4e40f17c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7491a36a-c53e-4e4e-afff-3ef70ad7f8fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa8f57b0-f89b-420a-ad3c-c6fda959d1e4",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ef101b-943a-4939-93da-d9f10407f646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cecdff0-25c1-474b-af1d-b1b5bd0952dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2ffe06-421c-423f-b54c-09a252c51092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "42792f66-a774-4f97-ae69-7a11761b22d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "833a9daa-26ee-4986-86a1-2a70af7997a0",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e462c5-021c-4f81-929c-2027d0c889b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5c45d02-ef2b-4b34-b0d5-8bc0d2a88017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f0085b1-d160-4654-90d1-cfad3ed8b808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf345607-74c0-493d-b648-e6c13d272a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9156d8-94d7-4745-9c85-6f522f4a4232",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d49c872-6382-4c51-8762-6dd7bc0eda95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a2d163-8049-4a5e-90da-c6e5e9f328ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63a1867-bdbb-4607-bb5a-98c02a1cbcd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "01a7f615-8e22-4f02-b45d-9718d7c9cc9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0485675d-7a2d-4ab5-ada8-261535925b17",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "060f01cc-f1d5-4e2f-bf0a-47ebd3289a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53a2a895-14eb-4829-832d-9cdcb0a21548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54055c32-05c3-4901-97bc-5833e49c9212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "05c37f8f-60eb-44c2-a75f-e4597975aea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8814dca-b805-4e38-802b-2d20a34ead04",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca15b24-5569-427a-a21b-bcdba238d711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "784c85f4-6085-44db-a90a-19696228e153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d122b05-8526-473e-82ad-b6147e571cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "3db0156b-1742-411e-8602-fa1e1a02be19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1992e89-0073-4b2e-b825-b835b8b6e240",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32217a2-7c27-4084-9545-f037041fea35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54c68130-a751-4dcb-92d6-c916d2ccddb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef5eca17-260a-4b60-85d3-08c8c72f8db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "83f6fe45-a093-43c5-9078-019dbc9b5a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08652eed-18cd-4748-bd1b-a3194c223c7e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f890a30e-ab26-4b7f-a7e6-49fc7f052e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dcf80ed-5538-416b-b09b-1e3beb875a27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57c44be-ca28-4b16-9cb1-067562ccdf10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc2fa9f1-ad80-4fa6-b89b-c19f3e4d8855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6347de95-3a26-48e7-b8bb-9ce1847ea911",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1334949-119c-4b6f-8ca2-1e72b9266e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a66ea04e-9737-4687-a968-07ab5b714c2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba47b1c-53a4-48ac-85d3-29c0fd9a09aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "259853b3-8435-497f-82f8-9f0f3b04dd84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ffc4536-9343-454c-8030-fbba5e8dd8af",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84eadf00-0b1d-4288-a7e0-20eac6fe6ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "433b6290-8224-4300-8ca3-0b1f044ad3a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc41f8d7-6aa7-4c3b-bbe7-17a67b4cb9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "858ecbc4-4496-4d93-93b2-9bffe633adde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924796d0-d8d1-4468-b058-2da576e78cc7",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d455f7a-e83b-44d8-8bff-9f26d5f7956e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "187f8c70-43c3-49d2-bfea-ec4d8f9cc88b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d804a0ff-4480-41e2-b766-2e85306b8169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8d26efd-6db3-4f63-a5ac-d10f40e0fb0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc45716-4dd6-4413-8e65-bf6a240d1aed",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "535cd59b-db53-4e63-95bc-0dd520ba1199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0254c09a-4bbf-4e6e-861d-300b750be2c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f9dde57-5795-4d43-8ddb-9079a7edc0c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fa332646-2ca5-4e2a-aa58-86a7614afc52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b82e1e-526d-4b14-ad8b-c5b2da1afcce",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0911d61-955d-499c-b779-b92a8516c0d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbf45f31-afca-41d0-81f4-4a10d7097ed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e2065d-c9cf-467b-b406-e5ab3724b198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "78c7bece-f1e6-47c1-a517-c1a14a5374bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce48159-7213-4b92-9f9c-e1cb995776cb",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85cd41af-db8f-4b56-b834-cd0948d7d9d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a064dc0d-3320-4473-bb4b-09dab86d81c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced987f1-7d9d-4394-8a9e-0a4f71d88ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef8f6d3b-68fb-4352-b8cf-f3844060fd7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1305726c-d77e-4aa2-9dec-0a7922cbd559",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c787fb-70ee-4e47-94f6-216faf3dfd47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a224b1a8-f81c-44e2-a46b-33a88c9e4f95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5047b87c-b23a-43be-ba79-8fd6a0283907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca371556-84fe-4403-bbd4-431b2913cf20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd40b097-22f1-48b5-afab-4a12fe6daadb",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f597c27d-1f3a-4c00-8dac-cc6555ae2f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18175923-9857-4903-b736-12fd227a84af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82cc55ed-de03-4ed2-af5d-399073e5f82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "61e35c2f-dfa3-4938-b5be-60a365b6b0ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae9a2f00-1ab8-4b6a-a085-8f1cf79b0e46",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5752cdf3-13eb-44dc-97de-6c2554abcbbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c6b59fe-2f94-4a78-a3d4-dc4ceedb64f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ef56c7-6b34-45fb-abf1-68516b418e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "474f5b29-db7f-4ffc-92dc-00c5ad5eb33a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff33e530-ba75-4c4b-83b3-97f08813cbae",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2997919-918f-43f0-ace3-728832dfdd90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66942a09-0a2e-4112-bdea-74ea3be7b126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29587a99-8880-48c3-b5b3-9f6c45bfc037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "89723ea8-1826-4da4-b52d-247f68febe4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77aea003-9bb5-4c79-b737-35125e5aac43",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2292764-b022-41be-8490-4729c66fc66a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87c3a0b5-527c-4bf5-b0d6-6c8d3bd74a1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d25fc5-4f5c-4010-91c9-92756904d748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8c27b69-6fb9-4f88-8d2b-9c6ed5c6f556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67af309a-f744-4614-b27a-85da6c5f06d0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ec568e-49eb-4be4-9439-2f1b7629b0ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af8f723e-6cb6-43cd-aaf9-44caebb6ae75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d89a46-2947-4f0d-95bb-866f6408f837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4236155-8bad-4f8f-bd03-22fb2cf9552f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d64624ca-2e31-4de2-a1d3-b8965a833109",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50bcad71-f6ab-4fa0-b091-a8ba2ff51f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4bac027-67fe-4d7f-a228-8df8cee6fb29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "780ba93f-a484-42eb-bbd8-2954e0b2726e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5ced5c8-a56f-4d5d-925f-f2391334e3a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7d401ff-ee22-4d4d-97e6-ab7c6801eec3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2314d252-d9f3-49d4-9a72-51369c043360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48dd5703-ba6d-491b-b8ba-5f123601e55e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "822e5c2e-55cb-4231-a94c-e082cda17c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed1e9cf4-72ba-43ac-b697-1fa21d8ef082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c6dbd8-7f4a-412b-a89f-8a675abb4f32",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a587d1d-4112-42c8-a944-faf16ae137fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7361ae5-3482-4482-b375-2f4d16e990f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18dfb788-9894-4aa1-a705-b2b5b2595c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7f54c6c-9bd8-4368-9c9b-4b4cd72a2db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "389eb700-61c9-4a09-9943-4e36ba56cca2",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30fdb7b4-c5f1-4106-ace0-95a02fbd4b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe600a83-21d1-4d47-97ed-c279f2d2342e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df6ab0ad-63e8-480c-83b2-5eb806e8d749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f762c42-abbd-4d14-a184-32cef5afe38b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d39324-ca9f-468d-a589-55fbcb38f625",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e28f01bc-46dd-4275-b98c-c4c5fa0bfe5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75b38dae-0c2b-40a8-847d-37faa9d86ab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2554fdc7-5319-4cad-b89e-7d8b44bc3bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa653cb3-d2b9-4e31-8719-566958695499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5a0449-f5fd-4259-a4dc-2526e37f6156",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13417441-87c2-47c0-9564-566350ecf207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca0bbc8b-7e21-4be0-9d35-bb5542cc9263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef0e815-9264-4544-987d-33f7f67a431d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "579d3223-8b76-4f9a-a6fa-26c13cb6a313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d4e081-c0e2-420c-aa09-baf05679ee60",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33af95c-a058-4c94-9b07-a12d46273688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8968f34d-7bb1-4784-ab78-11380e5f7fcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c68d06d-20f5-49e1-bad1-5ecf234666b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "426c7688-c8df-4e05-b491-7651d89edd68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a48fd7f4-706a-4701-9492-0e51e8679fb9",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be1ad2e-6e1a-4229-b5fc-55027c8f0f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7147cd9-7a47-4ebc-810b-feb9d5e415d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a99290-4349-4724-a493-597dbfb8189c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "241d68b7-5031-4519-ba67-f3cc1ef88c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc817c57-896c-4451-9fa2-5549812d7d50",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc0118e0-bf1e-4de2-ba4d-ba2db67c583e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec7e9693-aa2b-4fb2-afdd-b7fe628db666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f989a66b-4284-4148-a42c-dddb6102705f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "67bf4dd7-3666-446e-9a69-0357f801b90e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e63317-703a-4b26-bf7f-e182a86d1d4d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f925fc-fc68-4a92-9d2f-68cc42d5ad1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0be63389-6d88-44ba-b511-1681ef31ad45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a42cc7a2-51de-4afe-96c8-2837c69aa475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "138ad421-0f57-4134-9f8e-08b0302d4226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e16dc7-7d6b-463e-8cee-d6f08adbae81",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "597ec97c-59d5-4335-9870-f353769e5479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eda83725-b888-4478-b456-0420abdd64c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77517867-1028-4a0f-bfb4-217b3f0c7b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f59f74b7-f9c9-48de-9ce2-9199deec838f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b5ce9a-7e51-489e-a86f-8f4fec2d5f98",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46cc7d3a-b337-437f-8878-a63f2ad418f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3b53b0e-6158-4f94-9f59-f91d446856f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d15d6edb-5c0a-4288-a395-96b6b1543680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0087018-96a7-4aea-bc55-37ef39d6373f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a2411d-65c5-4053-ae48-aab5a21d0ca9",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5682811-ebae-4576-b4c9-c483429cc812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e9fa123-8d5e-4bd0-a3c8-d5008f43d52d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b09f7b11-da12-45ee-b8f2-deaed93ffa7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8307d7f5-3e86-4852-bda8-fcf3f0c7524d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a33a3b-c302-46f4-8cfa-84ac03f3194e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9392b726-831b-4a19-a911-09b1946a7cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e174e771-7a81-4fa0-a2e7-a2e8dce2a78e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96914102-842c-4192-95b0-78ca9edadee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "47b66561-f023-479d-b546-888e52c5cfa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73481d09-f216-4f91-86c8-80d663563489",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e870f0f6-f4af-40d3-8128-b58c1d87998b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d026da7-c7d3-4aee-ade4-0c20e9275804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9583f9e-890e-4a8e-929e-43c8c7f16c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd039f93-7b42-4632-bfdb-24c129279917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "713308bf-9d0a-40e0-92ed-75fff7d5c40e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d2f2bc8-3829-471a-a0d3-b4151fbebb22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72687f96-0e92-4f11-9615-76e906aef988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b73d14-bcbf-484d-85e8-b9f1d9cff538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bbf62620-ff7f-4f8e-bed4-305ef0201cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be4dc2d3-a655-4fd1-a003-675e23d87b9e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7975a01a-7aa8-4b20-a605-e701e64576f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25c2bde0-7832-4ea9-a4fa-ed2e88f83f21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "314c1954-a4e6-49ae-80ea-3b0197c56c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "add4491c-c9c2-4964-9b16-a82f7a4ae3c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65f465c-d3c4-4bc6-911c-e36dcdaa2f34",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d30fef7c-c39f-4c1c-a7f3-a6aeb058a14d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a087b5aa-fd95-4a40-90c8-73b968d3c199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b78dabf7-4ce6-4338-8c62-f00664aeab8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fd77d26-69f6-4862-8008-e3b166f08ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e57f64-3fd0-4da7-847d-03b9dd76347b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea7a638-a29f-41c3-a337-ccc5b540e1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bfe57e6-e53d-45de-922f-d9becbb93c64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46af81e8-90eb-4d79-8c5a-4e52d99a88ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d9652e2-b7e9-4251-be9c-7d99f8f9f1b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b1944f-5cc1-4085-ba73-87f16f58d3b5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af07029d-7f2c-4de9-b6c8-b43cf800c2b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bdee480-9b98-450f-b718-1093b58bc863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c264aa1-c903-4bda-9e03-096c6333827d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "30ea42c4-534b-40eb-a619-aac990e3d6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f003b8b-32ee-4c91-a9f9-e0c86ac7fb9d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9679deb9-6484-4c9c-af03-1ff3ee795eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0259ea4a-1c36-48b0-97be-f308128d9a37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cefc2f7-7179-48ea-821b-edc641955bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "59a3e9b2-bda3-4efb-afea-dc608cafdf7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "029dad7d-a735-452d-a0e9-084b22134367",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb866ee9-e647-47f6-a3fc-04b3be943ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e5d6e1c-5d52-4e30-96ef-fc11151359dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0bb4827-285a-46e4-a9c5-86847af174a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9c985aa8-3cd1-4c45-954c-d36c00082a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33f3c67-c431-4704-a2ea-d5b037153b5b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dccd50a-b20d-4890-ae26-2b110da5c3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b0ef7d9-8e1d-42fc-af0f-c52cdde4070d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d993d46-b5fb-4722-aa44-fcf363ccf97c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3672f996-f0e6-452c-8935-93e1aa193e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65f4182d-936a-49c7-8f83-62b102091f76",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f77ff18d-92aa-44ac-aec8-5eed6fcf2ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f76db2f-188d-4882-8b80-a74bbe303922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8a0690d-3f06-4360-b58d-0a9a229a34a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e5c7924-5397-49b8-af4f-096dbbf8422d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c943d6a6-d783-48b7-8db9-65459f5f2cff",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a69878-eed5-4fe0-8709-28c166d09fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "185c827e-c5e9-472d-83b7-10e94fb694bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff5f739-3689-47d0-953b-ed077dbb770f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc3da5b8-156d-4627-86b8-0bba0e17dbf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b2f2efe-4fb5-4af3-ad63-f253a1819a3e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a8210c-549a-401c-89cb-7697204470fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f86ca95-8abe-4d6f-9a5d-baa7f4796094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df33aaa-f92a-4213-a7bb-c0d8597ecd14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c63e099e-50b5-4be3-acd7-1c6753e5b54b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ce5fb5-f1c6-4ffa-a382-e357e47fce66",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65fbcf45-ed70-48ea-a464-3bd22cc7a552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c0b0546-c06f-4003-86e2-48ec49f944f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4deefda5-fe78-4793-90bb-7f899b89642b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6052e94d-70ad-4716-9644-53853a290fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ced5108-0f90-424a-befa-56de4e1c5126",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3fac4de-6f94-4400-967e-15a291edf210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5131c04-1543-4267-ade5-5ee9dc0c9cf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "381f37ef-312b-4cbb-bd27-499b1552f706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1824a04b-b1c1-4657-a40f-5a2b05fd299b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f03912-23f7-43ce-ab99-0ba4166bfa08",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b723f335-2ea6-4ab1-a545-4bd02dfc238d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "058c3c67-f27a-4716-9172-aa251c40f2b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db3eb4dc-5a3d-48dc-a03e-55bfb8f3a42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "45de6b29-215e-45c0-9d93-1518f01918c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f06487f5-74b5-433c-98b3-ca5f14634123",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f5d0105-e26f-4cb8-b4c0-d492b0600d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb39e566-cfe2-4d8a-87b0-54d7f2e110a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "096c095c-1e5f-419d-958f-435153af2bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "788656b6-34dc-4838-8589-24428ea0549d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a693482-365f-4c52-9524-422d00fa38fd",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b3304b7-fcf3-43de-86c7-19b9f665dac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b14baa16-dc76-45e2-91f7-ad6e89719010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43214d0e-275f-48df-86cb-998ee59f1364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3aad4ee-1720-40a2-beef-ed4a0c88f7a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7825f00e-8a3e-4d83-b0db-a8c3d3123bf8",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b6d6bf-6bc9-4cdd-9a47-a3e95fee4679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99579f0a-4687-4502-b2e0-199791d0ece1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2aca1eb-8130-424f-a357-0a864e526266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "29943f2c-dfb0-4b8f-aae4-901dabb11f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "587df771-7870-4fb1-80bb-61764cc8b861",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "174276fa-c971-424d-90ce-8240619803d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54d28df9-8e1f-48b7-809d-1e05d144f60e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b71088a9-6b9d-4f01-b570-7381b48200fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0800ae37-a10c-4834-b72b-d8262f0e1202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc607d5-69af-4c14-9323-388d6f9ba2f5",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "719430ab-2170-4e62-98e5-666e75db6015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5932eb44-c552-47a9-bc94-eaa3d69885fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55638c76-9b9e-43f7-a03b-9ebe93bd2c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a62ee02-3709-48b6-8b96-9f4738c66e16"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b79a1bdc-8519-41be-8590-0c0a60f716be",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b66bcbed-3abc-4709-a9c6-61d7c60bb544",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d91a60a-fee8-4727-a49a-aec9d0d9035c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e21d1da7-745b-4a07-83a2-8087641d8fb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7ceb66-9f88-4fa5-8144-bed72581ceef",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "988a0ddb-403e-491f-b6fc-3da9394802f5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47cdb5e4-547a-425d-8def-4e2d92bcbbd7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52829d94-45b7-4787-a49b-e7382dd799ac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "52a8b0d0-25bb-4886-9b5b-495b03849117",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3135ea61-bdcc-4fba-955b-98160ea82bcb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3e4bb02a-9cba-4608-9bb5-aa8f988a9852",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e6c342b3-bf11-4172-aab9-33f93f3d7e77"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d9fc9fa4-9757-4fc9-b8f0-184107d512de",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7ae0917b-8076-4f7b-b641-b6b74fff6d96"
                }
              }
            ]
          },
          {
            "id": "8366bb75-bee0-4c62-ba90-bc210b45c4ae",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c39ddf30-c541-4abc-bf3d-778b31691c52",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "de7e48f6-23a4-4cdc-ab20-a4fe8247566b",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c270810-bc50-436f-860e-bda501d9d7c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c087950a-3384-46e7-ac13-2afc7293da80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242a6159-dde8-4b04-b670-374c34da8fbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ae7845f-a151-4aa3-94a8-11e321e0cb5f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8fc6e571-9d03-47fa-a034-11addc3f5927",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9affb9ee-6770-43df-a1c6-8913eefc3445",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "41dbabff-1a6d-4e0b-a701-9b8f923b45f9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa7e7bb1-a2ac-4651-84e1-695207bb522a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e224c218-c040-4802-85be-e679758c253d"
                    }
                  }
                ]
              },
              {
                "id": "5a69dc1c-aeff-485c-867a-6663feac28eb",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "85a3e5cf-9761-4a5e-b5d3-28ba6b169e76",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7663fc98-451b-4506-8454-eb0719da438e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d82f41b-82a4-49fc-aceb-c74af7c252e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "453d3778-d9d7-4381-9080-3f2d65337511"
                    }
                  }
                ]
              },
              {
                "id": "0343ebbf-adc8-4bd2-9da2-43d527438a79",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "62444b44-625a-404e-bc91-088e0a5a34ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9856a428-fc0f-4a1e-8be1-78affdd0187f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a6682f1-54cc-4fe1-ac90-ff141ffb62c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d3c90a61-017a-459d-8992-302519984082"
                    }
                  }
                ]
              },
              {
                "id": "2d9b79a4-845c-4ab5-bd8e-b326242e1d35",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ea12bf5-8a41-4455-bb8b-2b91507c4338",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f5732a48-c50c-4036-9509-2192d4c5eb19"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "884ca72d-a65f-4de4-9618-2fe48e84f75c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "22f578f8-04a7-4320-b2aa-71bb2c48119a"
                    }
                  }
                ]
              },
              {
                "id": "82b6f7b1-ef3e-4403-8b45-153df2151e5c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c847292-2357-4152-bbee-370f6d905d61",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b7c6e9f3-aaf9-4d8e-81a4-b1b71035bd00"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e8618efe-ecf5-4155-ba12-1dd77ac33d14",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f209f237-969a-45b6-a90c-fbc34147cf42"
                    }
                  }
                ]
              },
              {
                "id": "4efee891-1519-4e3e-bd80-654b2b10ed0f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f08d8e88-18f2-4059-97c9-bffb94554246",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9aad7d3c-ae53-403b-bca8-6e4d701604be"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9374e2f7-8035-4c69-a2fe-949b1c73de5b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "41e333d1-8ad5-4e12-bde2-7f4f891ac591"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "55f77f07-3ac9-4a1e-8e39-746e6a946648",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b38c91ae-c77f-41c0-ba30-041ac9a06db8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2b186363-ec13-4fd7-8417-878fa7b57638",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f8f1c7cf-871c-49ae-b185-44b8ee43658a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9077b0fc-02ad-4acc-b6a6-8a7b0be46916",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "6ce5ba2a-b18e-416b-8fff-cfacbd697e49"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3351d7b4-22b2-46fe-95ba-8b916a6d6eca",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b149b558-8fac-420e-a2cf-f35cbaac1bc8"
            }
          }
        ]
      },
      {
        "id": "4724ddf1-47ec-4cd8-87ae-b02d52b78061",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9028909a-f18f-4254-971d-01596eae34b2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "61566225-4423-48f4-8b74-1bf4be318c65",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bb26e92e-50ec-43d9-93d9-7ed159454071",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "769ac4fc-41c0-4813-9c45-2500a53b5c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bab667c9-27df-420c-8722-12a9692a363d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7870782e-0f2b-4094-bc48-68c2633d8c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d56e0f4-d2f7-444b-8d82-e46076d7bb33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c6350ee-3af7-4fd7-92fa-9ae5dedd9214",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e29f1266-7f8a-4aa4-9b79-9daa0ab83269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b90112f-cdb6-46f2-bf71-75b3a03adbae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd0c9895-df03-467b-bf0e-1888eb087a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3345f2b1-a11e-480e-a2ca-c9c64b560fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c945956a-08c0-40d6-a282-faf8f99b97f1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ecdbeb1-6d03-4e3d-a71f-e8dc636d0bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59f175b2-ae29-4422-986d-89558b1a471d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda60aa4-58fd-40cb-ad5b-700552f550c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "829456df-880d-40dd-b29d-a68e9b14f966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b3d966-c3a2-421f-981b-7126cc0f9532",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "194f3c7e-a9f1-4483-95f8-09603556dc7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "585b7218-42d4-4a98-ab38-5ce7b90c06b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36c827f-7ce9-40df-a1e8-ac4909ebd925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a34416a8-8367-4d28-a3c9-237fab246b29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb48ea9-5260-4aae-8bdd-2e30602b2c1d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15744de2-dad7-4289-9ea2-0df7085e2420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a469fe10-fa85-4246-992a-72e2362b125f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d00b02d4-9fc3-498d-8e6a-d745df1c19fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a0e1fe3-89e1-49da-b629-f709843589e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96389dc7-d255-41d9-aeb3-e354b6518359",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba01d0e-1689-48da-a9c2-c530d3b74450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5654d064-45ca-41e2-974d-8c749b7abddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6b74d2-5765-4573-9e60-6c25d428ca89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb2401b7-7938-4d1b-9644-873a95e421fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d042d6-e536-4b6a-bb0d-313b2ec2a315",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83919f40-6fd5-4088-94c1-0b3a453d5808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67f83fee-6e83-4420-a7ca-431da74467c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d7dbfeb-1e7d-4666-b65a-0ac0cbb526c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3399d2a9-6159-4a0a-a312-c890271389a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f85bc9a9-abc7-4240-9dcf-89ec6f1fcd0f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5012fa9-e875-4508-9b65-70e766fd7d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ad1d70c-b5f4-43a4-9220-8b7bbd9b7322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed08cdb-90e9-46d6-9a8f-a24a2772201a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2ceafe1-3fb3-4ff7-892a-a8e30c8ff171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f5de41-f4e5-4b30-b7c5-5cccd7354f03",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39180126-fc86-4b4d-9f31-1568268d244a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bfb6281-46af-4d38-ad37-38e38d61bf5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781f5af0-aa3e-46a7-8b09-2f218bdc159c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "71c0a0c3-0430-471a-ba2c-dd5b59c2b9cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd4c095-cd4c-46cf-b0ae-9a789e1ccaa9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce3a91d-7846-4f3a-89ff-4577e1498036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dadca627-b4e3-4624-b041-9ad1a199a305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "098d72b0-498c-4dca-9de7-bda8d2ea7bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e72d5b59-fc7d-4431-868c-4bcd2e05f121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a96808d6-91f0-4757-92fd-0187d0c6bfa8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "942aa58b-d61f-4deb-a0f7-59d89098f290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "535b7987-cf0c-434c-b495-b4733cb13c37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b64297c-7616-4e87-b38d-eed8b9de13cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "cf009e57-0bf1-4c22-bd5c-762e08e5f252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6694356c-9915-4986-b49a-ddae392870a1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c31416-88ea-4d8c-a823-87ee6d1865c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42a59909-594c-482d-bcad-307b4899f319"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f1c796-f6ec-483c-a52c-01a3455b58aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1a41ad27-cdee-4f54-8971-3fd415525e11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dddc6c50-2efc-4200-955d-ab2d7d751a26",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a095be-c25a-4bd2-95af-02bfeb4ff324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c35bea3a-c3e2-4b3a-bfc0-0f1c40b0b9f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fcf01aa-1103-4675-a394-c22b25e8911c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a397d9ed-1e5e-4d08-8634-a505df4ceb43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89cbaaf2-93e3-4d55-abac-1ec44b632842",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7023a505-f87e-4d41-ad1c-e731dd6c7b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbe696ff-dc3d-441b-98b6-1283c9d4d750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85422955-8e9c-4e8a-8008-42cc24b8be50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a28a224-3353-42e2-9084-7e5854996ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc34249-ce49-43f4-8150-04745ad8dfad",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e446996c-ea55-4afe-9ed0-ecdc85630950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a184b4ee-cf41-4f64-bcc3-eab7695e5cb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daed7b91-d9c8-464f-a2b7-513b29fe0b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "07740096-9b69-4af3-8624-92d7eba1043b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "984555f3-37bd-4b1b-960f-3622a100d7e0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe5c0064-b5f9-4614-8f40-eea2e16d5fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c456e832-e114-497f-8576-83f626e68b98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa142499-0990-4017-97ec-e91ac51028c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4b5ac78-cfa8-4575-bd3a-26a9125bb994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "021d9acc-cc51-402b-8d1f-ae3a4a61e778",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82568a7-3469-49b2-be96-db2e5c557296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa9a2d4c-9423-4db2-9ad3-8e8c50feb6d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dec6f95-d610-4bec-8994-c7d3cff2902f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "69866843-e8d9-4552-a33d-2c40f174f860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec93175c-4b6c-4d94-b926-df302fcfefd8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ddf986-825b-4f26-97c9-dd6800557ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17f86750-1a4e-4a08-b97f-4caae680a566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1958ddc-5ac6-491e-8c23-7931621f208f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1222fde8-e3f9-463e-bbb0-e0a9f5adb44a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1930324a-c047-43b6-970a-da47011c8046",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e51fe148-583a-480c-af42-7159d7db3c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c286b30-e54a-4b1c-9453-f03e4663ab58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f68c77-081b-4ec5-bc85-3adce141c42d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c7a46e1-34fe-403c-8c0e-37762aaceeb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "010f98d1-2fb6-4851-a5c0-e881f850c693",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec84777-c8ce-4118-95f7-de232d08a862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6102611-e437-4f1b-a2a0-e5d4c52ee6d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b29984-bb8f-404c-ae03-418184cc7f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8af45b3e-94f3-49ef-acbb-36abe7299328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d308b4ea-c862-4e88-96ad-a5a27fab5ff3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce8845ab-db43-4ecc-8ff4-6ae146b93e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd4f434c-5577-471e-8fbd-969c816ad865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae54d28-db27-4f32-8ba8-c99ac30c45c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f0a97a0-64d9-4b8b-9530-7048090e25ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5861f86-a268-424f-bd51-cc16de425bd1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90f45da-194e-4af0-af61-efb81e8e5abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff6d393-2258-4131-b383-2d8ba5068310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f8d004-3236-4272-806e-4118630c0158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da167830-6c6b-4f47-9b94-52ff90661501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b051c9d-bf09-4dcd-af0b-0f795f8b134b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e74c5ae4-a1b3-4155-9e98-1998eaccf61f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff3a741d-a299-4b9a-94e9-5fd43e4689e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f2fab8-fe8b-4d96-9c3e-37e7c0e33bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "026e6b30-91b9-43c4-84a3-8d52a2c0c233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea43e0e6-2334-4257-8044-5909bda20b52",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "002629c5-4c57-46be-8837-7ff083a6c8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f08b34f9-5ae1-4000-b3e4-a0f213d0e1f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceaeb5d8-4042-4aa8-9450-3a2836bdb928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "682bc6ad-af63-4a6c-a121-a2971749b522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7517f010-4b9a-4491-8398-e302a93bf6b5",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62f80cc-0a56-496f-b43a-7f45f43da7cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3a4ca32-aabd-420f-8637-d2f4a59f15cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c77f0c-fb06-477c-907d-45d167a4470f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5d8fd83-904a-40a9-920f-f7d3c6cce96c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a355c33b-2838-4669-906b-b2008e3f44b0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b171565f-7a64-4da7-8926-d1b53650d151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1022f078-b160-46cc-916f-0dc396175955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4106b137-3fe8-4afc-abc9-438161d54db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c560dfdd-3470-4ce4-b66a-6da640dbc455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2d1b16-a477-4d12-855e-fe5b059d382b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0b834ee-28c4-4212-af65-83d22059d926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c4a1be7-5fe1-4436-a353-d6506718e254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e31703-37be-45c0-a4b3-2af3aa49b385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df9ae5c9-d49c-4fc6-bc32-fc2857323383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "875603aa-f928-4639-aeaf-ae80c2ee54fa",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "568d367c-e6ab-4bd5-a2e6-8e66719b9ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9e7d7a5-e129-495d-9138-c221322aa0cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfca47db-4f7e-498e-9b22-01fb47ffe705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca005837-024a-4bc5-a312-d045e34024c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edfa4c8f-8698-472b-a350-469fbb0bcebc",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a1eceb8-7a6f-41ed-bbe9-320db579f591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c417613b-8d19-46fd-b10b-27310f4ffc80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca2c5a38-42f6-43a9-a56d-382ea5d80ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ffdae44-46a7-4429-aa37-b6c82b4dbc75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c03ac5-bd93-43e4-9315-75d713e9f587",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "862ddcec-9f9f-49e2-959e-dd852a9e069b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c63af6c9-ca7d-460b-b0a8-993ec5b8aec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4c929d-689e-4bbd-a18c-a6c6b9b26f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90fb76d9-84f0-43f1-9ab4-f402537032fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1549f263-e020-42c8-a78f-cd10abc7b33d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "005ced1b-87ea-4447-bd77-4b38bd70d380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e0ec164-bc6e-41b2-8789-179290142d97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e783e32a-3aab-49c3-b61a-610cbed87eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06983c01-e2cb-48e5-8b1a-a6d47c7ad587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fcca22e-0c40-42de-b767-fe4f92f9462b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac782d0-9a87-4825-a0b5-8f75d3166fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abcc7f6e-7bd0-4327-936f-2cdb7f64d7a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b916e847-87ea-413f-b896-c14e1ac91106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49fdef6f-14dc-4aca-84c2-5cb9a8430842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de75223-9146-4e21-b782-d14be7cec031",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca22a97-91b7-43b0-9735-f547d2c0214e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1d65a00-814d-446f-813f-f8e3f4ee57c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c374a1-3990-4983-a4d1-7926ec49e0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8c1414c-848d-4d1e-a993-e8ba19990562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b776ac-ff27-4d8c-a3d6-54ebcfe323ac",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ce6100-d746-4afd-b22d-ba1a72d6488e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce5ebc8a-c0cb-4bbf-ae6c-f081248851b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "508ddf62-20be-425b-b648-585b2a469c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9c7e6fc-ed71-43bb-9d68-ab82ec0dcb77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350c3658-ae9a-47be-814c-b951ecdd0ac0",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c5c67de-e692-4905-8734-e3a627adaf9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13733ba3-e937-4f02-98c6-4965aae0e646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67263f80-4e9a-492d-bc17-7bf7dd8c42e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5af69e08-3053-41b5-b355-f6407fe3e707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92bc2b42-aef0-46c2-aaff-bfcdfd9d9077",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "719565f6-2faf-4934-9307-53d9e192bcf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcae2ea5-a054-4439-a991-f22324e46c00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75268bba-4334-403f-880f-366a86f00df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f0212d7-de30-49fc-8d5a-4a2a2fd1bb40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6ec0ea5-0a2a-4694-b384-9038a2e57636",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38429edb-f71a-4062-ab52-12c83752c5da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0837e27-a713-47e6-b461-2bcb8e696939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d555671-0bf3-4e2d-b541-5da926a1e164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e3f29d9-6e92-4e2e-bae9-0d8266795e65"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fdd9cd0a-aa48-4773-9420-38e06b3598a1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6d884d7d-b375-45a0-b217-6367212ead91",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f53467-ba03-4fe3-ac8e-9688c5a68aa6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e9d55367-badb-43a0-ae48-2e4c9f8696ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb691735-5dcd-45a9-a3e9-7973f84d0bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8b3a324d-2785-4f4a-a24f-ff1dd6dd4584"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d8202d6e-d068-482f-9177-2a3cd863be2c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4aa94062-c375-412d-ba80-e57cabd327bc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd57ada8-2a29-4a7c-b99b-0cce0c19e38f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "18b7ef1d-9fa9-4cb3-8f4f-f18fbb1eb418"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3617269d-3809-4ff4-aedd-7dbfd5cfb9a3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ecb73a43-7512-4828-85df-76832c182882"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "020dbc2c-c401-44b0-9532-2f55b6619a34",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4af94a9f-33ba-4dcc-a3d1-0ccb386727b1"
            }
          }
        ]
      },
      {
        "id": "fc3f435a-8a5b-44bc-a7d1-5dd8a99bcc8a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8e6d91c3-1d60-4ce2-a04d-b1e09062b36e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "01de8823-76c4-4c21-80ec-808ceb7e695e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "38fbfdcb-d8a4-4320-a7c6-b790304c49bf",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b5e2728-d42f-40cc-a94a-cc72714fd444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abd055e0-8dc3-478b-9ce9-bbd96d414881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec41f13-b4c7-4a4d-886e-dc21981b615c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4213fea1-95ee-4e8a-8c85-93237bd82451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faf3fdae-649d-4614-8af1-f99daa249192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b5b56b-09b7-45b5-bda3-137599294748",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a9bb585-dd7d-47c3-b496-73344f7698d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b2db5dc-c5c9-42c7-b36b-55e0f3049b95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e785b5-a1c0-4466-bade-aa2e0e27dd14",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d732de63-b22f-44f6-b888-5a03de05b2af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef130452-cc2e-4e7b-9778-bf12310cafbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7846ff24-9b09-4bc7-99cd-51dbd75741d6",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4bc97a1-72d1-439f-b8b6-a29dd8d9aa6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0773486c-38e7-43e7-b517-57a28c7eebd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6caeeb45-becd-4a6a-a03b-bcdb3466f6ac",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec692746-556c-4b4f-baee-da88d2e7545d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92dea73a-095a-4d8a-babc-1e6cf7a0816c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e36099b-dd20-44e2-9cc8-ed9b2fca387f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "551acbad-154d-4f0d-a0db-b3a16eabf070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2ebe9c6-16ab-4ee8-9188-d0cb46f051e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e902be4b-8789-47be-9f29-69345c50f802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9b2023e-c0a3-4ccc-97e9-5d968e6a7b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0df09d5-26c9-4ca2-85d2-74f6c21fec73",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073719be-c335-445a-9da3-f9a0891c0dbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e693d74e-d045-4704-aed8-40023dc4e57d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a025f6-32a7-40a9-b443-13ecb6ac8d95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d2f29cb-caf5-46bb-a40e-3f876694b89d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e3ff00-339a-42c4-b7b8-67750c91f405",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6a649a-dd46-49b3-90f9-f9a00ba47a9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6eb2ef77-2dbe-4b98-a1c2-980235d0bc4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66230e5a-154e-465d-8a3e-1b9ff26bf8ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d392bd7-f7be-46ff-86d8-1ff2e3d9c872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6de6d3b-ab5c-483d-aec7-cf97fb298e8a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4cf50d-f2c9-42c6-993c-a4cf8bd00a06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a044d5e-c1ca-4269-b252-545320ffd009"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "475f2e00-23f8-474e-a478-fc3d9d39d030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d2284d9-f3e2-428d-8bb8-efd937e68566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e8062e-dad7-4b61-973b-fc20543bb4cb",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f6370c8-ced7-449c-a472-01bd1c2c16da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7490723c-bc99-4c3a-b0b5-55653f229bac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19615619-c8e9-418c-9195-11b885c9169d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84ed8fc5-b51c-4777-9a7e-2ce491a22a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb2b899-2e3a-48d8-a58c-51bcbc22e65f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24693c71-5ce1-41ec-9b26-8b0bdccc0096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f726844-609b-4dfb-ad3f-d49709f2fba7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42928f0a-88aa-4445-a734-01a125293f39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a9eef01-caa6-4af8-aaba-76dc8e1401d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f3e3bb9-0374-4092-bcc4-288dc0e129fa",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b44abceb-3f69-42d4-9c2a-c113b9985fa1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c067b26d-d8c9-48bc-ac40-af7ec786ca28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f22e70-baad-4b49-8531-ec849059854b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d341f7ee-afb8-48fe-bdb6-fffc55182b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8dac764-0aeb-45a4-b139-28f16e22398b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b58c1a9-f3e4-4d65-86cc-5b916abd5e3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a53debae-5a5c-4aae-9d76-2e8ea6a32a32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f779c9-2d66-424b-8ae1-3195e2a3ee3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3720ffe-b7ee-4a84-bdae-c2aee6002cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be5e8a5c-0f98-49f1-826e-dae633055275",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "196047df-a048-4258-a538-4620601f2981",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bb37f55-30d5-4217-90b9-beca5bcbaa25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af64cf5e-7e76-4b0d-a4ef-0ea90c470b5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5c51869-0da3-4f8a-acdf-a7a896be3d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dccd1ec0-35db-43b1-895d-42c6c0b7f3cf",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44f9340-c9b6-4a56-8f7f-93dd591aa59a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19dfad40-bddb-480e-9ab8-73ad9909252f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55788d75-6908-4923-885d-7b4d4734daed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39d90da5-d698-4875-ad3e-544847c5ddd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93dae2a1-4ce9-47b6-a3b6-c55e50e83f0f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab501cf-3ad9-4b0b-9a93-c4d5663019f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6222dcbc-3a9f-495d-8630-ef24e182e76d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c9e972-980f-4313-91c4-ae7beb8168a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7414e83d-ab41-44d5-9068-11b74533f2c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5001e53-c902-46db-9c69-fb007682916f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea78d95-2d18-4b4b-82a9-5a9d86c9ed60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c79e67f9-469d-45aa-9492-c39d7b72122b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "119aebfa-19f0-43f8-859f-e98620847f9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e80be794-d423-4f3d-8cfd-e04065f0aa07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "890794c0-45bd-41d6-a362-2ec9ec5e4825",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c3fbd20-53e9-44c3-9c7b-f088d46717c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd498eb2-076c-46f1-be3f-1fed0fc2684f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64129795-cb9d-42e2-8d6d-f9f2471d0257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "776768c3-6e9f-494f-8c0b-bb528ddbc8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c65729-6417-43ef-8cff-810a2a2eed8c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d095512-f87a-444d-972d-785e76bffdab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0bbbb84-1884-4612-b037-e3538cf85244"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e1a6fd3-4f17-4733-94cc-1f013756988c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb209f0c-5053-458a-9834-7da3459e3255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88cda3f6-0286-4913-b7e2-851ca62192aa",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1449eeb5-7902-4b87-84be-e0d78abcc917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aa41418-3ca0-4bbf-a205-d13bbed269f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8eb723f-2004-4e66-a1fb-075354d95b3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b36826c-2eb0-4e29-8fdb-23afd6177a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aeaf9d8-871b-4f24-9269-1b1341445219",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08bdc5a4-67ed-4340-9fe2-092121f117a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdd846d8-284a-4904-85d4-ef1896f6a93e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9edf297-f099-4d6d-b73f-aa86dd98fded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0b8eeb1-2fb6-4e7e-be59-f352d8de86b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9909a55a-f10d-48a2-9b2e-72ae5d54d32d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40966179-e676-49c1-a39e-94b12e406a6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc1062ec-0205-4395-8545-6727596c2f94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd58bff-cee2-4f5e-820c-726121fbc8ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a753e0c5-e71e-4bde-a0a5-c5579b1779ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0900c4c-19d2-4a5b-a0cc-da95ff5e789c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df58a9c-ff1a-4477-bde9-431495ee4e46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb81e725-e101-4901-8d0e-942e2ab38f94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d4615e4-b10a-409a-b366-2578c04347f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c4020bc-53f0-4840-8287-e77713f3f9fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfffde71-5440-49dd-9a8b-768bc7d9dfe1",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304633d8-74c1-4859-a8ba-c93def5ef0f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3e8bf76-6714-42ea-8baf-72ff68f59149"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd919b8-6658-417b-bfea-e286f4cb78fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b166c6a-8376-4da5-b594-1f46d6f95e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bab02726-d747-4a6e-abac-20b85904232f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca43410-4f17-40a5-9762-e4a2a9861633",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23c679e3-5389-4327-9326-a78e19c900ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5dbfa77-6019-41f5-a508-840f56e53b46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e98081d-1127-4306-a3af-6365c5bd60aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4989583-d913-44df-b482-acc70c6c249f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120e2622-04d9-436a-8c60-8cfa21f2f0a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98bc3468-8004-4795-956e-d79e2dd0e5e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c33b60-6c6e-4af4-87a1-88e1d83606db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ad81060-671b-458d-8ca0-07aeb644da6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5baf713b-8b48-4c6f-aa94-845e32b0c0e0",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff4e4787-4d02-4137-92b5-1b543dfd4827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7384d3cc-2589-459e-89ad-0da3f8443461"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd07a23f-5b1f-433d-a6ec-bdc6a7969497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b3f954b-b444-4feb-bfc1-9f9715b24d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9625e05-cf75-42dd-b9c5-f7d91c663020",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a8b687-64dc-4f60-be46-383458a8084f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79b20588-f77d-474e-b925-d14054e45466"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8008f231-1999-40a7-ba63-a4a9fa413849",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9905584-bd0d-4f4a-bcc2-dbfe4b78aed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "884be5a7-fb7f-46f7-841e-e4b2f8d7cb0c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d67466-66cb-4397-9381-4dd90c5f185c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d8407ba-700c-45e0-b411-081728f63ae0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "038eec62-e772-44c9-82e9-65b0622e0f13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "553376ce-edb3-4223-9a80-f32f89bfad44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c222f19-5802-4e14-9618-cac00a23fe6f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a121b19-5f81-4205-9211-9de67131c287",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d165019a-9fd5-45b9-8de5-a9e3577f0f69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "640968e7-c55b-4865-ae75-b46d523aa81c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcc68f64-4bbc-46ea-816a-2c0ca464d646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1d7c6a-a5d9-49c4-8d8a-63b60154fd91",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b590e312-5e9e-419a-9b95-fc35caf4cb51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "180236df-a1eb-4243-8341-5a9ef35ff67a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a2c762e-2d9f-4179-a200-eed2a73c5ddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d520369-5580-4e73-adaa-2541e772e461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4bd2c08-67a0-440b-9983-4e5a1eef8364",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2bd5c59-a999-48cd-9ac1-5514784003a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ffe20f9-797b-43f0-972a-d6c710259e41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe09b50-c304-4ea1-a084-8cd326fb288d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa0cb5a1-6d0e-410b-9f6e-7802e7b147a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401dcc7f-aa56-4c02-ae6d-704d63776321",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "423fca13-c748-4fd5-8be9-e531bd93065b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5b26736-8896-453a-b584-258efc6ddf1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03d159d-7d3f-4207-820e-c9a429237e20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6ecb8db-6f8e-425c-88a5-0ed1bb267ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7cfc111-85e9-40ae-8db8-3dd259c1eb64",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "989764f5-1310-4016-8326-229d8c9f9bb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d0d76f5-8a29-4239-8fec-19f099a86ee2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dfe9e61-946e-4a1b-895e-9b441ee49ca5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58429cf6-8631-4c5c-a768-2dd182204119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1751dbe8-e256-41fa-a6fc-48a0a87803c4",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e57f23-9605-41b8-ac87-5094bc4a66d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05601b33-45e3-4f4f-a32a-01cbae954df3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf65f1b-72e2-455a-be22-5b32645a16a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb98fc78-cb0b-4d35-9a88-b3a29ad0dd94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b16a633-f6ea-40ba-a3aa-81ccf3f94e61",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e17a25a5-7444-49cb-8241-8e9e1379615a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5850df19-d705-427a-8d7d-529f2570c66d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "505e0afd-ed36-4926-bf1e-bbfd33eb85ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "951a66f8-9270-41fb-9229-d1ed934515d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c500112-3c9c-4e95-96ad-77ff3358041e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd8c2e6a-458c-455e-af33-38e2213fd576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52d6e9a9-70f8-4a0a-9c90-db7121618d82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a2d85e-2713-46af-ba12-f62fe677a057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64e560f8-9ad3-49a8-ba44-6d87025210f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a88f37-e665-45f4-9052-1ceb839a73e3",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4daf9f6b-7a70-4b96-ac54-0fda9f9ea297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dcb221f-ae47-4dac-83d9-9c6b6fb8436b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5f99fc-3862-433b-9d4d-ac514c9536d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60086773-501d-4ee2-a1b6-b2ceb253d14b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a72e4f91-c599-4ea6-adc3-6d01ce23b414",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d010cb2f-e7fe-4d25-a7d6-b6d2c92d1acd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67a78f7d-8a07-4a33-810c-64dc9d049989"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84fddeda-12c7-4878-984b-701a5e7bef04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12a348ff-18ee-42a6-8e41-85215027acc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2224a826-e4e4-4eb7-b9fb-4cb7970e1ab3",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e47c2e-4eae-4327-a3e1-e63e45094203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52380516-b6d6-4528-8470-6948789e574d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2763462-d2f2-4bb4-a25b-efce9c052666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36ca4867-c210-4808-8a33-728025af794b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e5e0bc7-47de-47a9-b6aa-24a588e4dbe1",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1e6de9-f083-43ca-a711-834be7922529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4889fb4c-7d16-4c97-8732-d034710aea80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a866b5-19ec-425c-b3f1-88f474634dcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6937f5c-8be6-4501-9cc4-a53f1a711c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f09b7d-ef89-4831-b1bf-4ca8379c3845",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d18766c2-fd1b-4a62-86d3-9c30d1d652bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cb53551-217f-448f-a611-59b0b7bcb6df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a076b532-2578-4940-95e3-4d0e1f52b5c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "193c7f48-e936-465b-ad43-5373545bbad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44464936-f5c8-4fdc-aba0-da0f8d8a284b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "618de3db-5728-46ca-b2ab-400b26663f55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8efd76d4-f2e4-45ec-9de2-c1710d93230f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81cfc382-6aff-469a-ab1f-df1fcfefe426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e77281a-69df-4b1d-9535-49b88524c3dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9403bad1-264f-42d5-bb98-354fcf3729a9",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b48328-e99e-4812-9bb1-322c5810b5ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71ab6a7d-1dac-4267-8b2e-0b684bb67eec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb63d502-5892-4f0f-abca-fdbf4f1223a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "120d8272-81eb-4d31-8026-348e3e2508f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e644a994-e9ee-4268-862e-2c4fed47209c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9382c88f-5de6-4d43-8e08-6c075002b08b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49345a67-edb6-42e6-abec-726bd48e7d5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a62cacb-d1d7-45be-83a3-95a17c464a6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99ed5118-ede8-4e2e-9fa9-8f6d951cd981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef26b753-3165-4bb9-b553-6b738e233ffd",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e16a8176-7187-462b-bc40-7d019149696d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdd92074-fc98-4a07-aff2-a502f2da7da7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a9a7d7-cade-4934-b2d6-23f14b3e4670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2dbb1d1-6818-41e5-bb9a-c8a02d731a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "357a3923-6eaf-4bb7-b9fa-e818e8afc22d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5982c75-2eec-4df2-ba1f-ab3d6e208537",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aad0150e-ee71-425a-a086-b2082b33d796"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a742a124-33ee-4faa-99fc-48d53a42148c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99fedab2-e84a-47d9-829e-76c89cfb0df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7618d126-02dc-46ea-a619-77513c748089",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f40c2e84-8527-4df2-9981-d41894624833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02869bf2-069e-4ce6-a247-60e4fa65e84d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "971f0baf-b240-4502-98cf-c5d8c2c8e406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb181692-2069-447d-959b-587a4e9f2e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "694866fd-0abe-476c-8e6b-175e4f03a511",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d66339-1351-4a1e-8bb2-e6c67ea6b5e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3190140-04e4-4f48-ab3a-a53037938305"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3be83fd9-097f-4c94-b439-79dd9be7ac20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdb6e87f-dc33-4941-a4bd-5f0ef26eb714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d01f9e50-295c-4db7-8739-96da4333cbd7",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d552a0f-7e72-495f-895e-1a04fad35b69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe507c17-e5ed-493e-87a4-9fef52dc0420"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8905b923-c564-4958-80e9-3fe5b6455e53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "393a9b0a-4a2e-41e3-b7c6-41a675692234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30cc0bf-3b61-4393-b22a-4ba281446a11",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a583a967-682d-4519-800b-24e1db253999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed679062-41c1-4150-9a5d-add09abec0bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d108c39-8528-4856-8cbb-d55630562bf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cebaff0-3a9b-40a8-b343-8980349d4084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53a52a52-7c13-45fe-9238-54b1a3487013",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a969765d-2f79-493a-bbbf-422d1b6ce877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40b1e5ab-ad32-451e-9fdd-8db1f7de799c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27893031-6306-4603-8177-45ba894c4c9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3051fe95-e9b9-4af7-96cf-6bbfb0738e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8702374a-bd41-450b-b2a4-5dac21f40b26",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98407c7b-1ea2-44d4-9758-d6fd48643373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba2f2e41-67f6-42a5-aa5f-14ee6327b0bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "447a11f4-a373-4aa6-94bf-6c370d1d5644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfa28afe-9b7e-4837-9fb3-b26b187e363c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ff4c8e-e5cb-4306-be97-8dedf1486148",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ce21563-35d0-4ad0-9283-098cd0a28af7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a8086e3-dcf6-404b-8c2b-4041e2809cae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2bd9439-f7d0-437a-b8e5-c9d1ebcfb02a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "023066b0-b578-4f3b-811b-4c3b6f2c7a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2771b058-73d7-423f-a9fe-41e716473c97",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001811ae-407f-4e0c-8b68-31b96d922d14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb05d6ce-3596-418c-b0ad-2074f6d85294"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1cf9d4-e094-4627-b333-9a0d71f88f2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea6551cf-9b47-4364-acd9-f98e673188db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e059580-a3df-469e-a2ac-98bd2ee27ace",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd42a50-039e-41d6-b28d-4f352d39f9f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbb46870-89b8-4926-81d8-99e10cbbeea9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8643a5b-9087-4d8a-882c-78e89dbe6991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c93fc3eb-0111-47a2-8f9d-b72307fd9c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3b161e-dd48-48a1-beb6-c14c1adc7c73",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aac8916-6c33-4587-a0ae-0353f15be315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "777576a0-416e-4193-9602-92361fdef988"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1682e851-5489-4b22-b149-140156a69a48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "939d9559-2eca-4520-bcd0-65ce19bb6339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5c8b1c-779f-47a4-9cf5-b6a473188c7b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c30ee6ef-eeaa-442d-b99c-034219e164f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ba5761c-a82a-46d7-9abe-103b56afb7ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1498b102-191e-4eef-b158-731bb8aa61e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a52e6b3-e900-4a5e-a360-bb514d8dec5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a9220a-5237-44fd-8375-4fcb660a2039",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4510fa64-d4ac-4b51-8461-01f502eeefef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc363b7b-5f4b-4c3d-8734-7bd0a32ff9fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55dd703-e99f-42f5-b1a9-b445945e58ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0c15535-9bcd-402d-87d2-ae636d9aebbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5436406a-7ddb-4e03-bc27-2bb370579cde",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e678a4c8-e491-461d-8da7-ba261c308d27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b45bfb80-db9f-42ca-949b-55a56a2ea311"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b02e3442-6876-4302-b8cb-18720775db6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df4f7536-9fe5-45be-9a38-aa2399831111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0773d42-9e0f-4235-8ef3-d36a09f39c3a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5f63d4-9876-4174-8da5-bf2d81654dd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c306aff-924d-4e0e-bbed-62ce9092f81c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40d3b3c4-b02e-4d2b-9bdb-2df1ddcec0f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c950895-55a9-4e81-8c53-b34c3774a970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5dfbf98-06fe-48e9-9a81-89b9a0e91669",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f5121b-04fd-47b6-b15c-c070e24a1ace",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be72b882-69b6-4989-ad64-2523ca7e2658"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ff5a14-7e6d-42bb-a9b2-1abd418f0a52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a746a46e-2c54-454b-89af-b9cdcc770ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "651914fd-7b0c-4e43-aecd-ac7ba86d624f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6afdc06c-5ddb-4963-9b0a-861e3709dad4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "236e21ad-0913-4437-85a2-0453e93e521f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "836a3ad7-5301-4087-b9d2-230148047dcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7ec8a99-4e96-4b2d-b255-8264eb1d6437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f1ecdf-0364-45b1-880e-aa8167a15513",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8daffba-cbc1-4594-a460-075f4f170418",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28ba69db-ab1f-4c99-9bf4-fa5df368cd7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c165cdc-1b8b-48aa-bddf-42bf26cd2016",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce4c6195-cf21-4d78-8a18-ba88f57c6235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f78e203c-ba5a-4e8b-bee2-86c398dcf82b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc7cb6f-3f67-4b7a-bf17-115152a6115e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94a6b47c-d4ca-424b-aac3-e32ff37fb1b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6406f87-28f3-4ef2-9767-6800183dde31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a592dea-44d7-4865-8bc5-506084feda03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a25e23c4-76f1-482c-931a-2097cdaddc93",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27e57a2b-bfbc-4c06-b215-2abe93e2accf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "163db099-1fa4-4968-928c-2a28de81294e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b15732-c55b-4f30-8d8f-cc4a16374ee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3379773-a8f5-4112-ba2f-5180378c1454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc2f0478-b523-447d-b4e1-7a4c2ee8d4ad",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "787347bc-d33f-485f-9eec-96debb99a1ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "924784f8-8473-4f33-8499-04be011a8c5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe4db670-838c-40e5-a1c2-d5da14f9727a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee99d3a1-a524-48f3-9ad5-3459a362ff26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c60c67b-50de-4a21-af94-874cc2c6a833",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72616dce-d7d1-487d-b844-7907bb5ea91c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d09b7c3a-118f-4698-a080-7ff37f1a31db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21591662-a135-49f2-ace6-6b23a30fe859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "502175b6-9150-4e95-b560-5481a79b5ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf7dd93-a89a-4cbe-bc5f-06e05773ca18",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d913991-ce34-46e5-9074-cd3be3cb5abd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02d2c9a3-5c4d-4482-8763-8c7405f94eb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50e8865-1755-4893-89e3-17d8d14bed55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0db20db7-cfdb-4bc7-82a8-62b0b8e93757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac50e3a-d8e9-4a9a-94a8-3ddbaedd9050",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ae38ec-a746-49a4-87ab-6142af54fd82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7011169-469c-40ff-9422-7959e55f37f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee5869f-e932-4b9b-a1df-57da2a891eea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62153899-5da6-4fe8-8370-831df928e15e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b52231b-66a3-4bfa-9834-e76a6a4d12c8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ec11c2-e943-408b-a25b-5adeb44b2057",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5830e119-e9c8-4be2-95c9-52c4e2811973"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef825a8-e6e8-4065-93bc-3f5e427f9aa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bb1b1d9-2284-48b2-ae28-0b8fd8d2bf29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999c93c5-08ab-4881-84de-e51c7121c65d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb746c34-618b-47d5-9dde-59dec9ddf3d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afcc0671-97d4-4b51-8d6a-37a9d41f1320"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceaecab8-d691-446f-81cf-25176cfd4489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26f6823d-dd72-4fec-981f-ecdce105077b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2bdcc1f-7862-4540-a322-905c2e984b64",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5795e55e-22db-45d8-b74b-a6270c5afed9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47f0c353-47de-4b11-8e40-864fc01f1e58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b3611ff-090e-4ee2-9c64-996de556cbeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "887a15e4-1fef-4f09-99dc-93e6e19d1355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa03b455-ec58-452c-b2d9-e3a4fc625c4e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b02715-ad32-43f1-a06a-b33ee9a9ff8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "587cafcb-3d37-4e7c-9d23-b44957708238"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "458c8808-22bb-409a-8181-7d5f228d85d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5b0f454-6969-4e2a-bc3c-2245b2215197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765089f1-028c-47f8-b654-cb19313bdb5c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab21ab21-14cd-4851-86e5-581c94456d6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08926114-81bf-4e15-9b04-16d0ff678684"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1f26ad-b137-4f86-977d-b9b1598c028e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01eea58c-7e52-49a5-830d-7a4c61530b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840a12b4-e570-4880-bfa2-19a7b44da16b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c7975f-8815-45d3-b484-3df63484ab08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d78f2d8a-7315-4694-9bbc-3f1cf4ab3c5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e392fa5c-1d22-4095-b45a-95134f6dc2aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "100da96e-c34a-49cd-bdc9-80b42531cec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c773ace2-a644-4639-95fe-66ef29936463",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7867ac1c-d830-461d-8b1a-9ef364d2f832",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9faf4585-d37c-48d9-84c7-499cc0890d76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c2356c-3210-41a6-b79c-8e47ef80c2c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64a9e7a7-65a4-439b-92a3-85f9bd4d0246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f87a63-6ce8-411f-bc84-76b52b9efffa",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e196e1d1-8192-4e6c-986f-08c4cfd67380",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6298353-6213-43d0-9486-119798c52dc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3139d15e-ed6b-442e-b36c-d45006fda76c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d894242-5152-4495-a253-f1b918faaa08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1513be3-b933-4fd4-8549-99af7bad8d29",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3acabd8-0ce1-4218-873a-5f7911d6a97e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "307dd5f4-6ff9-4f41-8a19-b694a5a0f597"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "413344a4-92b9-4229-ad42-f3541d9df524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b2629de-4d2e-4c94-b952-c3e38dcca957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d90b9fa-da0a-4fbe-9865-672b7fc47f31",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc488145-eb3b-4f88-923d-b7645c0a629b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e7ee75e-f6d4-42cd-894b-386493923fc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70dcf62a-da05-4368-87f3-ea63a0f9c5d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09b48910-71c4-4024-82b3-076cc1d3dd18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41c6a312-81fd-40a6-8cb2-220387f19b9c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d2c668a-d28e-4f1b-a3f3-eb0f45e3fefa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5db399c5-f82e-49ae-960d-fef6475c1c73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcaf67cc-2c4b-4289-a82c-7fe348dc6d74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "532b5822-06e6-4c29-82b0-4fbc9954d541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5ca577d-eef2-4ec9-90d3-e5670d95bf63",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6fcaa3-c5de-4a37-822c-5692bf6054a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12220b62-5522-45d0-9c40-0ecc01567d16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a79b13-97a3-4c84-9fb9-7b7df7e9c3e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "843222f7-acbe-46c7-ac46-9ea06bc44e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc0f718-c3e1-41a4-8a9b-fa3bd9a4d28d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f7b80b-ee4c-4e6a-b62d-2a98a21d61e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca39bce1-ca8b-4516-806a-6efa42613c36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b312127c-439a-48fd-9e8f-1cc46fedba15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f586b476-ac0d-4dea-ad14-8384ed79b8c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba458b28-a15c-484d-b4b4-1ef93e5ba94e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "385bc6fb-602f-421e-874d-473095676fd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b64a25c-3951-4d1a-9161-8a53dc7c1c2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e8c4ff-6a19-495d-8776-345f0408b55b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32e1188e-da63-44a0-827e-220190362c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50504be5-54ec-42db-914a-4de08e5fa689",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94312cb4-991d-4fa0-bfc1-e63c3de20e55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0052d6a-263e-4a40-85f8-1c239df77807"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f07afc-0606-4537-9da6-5d069a6a1b96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed156565-89b3-45c6-b4fd-b67633c0759f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a236b8-4991-49db-8ef8-f692323260ba",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a10f6ad-28b4-45fd-a482-68f9261caec0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1400e8e1-62d8-4dab-9bf8-fe0f3053d030"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a8bdc5-f8c6-4b2d-8eab-0ab64fa356d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11512369-99d6-4ba6-9a62-51f5abb5bab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f9e8f20-59c4-437f-b8ee-a0e07f59b4dc",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c4be3b-8eaa-4963-b193-ca88e1bb0805",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0eaf17b-3079-4966-87bf-110f824d52c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b52b446-60d4-42aa-b342-cfc03e7e54c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0784ed7b-bfd7-48f1-9a2a-257424b26cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b6c4d1-d657-454a-936f-6d72dd17c909",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a8995f-a620-43fe-a1e1-101b850507db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ab765cb-ddae-4cc3-895d-43ea60b33a2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1bf3fbb-5261-41cd-973d-7e862afaf99f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62586fc3-29ee-4bf5-bcd0-faffe90c59d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d9ed0f-4b11-4be9-992f-dd6e47356049",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f4ed86-5b3d-4372-8048-c72b697ba495",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0fa6d67-e55d-4465-ac1c-599c86fd9422"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c3bd78-c0d2-4c6a-b6e8-6a127b9f3d3f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c806484d-b540-4e0e-8eb9-548b5ddb33d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18bcf0cb-753b-4c0c-a0c2-b62f4f302f07",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9208567-69e5-42e3-afa6-1716ffad98a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdbb9a93-c899-4249-a136-5d878ab52f1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cfdeb5e-e767-4b20-b8f0-166589ff47a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eec7846a-f4af-4f58-9d9b-59e64369eb37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09733d71-e946-4517-8bdf-776d0a9ec2cc",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea4e16b-58cf-498a-ac11-d6f56d58fbc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75bb5bb8-a41e-4f9a-89e6-f932bfabb220"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e60e08-69bc-4cc4-b490-af5398f8d84b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9351be8-30d3-45e5-abe7-5cb3cc64b188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab409487-cecc-47c9-b77c-b4db50dcf3d5",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65240d5-743d-419e-b1dc-57972d2e3294",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9a4abb7-f992-4619-8093-59a2e3e65b95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7057233c-a17e-4257-bf65-d9c983d3d8a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a645da4-594e-411f-86b0-86acd9274d24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6851622b-a393-4b75-8fb2-1b73f7aef592",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ad1e6b-6362-4c61-8fde-44b94c03e209",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "565c751f-2aac-41c7-b466-3f2bf1d3ee57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8320a280-eac8-4b65-bc5e-697793272d18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "205f8c9d-a6b1-46a6-b905-a3eeefa92e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da48f41e-bed2-40be-b3cc-516c539d874b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e750cfbd-7ba7-4dc9-8ca2-4dd0e546a979",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92520de4-4315-49d9-bfbd-db4f111fcc9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "037d929f-95c3-4171-a97d-f6f70d71b71c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dfe518b-7cc7-4c38-b406-200b05213995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d75391f8-8de2-4394-9096-291f64beccc1",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d3d160-0ae7-4a89-a42f-ca35d28ec65d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88107bf6-3303-4696-bcdb-fc781dfa9536"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c795e24c-ceb8-4192-b5fd-a032bed2c30e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b85c3b67-7ddf-46c2-83b0-2f1447c8091c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef37d9e-04c5-4894-9953-1a2a4a1bc02f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e188ece-df2c-46b7-9fb0-657faf9df8cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eec22fec-78d6-43c8-8a02-eeda5a99deff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce0b781-1aaf-49b6-b08c-9370eeb9a6f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b77c20f-438e-4d4a-8dfc-f09ddedad4c5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3eb9471f-544f-4c5f-8645-227a994e932b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cce3bd4a-e4c1-48d1-b30f-654743febc29"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f92101ef-3a73-4dca-8cc7-03831a55b627",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b364a2f5-8ffd-4c36-a563-10fd79056d45"
                    }
                  }
                ]
              },
              {
                "id": "40e57dc7-036a-4c2c-8d30-2b66aca43381",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cdfd8717-821e-4566-9280-b16e1dd6c63b",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d29355-fe4e-4d02-8c23-93eb7fed3bfe",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7963df23-9f6b-4671-9878-0d60f80bc7ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f4e578-c698-4e01-8538-526ebf13cf17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "814cd81c-1867-437d-b091-8756dc977f41"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fc7380d5-6440-48e8-afd8-8b479236d173",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "affa9755-c9c1-4584-b2b4-d94a443f29f3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "78e382d0-b421-4b57-81c8-a8fde472d6b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "623ec633-e973-4c24-a380-74d6ef17b2a3"
                    }
                  }
                ]
              },
              {
                "id": "d5c41a8c-aa6d-4dc6-a50e-8f417b1160bd",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "61fc3a22-8ce0-4cb7-9e4c-430c5feafa24",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e421804a-2773-4a50-9e44-3e86d014d6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "2468fc27-852c-4505-b656-328fd9570e4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0588528-29ed-47c7-9bd4-9caa5073f6ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0e273b1-6a3d-4c4a-a58c-c5956216850c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3c9e231a-fd23-41a3-a943-fe21b202f9ae",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8e6a967b-8715-45c9-b150-96ffc9348ac4",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "df8e321f-5bd4-473d-a1cb-90283d612582",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "110cafb4-ba12-4e33-b9ff-6d6a829a6fde"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e3ed244b-a5a8-4fbb-b17e-30f5fd45a4f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc4bf528-d85f-42eb-ad10-a7fffb9f16cb"
                    }
                  }
                ]
              },
              {
                "id": "f3254102-1468-4653-98de-b66f5d8c165b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ca9f004-0496-4b88-bc59-13fb9d360105",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8d0faca7-dc47-498b-bf0f-28844f6f1639"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02c3de9d-6b06-4270-bb09-1f9a7fae6640",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9266a516-553a-4efb-b692-44cea61a5a1c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d4a0dafc-7a88-4ca7-9a98-224172c4c0d7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "cc29dafe-39ec-41d1-b432-e6e01775ff14"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "21590512-490e-48fe-8c85-ab2c69c47bf9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0fe8ce27-33df-4447-8832-ea72a033d250"
            }
          }
        ]
      },
      {
        "id": "96da1062-4e9a-460a-b2fe-3f2d51ba3982",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7787f5e2-0f28-44b4-bb5b-5f9b72086c2d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dfb3ccef-e3a3-4f47-a6c1-167d9b515cc7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "db63c89f-b925-480c-b4ad-ede9c89dc170",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af9cfe86-f319-4886-a18e-8c957b72eb6a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6e1e2fad-b2f5-488f-9f72-28687c6d8209"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6158097-37cf-4890-982b-de716fc34b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "579d291c-273b-47d6-8453-7824227127ce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3df6434-510e-471c-a511-81b90755a019",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4fd57625-3459-4038-aa78-b6c617ee3678"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "43d0156b-76f2-40e8-b050-78ffb2ab9d4e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e76019d9-7a39-4e40-b201-5f84af5af986"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c4f5cd88-af44-4e76-8e4e-0648c9094922",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c4b3c8c3-df96-46c0-93a6-b70c7af05c75"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ba255a6-bcfb-482c-9850-63febd177fac",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "37864ddb-e8da-4c68-b745-45a7ae22a2d1"
            }
          }
        ]
      },
      {
        "id": "001f970e-cce1-4f57-aeae-5dbc87664384",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "792d8e56-c3ee-4c00-8840-cb62981c4f5f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e4958509-ce07-4e0e-bc3a-70640bdab8aa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e0547a59-c049-4705-92de-623218d16037",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48557f21-ff78-48d3-b5be-4d600e66d942",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d091a671-7e24-465a-b1d8-75492f4519c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c6cf39-5578-4677-bbe1-f0a48d7eff38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "208751d8-1108-444e-94a9-42d4f7b715c9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e717fc5-02ea-4b9e-95a1-3a277b4192aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0504081a-1a50-4d8a-9cd1-bac0a51926ec"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd139787-d423-4d25-a56b-71ffac400407",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b0cec462-99e7-4dbb-80c4-d549123ef7cf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3e372740-2e8e-47e1-914e-298e1d47d838",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2c72825f-5c01-4966-9c6a-13ac4db11928"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7f38b7f9-810d-469c-be27-f692a21231e7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eedd94ed-1cee-4e46-8ba3-ba8130b5f5f1"
            }
          }
        ]
      },
      {
        "id": "150f385b-a154-4d7d-bb8a-42ac9979ed9f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "6efa1440-dc0f-4af7-94f5-f562e59d248d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "501e602d-990e-49f2-956a-89d8ff0f3813",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d89ce1a0-89f3-473f-85a2-405a7f193187",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e4e9fb-7a67-4475-86e4-e11ee25d5d95",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7023d18e-a59b-491d-a469-44cf9a6f9805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae6c8f64-df24-4c97-b7dd-78548f0fb357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d27817eb-1fa0-41c3-8355-3b1dbcd39177"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2de258d8-ebe7-4e29-9d5b-2c78047a2810",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db371ad4-0d83-44c3-a978-3a6e2cd09a5b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "84b185a1-c85f-441b-a74e-6dce501f0056",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4037acd0-f4a8-4457-9430-d7518c789440"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "86880e3a-e0c6-4e94-a92a-4d6790a0b701",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ced362b1-1dd2-4eaf-b33f-5646a7439072"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d44ef5db-0eab-450b-8cdc-8d045cca3f5a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9d6ba1a5-efb8-441e-8b2e-20a32720024b"
            }
          }
        ]
      },
      {
        "id": "447daae6-80b3-4312-8dd1-6ca72c120fa3",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e857fa31-f977-47c6-9ba1-361bc6cc53b0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "04f07531-2acb-43c7-99be-bca734d108f4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "06c8c360-2f64-4a67-a2dd-4d8e0d822e32",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2f31d8c5-403a-447e-9d72-23e0ce749cf8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "63c882fd-65ca-4d42-b4a4-d422201be2ad",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 68.64682539682542,
      "responseMin": 6,
      "responseMax": 233,
      "responseSd": 20.42131312145314,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1720139905623,
      "completed": 1720139930994
    },
    "executions": [
      {
        "id": "f916dfce-32a8-4511-99b3-9730ab283d76",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8d958a20-3db1-4af0-8dc0-88212521050f",
          "httpRequestId": "bf67bd4d-cfae-4044-8f70-a59dabc36efe"
        },
        "item": {
          "id": "f916dfce-32a8-4511-99b3-9730ab283d76",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "61a7c884-f0bb-4cef-b953-dfc4e66bee19",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 0
        }
      },
      {
        "id": "497f93d3-dcc8-4e1a-bd4d-6e76215ce1f9",
        "cursor": {
          "ref": "06c9d634-22be-4c6f-9c88-d76ec8f958f2",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "79bb16e8-b478-4964-9d4d-382c8f7d0741"
        },
        "item": {
          "id": "497f93d3-dcc8-4e1a-bd4d-6e76215ce1f9",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "77f3c95b-1748-432a-90c1-473003a90aea",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "443fb91b-4fac-4970-8871-d15218cfe4e4",
        "cursor": {
          "ref": "4ac8b682-b64b-47ca-bb6c-af5c2c9dd7de",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "55f0bfb1-a001-4fa1-9fa6-a780a6d45557"
        },
        "item": {
          "id": "443fb91b-4fac-4970-8871-d15218cfe4e4",
          "name": "did_json"
        },
        "response": {
          "id": "28ff39cb-21a8-4aa5-8ca9-9065d386da06",
          "status": "OK",
          "code": 200,
          "responseTime": 221,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b371e6a-223b-429e-ba45-4fa4ac613e35",
        "cursor": {
          "ref": "c117be7a-1abb-487a-8ff8-fa7f1ea9b8bc",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4b250a3c-096e-4880-a236-e2e4ca047d8c"
        },
        "item": {
          "id": "4b371e6a-223b-429e-ba45-4fa4ac613e35",
          "name": "did:invalid"
        },
        "response": {
          "id": "8dfc4769-55bd-45ae-ab9c-e87678f898e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b371e6a-223b-429e-ba45-4fa4ac613e35",
        "cursor": {
          "ref": "c117be7a-1abb-487a-8ff8-fa7f1ea9b8bc",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4b250a3c-096e-4880-a236-e2e4ca047d8c"
        },
        "item": {
          "id": "4b371e6a-223b-429e-ba45-4fa4ac613e35",
          "name": "did:invalid"
        },
        "response": {
          "id": "8dfc4769-55bd-45ae-ab9c-e87678f898e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230a4a3e-6180-4696-993f-eb0dcd623bb3",
        "cursor": {
          "ref": "22acf9ea-0b62-4ace-964c-3142fe57ffe3",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5fd99176-716a-4bbb-b74e-a62663138c3d"
        },
        "item": {
          "id": "230a4a3e-6180-4696-993f-eb0dcd623bb3",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7a4c70a3-703c-4fba-9ca8-b8f6e4d84ed0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 233,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72784f9-8567-4e3b-84eb-fc12fb8fac68",
        "cursor": {
          "ref": "01daf293-f156-45f3-b107-735d42c08499",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "70de9396-61d9-43c8-9483-243baa28616a"
        },
        "item": {
          "id": "b72784f9-8567-4e3b-84eb-fc12fb8fac68",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "8df4fc95-1fe3-4859-8630-f5896c1713fc",
          "status": "Not Found",
          "code": 404,
          "responseTime": 68,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62394fdf-36a6-418a-ad70-ccf10c97471d",
        "cursor": {
          "ref": "b69fda84-4656-4481-8ef5-2cfde196cd71",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "cd8b2530-95ce-4948-a92c-fc3573dbcfed"
        },
        "item": {
          "id": "62394fdf-36a6-418a-ad70-ccf10c97471d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a7306d63-88ac-4a76-9b5e-0df5b7a01dae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0657f123-c313-41e4-8514-0e3e8077f1ca",
        "cursor": {
          "ref": "9d2429a8-75a5-4e66-8ee4-2c599697b1f6",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e1c35d52-2c2d-4890-a46c-c413b8af26c3"
        },
        "item": {
          "id": "0657f123-c313-41e4-8514-0e3e8077f1ca",
          "name": "identifiers"
        },
        "response": {
          "id": "10ed3c59-21fd-489a-8bad-b3a4be270bb8",
          "status": "OK",
          "code": 200,
          "responseTime": 227,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab668bed-e416-49c7-955f-2c95e27fea0c",
        "cursor": {
          "ref": "417002b6-ab21-4000-a5fb-dffd74c1e55b",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2cb0e6f6-db8b-4e8e-ada4-00b03199aa99"
        },
        "item": {
          "id": "ab668bed-e416-49c7-955f-2c95e27fea0c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "187566db-fb74-4104-9210-3628a6ea6e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139e0416-cf5e-431c-8dcf-fcf8ad79cece",
        "cursor": {
          "ref": "c3edda30-1f8d-4ddc-92c3-140525e9912b",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5bde8395-52ef-4538-96be-f89fa3d25284"
        },
        "item": {
          "id": "139e0416-cf5e-431c-8dcf-fcf8ad79cece",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d0e3adfa-dc23-4716-922b-8df096d9f4fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807aa4f5-8921-4301-a609-845877b15eca",
        "cursor": {
          "ref": "7774e7f7-f791-485a-8229-6a2887665371",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0cda561d-177e-4159-b8ca-a2925e1c3012"
        },
        "item": {
          "id": "807aa4f5-8921-4301-a609-845877b15eca",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "de7dab32-a6e2-420a-837e-836458269600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9861f7af-2a94-4c17-bf8d-b5d3d5197fe7",
        "cursor": {
          "ref": "a2ec7007-decc-4f7a-961b-0d69df892dff",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "99201762-e375-463e-bc82-358ae4a6ca78"
        },
        "item": {
          "id": "9861f7af-2a94-4c17-bf8d-b5d3d5197fe7",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "cb912f4d-55fc-4e25-bacc-10ed7bb57e28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4574a31-fbc6-43af-bfd7-2d96a80af76d",
        "cursor": {
          "ref": "08b7b5fe-1b0a-4634-91b8-4b42d689d8ec",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7c1b6e4d-a143-47fc-a266-628594ac2e18"
        },
        "item": {
          "id": "a4574a31-fbc6-43af-bfd7-2d96a80af76d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "13215ff9-8073-4989-94b0-4bc672686b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f73748f-b520-4fe0-bc74-c707ca10edcc",
        "cursor": {
          "ref": "78a70fba-ad1a-4424-89f6-2afe10a93d99",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "dff9da27-ba13-426b-a4bf-848210b20550"
        },
        "item": {
          "id": "0f73748f-b520-4fe0-bc74-c707ca10edcc",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "bcc40347-ceaa-4354-981b-aaf6cd42af63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd38e621-f9e4-450e-8124-409b87fe937d",
        "cursor": {
          "ref": "f6b483eb-9634-40fd-85b4-1be05ad9baf5",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "072eb11f-d3ca-4316-af19-e11a2b4bacf8"
        },
        "item": {
          "id": "fd38e621-f9e4-450e-8124-409b87fe937d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "814c3944-fd33-4814-bbbd-6127754b7163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec7418b0-8d0f-4a0a-b36a-348bea27dfb6",
        "cursor": {
          "ref": "52e103fe-b891-4fcd-95cd-b1db4fa5886d",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "3ead388d-9d51-4e5a-a1cf-52eb4d9077f8"
        },
        "item": {
          "id": "ec7418b0-8d0f-4a0a-b36a-348bea27dfb6",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "94b19d12-e15a-416d-ba30-003860015ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f845969c-0ca7-40ae-92cf-5068429f64cf",
        "cursor": {
          "ref": "f523e5d6-e512-4cb0-9385-a06ceca5cd42",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9bf79e5e-d6a7-47c9-b9a2-46b5d1b21ccc"
        },
        "item": {
          "id": "f845969c-0ca7-40ae-92cf-5068429f64cf",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "72ebe7fe-08b4-45bf-8400-0b437cab681d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a1a14e-6bfc-41b8-a40e-e3a99628ed27",
        "cursor": {
          "ref": "aa0420fa-351a-44cf-b519-9d7298a68357",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ca04cc3b-3907-4d35-974f-a9725ce38fe3"
        },
        "item": {
          "id": "70a1a14e-6bfc-41b8-a40e-e3a99628ed27",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "831bb87d-9e5f-4d80-9d05-5e35b0d31f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb19c63-7226-45c5-b938-b3c4cba1f18f",
        "cursor": {
          "ref": "be72a439-c606-42ac-8bc6-a5bb6d088384",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "6e16ac3b-ecba-4279-a426-a1dcc51bbe07"
        },
        "item": {
          "id": "bfb19c63-7226-45c5-b938-b3c4cba1f18f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "46c15f17-f27b-496b-a81b-e87bf23c1420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a0c6ee-10cf-4ca7-9d2c-f027c49eb394",
        "cursor": {
          "ref": "339a900d-1ff2-4172-9b66-b86a8f0cb4d0",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "fed965b7-03ab-4afe-9326-bde9974b325b"
        },
        "item": {
          "id": "38a0c6ee-10cf-4ca7-9d2c-f027c49eb394",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "f72daa57-b1ae-46da-8ebb-4d9dd77404ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fdd7355-d6ea-4116-aa78-9379f865135b",
        "cursor": {
          "ref": "8cd9c96f-528a-438b-a65a-559874ac20cc",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b12305e8-c4f1-496e-b12b-0fd18fafc8f4"
        },
        "item": {
          "id": "6fdd7355-d6ea-4116-aa78-9379f865135b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7de1e6d2-5dc3-4289-804c-8fc89163c2b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e00a78-7571-4ca2-81f4-36d0f04e094f",
        "cursor": {
          "ref": "0d3f5302-5ee2-4a50-a484-125943c11ce0",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7ec2f935-d633-48c7-9a70-7260dda6f8f7"
        },
        "item": {
          "id": "08e00a78-7571-4ca2-81f4-36d0f04e094f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "77708bde-6ff8-449f-82df-ed6c290cd4fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb04787-da44-4417-85e8-e0c8e021c8d6",
        "cursor": {
          "ref": "566a5363-1756-477a-8f31-48ed81ba8858",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ef360e8d-416b-4132-816e-cef959ec4d3f"
        },
        "item": {
          "id": "3fb04787-da44-4417-85e8-e0c8e021c8d6",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "6cb8dd4c-6550-40ac-86e1-97a20f6fb732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74485843-ce80-4992-ab25-e99fd88f46b9",
        "cursor": {
          "ref": "5582d8d9-b5c5-4a26-b008-f1980cd1ca36",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c7675415-fadf-4168-b87c-e48c4a9b8765"
        },
        "item": {
          "id": "74485843-ce80-4992-ab25-e99fd88f46b9",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "01feb302-b073-4a0e-844b-bc5d7ea3fcd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05302df-ea2e-4d8d-99fb-77095411d057",
        "cursor": {
          "ref": "60f389d9-8a52-425a-bc1e-5b3353a87515",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e06ddaa1-4cfc-4283-856b-b21d2ad7f6ba"
        },
        "item": {
          "id": "b05302df-ea2e-4d8d-99fb-77095411d057",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "18d245f5-ee65-4eb0-979d-3b3057184be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd8ec54d-be6c-480e-96df-53df6e1ff149",
        "cursor": {
          "ref": "9d1886d5-58d3-424c-b9da-1047989fc6d6",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "29c5a700-5ee1-4a4a-bd8c-5931249d9cc6"
        },
        "item": {
          "id": "bd8ec54d-be6c-480e-96df-53df6e1ff149",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "7cd879de-8b8e-44ca-9d48-5d407cbf8fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ffcdced-b150-4604-9672-014d0bcdb426",
        "cursor": {
          "ref": "3d5ca9c2-430e-4837-bf39-741231fb33e9",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "707d537b-497c-4980-b63b-590f4cbca24d"
        },
        "item": {
          "id": "6ffcdced-b150-4604-9672-014d0bcdb426",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "249ac3f4-e6db-4be2-a21e-cff0f6911aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e9d5109-5989-4e47-b09a-9507ccb49ccf",
        "cursor": {
          "ref": "1a503996-17b6-4884-9fd9-3856173b4e33",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "af2c4a36-4cc6-4c51-86d1-e2628c7dfb74"
        },
        "item": {
          "id": "1e9d5109-5989-4e47-b09a-9507ccb49ccf",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e4d63df8-f5da-4b74-8a02-a64087b3358c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d8b551-70e9-4dab-a1e4-a8daa200e30d",
        "cursor": {
          "ref": "dd62a5a1-1ac6-4b5e-afb3-89b14768ebeb",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "df1893cc-1bb1-4058-9521-0c56aa0582e2"
        },
        "item": {
          "id": "f8d8b551-70e9-4dab-a1e4-a8daa200e30d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f1938bc2-cc5b-4628-9d06-797b801acc2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e30b83-6a58-4479-b0ea-13c85439cb99",
        "cursor": {
          "ref": "b56e6b14-977c-4f9c-8d19-4fb68c56cc8a",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e4ef1a62-622b-43cc-a51e-19a9a1d899f8"
        },
        "item": {
          "id": "75e30b83-6a58-4479-b0ea-13c85439cb99",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a9dab5ae-9afe-4447-b4f8-945cca27cf6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "704bed95-f86e-4cba-a641-6ec03dfa0d75",
        "cursor": {
          "ref": "fd7e60b4-f70e-4011-94d2-3d240c98a730",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b5774357-b7bf-48e2-a066-553e03560ef8"
        },
        "item": {
          "id": "704bed95-f86e-4cba-a641-6ec03dfa0d75",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1091de70-e550-410d-b7f0-5c3cd4dda01f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f58fca-f15a-4a84-bca2-ad885d9dbd70",
        "cursor": {
          "ref": "3b262e53-7eb0-4cc5-b4b7-a188e78798cd",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e5b7a2c1-1989-44a1-879b-f83353eb48fc"
        },
        "item": {
          "id": "c7f58fca-f15a-4a84-bca2-ad885d9dbd70",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4490128d-738c-45e7-b9a7-17b2bc15f3ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d15e57-f8bf-48ce-8458-43d317a40fad",
        "cursor": {
          "ref": "5536ce64-80f4-4050-9402-87b836e28ce8",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2d6d8663-5961-4ddb-a24f-7c2a0d253e51"
        },
        "item": {
          "id": "66d15e57-f8bf-48ce-8458-43d317a40fad",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "85f2f0a9-3cbb-4de3-85ab-9a5af45e40c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "877ed11c-4abb-46d4-8cd5-27712d15bb61",
        "cursor": {
          "ref": "cfcf5ade-edc6-4d4c-93ed-e121a5c7ea58",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "60fe0b98-c001-445e-b0f2-1bb6a82ca8a3"
        },
        "item": {
          "id": "877ed11c-4abb-46d4-8cd5-27712d15bb61",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "13f54b88-4339-4947-8475-be896564247b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db33b530-7497-4324-933b-b6a7672f0400",
        "cursor": {
          "ref": "ed01b882-cfeb-4cb3-a111-854cc6ab0b8e",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5df443a2-c84a-4b3d-8046-8baf2b74a0ae"
        },
        "item": {
          "id": "db33b530-7497-4324-933b-b6a7672f0400",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6f965bd8-8c73-407e-8677-e246d4ac1caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "656399f7-2eac-4770-88d8-f617544ef2e0",
        "cursor": {
          "ref": "9cb360d3-d4f3-4072-b0a8-44f29ae44952",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "cfb8b83e-282a-42fc-abbe-8c28fa055396"
        },
        "item": {
          "id": "656399f7-2eac-4770-88d8-f617544ef2e0",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "6c06dd6a-7e9b-4bc0-9743-649fb5e25472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "812533fe-b0fb-40fb-96ff-e82fdb8c9bec",
        "cursor": {
          "ref": "3581a9a7-5079-4df8-be3a-ebdd9a9b18f8",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "05513ff9-6849-4440-b00d-ac281ea137fd"
        },
        "item": {
          "id": "812533fe-b0fb-40fb-96ff-e82fdb8c9bec",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "aadb941f-0ff8-444a-9399-9ec385e54fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd665f1-5374-4ad9-ae5a-d3eb20320c64",
        "cursor": {
          "ref": "5d093182-f7c0-48a3-a893-13bd80cd3f3e",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4df8c6b4-177d-4b62-8745-2d71874fbad5"
        },
        "item": {
          "id": "ffd665f1-5374-4ad9-ae5a-d3eb20320c64",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "6d0376b8-ec60-487a-96cd-1ec2a0f121f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b4971dd-f6fb-4215-9af0-6425da45c077",
        "cursor": {
          "ref": "fe0f7929-7ae9-43ec-b68d-b2bd00ddbe40",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d11ea316-91cc-4112-9a08-8a663a2b81b1"
        },
        "item": {
          "id": "5b4971dd-f6fb-4215-9af0-6425da45c077",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7bee76ac-fd82-4264-874c-84beb0163c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c8204a5-2d8e-4949-95d9-c5344eb1a042",
        "cursor": {
          "ref": "015bd160-7eaa-4798-a170-478b21323ce7",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "5c3b4683-cb9f-40ca-8710-8b4b21d49325"
        },
        "item": {
          "id": "7c8204a5-2d8e-4949-95d9-c5344eb1a042",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a4bbf473-44e5-42b8-a4b5-7867cf0a638c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c96a3d00-2e06-4d95-b35a-9043a9c26308",
        "cursor": {
          "ref": "410bc94b-53ed-4c9f-9fe3-705d2e1acad5",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8b51b053-7b1b-4403-a2d5-303b7cc50053"
        },
        "item": {
          "id": "c96a3d00-2e06-4d95-b35a-9043a9c26308",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "156bbe6a-9f3f-4ae0-856c-00dbbc3f0fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc41598b-96e9-456c-a458-8f9b939776d0",
        "cursor": {
          "ref": "76ce36b2-fa2c-465d-b9d6-b3f26f57f1b9",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "85c47133-50e3-43dc-bbf3-fca25ca17178"
        },
        "item": {
          "id": "cc41598b-96e9-456c-a458-8f9b939776d0",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a9ad866b-09cf-4a9f-9071-0464b84a87fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba44bde0-65c1-4ad2-b013-75072db0569f",
        "cursor": {
          "ref": "7e661b37-f5fb-47e1-91f0-86175106d081",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d0205897-3075-4db2-9ca1-13cd78cc5410"
        },
        "item": {
          "id": "ba44bde0-65c1-4ad2-b013-75072db0569f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "92104f7c-d892-43d3-8216-d4dd718a5c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9abc3e8d-748f-4e74-972d-fbda8ad1c8e0",
        "cursor": {
          "ref": "9dac534b-c887-4c35-b07d-be33b615a85b",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c0ce3c80-b8dc-4fac-949f-6ce29caf2897"
        },
        "item": {
          "id": "9abc3e8d-748f-4e74-972d-fbda8ad1c8e0",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "36bfaa7d-8bf5-4286-8bc7-6956338f0e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fde8ea3-ee81-42e4-9353-127b6e0f3228",
        "cursor": {
          "ref": "88b0bdb1-dea2-4924-a165-1054928be195",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "703cc0e4-fe28-4477-bfb3-f11bc123a804"
        },
        "item": {
          "id": "5fde8ea3-ee81-42e4-9353-127b6e0f3228",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d79691a7-d02f-48f0-bd99-cb026031b161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec162726-4624-4e0c-8a71-3f8cf43cadc3",
        "cursor": {
          "ref": "fce30f62-f41f-4d67-9aac-50a11dc83ea5",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "56419533-f484-46ac-875b-3e33879d1bb8"
        },
        "item": {
          "id": "ec162726-4624-4e0c-8a71-3f8cf43cadc3",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2c5cd2c6-9b29-435b-a5ee-7f02976b685f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbeaa41d-5fbd-423a-b514-2bd1eee89cab",
        "cursor": {
          "ref": "7d8a915d-a105-44ca-8fb9-ff596f01f2be",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "81da85fa-6e13-4b3c-ae1e-2f3bfc80e6e5"
        },
        "item": {
          "id": "dbeaa41d-5fbd-423a-b514-2bd1eee89cab",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "eeafd384-3ccb-476a-80c1-a30416879858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa8f57b0-f89b-420a-ad3c-c6fda959d1e4",
        "cursor": {
          "ref": "619d6b1e-6188-4be8-91db-0a644218a516",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3e9721cc-7663-41e9-8ba9-0ccb727ae06a"
        },
        "item": {
          "id": "fa8f57b0-f89b-420a-ad3c-c6fda959d1e4",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "3a3ba670-a8c3-4304-a2f5-e022a2b0451a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "833a9daa-26ee-4986-86a1-2a70af7997a0",
        "cursor": {
          "ref": "3904baa0-2905-419f-a066-29c35acc3ff0",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "1564df4f-75e8-4998-800c-48ff98b16507"
        },
        "item": {
          "id": "833a9daa-26ee-4986-86a1-2a70af7997a0",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2586fa1e-a5c4-40b7-84c5-57cfcb35dc47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9156d8-94d7-4745-9c85-6f522f4a4232",
        "cursor": {
          "ref": "34781765-c79d-4f98-adf3-7520381aa19c",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "62d4a383-0cbf-49b1-a22b-73163267e561"
        },
        "item": {
          "id": "ed9156d8-94d7-4745-9c85-6f522f4a4232",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c62c53bb-7a35-45fe-8560-656f4b76a357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0485675d-7a2d-4ab5-ada8-261535925b17",
        "cursor": {
          "ref": "ad7520bf-b2ce-4d64-9647-d84555086180",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "5c211428-5478-485b-913d-03207fb1c0e8"
        },
        "item": {
          "id": "0485675d-7a2d-4ab5-ada8-261535925b17",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3cdd1ecd-9c2d-440f-b2b4-6c03652591fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8814dca-b805-4e38-802b-2d20a34ead04",
        "cursor": {
          "ref": "ccb7693c-a20c-4d28-8fd4-541d15d9ad37",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "6818b767-d39f-4931-af65-f137f1f0a4be"
        },
        "item": {
          "id": "e8814dca-b805-4e38-802b-2d20a34ead04",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "cc12a46f-7e89-4b67-9c48-81dd02e41635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1992e89-0073-4b2e-b825-b835b8b6e240",
        "cursor": {
          "ref": "d55ed24c-0fa2-4088-ab9d-84f7c5467060",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "bf614f95-74a5-4f44-82cd-06cca8acb2f3"
        },
        "item": {
          "id": "f1992e89-0073-4b2e-b825-b835b8b6e240",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e6b10cb8-0235-4d30-93b8-4d00167198cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08652eed-18cd-4748-bd1b-a3194c223c7e",
        "cursor": {
          "ref": "9d0d784b-36bd-461c-b072-d10ac75ca780",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "8e603270-8f4c-48eb-a940-ef5f780229f3"
        },
        "item": {
          "id": "08652eed-18cd-4748-bd1b-a3194c223c7e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "0ddcf50c-a892-42e4-9692-77da48ca9394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6347de95-3a26-48e7-b8bb-9ce1847ea911",
        "cursor": {
          "ref": "8e0c8876-8964-4e60-a0a9-79dcf39ff9ed",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "43e53f98-2dbc-4246-a70a-2ae2f625e8eb"
        },
        "item": {
          "id": "6347de95-3a26-48e7-b8bb-9ce1847ea911",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b11f1a5b-acb9-4d0f-ac09-6ded11d6a39b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ffc4536-9343-454c-8030-fbba5e8dd8af",
        "cursor": {
          "ref": "9e66d754-faa9-4536-8812-df5de9b5f2ad",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "3cd7dc85-e2a4-4d29-8892-7802b4d6c1db"
        },
        "item": {
          "id": "6ffc4536-9343-454c-8030-fbba5e8dd8af",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "cb52cbfe-c874-4184-97cb-f7838ae26b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924796d0-d8d1-4468-b058-2da576e78cc7",
        "cursor": {
          "ref": "bfaeee7e-855a-487c-a037-c5ab35a1045d",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "541f3d54-1831-49c9-ac35-a8f938267f81"
        },
        "item": {
          "id": "924796d0-d8d1-4468-b058-2da576e78cc7",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c44055c8-dbef-4392-84f9-93f00c1a9d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc45716-4dd6-4413-8e65-bf6a240d1aed",
        "cursor": {
          "ref": "7cb4698e-0c0c-48e6-a5f9-ef8f2612ec00",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "49e1a012-3b65-461a-b584-4c80d147928c"
        },
        "item": {
          "id": "2bc45716-4dd6-4413-8e65-bf6a240d1aed",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "40ad577a-52e7-4696-ad5e-c96c89b41441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b82e1e-526d-4b14-ad8b-c5b2da1afcce",
        "cursor": {
          "ref": "8d5e5bbb-568a-4311-855c-b44a333fdc58",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "71cc2cb5-a523-47df-a4a1-8e9f5cdbcaa6"
        },
        "item": {
          "id": "96b82e1e-526d-4b14-ad8b-c5b2da1afcce",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ab6ca5cb-1dfc-4983-b3c1-46ebec091f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce48159-7213-4b92-9f9c-e1cb995776cb",
        "cursor": {
          "ref": "b1b421d3-0d33-495f-86bb-a3b677387a0b",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9d61ce3f-8218-4f24-abc0-32dd97c082d0"
        },
        "item": {
          "id": "bce48159-7213-4b92-9f9c-e1cb995776cb",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b56bd062-43c9-4281-9521-04ba0fd21cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1305726c-d77e-4aa2-9dec-0a7922cbd559",
        "cursor": {
          "ref": "3f78f02b-eac0-44c6-b1ae-cbb31ae919e2",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "31b4de2e-a99b-4240-8534-b60306a63859"
        },
        "item": {
          "id": "1305726c-d77e-4aa2-9dec-0a7922cbd559",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b500aa8a-cf8a-496a-98d2-7e87ea030abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd40b097-22f1-48b5-afab-4a12fe6daadb",
        "cursor": {
          "ref": "cf3a6823-1689-4300-bd0e-ca429afaa58d",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ca8001b2-51aa-439c-a316-93678d3b0373"
        },
        "item": {
          "id": "dd40b097-22f1-48b5-afab-4a12fe6daadb",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "7984496d-8b75-4568-afbd-780467982cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9a2f00-1ab8-4b6a-a085-8f1cf79b0e46",
        "cursor": {
          "ref": "dc92649f-5473-4b15-8db9-96ff6d8e37e4",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ff096b89-3776-4f7e-ba10-d0f2d25cb641"
        },
        "item": {
          "id": "ae9a2f00-1ab8-4b6a-a085-8f1cf79b0e46",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7f51f994-898a-41ab-905b-31c0999895b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff33e530-ba75-4c4b-83b3-97f08813cbae",
        "cursor": {
          "ref": "2ad8cfc5-f284-4aa1-aecb-4d17e42d0de2",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "122d55d4-500e-4ac6-be75-d4f0c174b9f4"
        },
        "item": {
          "id": "ff33e530-ba75-4c4b-83b3-97f08813cbae",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b8369ece-210b-4eb3-8941-da9f09fee902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77aea003-9bb5-4c79-b737-35125e5aac43",
        "cursor": {
          "ref": "d3dd325c-dd1d-49f3-9b48-f92f77ec0189",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a9ff4113-a58b-4344-8f79-9ab8a043252f"
        },
        "item": {
          "id": "77aea003-9bb5-4c79-b737-35125e5aac43",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c3afebd9-95b9-4bda-a052-7095cb4a8efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67af309a-f744-4614-b27a-85da6c5f06d0",
        "cursor": {
          "ref": "ef42afc8-0fb1-406f-9226-50273fecafb8",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "08706c94-9d03-47f7-af51-e2bc2aa4782c"
        },
        "item": {
          "id": "67af309a-f744-4614-b27a-85da6c5f06d0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "194d8b1a-7703-4fd0-b682-0bf39ebcd1e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64624ca-2e31-4de2-a1d3-b8965a833109",
        "cursor": {
          "ref": "7452fb78-ca18-4f37-b847-cb90d6557ab5",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b575670c-fb15-472c-90b8-25a2c839f4c9"
        },
        "item": {
          "id": "d64624ca-2e31-4de2-a1d3-b8965a833109",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "eb639c3a-8a3b-4696-9ade-3ada7f63f9d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d401ff-ee22-4d4d-97e6-ab7c6801eec3",
        "cursor": {
          "ref": "e1e9a06c-262b-44e4-8afb-bc36e916f4be",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3781482e-c5c2-4054-9a35-efea193c7e44"
        },
        "item": {
          "id": "b7d401ff-ee22-4d4d-97e6-ab7c6801eec3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e15cac9e-06a5-47fd-a424-a70b0c0632ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c6dbd8-7f4a-412b-a89f-8a675abb4f32",
        "cursor": {
          "ref": "5348e686-6a8f-41eb-9ee6-da582c21d73f",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "bd1f9873-e454-46cc-a916-5d79075ef27b"
        },
        "item": {
          "id": "67c6dbd8-7f4a-412b-a89f-8a675abb4f32",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "9afe71ba-7eb6-489c-b16a-c266052ab055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "389eb700-61c9-4a09-9943-4e36ba56cca2",
        "cursor": {
          "ref": "6e2054bf-dcf0-4561-9303-01b1b1cf3d3c",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d45595e7-80a1-42a1-af51-531184f7ad17"
        },
        "item": {
          "id": "389eb700-61c9-4a09-9943-4e36ba56cca2",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b23da80f-45ae-4cce-8dde-cd0ef50e33e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d39324-ca9f-468d-a589-55fbcb38f625",
        "cursor": {
          "ref": "aa613d73-4972-44ae-a330-57de88e66617",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6e16cd39-0624-4661-8d15-fc76d497a311"
        },
        "item": {
          "id": "55d39324-ca9f-468d-a589-55fbcb38f625",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b4634a85-ab11-4e51-b18a-ce8702b461e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5a0449-f5fd-4259-a4dc-2526e37f6156",
        "cursor": {
          "ref": "31e9c25b-22c0-48e1-8b6e-d2fd09f14000",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "16e96b78-5693-400b-a66d-fa1c7ec7569e"
        },
        "item": {
          "id": "ba5a0449-f5fd-4259-a4dc-2526e37f6156",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "bb113bf5-fb27-4f9c-9aa0-12f080a26d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d4e081-c0e2-420c-aa09-baf05679ee60",
        "cursor": {
          "ref": "ee7c677a-3c05-4fe5-a0fc-e5c2835c17fe",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a51d4e7b-2f20-43c1-a245-56b6a14bc217"
        },
        "item": {
          "id": "a1d4e081-c0e2-420c-aa09-baf05679ee60",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "47c7be45-3c75-4467-b031-b1a123908952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48fd7f4-706a-4701-9492-0e51e8679fb9",
        "cursor": {
          "ref": "5bdf4f56-9967-4a67-8920-2815b3cc334a",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8bfdc122-bc4b-4e13-a508-5ed836578a90"
        },
        "item": {
          "id": "a48fd7f4-706a-4701-9492-0e51e8679fb9",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3955f958-dab2-4bb2-bf51-725ccaa0cd3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc817c57-896c-4451-9fa2-5549812d7d50",
        "cursor": {
          "ref": "f24a0a88-08f9-4d96-9c28-ffafb38a1bb4",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "87357aac-7bf7-4e09-9c78-3a0d97c80d3c"
        },
        "item": {
          "id": "bc817c57-896c-4451-9fa2-5549812d7d50",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "1ea4cb00-fba5-4266-8538-c20b417fdc40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e63317-703a-4b26-bf7f-e182a86d1d4d",
        "cursor": {
          "ref": "911e44cd-3053-43bc-bc06-f43ccb6af0ee",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "6bdc3548-7f80-4fa1-8683-0ef0fbab44f7"
        },
        "item": {
          "id": "73e63317-703a-4b26-bf7f-e182a86d1d4d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9824dba0-7c73-417a-818c-de28b6945d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e16dc7-7d6b-463e-8cee-d6f08adbae81",
        "cursor": {
          "ref": "357a9cf3-3f28-475a-a056-31adc5990970",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "4e141cd8-82c3-42de-abea-6915d17ce61f"
        },
        "item": {
          "id": "89e16dc7-7d6b-463e-8cee-d6f08adbae81",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "da7a2fdf-9394-4e82-9351-95842a9c453e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b5ce9a-7e51-489e-a86f-8f4fec2d5f98",
        "cursor": {
          "ref": "20630c97-5313-4153-b3eb-9908f434f9e6",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "13a02849-50e3-44a4-9b93-aaa7b453efac"
        },
        "item": {
          "id": "f8b5ce9a-7e51-489e-a86f-8f4fec2d5f98",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f1679eda-ecfe-4ebd-b747-e11f14995763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a2411d-65c5-4053-ae48-aab5a21d0ca9",
        "cursor": {
          "ref": "dfc19e0d-aba9-40a5-aab3-41c26bbef202",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b8eae2c7-3d9b-45f0-af2a-3d200358131d"
        },
        "item": {
          "id": "a8a2411d-65c5-4053-ae48-aab5a21d0ca9",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "90a79b6e-9795-4088-a9f9-6d0faf54902b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a33a3b-c302-46f4-8cfa-84ac03f3194e",
        "cursor": {
          "ref": "98946519-22a7-4945-be86-0e30d2fc3f3a",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "fa2276ad-a3a3-4fe0-b8d6-1918f6bbd4a5"
        },
        "item": {
          "id": "a7a33a3b-c302-46f4-8cfa-84ac03f3194e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d2f7e34f-e864-4ab4-83bd-6cc41b3f5a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73481d09-f216-4f91-86c8-80d663563489",
        "cursor": {
          "ref": "95af6c63-2179-4b69-97ae-6edce889f072",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9da47064-36aa-48b9-802e-80691817db44"
        },
        "item": {
          "id": "73481d09-f216-4f91-86c8-80d663563489",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d579645c-9da9-4a40-b8a6-fe691704e164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "713308bf-9d0a-40e0-92ed-75fff7d5c40e",
        "cursor": {
          "ref": "ebbee731-5557-4726-bcbf-22c6965dd77f",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8333f4cb-377a-4555-a8a7-7a0ba3325a26"
        },
        "item": {
          "id": "713308bf-9d0a-40e0-92ed-75fff7d5c40e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "0a615ba6-8c18-4560-ad0c-e7f7fd511873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be4dc2d3-a655-4fd1-a003-675e23d87b9e",
        "cursor": {
          "ref": "d3ffeb2c-e46d-4677-a1e5-c2e81b090b90",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e03df709-9a6e-41cd-81ee-6eec932c2296"
        },
        "item": {
          "id": "be4dc2d3-a655-4fd1-a003-675e23d87b9e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1a4c892d-2b74-4c22-89d2-c635057420d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65f465c-d3c4-4bc6-911c-e36dcdaa2f34",
        "cursor": {
          "ref": "b8df901e-e311-4612-9cae-6bcdb11ca056",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "990221d6-6a30-4b95-9c1c-0233b65e7702"
        },
        "item": {
          "id": "f65f465c-d3c4-4bc6-911c-e36dcdaa2f34",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7fb5e2e2-e53c-47a8-95b7-b117e2ac332d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e57f64-3fd0-4da7-847d-03b9dd76347b",
        "cursor": {
          "ref": "5f28f32d-119f-42b0-abab-a2800318066d",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0802a5db-e4c0-4602-9c38-052035702cd8"
        },
        "item": {
          "id": "d8e57f64-3fd0-4da7-847d-03b9dd76347b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "6d98762d-6b47-4d1e-8e27-44290bd99011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b1944f-5cc1-4085-ba73-87f16f58d3b5",
        "cursor": {
          "ref": "4762d423-230f-450b-a1ff-85af9a1441ba",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "fe4daee9-aed5-4dad-9f60-af75ca0f2a82"
        },
        "item": {
          "id": "48b1944f-5cc1-4085-ba73-87f16f58d3b5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "9b5f9bde-a09d-4b40-9bb2-4a01ec7471a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f003b8b-32ee-4c91-a9f9-e0c86ac7fb9d",
        "cursor": {
          "ref": "3c2d78cb-87b3-444d-be80-c064f47fd16d",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4456bd1c-33c3-4506-ac33-6e20cd4a710c"
        },
        "item": {
          "id": "5f003b8b-32ee-4c91-a9f9-e0c86ac7fb9d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d276ca5d-3e01-4b2c-9fba-3b488fc9ff4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "029dad7d-a735-452d-a0e9-084b22134367",
        "cursor": {
          "ref": "65af9d5a-dd79-4c58-b2af-a1bd7195f946",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f3d87d60-a604-4af3-ac45-cac000c0d6a0"
        },
        "item": {
          "id": "029dad7d-a735-452d-a0e9-084b22134367",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "3d8cec12-57e0-45e0-ab6c-44d67c70be48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33f3c67-c431-4704-a2ea-d5b037153b5b",
        "cursor": {
          "ref": "2345ed1d-36f5-4c40-8584-d1b8fceee2ca",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "72db37c8-19fc-49bc-8db4-2f757c2862e3"
        },
        "item": {
          "id": "a33f3c67-c431-4704-a2ea-d5b037153b5b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "4cdce1f8-1768-4f3a-a316-07a463ec9144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f4182d-936a-49c7-8f83-62b102091f76",
        "cursor": {
          "ref": "75e2e9e7-fa12-44ee-a20a-c6c47d6e9ad1",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "8798a601-453b-4602-8514-027d42071636"
        },
        "item": {
          "id": "65f4182d-936a-49c7-8f83-62b102091f76",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0a05334b-8e47-4e8c-9c63-d5a84de23134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c943d6a6-d783-48b7-8db9-65459f5f2cff",
        "cursor": {
          "ref": "e4e950ef-cc5a-4410-b0cb-e49e7adf2403",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2f43b4ce-7364-48f3-8de4-30c1c1834c3c"
        },
        "item": {
          "id": "c943d6a6-d783-48b7-8db9-65459f5f2cff",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8d75e091-c88b-4564-b882-05b587ab6c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b2f2efe-4fb5-4af3-ad63-f253a1819a3e",
        "cursor": {
          "ref": "6ef1b15b-d252-4634-aa58-d5cc0793f081",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "bcd75550-612d-4125-8f40-5acaecdc863a"
        },
        "item": {
          "id": "8b2f2efe-4fb5-4af3-ad63-f253a1819a3e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "67a95dc5-d0ea-4ea7-8f54-1dca41655240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ce5fb5-f1c6-4ffa-a382-e357e47fce66",
        "cursor": {
          "ref": "b9bfcdcd-21e1-409f-a047-6fc6b4855720",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0efab93f-4035-4048-9d1f-de66492a295a"
        },
        "item": {
          "id": "43ce5fb5-f1c6-4ffa-a382-e357e47fce66",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0a08c8d7-7c3c-4acf-9566-1176edcb025e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ced5108-0f90-424a-befa-56de4e1c5126",
        "cursor": {
          "ref": "5b57d62f-61d8-4d5b-a790-ce98ae3f65de",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7a2b6868-07dc-4b26-881e-6636efcfef72"
        },
        "item": {
          "id": "0ced5108-0f90-424a-befa-56de4e1c5126",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "0e5cd6fb-311e-4e82-ab3b-7d3a04507db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f03912-23f7-43ce-ab99-0ba4166bfa08",
        "cursor": {
          "ref": "8b4be29c-d481-46b4-9cfd-f1b9c171c3f1",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "169616ff-a0d9-4b77-8002-b0592b44efe6"
        },
        "item": {
          "id": "17f03912-23f7-43ce-ab99-0ba4166bfa08",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "9fbfe7df-49bd-424a-a45f-af73e8826e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f06487f5-74b5-433c-98b3-ca5f14634123",
        "cursor": {
          "ref": "bd512e8f-010c-4a50-ae51-753583fbc7e3",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ed0e091e-513a-4fca-ad80-25d0469768bf"
        },
        "item": {
          "id": "f06487f5-74b5-433c-98b3-ca5f14634123",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "17b46dd6-a8b4-47e8-97d4-7fdd969bf873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a693482-365f-4c52-9524-422d00fa38fd",
        "cursor": {
          "ref": "fb9919e8-bebf-49dc-a87c-f083af87ae04",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "466e923f-ea86-4283-af33-912b514fe7b3"
        },
        "item": {
          "id": "4a693482-365f-4c52-9524-422d00fa38fd",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "37f69c2e-8e99-4bb0-9e29-e27b0047bfec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7825f00e-8a3e-4d83-b0db-a8c3d3123bf8",
        "cursor": {
          "ref": "c4f6c8a3-1d79-480e-92d6-a732a7311309",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "afd7c75a-4912-4f56-9ed5-8fb903c48d67"
        },
        "item": {
          "id": "7825f00e-8a3e-4d83-b0db-a8c3d3123bf8",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a76163b7-8287-4563-be3a-0a62866b5dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "587df771-7870-4fb1-80bb-61764cc8b861",
        "cursor": {
          "ref": "64cf7aed-ceee-491b-873a-f4c788050007",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "2bb92fd7-262a-4045-977e-e5613cffe857"
        },
        "item": {
          "id": "587df771-7870-4fb1-80bb-61764cc8b861",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "aa9b0d2c-a8aa-4bbb-b54a-1579df952020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc607d5-69af-4c14-9323-388d6f9ba2f5",
        "cursor": {
          "ref": "cc6cb7d7-2e24-4c59-85d5-409b702170c7",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "03159eff-a09f-40d3-a877-82df9124538f"
        },
        "item": {
          "id": "2fc607d5-69af-4c14-9323-388d6f9ba2f5",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9753b71e-15e3-4012-a36f-06143ca29b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b66bcbed-3abc-4709-a9c6-61d7c60bb544",
        "cursor": {
          "ref": "0262b66c-3a78-4fe4-b750-bcdacbfcebac",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "960dfe93-ce3b-4392-99d7-c778da4212c3"
        },
        "item": {
          "id": "b66bcbed-3abc-4709-a9c6-61d7c60bb544",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f79067a4-91e4-40c9-bbf2-a8f414638d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de7e48f6-23a4-4cdc-ab20-a4fe8247566b",
        "cursor": {
          "ref": "4dc5ef16-77b9-4a14-ab5d-404ba1f5fc7b",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "21116879-4810-42bf-befc-0f7f5a5d5fcf"
        },
        "item": {
          "id": "de7e48f6-23a4-4cdc-ab20-a4fe8247566b",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "47846877-1054-4716-a6a8-1995a886a676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "8fc6e571-9d03-47fa-a034-11addc3f5927",
        "cursor": {
          "ref": "75413e44-44cc-4383-a421-dec5ffec28c6",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "5a205a59-306f-4891-8598-9f00174510aa"
        },
        "item": {
          "id": "8fc6e571-9d03-47fa-a034-11addc3f5927",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d5151590-5d83-4438-b092-943cbcb91fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "5a69dc1c-aeff-485c-867a-6663feac28eb",
        "cursor": {
          "ref": "ea4a4e8d-9f6d-4eeb-b0e4-3fbca75032c9",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9d2f7304-180c-4c34-8145-841a870f4595"
        },
        "item": {
          "id": "5a69dc1c-aeff-485c-867a-6663feac28eb",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "792f6432-6c75-480e-bd4a-e98a8050812e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "0343ebbf-adc8-4bd2-9da2-43d527438a79",
        "cursor": {
          "ref": "0c2f9a4e-3a6f-4297-bb4b-2995944b0285",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "664f5217-3d22-4725-bcdf-7e8ac936de7d"
        },
        "item": {
          "id": "0343ebbf-adc8-4bd2-9da2-43d527438a79",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d57751db-e7ec-4dd7-9fa4-d470290af8db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "2d9b79a4-845c-4ab5-bd8e-b326242e1d35",
        "cursor": {
          "ref": "c4ec18cb-4e93-4743-bed0-74cc2f6f8067",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d3fc76c1-6004-4c22-afe7-9a49f2e9ad31"
        },
        "item": {
          "id": "2d9b79a4-845c-4ab5-bd8e-b326242e1d35",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "64775c84-1114-45b8-b00a-7652b395e062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "82b6f7b1-ef3e-4403-8b45-153df2151e5c",
        "cursor": {
          "ref": "a6706149-5ead-4f2f-8998-24d4c789ec97",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "edd2690c-12c7-4da8-8239-d9fc1bf54648"
        },
        "item": {
          "id": "82b6f7b1-ef3e-4403-8b45-153df2151e5c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "454ca9ec-6268-43fe-87d4-d228a95a2846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "4efee891-1519-4e3e-bd80-654b2b10ed0f",
        "cursor": {
          "ref": "e2ac6aa5-56a0-4088-a5c6-5b2a170a8f81",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "35acb1d9-e8be-4749-8826-14594c0a0573"
        },
        "item": {
          "id": "4efee891-1519-4e3e-bd80-654b2b10ed0f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "fd422631-e175-47b4-8441-56d8dd1fbd81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "bb26e92e-50ec-43d9-93d9-7ed159454071",
        "cursor": {
          "ref": "4db28255-4728-46ff-a0c9-b6f6f416ec39",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "cec8095b-3a68-49b9-92ab-206b7342c9c3"
        },
        "item": {
          "id": "bb26e92e-50ec-43d9-93d9-7ed159454071",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "99df6eea-aae4-4c1b-a478-a8765e5ea336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6350ee-3af7-4fd7-92fa-9ae5dedd9214",
        "cursor": {
          "ref": "56470994-064b-4003-8cde-8b826b08fa7a",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2800c9b1-6d58-4931-8615-c031c15cccc7"
        },
        "item": {
          "id": "1c6350ee-3af7-4fd7-92fa-9ae5dedd9214",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f6c201f0-f7e6-4ac6-94f6-b4359b9545a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c945956a-08c0-40d6-a282-faf8f99b97f1",
        "cursor": {
          "ref": "383eb479-036c-46a4-80bf-669333ad6b0e",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "46b73ceb-d752-4b5d-a757-cc939975ca14"
        },
        "item": {
          "id": "c945956a-08c0-40d6-a282-faf8f99b97f1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a89926dc-7d1d-4255-b167-fc12d704e308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b3d966-c3a2-421f-981b-7126cc0f9532",
        "cursor": {
          "ref": "ae413657-d2be-47f6-88b5-fd25a0d697a2",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "667fbae1-d26a-4b39-a928-25b348f5a583"
        },
        "item": {
          "id": "28b3d966-c3a2-421f-981b-7126cc0f9532",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "12ccaee8-fd1c-4508-bf92-ce530d009f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb48ea9-5260-4aae-8bdd-2e30602b2c1d",
        "cursor": {
          "ref": "3a4605f8-52ec-4d20-b457-b821c75c1fbb",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a15a636e-562a-4611-a201-5de88d981a99"
        },
        "item": {
          "id": "6eb48ea9-5260-4aae-8bdd-2e30602b2c1d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "570f7069-55d7-4226-9fc5-02ab1edacf7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96389dc7-d255-41d9-aeb3-e354b6518359",
        "cursor": {
          "ref": "04c97241-80ec-4a26-a4a7-4cb667988b86",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a2368193-9181-468e-9d8c-06e94cc50fff"
        },
        "item": {
          "id": "96389dc7-d255-41d9-aeb3-e354b6518359",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ec691b9f-9cef-40bc-aa49-929884177401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d042d6-e536-4b6a-bb0d-313b2ec2a315",
        "cursor": {
          "ref": "dd2917aa-891a-415f-9392-49cb6240a1c9",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1d032807-abf9-43b8-a499-706a7300d378"
        },
        "item": {
          "id": "43d042d6-e536-4b6a-bb0d-313b2ec2a315",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a3a3e802-86c9-4425-8571-5501539d8d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f85bc9a9-abc7-4240-9dcf-89ec6f1fcd0f",
        "cursor": {
          "ref": "934a8998-1529-48b0-a938-2ac9b75bccb8",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "999be976-c87c-46fa-a4cf-e9a4ae918abc"
        },
        "item": {
          "id": "f85bc9a9-abc7-4240-9dcf-89ec6f1fcd0f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "12c457d1-f298-43e1-abdd-62a67586ae45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f5de41-f4e5-4b30-b7c5-5cccd7354f03",
        "cursor": {
          "ref": "bfeaf91f-a968-4f13-be68-a88f0e44bda5",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ab65e455-d1ad-4b00-89cb-6b5fd45543a0"
        },
        "item": {
          "id": "04f5de41-f4e5-4b30-b7c5-5cccd7354f03",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "454a91f3-0dd7-44b9-803c-8a07eeedc761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd4c095-cd4c-46cf-b0ae-9a789e1ccaa9",
        "cursor": {
          "ref": "2bf43767-c548-4730-a9ed-e5cf2838c74c",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a8886a27-a95e-4d58-942c-08587344c8a0"
        },
        "item": {
          "id": "4dd4c095-cd4c-46cf-b0ae-9a789e1ccaa9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9c10fea9-7580-4051-a24d-f046e92e1990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96808d6-91f0-4757-92fd-0187d0c6bfa8",
        "cursor": {
          "ref": "a6b29317-ec70-4eb9-a75b-fe3204046d30",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "bae0ad99-e0f8-430d-a25b-531f3891f947"
        },
        "item": {
          "id": "a96808d6-91f0-4757-92fd-0187d0c6bfa8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2ba62f94-8927-4ee8-bfc9-7613b676d1a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6694356c-9915-4986-b49a-ddae392870a1",
        "cursor": {
          "ref": "ee3bc3e2-9c08-40e9-8246-8a5b04733787",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "4ffb4fe0-8714-428d-a81d-b99ef1491b55"
        },
        "item": {
          "id": "6694356c-9915-4986-b49a-ddae392870a1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1fccc6b4-8643-4e9b-a3dd-53179c9029e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dddc6c50-2efc-4200-955d-ab2d7d751a26",
        "cursor": {
          "ref": "2acfbe66-0c96-43f4-842f-f9496c79cb19",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0009996b-27d4-4287-b08c-3ccdf1859a5c"
        },
        "item": {
          "id": "dddc6c50-2efc-4200-955d-ab2d7d751a26",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5c801d82-4083-4ffa-9908-a2259c68f583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89cbaaf2-93e3-4d55-abac-1ec44b632842",
        "cursor": {
          "ref": "a4fd0c0e-5831-4d6b-b8e6-cf83b0dc9154",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "70124c1c-0d1f-4297-8425-e61515493510"
        },
        "item": {
          "id": "89cbaaf2-93e3-4d55-abac-1ec44b632842",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f0359a41-ce8e-4475-9c57-cfabd128eb47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc34249-ce49-43f4-8150-04745ad8dfad",
        "cursor": {
          "ref": "3741d9ec-e852-4530-9563-5358986debe6",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "64b1bfbc-cc81-43fc-a004-c395d3019308"
        },
        "item": {
          "id": "2cc34249-ce49-43f4-8150-04745ad8dfad",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "741831d9-988c-4576-898c-7baf4515720c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "984555f3-37bd-4b1b-960f-3622a100d7e0",
        "cursor": {
          "ref": "e04e2581-1ec0-4278-acb2-4d5f7878b0ad",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e3de795f-ccbb-447e-ab85-b940c05a5db1"
        },
        "item": {
          "id": "984555f3-37bd-4b1b-960f-3622a100d7e0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "65076c0d-35f8-4b61-80a4-9ccdb530848d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "021d9acc-cc51-402b-8d1f-ae3a4a61e778",
        "cursor": {
          "ref": "1fcc7b9b-6a1d-4014-a5b5-7feef6dc1032",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "36741aaf-0351-44d0-aa9f-a1816644fffe"
        },
        "item": {
          "id": "021d9acc-cc51-402b-8d1f-ae3a4a61e778",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2c16f87d-2263-43a7-a0c9-8b711dbb21fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec93175c-4b6c-4d94-b926-df302fcfefd8",
        "cursor": {
          "ref": "14325ce1-3fda-450c-a8f4-d0626ed30ceb",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a086071c-d8bd-46d1-ac09-fc178c96cca3"
        },
        "item": {
          "id": "ec93175c-4b6c-4d94-b926-df302fcfefd8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8fd09e4a-50cf-4001-97a8-af0e658d6bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1930324a-c047-43b6-970a-da47011c8046",
        "cursor": {
          "ref": "d73f2dd9-2158-4274-8154-b50ea3675fc4",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "94f9ec19-3848-4826-8d0c-4e3826c77bfc"
        },
        "item": {
          "id": "1930324a-c047-43b6-970a-da47011c8046",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "cc2d3a1c-52a9-4ecc-8acb-3d0ddf5dcc27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "010f98d1-2fb6-4851-a5c0-e881f850c693",
        "cursor": {
          "ref": "e29ab2c2-0f39-406c-ac88-22b80940b908",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "66ebae98-3eb6-4bc5-87bb-923481d6bc04"
        },
        "item": {
          "id": "010f98d1-2fb6-4851-a5c0-e881f850c693",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3e27ce24-e38a-4830-bc76-c6fbca82a21c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d308b4ea-c862-4e88-96ad-a5a27fab5ff3",
        "cursor": {
          "ref": "70218e03-8c84-4abc-939e-2d4c2aa35b2c",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "0a417b9c-b91a-4caf-9817-f16328f69440"
        },
        "item": {
          "id": "d308b4ea-c862-4e88-96ad-a5a27fab5ff3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "05bf9cb1-e1a5-4fdc-ae6c-795b58e2f0ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5861f86-a268-424f-bd51-cc16de425bd1",
        "cursor": {
          "ref": "91849050-c58a-4789-af59-0d788dd0f131",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "880d8bf6-8404-4661-badf-369e8e92b521"
        },
        "item": {
          "id": "d5861f86-a268-424f-bd51-cc16de425bd1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "10da77f3-9540-4b4c-9836-c8c133c91c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b051c9d-bf09-4dcd-af0b-0f795f8b134b",
        "cursor": {
          "ref": "68ae1209-89e8-4ba5-bb14-e8a20c1c9474",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "37540473-291b-484a-a169-2b0d6675fc4c"
        },
        "item": {
          "id": "2b051c9d-bf09-4dcd-af0b-0f795f8b134b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8dd5e341-d409-4ea6-b026-fe8f2aefced8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea43e0e6-2334-4257-8044-5909bda20b52",
        "cursor": {
          "ref": "d7310ffb-4e5d-4766-bd03-977bd9ec4963",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "8ff560ed-a9df-44b0-995f-1dd8253a0d03"
        },
        "item": {
          "id": "ea43e0e6-2334-4257-8044-5909bda20b52",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c06ebad9-5852-4794-b5d1-2afb09078482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7517f010-4b9a-4491-8398-e302a93bf6b5",
        "cursor": {
          "ref": "350d48c3-a093-482e-a06f-51c6953cad12",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1f16bb8d-305d-422c-ac8b-f14f4c8ed226"
        },
        "item": {
          "id": "7517f010-4b9a-4491-8398-e302a93bf6b5",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8e9fa45b-f1cb-4227-9f7f-463da72a0e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a355c33b-2838-4669-906b-b2008e3f44b0",
        "cursor": {
          "ref": "40cda190-5ddf-415e-9d17-6351176a9c40",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "8a076b15-ff30-4a96-808b-22ef4f2dbf09"
        },
        "item": {
          "id": "a355c33b-2838-4669-906b-b2008e3f44b0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ed541101-73b5-4290-8da2-634d49625a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2d1b16-a477-4d12-855e-fe5b059d382b",
        "cursor": {
          "ref": "620de8c2-82e0-4f19-9e03-356a8a65d4e7",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "aaceacb6-2ec4-4383-ad4a-aac32cbe7789"
        },
        "item": {
          "id": "6b2d1b16-a477-4d12-855e-fe5b059d382b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f60580d7-5627-41c3-b0a3-6bcf06108398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "875603aa-f928-4639-aeaf-ae80c2ee54fa",
        "cursor": {
          "ref": "7d4813b6-7c8f-4333-acfc-90679f019f77",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d2fe36ff-81fc-453d-abe1-4f08c45c0710"
        },
        "item": {
          "id": "875603aa-f928-4639-aeaf-ae80c2ee54fa",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d763ea02-d573-47a0-9696-d5183157ddcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edfa4c8f-8698-472b-a350-469fbb0bcebc",
        "cursor": {
          "ref": "8b1bacd6-d7cf-4ec7-b5f8-3a6949f183ba",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "216ee858-f706-4fc3-8666-63c34b834479"
        },
        "item": {
          "id": "edfa4c8f-8698-472b-a350-469fbb0bcebc",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b3eec8a8-f5ae-4f65-82b5-dc4944d80c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c03ac5-bd93-43e4-9315-75d713e9f587",
        "cursor": {
          "ref": "4eb8c695-563a-49e9-a02d-674a2427da65",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "2f305833-4258-4991-a8fc-f725da70179d"
        },
        "item": {
          "id": "a2c03ac5-bd93-43e4-9315-75d713e9f587",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2c72c44d-6225-4fea-9963-addbe7c70ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1549f263-e020-42c8-a78f-cd10abc7b33d",
        "cursor": {
          "ref": "a74f9fa5-9b79-40d8-ac9e-a8a4b213b6da",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "74b1c6ca-a58d-4e51-805a-7dcfd9bf862d"
        },
        "item": {
          "id": "1549f263-e020-42c8-a78f-cd10abc7b33d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b6d560b7-c109-4a14-afa3-a182151cd3d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fcca22e-0c40-42de-b767-fe4f92f9462b",
        "cursor": {
          "ref": "949d39e6-2048-4319-abfb-05a46ee521a1",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "6a1ea997-c1bf-447e-b000-cd52b0dbd2b1"
        },
        "item": {
          "id": "0fcca22e-0c40-42de-b767-fe4f92f9462b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "dc0aba9c-c073-4130-b070-477f18116463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de75223-9146-4e21-b782-d14be7cec031",
        "cursor": {
          "ref": "e560143c-8ae5-4cff-9e64-55ff02e50ef3",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4088c712-265b-4f12-bab2-c3bb0a23d626"
        },
        "item": {
          "id": "1de75223-9146-4e21-b782-d14be7cec031",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "bf3922fd-0cf7-4142-a1da-4cfab789fe05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b776ac-ff27-4d8c-a3d6-54ebcfe323ac",
        "cursor": {
          "ref": "fce47f65-607f-4c6b-84f3-07175f973d20",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "951110ae-0332-4ac1-a75a-bbda2e7d50a3"
        },
        "item": {
          "id": "72b776ac-ff27-4d8c-a3d6-54ebcfe323ac",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "2e8e043b-3db6-4da1-8eb6-9a9aec16049b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350c3658-ae9a-47be-814c-b951ecdd0ac0",
        "cursor": {
          "ref": "6fa82c62-8814-48d0-b744-d9dae3775803",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "56c2db8a-390e-4147-b57c-72f551b7e436"
        },
        "item": {
          "id": "350c3658-ae9a-47be-814c-b951ecdd0ac0",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "9c4bdf73-84c4-4292-9903-5439e6c58019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92bc2b42-aef0-46c2-aaff-bfcdfd9d9077",
        "cursor": {
          "ref": "eaba2985-c1fc-4e29-a6c0-95b861d98d7a",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "80d6a2f2-c15f-431d-bfcd-044f09916f7a"
        },
        "item": {
          "id": "92bc2b42-aef0-46c2-aaff-bfcdfd9d9077",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d46811cf-0c51-4819-a62b-7777af2b4084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6ec0ea5-0a2a-4694-b384-9038a2e57636",
        "cursor": {
          "ref": "2d5dc2ab-adaa-46d5-88f9-e5d82d5ff265",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5aec4104-7f72-4e4c-9eb1-3306b84ccb20"
        },
        "item": {
          "id": "b6ec0ea5-0a2a-4694-b384-9038a2e57636",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "81476872-ee20-435e-aa4f-252ac594b5f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d884d7d-b375-45a0-b217-6367212ead91",
        "cursor": {
          "ref": "ccacc63d-0ff8-444c-81f0-2bf35886b295",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "4fddaaa9-6386-4207-b3e0-b247f2ed896c"
        },
        "item": {
          "id": "6d884d7d-b375-45a0-b217-6367212ead91",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d39e792c-c26f-4b4b-8373-05e9015065b8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38fbfdcb-d8a4-4320-a7c6-b790304c49bf",
        "cursor": {
          "ref": "55583e61-2ecb-4902-9f78-bdfd5cfb96ce",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2196777f-513e-4b71-b45e-3b45ed6fbdcf"
        },
        "item": {
          "id": "38fbfdcb-d8a4-4320-a7c6-b790304c49bf",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8b7f4436-483c-40be-b704-8446b9c52f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec41f13-b4c7-4a4d-886e-dc21981b615c",
        "cursor": {
          "ref": "442fa0e8-4df5-4517-a2a3-4d8a92c3f865",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e272b230-9c5d-4670-8f08-d7ba84779c05"
        },
        "item": {
          "id": "aec41f13-b4c7-4a4d-886e-dc21981b615c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0e20cf7f-9984-4c55-922d-79b4619864b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b5b56b-09b7-45b5-bda3-137599294748",
        "cursor": {
          "ref": "0bd9d366-5b45-44a5-8299-4961e5391951",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a1e151d1-dca2-43c8-afeb-3707b13260aa"
        },
        "item": {
          "id": "e8b5b56b-09b7-45b5-bda3-137599294748",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "55b7a8cc-c110-489d-a17d-b8a9837ea635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e785b5-a1c0-4466-bade-aa2e0e27dd14",
        "cursor": {
          "ref": "40b7c00f-60c1-4c3c-95ea-ae60fed0a844",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "24d9df2d-7a5b-45b3-b926-e06ac1f13233"
        },
        "item": {
          "id": "95e785b5-a1c0-4466-bade-aa2e0e27dd14",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "907b0356-0d80-4d90-8e98-b52f07c11e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7846ff24-9b09-4bc7-99cd-51dbd75741d6",
        "cursor": {
          "ref": "fdb58532-6530-4791-bcdf-81e5b81f6742",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a9a35c0b-deb5-488c-a548-dbf50e161271"
        },
        "item": {
          "id": "7846ff24-9b09-4bc7-99cd-51dbd75741d6",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "041818f5-da1a-4759-9ce7-7550c16c3f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6caeeb45-becd-4a6a-a03b-bcdb3466f6ac",
        "cursor": {
          "ref": "f18092c3-c7f8-4251-9b7f-a519eb98bf13",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e9c377b0-98bf-4643-a7a4-906a28755285"
        },
        "item": {
          "id": "6caeeb45-becd-4a6a-a03b-bcdb3466f6ac",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b716ddd1-9eba-456b-900b-e944e283c660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e36099b-dd20-44e2-9cc8-ed9b2fca387f",
        "cursor": {
          "ref": "10d1fa44-3ad8-4db0-bc7b-4f4a9024c92c",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ddc5e0c7-b028-4083-a322-a16bf812d141"
        },
        "item": {
          "id": "7e36099b-dd20-44e2-9cc8-ed9b2fca387f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "03718e0c-d96f-44bb-b217-fe1bea2fa608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0df09d5-26c9-4ca2-85d2-74f6c21fec73",
        "cursor": {
          "ref": "2294d669-c2cc-4a38-a16e-1e19d72b210d",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d157af7a-83f5-4e9f-a0d9-4ffc560f7d89"
        },
        "item": {
          "id": "e0df09d5-26c9-4ca2-85d2-74f6c21fec73",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0511a963-47d7-4b7d-b685-3f0e8ea64d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e3ff00-339a-42c4-b7b8-67750c91f405",
        "cursor": {
          "ref": "7ab92061-7446-4358-89e7-af48e09cb5d1",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f5f549cc-056b-40ff-ad97-bac08a4fc11c"
        },
        "item": {
          "id": "d3e3ff00-339a-42c4-b7b8-67750c91f405",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b4dd21f0-f1f8-4290-8ad6-42b295a23d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6de6d3b-ab5c-483d-aec7-cf97fb298e8a",
        "cursor": {
          "ref": "c97310d2-eccb-43f9-a181-d0f3c6df23b1",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ba2c396c-1c39-4016-bbfa-159d208fdc06"
        },
        "item": {
          "id": "f6de6d3b-ab5c-483d-aec7-cf97fb298e8a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "0309af72-30f6-43ca-b7eb-8720d7b4198b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e8062e-dad7-4b61-973b-fc20543bb4cb",
        "cursor": {
          "ref": "dc4a3764-a153-41cc-b0de-db8b562f59e0",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "8459c68a-a1db-45ce-840d-29d7c1919b2b"
        },
        "item": {
          "id": "d5e8062e-dad7-4b61-973b-fc20543bb4cb",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "daa5ec9c-bb54-46d7-badd-b02d26d9478e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb2b899-2e3a-48d8-a58c-51bcbc22e65f",
        "cursor": {
          "ref": "2dfbb876-add8-46bc-88e0-00f21606d19a",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "388b964d-f7c8-494f-b8a7-468aabe57295"
        },
        "item": {
          "id": "beb2b899-2e3a-48d8-a58c-51bcbc22e65f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "11f7d8f3-3c27-4b30-8466-e01cf3624034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f3e3bb9-0374-4092-bcc4-288dc0e129fa",
        "cursor": {
          "ref": "e24749fb-1ccf-4047-86e6-8c53b95c7e63",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "48371a57-4581-418e-a7d2-e937ea168d14"
        },
        "item": {
          "id": "3f3e3bb9-0374-4092-bcc4-288dc0e129fa",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b19e2b46-5921-41fa-8b10-a139c0912412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8dac764-0aeb-45a4-b139-28f16e22398b",
        "cursor": {
          "ref": "85276c98-1fe3-49b9-b46e-2384bad407ff",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "478c5027-8675-45c6-8285-c55f137ab389"
        },
        "item": {
          "id": "e8dac764-0aeb-45a4-b139-28f16e22398b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "55260438-38dc-4399-a551-19761c215f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be5e8a5c-0f98-49f1-826e-dae633055275",
        "cursor": {
          "ref": "f9bead00-1b73-41be-b652-bb855874b836",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "896e541a-0405-4bd3-ba7d-0de214bf8316"
        },
        "item": {
          "id": "be5e8a5c-0f98-49f1-826e-dae633055275",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "05a2c162-f013-4a3e-89c4-e777b4ae2850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dccd1ec0-35db-43b1-895d-42c6c0b7f3cf",
        "cursor": {
          "ref": "de4be0cc-4acf-4087-9469-a737d5860c47",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "db2563ca-0d4d-4436-b0c1-1cc970238a80"
        },
        "item": {
          "id": "dccd1ec0-35db-43b1-895d-42c6c0b7f3cf",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "320b29dd-60d4-4cca-9968-753e598bfbe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93dae2a1-4ce9-47b6-a3b6-c55e50e83f0f",
        "cursor": {
          "ref": "046ab6d7-0a2b-4459-9bf1-d26cc76cc20e",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "4de4e277-6cce-4fc4-be61-22b119b3dd69"
        },
        "item": {
          "id": "93dae2a1-4ce9-47b6-a3b6-c55e50e83f0f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f9d5d02d-1d97-4ece-a168-bf8aa6f42cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5001e53-c902-46db-9c69-fb007682916f",
        "cursor": {
          "ref": "0ea8a2aa-a858-436f-88fe-d40a183fc80b",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "29ff2cb3-dda8-49eb-92f3-3c1bcb0c9b5e"
        },
        "item": {
          "id": "c5001e53-c902-46db-9c69-fb007682916f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "2d294bd7-8528-44b6-aa75-e15bf34cb1ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "890794c0-45bd-41d6-a362-2ec9ec5e4825",
        "cursor": {
          "ref": "b1a11752-7639-4212-bc71-ea7ee7fd5685",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "d9040d52-838e-43ed-9419-b8ee57c5218e"
        },
        "item": {
          "id": "890794c0-45bd-41d6-a362-2ec9ec5e4825",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "332a4cd4-e70f-48f0-91b4-d84cf18747ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c65729-6417-43ef-8cff-810a2a2eed8c",
        "cursor": {
          "ref": "1a7c4836-580d-4122-a28e-972fde703db0",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a8be82ae-9636-4123-8cd5-f41db459f652"
        },
        "item": {
          "id": "c1c65729-6417-43ef-8cff-810a2a2eed8c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3117fea8-d8be-43b6-bb3a-91d74b3c9186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88cda3f6-0286-4913-b7e2-851ca62192aa",
        "cursor": {
          "ref": "b1c119c1-f79c-4c8f-baed-ec655baa4a75",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "9c9d33f8-77ec-4877-b255-a3205049b615"
        },
        "item": {
          "id": "88cda3f6-0286-4913-b7e2-851ca62192aa",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "006f0a41-4984-4007-8e0d-bd4889b7eb23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aeaf9d8-871b-4f24-9269-1b1341445219",
        "cursor": {
          "ref": "a4bbb969-2a0d-4edc-b9cf-017b221c56ad",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e3a21aa2-46d9-4c30-9c51-1c3f9478d2a5"
        },
        "item": {
          "id": "1aeaf9d8-871b-4f24-9269-1b1341445219",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f3ff43ac-494c-425b-b0e6-100e4ea6f251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9909a55a-f10d-48a2-9b2e-72ae5d54d32d",
        "cursor": {
          "ref": "0d8489ec-4a5c-4edb-b8bc-806d5c2043ad",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "185fa32b-680d-4a4b-8880-7bbdb2941d21"
        },
        "item": {
          "id": "9909a55a-f10d-48a2-9b2e-72ae5d54d32d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1531eb17-31b5-4b90-ab06-f5279833fe25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0900c4c-19d2-4a5b-a0cc-da95ff5e789c",
        "cursor": {
          "ref": "41195fe9-0960-4a18-ace4-7fce829a0290",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4ddcac4c-2007-4b20-9a05-3f33bac747e5"
        },
        "item": {
          "id": "a0900c4c-19d2-4a5b-a0cc-da95ff5e789c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8e184f92-8755-4bbe-b43a-372d6480cd12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfffde71-5440-49dd-9a8b-768bc7d9dfe1",
        "cursor": {
          "ref": "1f822229-17dc-4666-8241-0361aa917ad7",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d70258f8-9b0f-435a-904d-4d8faf26e8df"
        },
        "item": {
          "id": "bfffde71-5440-49dd-9a8b-768bc7d9dfe1",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9e861c6f-61d3-440a-a6a2-2bf1fec5048f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bab02726-d747-4a6e-abac-20b85904232f",
        "cursor": {
          "ref": "a524fa86-3e08-4954-bed7-72f13611ec8f",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "8b8920fc-c8c0-405a-b570-9a120777fe9d"
        },
        "item": {
          "id": "bab02726-d747-4a6e-abac-20b85904232f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "dbb41a5b-c19f-48f3-8439-37a9ad9c83f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4989583-d913-44df-b482-acc70c6c249f",
        "cursor": {
          "ref": "5dc9e4f7-e882-4855-a143-0872a677c6c1",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "df850406-23b3-4016-b7b2-816298085ba2"
        },
        "item": {
          "id": "f4989583-d913-44df-b482-acc70c6c249f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "364a2964-268f-4035-a7ba-75215ff49128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5baf713b-8b48-4c6f-aa94-845e32b0c0e0",
        "cursor": {
          "ref": "9ce1c820-ceb9-4192-9861-f855fdb8ea1d",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2970e747-1e5e-401f-9074-ef3bec5f8870"
        },
        "item": {
          "id": "5baf713b-8b48-4c6f-aa94-845e32b0c0e0",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "ae350f13-0856-4e2e-9db2-5a47dc6146e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9625e05-cf75-42dd-b9c5-f7d91c663020",
        "cursor": {
          "ref": "ada9870c-f481-4dff-bf0e-b7c870ece5d9",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5e82197b-15d7-4262-9730-1e4a4409e9c1"
        },
        "item": {
          "id": "b9625e05-cf75-42dd-b9c5-f7d91c663020",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1ba06034-f387-41e0-b21a-d2d2ed20d7af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "884be5a7-fb7f-46f7-841e-e4b2f8d7cb0c",
        "cursor": {
          "ref": "de46604b-52b3-4eb6-b61c-f6814a918f0a",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a3606836-970a-4cd3-81fd-6489e58ac46f"
        },
        "item": {
          "id": "884be5a7-fb7f-46f7-841e-e4b2f8d7cb0c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "89f39566-a0cc-4d16-b1c8-a67b9ed77bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c222f19-5802-4e14-9618-cac00a23fe6f",
        "cursor": {
          "ref": "3e571770-00b7-4b38-a3bc-936b416960ef",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9f04e105-0e17-4e8a-ae8f-49230234477b"
        },
        "item": {
          "id": "5c222f19-5802-4e14-9618-cac00a23fe6f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f3f0bddb-d9a1-4f07-b95c-6077b920146c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1d7c6a-a5d9-49c4-8d8a-63b60154fd91",
        "cursor": {
          "ref": "1979bccd-8a79-4ef7-a943-5748f8dcf740",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "be400135-011f-41a6-a59e-0481c16f2bcc"
        },
        "item": {
          "id": "ed1d7c6a-a5d9-49c4-8d8a-63b60154fd91",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e59b6d8b-16ee-4cf9-b0db-2869fd1e5be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4bd2c08-67a0-440b-9983-4e5a1eef8364",
        "cursor": {
          "ref": "03ed3881-b026-4e6d-93b7-05392af552d6",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8ada5c48-f501-4203-9278-6609850266bb"
        },
        "item": {
          "id": "e4bd2c08-67a0-440b-9983-4e5a1eef8364",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "9ac146d4-09fe-4bbc-ae3b-e8ad52a66ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401dcc7f-aa56-4c02-ae6d-704d63776321",
        "cursor": {
          "ref": "ea2866dc-15dc-4813-b55d-87baff54672f",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "82cc7c15-7c98-4d39-8fe5-7da0910f97ac"
        },
        "item": {
          "id": "401dcc7f-aa56-4c02-ae6d-704d63776321",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f232919c-9a6e-4bfd-9cd5-04e125bba256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7cfc111-85e9-40ae-8db8-3dd259c1eb64",
        "cursor": {
          "ref": "3f10d410-16de-482b-bc6b-07294de96882",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "57d3960d-5655-4de7-a8c3-ba0b66111381"
        },
        "item": {
          "id": "d7cfc111-85e9-40ae-8db8-3dd259c1eb64",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "80330b82-2f3e-4d7f-b3d0-6cadc7b61d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1751dbe8-e256-41fa-a6fc-48a0a87803c4",
        "cursor": {
          "ref": "dd99b847-3599-4b0b-8fc8-095609959070",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "76b03df3-2497-41b2-83a2-84cff4112d8a"
        },
        "item": {
          "id": "1751dbe8-e256-41fa-a6fc-48a0a87803c4",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f4a350ee-2884-4e53-b985-3547dcc8317f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b16a633-f6ea-40ba-a3aa-81ccf3f94e61",
        "cursor": {
          "ref": "f2431a5b-c071-4d4a-a17a-3ea35549bf80",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "3897f108-f776-463e-b47c-f5bf27e4c3b6"
        },
        "item": {
          "id": "1b16a633-f6ea-40ba-a3aa-81ccf3f94e61",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "00fe251d-ec76-456e-b526-40cdbd9dc9c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c500112-3c9c-4e95-96ad-77ff3358041e",
        "cursor": {
          "ref": "3e23e6b1-10bb-46b7-83d4-41e89fc386b0",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "994d31e6-12f0-46c5-96d4-021da10046e8"
        },
        "item": {
          "id": "2c500112-3c9c-4e95-96ad-77ff3358041e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c272dcef-140f-435d-9347-d2efe3223d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a88f37-e665-45f4-9052-1ceb839a73e3",
        "cursor": {
          "ref": "6d1ac490-30bc-4743-8dc8-c7a9ecf2268d",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ecf21ff5-ea67-4b2f-afb3-736e229fc137"
        },
        "item": {
          "id": "55a88f37-e665-45f4-9052-1ceb839a73e3",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "490c9730-e184-457f-9c27-aa5b3bc7d751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a72e4f91-c599-4ea6-adc3-6d01ce23b414",
        "cursor": {
          "ref": "39fa4eea-266d-4f53-b5ea-e6fa2e24675e",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2db6a847-cb48-4c17-a346-e9b4227fbd9f"
        },
        "item": {
          "id": "a72e4f91-c599-4ea6-adc3-6d01ce23b414",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "72117620-49ab-45ae-bd83-8aa78afcb0fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2224a826-e4e4-4eb7-b9fb-4cb7970e1ab3",
        "cursor": {
          "ref": "bed7ddb2-3711-4880-a258-0e67a1b5c9bf",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b256256f-7b54-4f11-937f-e77ab74ac5ac"
        },
        "item": {
          "id": "2224a826-e4e4-4eb7-b9fb-4cb7970e1ab3",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a3dd14e3-8ebf-4b35-835c-138e46155393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5e0bc7-47de-47a9-b6aa-24a588e4dbe1",
        "cursor": {
          "ref": "24bf1a4e-4f7a-48de-b027-3f7b11c30dc9",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "fb1bcf72-ab7c-453d-842b-7e25b06ddc56"
        },
        "item": {
          "id": "1e5e0bc7-47de-47a9-b6aa-24a588e4dbe1",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "9e04c958-6586-4959-9ce3-2dab13d6bfea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f09b7d-ef89-4831-b1bf-4ca8379c3845",
        "cursor": {
          "ref": "76cb3a00-1db5-4d30-84ee-9ada86ff84e1",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "b87bc826-881a-434f-89d9-3636d58ae4fa"
        },
        "item": {
          "id": "85f09b7d-ef89-4831-b1bf-4ca8379c3845",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f56a1d69-3e80-4fa0-abb6-452766f24267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44464936-f5c8-4fdc-aba0-da0f8d8a284b",
        "cursor": {
          "ref": "af1bf437-b15f-46b7-9d95-947c716b32a1",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f9e43161-7f63-42ea-8ebe-8a5915900a30"
        },
        "item": {
          "id": "44464936-f5c8-4fdc-aba0-da0f8d8a284b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "24230adf-ffb4-408a-84f9-2fc08b0fbeed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9403bad1-264f-42d5-bb98-354fcf3729a9",
        "cursor": {
          "ref": "00eff286-bdbd-4a09-8df6-ca85ae1a9462",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "729dc648-fc0c-4a8b-b443-853918fce22e"
        },
        "item": {
          "id": "9403bad1-264f-42d5-bb98-354fcf3729a9",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "db5025df-41b9-4717-b504-44626d587522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e644a994-e9ee-4268-862e-2c4fed47209c",
        "cursor": {
          "ref": "ed956a83-cd37-4e64-9e7a-e72f181a0c05",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "f4cf4de5-7c14-4200-a1e4-3a1e66ef9c8c"
        },
        "item": {
          "id": "e644a994-e9ee-4268-862e-2c4fed47209c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6a4f2f3b-624b-4b24-98e8-2a60475b42c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef26b753-3165-4bb9-b553-6b738e233ffd",
        "cursor": {
          "ref": "a417fff3-65ec-40de-a69d-18313ccf131c",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "61caecfa-53f9-4c4a-85ee-4fc1f1576512"
        },
        "item": {
          "id": "ef26b753-3165-4bb9-b553-6b738e233ffd",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0563d1d4-9f7e-4b12-9aa1-ab13f97dacee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "357a3923-6eaf-4bb7-b9fa-e818e8afc22d",
        "cursor": {
          "ref": "62acd15c-a7a8-467e-8ee6-575414d73540",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "4e84bd89-65fa-4ec5-8d37-1fdb22e5ee15"
        },
        "item": {
          "id": "357a3923-6eaf-4bb7-b9fa-e818e8afc22d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "decae857-a400-48d6-83e2-4ad3b514f298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7618d126-02dc-46ea-a619-77513c748089",
        "cursor": {
          "ref": "9fd08e25-00eb-4c14-9120-085c995067f2",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "70f91344-fca0-45ab-94d6-91779981160a"
        },
        "item": {
          "id": "7618d126-02dc-46ea-a619-77513c748089",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0bac3386-a54b-4bfb-939a-225d9b5ad207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694866fd-0abe-476c-8e6b-175e4f03a511",
        "cursor": {
          "ref": "842015ae-8add-426f-be87-b29016704249",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9b69e8aa-98e5-4142-8277-e09c0e68f875"
        },
        "item": {
          "id": "694866fd-0abe-476c-8e6b-175e4f03a511",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "1b29509f-96e9-449f-bb18-8f71490c6784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d01f9e50-295c-4db7-8739-96da4333cbd7",
        "cursor": {
          "ref": "58726517-eda1-45e5-b6f7-6361091adac7",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "4b7b8640-c4e3-432f-b642-b40524cb90a9"
        },
        "item": {
          "id": "d01f9e50-295c-4db7-8739-96da4333cbd7",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3da7d011-2232-41d0-b681-89c338b770da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30cc0bf-3b61-4393-b22a-4ba281446a11",
        "cursor": {
          "ref": "43d721fc-183b-4192-80c7-8afb0d6f9c7b",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "26cfa34d-eb72-4054-9c59-13504b656096"
        },
        "item": {
          "id": "a30cc0bf-3b61-4393-b22a-4ba281446a11",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "3f2f6897-fd86-4b0d-a384-5bf193726b69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a52a52-7c13-45fe-9238-54b1a3487013",
        "cursor": {
          "ref": "0565990e-7ee6-4c6b-ae81-feb3fc7a8dfd",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1210a16c-abf0-46a9-ad2d-da12b8d404c7"
        },
        "item": {
          "id": "53a52a52-7c13-45fe-9238-54b1a3487013",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "854f8884-5f8c-4bd1-a77b-c64b867a70b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8702374a-bd41-450b-b2a4-5dac21f40b26",
        "cursor": {
          "ref": "1a9e8616-05a8-4f7c-9402-3204fb158bea",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "14f39206-908c-43b3-a239-bf9f659ecc1e"
        },
        "item": {
          "id": "8702374a-bd41-450b-b2a4-5dac21f40b26",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "043df400-fe3e-4cb3-aa47-c4b0deff26a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ff4c8e-e5cb-4306-be97-8dedf1486148",
        "cursor": {
          "ref": "629e4a64-f1eb-4520-857d-b510f017dbb4",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "02663ef2-1836-4806-a2d1-5713f6a999ca"
        },
        "item": {
          "id": "a3ff4c8e-e5cb-4306-be97-8dedf1486148",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "44e6814f-7f96-4624-862c-6c575bdc3467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2771b058-73d7-423f-a9fe-41e716473c97",
        "cursor": {
          "ref": "913cf9df-4d18-4176-bf0b-f0582217c50d",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "605e1c44-2dd5-4719-8141-ae341ffe66ad"
        },
        "item": {
          "id": "2771b058-73d7-423f-a9fe-41e716473c97",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "099a0e08-b967-464d-8b9d-a579414c4166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e059580-a3df-469e-a2ac-98bd2ee27ace",
        "cursor": {
          "ref": "64777135-41fd-4283-830f-1de1403d4477",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "13dee2e0-34e3-4b20-ae29-7c6a005ef241"
        },
        "item": {
          "id": "8e059580-a3df-469e-a2ac-98bd2ee27ace",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "61586eb1-1f1c-46f4-92ef-80a94cf7f416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3b161e-dd48-48a1-beb6-c14c1adc7c73",
        "cursor": {
          "ref": "ee48a3b4-f1c9-46bd-9c5e-81a774d95f89",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a6edf3c7-a364-4c5d-9d86-70d07ee31a12"
        },
        "item": {
          "id": "6d3b161e-dd48-48a1-beb6-c14c1adc7c73",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e012029e-67e1-47d4-a341-4898557c6e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5c8b1c-779f-47a4-9cf5-b6a473188c7b",
        "cursor": {
          "ref": "b5ddfb07-bbf0-4db6-9266-b4edc903973c",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "53e61b3f-dc4d-4dbb-8c80-363c4578989f"
        },
        "item": {
          "id": "4e5c8b1c-779f-47a4-9cf5-b6a473188c7b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "abf3fb46-e73f-4408-a12f-20b7001b0c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a9220a-5237-44fd-8375-4fcb660a2039",
        "cursor": {
          "ref": "cadd496d-b18a-4b62-8cd4-c58b772190de",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "bc5f5e64-0160-4ce8-a061-c58a76330c07"
        },
        "item": {
          "id": "91a9220a-5237-44fd-8375-4fcb660a2039",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ac69b4d2-5daf-442c-8d6b-37d6d1f5571a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5436406a-7ddb-4e03-bc27-2bb370579cde",
        "cursor": {
          "ref": "7fa5d4ba-4a12-416d-8347-5360e7f50eec",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "826141fb-4cfa-49e7-b031-b4a18183efe5"
        },
        "item": {
          "id": "5436406a-7ddb-4e03-bc27-2bb370579cde",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "62054ec6-c162-45e0-a7ec-ab7534ad688a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0773d42-9e0f-4235-8ef3-d36a09f39c3a",
        "cursor": {
          "ref": "f7e974b9-554c-4cab-9bbf-4de57a1fb465",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "90c8f3b9-f15c-4902-85a3-27621b64e727"
        },
        "item": {
          "id": "b0773d42-9e0f-4235-8ef3-d36a09f39c3a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "001847d6-b58b-4a8f-b1d0-d64cd670123e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5dfbf98-06fe-48e9-9a81-89b9a0e91669",
        "cursor": {
          "ref": "095e1b26-a008-4c9e-b2f2-8c1e63b01e97",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "af70bcac-1795-430c-a50a-3b9f7974b880"
        },
        "item": {
          "id": "e5dfbf98-06fe-48e9-9a81-89b9a0e91669",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2e907ebe-fd4d-424f-b645-e3341a7852a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "651914fd-7b0c-4e43-aecd-ac7ba86d624f",
        "cursor": {
          "ref": "3ba0b21f-1b69-4adf-9fe0-8d7ac6997c89",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d3bb8d79-3909-46d3-85e2-adb2009b8910"
        },
        "item": {
          "id": "651914fd-7b0c-4e43-aecd-ac7ba86d624f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "bc0e8358-7fe4-4aea-ac73-619f6b8a1c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f1ecdf-0364-45b1-880e-aa8167a15513",
        "cursor": {
          "ref": "6c862b42-7c91-413f-9b10-1a071bd99198",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ad8931fd-eed0-45f6-b792-6386d26cdd0c"
        },
        "item": {
          "id": "f6f1ecdf-0364-45b1-880e-aa8167a15513",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "7888f21d-f062-4c17-a7e3-6ff5e7c57dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f78e203c-ba5a-4e8b-bee2-86c398dcf82b",
        "cursor": {
          "ref": "9f10c9fd-51a4-44c5-9ad2-530937618eff",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "34f1d9c7-1af9-4937-8aa4-ce25e5bff6b1"
        },
        "item": {
          "id": "f78e203c-ba5a-4e8b-bee2-86c398dcf82b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8d64a6ab-4375-4255-bbf6-6a791e4b1e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a25e23c4-76f1-482c-931a-2097cdaddc93",
        "cursor": {
          "ref": "fe7d3f14-6f69-419e-95bb-55c4d0ffbc73",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "acf0f840-6f98-40f6-b3cb-aaed1af437ef"
        },
        "item": {
          "id": "a25e23c4-76f1-482c-931a-2097cdaddc93",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a47205e5-5370-476f-adf7-e270681c3b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc2f0478-b523-447d-b4e1-7a4c2ee8d4ad",
        "cursor": {
          "ref": "29524309-7b32-4dfb-a0b7-4ea2571c64f9",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a64f149b-f00e-4c6e-9332-f799641541d3"
        },
        "item": {
          "id": "cc2f0478-b523-447d-b4e1-7a4c2ee8d4ad",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d0e4c106-3488-4665-a63e-050c14b6364d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c60c67b-50de-4a21-af94-874cc2c6a833",
        "cursor": {
          "ref": "46cc1521-fa24-43e7-a355-10c3a18315a8",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "34275073-c2af-44e0-8836-d41925ff0ee7"
        },
        "item": {
          "id": "2c60c67b-50de-4a21-af94-874cc2c6a833",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "cf8a6616-7c10-474e-8b3b-9f3dc9e6cbe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf7dd93-a89a-4cbe-bc5f-06e05773ca18",
        "cursor": {
          "ref": "c956d884-98f8-475f-b252-ede1063fb7c4",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a4e97d75-48de-4987-a08e-e9aa714072a4"
        },
        "item": {
          "id": "adf7dd93-a89a-4cbe-bc5f-06e05773ca18",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c62360ef-2058-405b-ae06-4660ed7a373b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac50e3a-d8e9-4a9a-94a8-3ddbaedd9050",
        "cursor": {
          "ref": "83a1eabf-b252-4f81-adee-74d8a1859dd8",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "94d712a3-47fd-42af-80d9-69f7784c316e"
        },
        "item": {
          "id": "9ac50e3a-d8e9-4a9a-94a8-3ddbaedd9050",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "029911ac-2768-4668-922b-e3d50e94a9ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b52231b-66a3-4bfa-9834-e76a6a4d12c8",
        "cursor": {
          "ref": "e44b994a-26d0-4ea2-a0ab-496027c35bf6",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "9ad7be1e-7ccd-425e-86eb-8c0735da542f"
        },
        "item": {
          "id": "8b52231b-66a3-4bfa-9834-e76a6a4d12c8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "fdde331c-a339-4115-aec1-71bb8e819f7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999c93c5-08ab-4881-84de-e51c7121c65d",
        "cursor": {
          "ref": "5068b074-7f0e-4996-8c18-ccc3ae2e06a9",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "f8acd892-a764-49ca-b6f5-a8997c320a2a"
        },
        "item": {
          "id": "999c93c5-08ab-4881-84de-e51c7121c65d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a590a54d-2741-4c69-81cf-c5ab25d4742a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2bdcc1f-7862-4540-a322-905c2e984b64",
        "cursor": {
          "ref": "ac934a41-4a22-449e-9902-b057b74533f5",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "bbebdb2b-af26-4a6f-b283-fcd059355f70"
        },
        "item": {
          "id": "d2bdcc1f-7862-4540-a322-905c2e984b64",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e24fc259-5ec2-4de5-a3b2-1a1b73f7f3c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa03b455-ec58-452c-b2d9-e3a4fc625c4e",
        "cursor": {
          "ref": "100817b1-ede9-4358-95e0-c680801b3d2b",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "843ee87f-a440-4a14-b43c-05547641c54f"
        },
        "item": {
          "id": "aa03b455-ec58-452c-b2d9-e3a4fc625c4e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "2f331cc6-9f77-41cc-9c5d-76182d02d410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765089f1-028c-47f8-b654-cb19313bdb5c",
        "cursor": {
          "ref": "490ce9f7-eefa-4f91-aca7-2f0a82552214",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "bad4a31e-a3cf-44d3-8c34-5bf6104a5667"
        },
        "item": {
          "id": "765089f1-028c-47f8-b654-cb19313bdb5c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "571e3053-c57a-4f39-8ce9-83db2a48167e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840a12b4-e570-4880-bfa2-19a7b44da16b",
        "cursor": {
          "ref": "a86c7321-2caa-4d33-9b99-e6be72dea933",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b84f6e6c-98e8-49f5-b8a1-6c5f1295ddcb"
        },
        "item": {
          "id": "840a12b4-e570-4880-bfa2-19a7b44da16b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "130dec98-b5b5-4481-ac23-075589051c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c773ace2-a644-4639-95fe-66ef29936463",
        "cursor": {
          "ref": "a36eeb38-b2bf-4b8d-be9b-ea0ec50c14cc",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "83b6478d-bc17-44ff-9d9f-78cde85f29b3"
        },
        "item": {
          "id": "c773ace2-a644-4639-95fe-66ef29936463",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e8a6591d-56d7-48e0-bca2-17f3d14b7a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f87a63-6ce8-411f-bc84-76b52b9efffa",
        "cursor": {
          "ref": "e48462e3-b2d3-460b-8950-6aa49ecf5c37",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "5c777f59-4776-4517-ae55-466f369eea6a"
        },
        "item": {
          "id": "c5f87a63-6ce8-411f-bc84-76b52b9efffa",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "fa04a0db-ab5c-4553-b122-26a21df14942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1513be3-b933-4fd4-8549-99af7bad8d29",
        "cursor": {
          "ref": "8bb722d1-4bb6-44df-9472-01de8f79e013",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "747e9f44-0f0b-4828-b43a-9d3f96c887d5"
        },
        "item": {
          "id": "c1513be3-b933-4fd4-8549-99af7bad8d29",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "20a236dd-949d-470a-9f0b-2270e132c065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d90b9fa-da0a-4fbe-9865-672b7fc47f31",
        "cursor": {
          "ref": "11948bac-6352-4e93-b21f-715f1379a07b",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4c257e34-863e-42f3-aa32-838ba3478f7b"
        },
        "item": {
          "id": "3d90b9fa-da0a-4fbe-9865-672b7fc47f31",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5c16b519-e618-4c01-bbb4-3fe055476c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c6a312-81fd-40a6-8cb2-220387f19b9c",
        "cursor": {
          "ref": "73a2d927-00a9-40ba-9fd2-45d11bc9e19e",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "082f3667-37fe-4291-a080-5cb917c3b89e"
        },
        "item": {
          "id": "41c6a312-81fd-40a6-8cb2-220387f19b9c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "cc97d004-c0ca-4f54-ab80-fd2ae5dc6ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ca577d-eef2-4ec9-90d3-e5670d95bf63",
        "cursor": {
          "ref": "fefd66ea-33af-42d5-a89c-271126bc416c",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9ceedabf-7ddd-49c3-b926-61300be25e45"
        },
        "item": {
          "id": "c5ca577d-eef2-4ec9-90d3-e5670d95bf63",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c2a86db7-2dc9-4556-a457-aff7a62a65ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc0f718-c3e1-41a4-8a9b-fa3bd9a4d28d",
        "cursor": {
          "ref": "95eb2586-98e7-4359-9e63-53f93e4fb72b",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c1c205b6-36a3-42b8-a4a1-b9c07c4c9df6"
        },
        "item": {
          "id": "9dc0f718-c3e1-41a4-8a9b-fa3bd9a4d28d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b9d17817-4f2e-4be0-a551-3774be9b6a10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba458b28-a15c-484d-b4b4-1ef93e5ba94e",
        "cursor": {
          "ref": "359da082-468e-4cf0-a2a1-1a4dc4daa9c9",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "079a6a3e-514f-4557-8e51-d33f37a0aa9b"
        },
        "item": {
          "id": "ba458b28-a15c-484d-b4b4-1ef93e5ba94e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "83f5d611-486c-47f7-9221-daed27e23e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50504be5-54ec-42db-914a-4de08e5fa689",
        "cursor": {
          "ref": "1a4cace7-214d-41db-b02d-8eaa86b80ccd",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ee607364-5cd6-44e4-98ab-e50e4657d61d"
        },
        "item": {
          "id": "50504be5-54ec-42db-914a-4de08e5fa689",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "049fc87a-9720-470e-b842-0b8ed73b2913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a236b8-4991-49db-8ef8-f692323260ba",
        "cursor": {
          "ref": "812e397b-b1cf-445d-adca-9797317d38bf",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "0d04b61b-9a18-42b4-8518-aed8f3e06d35"
        },
        "item": {
          "id": "62a236b8-4991-49db-8ef8-f692323260ba",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "fc89e31f-e7e4-4d19-bf7d-74ad37e36711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f9e8f20-59c4-437f-b8ee-a0e07f59b4dc",
        "cursor": {
          "ref": "5b6ac124-fc52-4678-91d3-ff865aa85234",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "8198f745-88f0-46bc-98c1-2e71f936398e"
        },
        "item": {
          "id": "3f9e8f20-59c4-437f-b8ee-a0e07f59b4dc",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8bf965c1-f4ff-4ffd-b2b9-efdd699c2ef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b6c4d1-d657-454a-936f-6d72dd17c909",
        "cursor": {
          "ref": "7cda7c2f-7644-434e-8d34-462f20d6d46e",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "227ba384-9b5c-41ee-b488-c7d47a6cf33a"
        },
        "item": {
          "id": "d2b6c4d1-d657-454a-936f-6d72dd17c909",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "010e4f14-d252-478f-ba4c-8bed004019e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d9ed0f-4b11-4be9-992f-dd6e47356049",
        "cursor": {
          "ref": "83aebe78-a811-4287-a704-1866963bb7f3",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9cfc69eb-16d6-4d57-974a-dd271548f217"
        },
        "item": {
          "id": "44d9ed0f-4b11-4be9-992f-dd6e47356049",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "9b7b7760-065d-4283-a81e-8715290661b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18bcf0cb-753b-4c0c-a0c2-b62f4f302f07",
        "cursor": {
          "ref": "0fba1584-7631-412b-873e-77a52720ea7e",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "25c27dcf-5dc5-4ba7-8cec-7030276b0061"
        },
        "item": {
          "id": "18bcf0cb-753b-4c0c-a0c2-b62f4f302f07",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "8ee9f588-f135-48c6-949e-485a29878928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09733d71-e946-4517-8bdf-776d0a9ec2cc",
        "cursor": {
          "ref": "05c5066f-13cf-4bcb-bb94-9469a9960cf9",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "fa662d3e-03a7-4d5d-800d-fa2d5aaf3dca"
        },
        "item": {
          "id": "09733d71-e946-4517-8bdf-776d0a9ec2cc",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a8acc0f9-62fa-4b6e-9213-c3dba52981ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab409487-cecc-47c9-b77c-b4db50dcf3d5",
        "cursor": {
          "ref": "b32bfa11-5527-4bdf-a423-3086b9bd8236",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "2aca02bd-3859-4be9-bba1-33654a0885f9"
        },
        "item": {
          "id": "ab409487-cecc-47c9-b77c-b4db50dcf3d5",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "163a1833-1bad-41cf-b132-1ca9860883cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6851622b-a393-4b75-8fb2-1b73f7aef592",
        "cursor": {
          "ref": "6ccea33f-a228-45ee-bd03-b20938f4523a",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "36e8501d-7f8f-4ae2-beaa-3bbc1d2fe519"
        },
        "item": {
          "id": "6851622b-a393-4b75-8fb2-1b73f7aef592",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "79552edd-124e-4f32-9637-df0bfe3dd641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da48f41e-bed2-40be-b3cc-516c539d874b",
        "cursor": {
          "ref": "1edefde2-2bd9-4ce8-a03a-ffa791d6a4c7",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "257a6f68-7f32-4ce9-a9de-f7a13c33cc92"
        },
        "item": {
          "id": "da48f41e-bed2-40be-b3cc-516c539d874b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f4bae191-4caf-416e-9ce6-75bfae325836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75391f8-8de2-4394-9096-291f64beccc1",
        "cursor": {
          "ref": "279f06a7-9e6a-4f16-9e7e-5ed0502550eb",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "58beec66-995e-4583-a115-5ace4979c65d"
        },
        "item": {
          "id": "d75391f8-8de2-4394-9096-291f64beccc1",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c85426b4-ec92-4d51-acb5-5acc074fb248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef37d9e-04c5-4894-9953-1a2a4a1bc02f",
        "cursor": {
          "ref": "b9d714dc-9004-4864-9f9a-855cc2743828",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "33191559-e351-4080-a654-791249e20f14"
        },
        "item": {
          "id": "eef37d9e-04c5-4894-9953-1a2a4a1bc02f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "51b719c2-ec10-4cef-82d1-41072a5be9d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdfd8717-821e-4566-9280-b16e1dd6c63b",
        "cursor": {
          "ref": "8b9b526e-ce90-4710-9c2e-d2c210f2fb57",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "8dabcd4e-4243-4185-9781-4807fc0ac626"
        },
        "item": {
          "id": "cdfd8717-821e-4566-9280-b16e1dd6c63b",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "815e932a-6226-4323-b0cf-0ee7167f394c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61fc3a22-8ce0-4cb7-9e4c-430c5feafa24",
        "cursor": {
          "ref": "64cdcd4f-68a6-4a19-b768-85dd10ca5185",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "915a8f6f-f62a-4c9b-b0a2-89b2a149a380"
        },
        "item": {
          "id": "61fc3a22-8ce0-4cb7-9e4c-430c5feafa24",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "3a4bf8c9-8b1e-4d74-939b-414b3517a44d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "8e6a967b-8715-45c9-b150-96ffc9348ac4",
        "cursor": {
          "ref": "66f73336-f86a-4a01-9493-715562e5d254",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "96d5c7d9-1f43-499c-8525-506211518c2e"
        },
        "item": {
          "id": "8e6a967b-8715-45c9-b150-96ffc9348ac4",
          "name": "credentials_verify"
        },
        "response": {
          "id": "69952c89-0f42-4091-875f-0f748639e3e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "f3254102-1468-4653-98de-b66f5d8c165b",
        "cursor": {
          "ref": "a4b87357-c9ba-4d9d-949c-0099e55c7810",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7be6ebb6-e53b-46b3-9f3e-0e50daf141c0"
        },
        "item": {
          "id": "f3254102-1468-4653-98de-b66f5d8c165b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "2bf1315f-ef1f-4f0d-8d4a-7c86d90593f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "db63c89f-b925-480c-b4ad-ede9c89dc170",
        "cursor": {
          "ref": "4fdbd5ca-64c8-4934-bf47-79068d33da6c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "31ec38ac-438e-4c54-9a82-b92fe01cbd1b"
        },
        "item": {
          "id": "db63c89f-b925-480c-b4ad-ede9c89dc170",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2c373b75-66ed-4311-a3e6-d764e4e978b5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db63c89f-b925-480c-b4ad-ede9c89dc170",
        "cursor": {
          "ref": "4fdbd5ca-64c8-4934-bf47-79068d33da6c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "31ec38ac-438e-4c54-9a82-b92fe01cbd1b"
        },
        "item": {
          "id": "db63c89f-b925-480c-b4ad-ede9c89dc170",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2c373b75-66ed-4311-a3e6-d764e4e978b5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0547a59-c049-4705-92de-623218d16037",
        "cursor": {
          "ref": "7a2372ec-0669-4a9b-933b-f1b5a87c445e",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "20f41afc-6792-48dc-abf3-d1f12aa0d31f"
        },
        "item": {
          "id": "e0547a59-c049-4705-92de-623218d16037",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4389885c-08b9-4870-9f4b-ad0e2b86828d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89ce1a0-89f3-473f-85a2-405a7f193187",
        "cursor": {
          "ref": "83f6ede3-3bb6-4af0-b942-970852c78b55",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "eee6700d-7e5e-47c2-b09b-2e787f0ddc1d"
        },
        "item": {
          "id": "d89ce1a0-89f3-473f-85a2-405a7f193187",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e452005f-d47b-4a88-b4b3-12d4f6874a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}