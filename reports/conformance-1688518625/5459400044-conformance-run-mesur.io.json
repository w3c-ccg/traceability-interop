{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "047376d2-7c46-46b9-92b3-0a2d9ea0f0c6",
        "name": "Clear Cache",
        "item": [
          {
            "id": "832074eb-f18e-4d89-bb1d-314181673cc9",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "59f5b612-6632-4b01-8b3e-d48496b99386",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0be501d1-8934-4d55-a9eb-27519d477b6f"
                }
              }
            ]
          },
          {
            "id": "ce4753b1-614a-4031-b53e-c4555fce873e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f5fc8e10-7bf3-49c5-b7bc-12c9a4237483",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e1ca0f80-9c86-409b-8b2d-1ecfc542dfce"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2c940c53-4744-410b-9a74-56adf66be884",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "7b194c15-9557-49c3-8c70-c1233dc76b7e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2d3aba48-93eb-45b3-a773-171710b019c7",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec61980f-4d68-48ea-9d0b-0d40c57e923e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9b82bd1e-9f5e-4faa-81e8-5c9efeff4945"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "88ecf94f-c59d-4967-b7d3-b9fac07f460b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8b476a8f-c935-43f1-9e17-f8e6c50d2f5c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ab095883-b322-4839-ac93-233546b2e15d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8c80ec47-c09a-46b5-9837-92ad4135e5c5"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "87242575-5258-4bba-b33c-193e816f072e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ff81d185-92f8-4e9e-b720-beaa95959f92"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f84054f3-260c-46b9-91c7-21b34d1ab501",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "999025c8-20c4-489d-bd13-56603625d161"
            }
          }
        ]
      },
      {
        "id": "d65124e8-098c-4b90-a934-9ecee9c938b9",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b9e55f56-4131-46d9-aef9-11dc13b169e5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "07728929-41cb-4dfb-a0ab-8041ddf23fb2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2d3b9a3f-de4b-4fc7-ab43-7a62dc92ff93",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e13406c-a4ef-42e9-b752-5425c1f58186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0207a3c2-9130-40ca-8e41-b74d1cbf18ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97245478-a50d-4a5d-9438-f7ec198f3b54",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4287c2a3-b583-4bd5-9fe6-34166eb523a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a513d14-eecf-4511-b019-3b31bf52fe3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c86b63ad-e037-472e-a665-34cfbd13fd3d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c55233-e434-4079-ac37-9a4a1ddebf20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "65b934c9-a029-4fc6-a2ba-a39f8d61e186"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bfabc507-6c0e-4d5b-885c-36ee87cf9734",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6baa0abe-7a7d-4fee-bbd6-feb11acb5d36",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed83dcc5-6364-412a-9774-0675c28052c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c28a9da-6f4c-4380-ba33-9346faf75446"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3febb266-6f0a-4abe-b607-97a53bec13ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7395860c-c64e-421b-96c3-9123e8d29454"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2d11ba1a-a41c-4030-8e3d-487d468b0e66",
            "name": "Positive Testing",
            "item": [
              {
                "id": "79d400a8-f346-4d26-b4f8-f46ef5c163f1",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9363714e-613d-4658-886d-3c0dd6a16844",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "013a3118-ab1d-4e3c-b35c-f4a117d2c231"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6ed38be7-2381-4f89-93e9-01fc66d8d579",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "43c7299c-c92c-43ef-a1b0-041047ded636"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ee6c2e14-7ec3-4869-a032-a66fda0497bb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fc22d8dc-bdc7-42d3-8d67-ba75f8200348"
            }
          }
        ]
      },
      {
        "id": "52412a55-94d5-46f8-8129-4022c57b4faa",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "0ff680f0-5528-4a13-b71c-314565f39b39",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dbd1cc99-2f3d-4987-9d89-dbb0d4e1414b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0b7baca3-07e4-45c3-a19c-e12165462806",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6c8f2b-dae9-4aac-a7b9-ca097ffde4b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78544105-7abc-495f-ae33-af42551d2529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a1d8bf-52a9-4520-8030-00af6daec719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6849f260-81a7-4190-96dc-fba21f1352cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f91199a-e6f4-402f-a552-dd1054081744",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af30fa20-1c53-47c0-8a95-089136a62b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4494256-6913-417b-99de-53e9a82c186b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a2f1b0-39e2-4cec-a27d-1a82b5eef2b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45b3aec2-01cd-4b73-87bb-f71f1af06f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd2d2cfd-708a-4cc4-8a66-89b872102033",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25fe2b4c-a555-4934-9340-16cdbae53ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccb74b38-d5b7-4e6e-8008-1fb4bae6397c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "512740e5-b7ad-4a0f-a29d-5fa6c434190e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3317a16-4ea5-4dd7-86c3-0773d4e5fb8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "310a3d57-412f-462f-9f1d-d8bdfc2c91de",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e9f560-e2bb-4207-9d63-70db0f07be21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da24becd-bd76-4edc-ac42-6a7e890a18ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "931e8cb9-b32d-42cf-9c41-1a8d1f0fc26f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a8fffc7-fa9d-4859-9ccd-7d831e767523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb5c509-3ace-4b4b-aeb0-c7c27d9d4051",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f58298-2eed-46ac-980f-0d2a5e00fc9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2359372-7c62-46c1-985a-eb30378a88d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c0beca-9041-45c3-bcf7-b36fb0aad13c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a6dc5d4-663d-44e3-bd98-9390bb04c94a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3286845d-7d92-4e52-9667-9c43c4b3fd4a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd74629-0b1f-49b7-bc22-5704b5d04ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c150ebff-8ade-4939-9282-4277607a2b4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef24f23-c6ba-40d6-b23b-c4270e70dd6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aac45927-cd9b-4051-a1f9-ef6e2e8f6fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac07957-f758-4943-b186-4b9d6d19ff8a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bffa8fe7-b33f-4e1e-824f-9c640086e652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7acd3eed-eb38-4867-8299-164e4691082f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7111e245-d328-475b-9293-1c1facce7cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee37fe8c-91ff-4a2d-b06f-0064fac21f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d09e3edd-4592-49ac-a2f3-f19ae8620279",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b32de2e-0014-4087-95dd-eaf1cc827269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e42024a-538f-4a11-8d1c-17c92cf2be30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b94123e-eeda-4e08-bcb3-81f41523a4de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f5be36c-9ded-4629-aa3f-6a1fa06f974f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c87403d3-390d-43b4-bd23-4f64cfee59ab",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47a2010-1dca-4a11-823c-1c4eae8ff4de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dea054b7-dd32-47ed-88be-4e0605388256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc284c6-8c74-438c-a293-4dd5c76862dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9842797a-7d10-4841-b78c-f4e7939689fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0578a9f4-72bf-4733-8d18-008b73db3f50",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7aba59-8d9f-4947-9c59-cab759f85cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edf69d0a-b50b-4f75-a202-ba6e68f497e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb230019-2d5b-4de9-84b4-ab6a2863ca0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46ecfbfb-48a8-4304-bbc5-3456e6af4190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c8e8fd-cc2f-40ae-9e78-4cefcb344a61",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1664458f-7c6b-4fff-8255-3529a4913fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68ce8452-341c-4df2-b49f-72d153d98eb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "978dbfd1-11eb-4b51-a1dc-144f92da9e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62af83a5-adbf-4f38-9dd1-0757824647a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c20dae-7920-4d44-948a-4582461c1a16",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7828062-593d-4d58-bc0c-6377d8f5bfaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d744bfca-059a-4e14-9816-daa1e1f1112e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4669cd0d-244c-4952-b573-a3b5f45d6f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c65a4dd2-f23a-4a85-a6f1-4ae5c9fe75b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33db736d-b57c-4d83-98c6-a24ac9345b2e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a71be01b-aeed-49d2-8c89-67438201723a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a63fee82-322e-47dd-a0eb-58b61fe6ff5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d03022-f9a4-4abe-95eb-15f5b7d556f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae0cfc13-4a6e-40cc-bcbb-e9287ed7455d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e67226-05b5-49c1-8d42-f10d17c5b4c8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c1c6c1-a412-4662-bcc0-e5e8e177c624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50c41ee1-08d8-4b34-8cdc-8fb44d1a62ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff46d2d4-a8c7-4b57-b6fe-c91673fa7ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2d6394c-e1c2-478f-8329-14720fb24984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b9db88-9346-4d8f-bee7-8d66ae31a303",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e973f8cb-b00b-4852-90ea-7120fa4be3c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f7af07c-b610-4c2e-bf0a-eebafa0e124e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b05adb53-a2eb-470d-937d-9390ae3d4874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0e3aa40-ff1e-4ed2-8e84-2b241e7a6259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c3d9a74-6887-483e-a4bd-77d2f516eff0",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b1af417-b4a9-438a-b23b-f33ae2dda083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72cc8313-46f6-4d6c-a5d7-bcf724e0cf91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c077fc5d-b651-422b-9748-e57013eeb9b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1bdb0fe-a730-47f2-af09-db99f06acf96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6603177a-3ada-4482-856c-dd7b7373a133",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4546c3ba-9900-4b17-a784-2e5b5baaa8bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b5c7269-d7d6-44a5-92a1-d31c9b42bc8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39890114-5b4d-487a-9918-15e2e460dee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "580a3670-8a28-4689-b3f3-bc35884ea2a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b106b5af-090d-4bb6-86fd-225eda5a9fd8",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5171c96e-e466-4711-b0ef-0cb81a43d77c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "960485b6-5ff0-45ab-96d5-5775f5b998a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69578d4c-a783-4fc9-804d-718070f9c8c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f02f2321-6edd-49f2-99b5-07fa0490e2c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac4c114-2cbc-42e7-966f-3f9e86e9a1f2",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa08ac8-9493-4cf8-a0af-131cf4f8075f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58c5dede-f052-4565-88df-3768e1455182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7804a86-dadb-417c-af2f-1396cd73ff42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bea7edc3-25ec-4d4c-9c55-82fa62e845ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba666c72-ec91-4aa2-9c7e-02573b717078",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42bde271-ea34-4d54-ae75-ad9554e45c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63d7745e-032c-48a3-9956-957b08564d49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b94402f-a2b4-424d-9cab-af4ad5586bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec671843-3e9c-4367-9e8c-3eb06a9a3667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a330b283-18f8-4759-9491-d1612de84ed7",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "941805ed-d2ab-4121-8d05-2161efd2c57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abb7a807-c1a3-499f-9948-5d608367c187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd91c74-b0ce-4a7b-894f-b0a7ae7674bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3e9c0b3-573e-4f00-aec5-b80a2da81b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbdf7ad8-1685-4e78-996b-92a6e0c1f5bb",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2879b336-9329-4b57-9b68-03fee0490317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f325be9-99f7-4e81-ae1b-c4d63a4e1679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b17992bd-4488-4c01-8d3b-9f1c99cc8eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "68a2f5e4-bb0c-4654-9d42-133d0ff070a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de0211c-aaa2-43dd-9481-b061425ebe99",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23e147b-1a7d-40da-8167-5c92ba7a6fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "553f6a0c-d4e2-49c8-b093-30f6e5c4f355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa1cf25d-2b0f-433b-872c-19f4718ec4f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e84d65c1-03a8-4371-9552-e69cdac32362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b42dedb9-ef50-407e-b936-1d814d723b94",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e1fe8d-ed83-4131-b00e-55b31fdc87d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8a66788-a547-47df-b39d-8fb6e1939334"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca71d90-08a2-4716-99fa-07bb40212af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdea317e-6e03-4d3c-bc7f-25047b91269c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57357649-3c79-4c12-a3e3-6127ae344e0f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33959efd-a879-4086-b5ad-b778a4ea4bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4847f909-b58e-4e20-8e2e-d7de223fabb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83474225-06d0-4b05-825e-d420ce195f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e46eb7d-6257-4473-8c55-8d5422bcc938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f02e90-221d-45a9-9616-b9644e8daf78",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f797cad-f3f7-466c-b09d-6cc46a6a9a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "782c9fd6-1287-401b-a19a-e771bc4d5af1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf6ec69-fcb6-4a90-a8f2-df6888772448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f7e4e63-fc38-4b03-8a9e-1bc70584ba93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd34dcdd-8722-4c71-a7e6-9a67cba87317",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c10c6828-4e4b-44a8-b16f-0babf30ddcfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1576bb6e-2395-4015-baa2-7b8cedd595a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c4f6a8-1753-4306-b767-0eb0917c90ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc46745b-fcff-4f12-b983-12696f33d69c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12a05bcc-1ad2-46c9-921b-2b9b923cd5e3",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a2a630d-c7b4-4ea8-a3ce-cd91411a6a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "908434e4-c8f9-4cea-82f7-8738bd268d8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce0078c-2078-4957-9d1f-12c0262c80e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c74d46ff-4590-42a9-a2cc-190755112b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e57986a8-8525-40a2-93a2-7951be47a64b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "098504ec-092a-4af2-85cc-8de904069f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "483cfb28-f64b-4c43-b648-1038aaf78d0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d19f3f-428e-4120-8d15-cd238cea2f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d072b469-aa5f-4cf1-9bf6-da918fe50b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aff4628-23cc-45ed-96de-5899ddab66c9",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "662ec38a-36db-4daa-8d7d-ac5d2cfdbb71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8a9ad6b-db60-4818-a50c-f227a2b614f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f477fab-8dbf-4f02-a868-53ecd29a6b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a612f02d-f108-42a9-923e-d4bd5b089861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "509d284a-53fb-48f7-bad2-c7c53ca89ca3",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2712d5b8-005c-41d5-9175-2128a46c48e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dd93931-f665-4fc5-8700-bbeb3fe00309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65eae748-18aa-4877-be77-5c8b4d8e26ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "22274b15-6b59-40d6-b917-408b1c2fa064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d1c02f-63f2-4325-804c-f69977127c46",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c902f9-35b8-4593-90b2-4c8a63da8f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "473a7c8f-191a-481d-a930-c166aa094a00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93fbfa45-6a33-443f-8af8-b44e31145fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "729e625f-fdbf-46ae-a87f-cdc68b735279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b099f629-0824-46a1-b52e-90b9eae5ed1c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c52879-e133-43b6-954f-b54b61bc9d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63d37f1b-f3c5-47a3-95d5-ba137059b638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "983f3b78-96a7-4d89-93ac-cfc080adbc9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "63abd243-fc3f-475d-85fc-e62f06a1c9ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cea13f4-0def-4af8-948b-35373d96806b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8934fe00-d794-49ef-9b9e-257c0233850b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb47e82-7253-4971-8811-7524cf871773"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f970d2-788f-4571-93a0-10d71adf2653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d157d8d-8022-4acf-bbe3-776a663ba1d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e39d9603-d94a-401a-803d-c275ed427c4b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24cf85d4-f47c-4c85-9959-fb896566127e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "772b0493-d0cb-4a62-a57f-370674edcf31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a3285a-59b8-4b9e-8b68-2fff6aae92c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "5d51260a-5920-4210-9b92-79faf2dcd339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11480cd-6764-467e-a435-50a66bf0a1f8",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "099b4007-245a-4a3f-ad5e-0f55e6a1b538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5410c917-8a56-4aae-80e6-eda2b1d13d0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d73adf7-87f8-42c3-af76-00c78ce827f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "003e2274-ba23-4f6d-8e0c-118bef55d8d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbdb5a5c-250f-4202-a3e6-b0e80a80a268",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "685ef21d-17ae-41cd-891f-275928720673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec8ddb3b-a9ae-4e1a-828b-a5adc2e70313"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "139a1aa6-0bc4-4efc-81f6-89c0aef634ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0271775f-084d-4bd3-ac0a-07bb4986ffa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e281e8f-ad53-4e51-b962-c696286a504e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90ee7de-ef05-4de6-b0d9-72450ec463ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8300d5d6-4faf-4256-8861-2031d994f0b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b1ca7e-65e8-423c-bc14-c152e5cb70d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "afaacee5-ce21-4efe-894c-bba0ea075c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be37a1f-775b-41e1-a9bb-d157fcd10eb7",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf9bbb11-0123-4175-90e2-21dc3ebf7ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bb46c4f-5963-497c-b38e-a1ac4b68bcc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1610df-0ae7-4776-8928-43c8a0049e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e890382-71a8-4310-be2f-9443728aebb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c49a5a-8ec7-490b-b67d-8617e1b0bdec",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0967c5e6-8b65-48fa-82d1-1abed7fa9b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f77cf1b9-f955-470c-831f-f90e7fc6be39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a376f3c5-640b-4751-ba0c-5d24e2104685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "17c9f366-b309-4395-a258-3b441aeeecdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566c991e-f856-4608-8e55-4870de192c76",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d5df8a-be4e-4015-8c51-653b397b3a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4750a853-3ed7-4e97-8b70-696cab9fc0f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5871a8b-3ccd-4751-a850-d7e9d8be56a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f9dd1e8-e5f2-48be-b488-9a0b8549d035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ee1dc4-2183-467a-8b23-e7035627a08c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab10ca1-b72e-4b58-bb8b-e3d6f9590d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4ebb220-bafd-4e1f-8543-8dfc9d4d3884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "519c5cc0-8007-4565-b622-b20f24ad05ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "692bee75-fa6f-46f6-a8ad-08d9dde7f135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1833cb6-1e60-4f5d-a666-2f56c314380f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2475301b-5de7-4ca6-b315-25c7e3902868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecffbda6-3eb7-45f3-a525-dfd766d79240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb61ed3-db53-41e7-9461-125b757a2889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2f820f3-6f95-4058-a5d0-b58a14408aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230165fd-1b4e-4bca-9a22-b8176c04bd1a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2c9070-7d50-441a-91eb-a751bd8506cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0070f15-26d2-4a67-8c65-0f4b984b9f48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229ea7e8-b843-4093-ae68-53e86df5b4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "620e8214-e707-4537-84fa-7625a6e12447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22dde4e-4396-4973-b07f-abbde909b29d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "452fbad4-0473-427b-952a-50d6d83704de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0038dc97-65fb-4f91-89f0-de0a31c35231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab60553-2752-4680-9955-aa934541dcad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e2e9bbe-31c8-479c-a3f2-1234a8557b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c568c8-76d7-48e2-be37-815a6b630402",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cea7987-371b-4784-9cd3-301af777a231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3423cefc-d141-4d1a-9c65-8d1bea49c492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c81e41e3-dec8-474d-8573-09d0e6d1f2f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0f6ea1e-f2fe-41bb-b342-2ae60750ebd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04ab1cf-754b-4b43-a671-08c6e35cf002",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb894388-b87c-4811-a458-4f95135e1a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f44b36bb-f1bf-4ba4-93cf-589a1b57877d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6412af40-c9bc-47e4-8b00-8a224252fe71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f4ecfd9-21b9-4117-af24-5b233388d171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f00262-56d5-423f-9b11-db605dec364f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cdeefdc-958c-4f77-b9eb-51251535481c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a57cc60-7035-4d30-bd84-bb21346b70b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d4fe37c-9b8b-43dd-9fd8-a75f0beeabe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8ad17a1-add2-4a15-b833-7dbdba66f990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca9e1d6-f5bc-4026-9b33-909490bed707",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0746975c-632f-4667-875b-20c075d83481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfff0cee-3b1d-4b0f-aac8-4da144787bd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec0f33c-d0cb-4d89-b21b-4b4502081cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac30c132-0088-422a-ad81-fdbe4af11cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044ff042-adbe-4389-a0cf-7bad5c6d18b7",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcead53b-60e0-4f46-a035-0787e577d814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f15f0db-da6b-493c-a3c3-6575d812b7e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb04c7f-e34d-4c77-9320-ad6dadec61e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0defaaf5-6b56-46f9-bf42-9927270955c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8567b98-0c4d-45b7-8261-f5681d3dcc25",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d1f9cdb-cbd0-433d-8039-9d1e23589299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b243b1b8-5cc4-48f8-8bc2-90325a9b64d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc098b5-fa03-42f0-bb26-1cda3344ddfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7af3002c-9274-4cd9-a447-fc9e79c0c382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd7c8b7-d7d5-4157-ac68-cc1242f30033",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb450e9-4352-46d0-a932-e02ca108fb01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec14a84b-fee6-486b-ab4e-4e0c7d7ab912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1770307-da75-4d88-ae08-9551b29de49f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "50d2831c-9182-4c97-8a3a-8bb2e1f07568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a02b550-13d4-4bea-91f2-b0ea339a32b5",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba36c2b-7176-4d65-afd6-852d6e069b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "194efeb1-efdd-456e-a0ab-458bfaa6e4c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e39bda-2e18-456a-815f-75c752fa80f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "677dc62c-864f-405a-b23a-a43231553152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "820f70a9-7407-4d05-8538-b375cd19bf78",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ce02d7-dafa-4298-9864-17fcadef32b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f19083e4-291f-4aa0-bbbf-96b7a704b07c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8effb5-ec4e-4097-a40e-6a58dbf5d86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c1d2d0e-2e07-47e3-a91b-1e78f9eb88a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d33ac09-3172-4638-9a2a-34febd12d6db",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "737b6dc5-b79e-4ab9-a0ec-1add0a7f07e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42988e15-63a5-48b9-bce7-6760a4b94fc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a6b5de9-4c0c-48a1-8ddc-34423810fefe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffba39c0-bd58-4002-b720-9e0bf2842431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d8c5c1b-7c1e-4646-a38c-fce1e818923a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a71c19-0944-44bd-ad86-696649015544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c997508f-bf72-43b8-896d-666e4152e216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d49600-a253-47e9-ac34-31549f648401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "396b1984-3da8-4800-962e-6bfa8f4fd599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e3ca6c-e0cb-4ae5-8c0c-ee162beaace9",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4973b0ca-da72-4b3b-8728-22340117fb19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0985abc4-aae7-4bbb-ac8e-fe35792b5c27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2ec118-7787-4902-8617-42f1d494d854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee4601e0-031e-4ebd-9307-e7f4d983194b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301b3260-02d8-4c74-960d-777acd492047",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55510ba-d0d9-4852-93c5-636296623ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "121abd19-9f0e-4fbe-aeb8-4eccf1c2b379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a3b3bea-0f0b-460b-a130-7fe102e4eb74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1af2391c-c135-4cfe-a78e-f8e48306b7cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae8098ab-37b7-4c1f-a034-8c8787b36ab3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5827e129-0907-4bce-8053-2768edccdd9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "951577a6-211a-4bbd-9c49-71c75628e79c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f346225f-6552-4574-b054-2742ec9f5d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c852682-6057-4e87-ac06-ddec1152d089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e1896a1-8894-48fe-98fa-e91ef420aaad",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acbe622a-2422-4244-88c1-81c668e95bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb092442-7f36-4288-8f8b-df595336a453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b8fedb-c756-4403-b349-21651cd70cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "79cfe518-6362-4c40-afd2-e922f58bdb4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c3eaa4-5de1-40f8-908f-3df17d26e523",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eda5f7e-d99c-4eb9-9a34-e8a323be3cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68af7583-d03d-427c-a0e7-269aebba280b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac61dfc-bfab-4ed5-ab69-be64d3317936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0f4f6f0-c3c4-4e94-aaf6-8d206f5c1175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc710bc-6107-4b87-b295-0ae2a8413f31",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f104ff1b-adfc-4cc3-8574-2560f05318dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02cce63d-90ef-4f52-b0c2-72f36fac2c8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12826398-81cc-41a2-ab3d-1e5d97d273e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ff336cf-6143-4bad-a2ea-79143a0c184c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1806bb47-3891-434c-9310-12e505691974",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1815593-7af7-44ca-a863-db20fb45397a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6462bf97-79ff-4cd4-89d6-304462df961f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48209c8-fab2-4245-a785-a627063f6255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bea00236-a00a-414b-8b1e-a56ff291b4f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "554134fd-b1da-4764-aa50-674ffc09738b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23fc1dac-9439-4fba-abed-a2063004ab6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12499afc-4583-4b08-b45d-7b044297bd1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b576442e-f715-440e-954b-709fca011273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fdf8b7f-2b33-41a9-8008-fa8ff0103086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4802ffa-ec74-416d-8e85-a87923bfe072",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7037acd9-2d8c-423a-b51f-fcb1f4d8e571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "545655a5-cddb-4065-abce-f6f28fc8620b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27033648-ec63-4844-981a-368bab53017d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3a298f3-a260-4f90-84d9-e5490931233c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "008cf1a1-9dd4-4910-87c3-68071a38a2e1",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "003c2b10-abde-4e37-ae08-6e1875d3f573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "184415f7-d812-4843-8071-773bc11a95b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3267b871-4e95-4df0-974a-0ddea13ce482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c549a896-1fbe-4d27-bf98-ff51970a713e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a64358a-3b4a-4424-964a-f90b511cdf79",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea54f302-e745-4834-8f09-d6d02f01c070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d1fdb4e-2a38-40f7-8119-f2d5f4586570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d28f4a02-a511-4116-8492-3526eb39858e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "63409e3b-45d7-475d-b86e-a18be66e786f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6eea2cf-1ac3-46c9-8f4b-a07deb933681",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f204fc5-153c-45f1-9c96-1170668b3dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7b6f4e8-bd31-4c94-aae1-a03952258b04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeef8637-9785-400f-ba6e-2633ffae0c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5780365-553c-4f57-8e2a-fc4e14413406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df34a64d-a0c2-48a6-bc45-4e167a3dde76",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53e07c3-a4f9-46d4-9edc-42f9bc8d5a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b63a947-d5ef-4446-8d04-8f331c61d2ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e35873-230f-461c-9413-4f3368c155f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d7c6116-3a44-45fa-8c04-0d702920747d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "302a9ba6-4d0a-444a-8470-2d7f8ad0ece9",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d312cb3-8e97-4e40-a093-d01712fb41d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f3678fd-376d-4f46-b8bd-c30f5bdbed7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae0f77ea-108b-4b8c-8d0c-42ab3988fa37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8958e218-81b5-4952-8281-de924570ed71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a87b1e0-e0a3-4413-a154-53da00dbd494",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad0e4f2-d803-4c12-9246-a8dc2b2c8938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3ca1268-528e-4b50-92d7-4fb5d8fbe1e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa6e79a-443a-4635-8443-c9569d94b5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3ab3407-09bb-4da4-a72b-2b0668910f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92457dee-e7ad-4fae-b892-3c962c213499",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf3c1a32-7c81-4818-91d2-1ebbfe655778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b58f0066-59fc-448c-b712-165e5e4d6ad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "908c8da9-2e50-4339-a948-bce0c11a3f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "49aa2ab0-c0b3-4789-b17f-cb0cc83f7e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c329c147-810b-4ace-9b2b-0d25bb8eb7e6",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "077a80f9-a0fd-4484-8c03-fb20a674f62f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c232962-e839-45ee-80df-b5fc6eaee4ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234ee444-844b-402e-b932-0aef783b9850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "86d2c983-9dfe-41f8-80bb-5aabafa79d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c17999d-3667-4965-89b5-382630d16756",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c7b3b7-c4b4-40c8-bbe6-839d57932363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cc700d8-1073-4431-a34a-f26215b0fb7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e15c10-1c1a-4bf4-bd60-c807e1845d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "67331283-3ae5-45fb-b297-581d1c1af4fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2e3e46-9071-4fd3-982e-ef526b514209",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e4caef-8e56-40ef-9db6-4ce6625091e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41ed16a4-12f5-4593-9fe8-2fc25e4cdc10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9548684-c4f9-44f7-851c-0f4a6871c26e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "40bd73e2-0491-4f61-af73-3689407bbb7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4135d4d0-324e-45b7-bfd4-15d22dc2e6fc",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5748b05d-d2ad-4910-8cad-2315a186e38d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbd6ed67-d246-4f1a-8e91-70d22f02d4ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35bdb865-49ef-493f-bf3a-cf7dbf0769c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "996fad02-e78f-434b-9084-b9b5c05ffe5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5daad66-d7cd-4ae3-b417-c695e0cb3b5b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f4eb18-07b8-4af6-a984-38eba8ea6b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f2d89f3-82ad-4fdf-af2c-145b4ba7875f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d83f51-a766-4856-862f-50fe4232e794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e96d93f-238b-4b7f-9a2e-002a98720900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "560e01bb-d5c8-4688-94f4-d46ee4c0cac8",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8051ff7-76ab-436b-9a16-42617ba51d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aec9dcaf-481a-4ccc-9797-77fe690546ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c4d466-a390-4a3d-9f0c-55a4d0691f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "39e5a0fb-eea2-4112-b788-d324ee981d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0efb0095-bba2-441e-8022-1171e248a025",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e75ede-2f5e-4725-bebb-426d0b167bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fd80ba9-efbe-4a68-8e3b-8cc668cc0320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e14fd3-4ca4-406f-b5e5-069213321a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c595168-3a2a-419e-bdd4-eb3a3a72bda2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e973d08-0118-4302-8b33-254371387872",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9729fb01-0b7c-40ee-96d3-4721fc4d6938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea0b25c-9cf4-4e81-a863-a700edff75db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452ef5bc-7a24-4f63-af26-8067998add4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "08ee9291-ed17-4292-be64-2b14edcc0097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93248156-2441-443a-8679-c7bec0574409",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad960ce8-cba9-4358-bc63-d4abbd3ed963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cb7a22e-e183-49dd-868d-e2c6b0d82c95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc0010a-3562-458c-ad32-57679ddddebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "be2d1ba3-c8ce-496d-a582-f21c3c57e7c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd92281e-d6b9-42e9-8f5c-f3941a3e219d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10133dff-522b-4aba-904f-19eb50c034c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3c05ced-eaf3-443b-b11d-4f8dcdfb86f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e883c9-c319-4850-9be0-3f87b1060652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1477c7bd-58eb-4c7d-84f1-65a88919295e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da0bf54a-01fa-4d75-b7e7-91168c582df0",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14d08d9-6259-4a5d-8458-28c44cf694d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8247143c-2efd-4458-bd15-a35fa1f2faee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8201c7-598e-4bd9-8461-70cefc2fda17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1456bd9-e78b-4253-8275-62732940de19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0712e33-94c2-4f4f-8dcf-7d9c4a41471b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c4508c6-d5cd-4d8d-af37-773074edd5a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e155c929-6459-4f8a-b4c5-34a024b97e85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd17e360-f077-473c-a2d8-2807b11e9d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0867171f-c8db-4b88-9b69-f5dfd5946cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46343ef-47e5-431a-b97f-33f35ec09a36",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c9d139-512b-455c-b2f6-0a430629867d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "637c1843-1c9c-4b29-a23c-befe17c5c563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6153417-72f9-4bac-a598-d2deab873981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "591f2011-bb7c-4eef-93da-887988dd7f5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f09ca0-0262-4878-83b2-57279a95f4f3",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6fd68d7-5d0e-4ff5-af9f-043b72d5c902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70ba0a7d-8dbe-42ce-b860-2d85b93807ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac277de0-174c-4f94-8cb4-6160a8ef0fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba36bf35-ff26-4eeb-9eb4-0d414795e47e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb3d12a3-76f4-416c-942c-b7b8117ebedf",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e06c4d4-2fec-4832-bb24-c78247607cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "842b494f-4114-45c3-9140-4600912d7875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf587ef-c260-4f0a-aa2a-575f6eaa550c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a75018c6-5318-4a8c-ad6f-6d6a66c6c258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e25c329f-4dd2-47f9-9b62-e405ffc73141",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0610091-23d8-4a84-b38c-26a47230b3aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85b80c4c-53ce-4cfb-9eda-32e8419d3b7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01910761-200c-466a-aa2c-d74b2a3ca3ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2a07b28-867e-40ec-a1c5-9a099c26570f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2016bef1-14bc-4ae6-a94e-09e55bbdbe2c",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb174311-ae9d-4b4c-a792-7683b972a64d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f51964a-a2af-46bc-b543-d9629d542e25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3fe3352-c97e-4e07-9950-6c9b7e67d1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee7e0c76-52ad-482c-a7cb-6637ab9e4789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02a7731-6b93-49ae-abf1-7b04cf446659",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1032d31-9b41-4b4e-9de2-6f988eb02032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb7a65b0-2d53-4e1c-818e-a831e1b01934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "264cf893-2798-4525-9672-0bc944b93691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "86b5dbc9-be7a-4c5f-bbf8-84e2ba77323c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adabf74c-a0eb-4a31-abe0-2335b897c83b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d0e2fde-3c96-4e72-b485-ca4487466693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea5226b1-4494-4651-8725-bd5cb7556014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e692c072-cc3c-40fd-ab1c-707c55488980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "52b8ebda-5127-462c-b3b0-9f7900403e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9009138f-f52d-4f43-8100-f897357843f7",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ad9672-19f4-4fdc-867d-b22cd0cccd51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "acd47d23-74eb-4456-91e9-f3009ad47e53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd0a7f2b-2544-401b-8d37-4696b45c5034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "704b378e-a894-434b-b8eb-2cd537392efa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ca08e323-b64c-43e4-9486-f5674c81863a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7aa522aa-15c0-4e8b-9f21-bf6026e45cae",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "544a69dd-5e92-407f-9cbc-88d50e4dd010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ebd12f8-f911-46c1-b591-8e4ece91a209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d412da4b-e97a-4398-a5fe-6e0e6773d37b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "212b61b2-0011-4d9c-9d7e-9379322be6f9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2f3ff6a-d22e-42ca-814a-42e44650e503",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30fbe95e-e035-4062-ab68-468e8ab4fde1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "93a6b01f-b2e4-4d2b-bab3-67bd95ec9e6e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd685a3a-85a3-4bb4-885e-858688cd3ebc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1ca7fade-e278-4faa-953c-2dc171d3cd16",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e83fb2f1-abeb-4267-a2d1-fc5f1b862b5d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "604762a6-848b-4244-8056-9275ca248c90",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2283a1da-dfcc-4277-a31b-d2bf520bed3b"
                }
              }
            ]
          },
          {
            "id": "089205c0-c1ab-4f09-927e-117418dffd1b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0ea2ca55-82ad-4b62-955b-c93fd72077a0",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "37cb6d8f-43f9-46f8-ae09-4fcd674627fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7ac3f925-652d-4dec-915b-b7d43652f671"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aca61baa-028e-49d1-acaa-87dc44e1d8bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0ba7961d-bfc1-42f2-a2ee-47011cd3c93e"
                    }
                  }
                ]
              },
              {
                "id": "471c68c2-cd82-4040-a810-05d21d6128e3",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3487066-4f15-4d32-bcee-019f5d337df0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2d4fc78e-0773-43e1-8984-0de0ea56ae80"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "700c28c1-95bc-4524-815d-27af44d36a37",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8133e3eb-9579-4dc4-8ee2-8589f74acf57"
                    }
                  }
                ]
              },
              {
                "id": "2f189ae1-4f06-4ad0-928e-0623ac93d323",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "79460563-ebe1-4d45-8330-91bedc405624",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d32d7d5d-732b-41b9-89f7-55b3fc2b4ad3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "06e2fb52-459b-4649-b482-b420836b0f3c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ce1bf1da-e7ac-4f70-9b84-7fe3056f4465"
                    }
                  }
                ]
              },
              {
                "id": "790cbd4d-f3c5-4f08-bbd2-31b853c46182",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d4374f1-402d-4b2d-9df7-fa31e5c1f96d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "75cc85b6-f866-4f7c-b913-65c6a4f7e3fb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8a31218-f6f8-43db-8544-e2e58cfacbe0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "df729957-4af5-4066-a5e7-2197ae348107"
                    }
                  }
                ]
              },
              {
                "id": "345b312e-cecc-41da-ae6b-51ad7dfda632",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0476ad7-a2a0-4b19-bdeb-98266489de74",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d6484a7a-7a5f-4812-ab08-5d9626fb32b7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5dfbeec7-e312-44f9-9e16-6347ffed6d1f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c0e27d04-e579-4a51-a29d-a25fc94197ea"
                    }
                  }
                ]
              },
              {
                "id": "6960e896-1a7e-4809-b95f-c17edadaa48b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "68a645f3-49b9-4cbd-968a-f71dfc148339",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bb3a5eac-a79e-4d46-a880-63b9c5bbcda6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07a82e05-c290-482e-bfd4-85616fbad468",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d415bacc-1789-4fd1-88f6-b3cad6b44b54"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "faa1d790-1855-48a3-a70f-ad2bad8765c9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d1897ad8-8c0a-469e-871a-2eca999c9cef"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9917c292-2557-496c-bfd5-9a8e0fd16b35",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ed9b37b9-b2d8-4f71-8d53-836885e8c462"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "483ec8f8-a3a0-4fca-9f14-b4bb8065ad2e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ce9cc477-3155-4575-b7d3-b25abddd2bb1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6300054c-d016-4bbd-a4b5-1e0db882066f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cfa3817d-50f2-41a1-bd4d-a114b2c4df9b"
            }
          }
        ]
      },
      {
        "id": "ec8fc6f7-8bcc-4cfe-a6d2-451d5a0ce33b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "3b801aed-e2cd-4594-ab5d-49586cc6fc3c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ca9de01e-3fe5-4bcc-bebb-57a22b6654fb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "293e0809-782e-425f-8c6c-7af72eec382e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e317d1f0-b711-489c-b950-4ab9e862f5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbeefe7f-0a73-49eb-8585-fbe74c08ec0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e656cba-c860-4a2d-855e-b1f5ec66ca4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3114eea8-20f1-4a51-b7c0-08049a87ac4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aee3b7a-ffa9-4ac7-a686-3716e12588f4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b58126b5-5258-4ffb-b87e-cc153e46e0eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "232f6acb-1d4c-4965-9a84-7843842533e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c9acb6-58a9-4d9e-b604-42230e1a5c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee07707f-91b0-4334-971f-ba2f6e796916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2e4c284-8975-4f87-a6f4-fa30308bca73",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "878c155f-3769-40f4-93f8-2c4bab4e4f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9c6dc2a-f498-41c1-b0b7-a7c4c6662109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5c7e00-7c2a-4964-bd89-85a133af9554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d86a9aa8-eed4-4793-9ab7-f470faaf34ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a3a32a-b56b-4fa2-af78-d7f5e3c4be4f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77dd2d75-e8cd-4807-b42f-3f7460df4a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "584a4a26-839a-4876-899f-e6d58520b97b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c032c7-caf3-47bf-8814-8c11eef57265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba7b91fd-fb81-4868-a6bd-00b12138fbb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d119c310-2eff-4726-bcf5-3f4ab26ec0f6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e754e8c9-a037-4915-8de0-aa0cdd0d3abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63ffc9be-a949-4e95-a6fe-ee6ebeb6cb62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c94ec3c2-4b0d-45fc-9337-3dcfd5d82bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb70087f-9a31-43f3-8868-5ed1f16e6ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6401259f-86ed-4cf7-b55b-4cd0b9008492",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a85213-2f09-4ce3-8d63-05ee394f20da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2901721-caa0-467c-8583-de7048853229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bad5445-3d40-4410-a9b3-a15890bdbdf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1022ff80-1d46-4e4b-a3a4-8c306d593a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aabd24b-e916-4a10-9751-65e5b74eafae",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89704f9a-765a-42a5-a873-80a1b157b581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42aa239b-a4dd-46e6-aa79-264d6315bb32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "966b2d3c-192f-4c2d-a2c0-7b8b170d5906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e831d658-2e31-48ce-a4dd-e57467c2655d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2db6eee-3a0a-4e53-a9b5-8ebaf7c69c6c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b64424-e93c-40d6-8433-0df40dc8fa5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1c698b8-dd33-4d25-bb69-97df68532d51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee329c1-2c53-430e-91d1-58810ea41d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "82a32229-242f-4ec3-8c07-be3f7ad382f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3061f5d0-c5d0-4ef7-b222-b0c12a53faa2",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ee17a0-453e-43f9-be26-3e2c4260408e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ff84690-abec-42b2-97cb-67ed88c2f95c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "602d507b-a19c-4350-8414-f5f15d4e9350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1420891-1698-4172-aa14-7f7c5dfb7941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1381b2bd-12a8-4cdb-8647-52b782a4420c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d2c2428-4d22-4d0d-90fa-805df8b05f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "148feb63-734a-4c0d-8b62-0c189d55fe22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "066fffd5-9ead-4a68-a0b3-39f097d29c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8323116-8103-425d-9492-fb32283cdf5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ff9f55-d7b0-4b6b-8cff-5e7bd0cf5dfb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f9d856-01c0-4035-b2ba-97530a506c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1fbc4df-771b-46e1-b6f3-d652ef00489c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1138b204-8b05-4b2a-8ce8-4644ca0ff9f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "67eb6a7d-b397-4f6f-bc07-2a5515190d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49dbac2e-78f6-4daa-8d3d-78b14eac9eaf",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e2c451b-c2cd-4712-9191-00553b535415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3110e7d-d116-49fe-8757-a03a307ed5ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a9f94b7-4e38-46cf-9daf-08b3bb08f66e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "af34d244-3c46-4efa-b9b4-a155f5f36ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f9e0df-3165-47b1-8725-8166941905bb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da266992-a5c0-43ae-924a-1b107442c110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76172e84-2825-4c70-b410-42299dd597d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9061b2e0-86df-4f65-b0d6-e36e8ae0a77a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "33035393-06b2-49ab-9018-2e841d870059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d25926a-3a7d-4ca5-a899-c9c7b62227e7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23869c1a-c80f-48d4-b0d0-6e0430742e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "563266f7-0c01-4cca-b0d0-fa6bccb49f74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65578f98-a117-4f53-bf42-7ab3adea5a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e043220f-5a0f-48ac-8bc1-0c5906dd5bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f98e1cb-6bae-48b5-aedd-6f4a3466f1f6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e4c7ba-935e-413e-8d71-8844f5d6de72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3eb2679-4337-4c7a-afc4-d57bfdae9458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5278393c-994f-44d6-b738-31381c0a0f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f783f127-0c73-4dd2-bba3-de6707e5956d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65874dc-75d1-4565-9c04-b57429c5e6d0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a6ce53-ece8-440c-9315-4d38f0a0e3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c46703eb-b95a-4a72-8567-50b23f343cc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e4abf36-ef0f-439f-b2bb-d357eb9c5f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "28824dbd-86a8-4977-89bd-a6052420aa4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce6c2bd7-4330-4b81-97bb-580390c9d58c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86fc6b40-0818-4ac8-b4fc-acbb8461b8b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9016df5d-3955-42dc-9dbb-d8a7c83c4a1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf68858-fa21-46af-bcd3-12f164f0a70d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "35d96373-0aef-4a08-b71b-53cf7837065e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f9bc9c-5b0e-4428-9d87-9f0d71eb091c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd1d61d5-d958-45c7-97a3-227ea38f80e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf32fd60-055a-40a9-b2eb-1ef549849f23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fbce4aa-96f0-4353-b0ca-76670261426a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "04dfc98e-3704-4c6b-8f8b-7ba1688d03e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "859fa698-dfef-4883-a952-3da4f3ed2434",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a06f310f-c618-490d-a6e0-fa7b02e77dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1557607c-23a9-4d29-9e0c-6f597ef8588d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d603a43d-cbc9-4877-8df5-aae27aa96eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6891bed-d1f0-414f-8f3c-4d801108a61b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e864a3e-0b93-4856-8883-0a9bb4ca852a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f685dbe4-c0af-4e5b-a07c-2cf17b98ebc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9324d26-5d43-436d-a7ec-af1334a2d4b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19259c70-a55f-4949-89ad-6b4e6c9e3fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91b4c94e-0c71-42cf-bf1e-a736e142c833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ad2d02-7007-474d-9eb9-349e6aa248c4",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b13e9f1b-41da-4699-8fd9-88d87438d574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ccc7d27-86f7-4f24-bb5f-bfc52e880627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad00a06-d7db-4a5c-9d3f-e3a8012fa90a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a736342d-648c-437c-b1ba-18acc3903a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd5633cc-e05d-4999-b194-ad804d1c4da7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb54d0b-431d-44cb-bc40-fc56d8bc3986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16e53229-0b3b-45e8-9009-fea98977fac1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744cb363-e82d-45e9-add8-a59b9ae88adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba7df5ed-6c9e-4e63-aa06-02323d29037d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c020293-f0b5-4372-a601-59daf5814b5d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa164e2-7069-481c-84f9-eb4f41c34d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02702789-9da0-467b-b882-dfa656fad80e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5961ff-4f90-4113-8beb-20d8f7ee6517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6018b1e0-90c7-45d8-8aae-805c1ee79171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5348f0b-ec8f-489d-a297-46393d3c4342",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93605a04-1421-4114-b9a2-607dce02a34c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ca52d7e-d2db-4b31-bef2-264af27475a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa500842-d26e-4d0d-84dc-a3538628db05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4afe6005-34fa-412d-993a-0c61006a11a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a7a14c0-8539-4c75-884e-0d1aa48172f0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "901eeb2c-2cea-4cfe-a860-4fa55f3c9ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "275851a2-8f87-4bf9-842e-5c8152039840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "543af429-b836-4d86-9731-85e2ee051b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9611a9f-2f88-405b-8e10-9dcb01bb6019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e08efa-8da6-4f32-b562-0ba73892274a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c3cc74-63af-4151-bfb2-e6302e2d4ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "369d539e-9dac-4147-8ce3-901bd8624776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d07eee6-2358-4c7e-8e7a-9b70352d9f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7510d579-e7b3-422c-80ea-b9a6294b89c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4750174a-e02d-4893-a388-8be18bb19acc",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb5d09ef-8c66-4176-9372-ea06343f9adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11a7ac8d-682a-4f34-9f3f-4acb2f80e47a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12806873-ca00-44dd-80c0-a0e303263c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b48e8b9c-48f7-4061-95a8-cc148650b8d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f414d1-e82b-438b-9477-f13902c642de",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9528c271-58c8-457b-81ec-ad8fb2592725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "384b635c-3844-4d37-ac1d-bfa4f83cf51a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be0bc59-53a7-4aba-bd42-2d9fae236bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44dcb629-6dcb-4515-b1a5-1ab1d412e208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4122df82-9f8d-43f6-bc94-0068cba02615",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c90269-5736-40e5-aed0-f67f647bd56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "408d2a68-9251-4884-bb2b-46a74ba6446e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8efe5cb6-9627-4064-a704-0023f837ef67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0966e29c-b052-493a-b5bc-a7d22f3a0123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd65175c-fe74-4514-bb97-7cbd24a4b259",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55c3f319-e479-4880-baaa-d41898f88df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2a7c019-cf35-4262-9d46-2dd795127405"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae303ac-2e1e-40b1-b953-dd20eeaba68c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ad9e2fa-4f24-44f0-89be-277a0382452a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "035892a7-b360-46a2-9227-57843daa6efa",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8734b4fa-7b95-4c5a-8498-47031888f51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83cc83b1-45b4-4eb0-8751-cb40203c1276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2598acc-57f4-46ca-9cfc-3e138b61c088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2097a38-a2d5-4e2e-ad02-6adf1db49ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68cafc00-77dc-4588-af5e-de14213a24d5",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30dad11e-ae5c-498c-b201-4827d7c1e38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a36ac6b-650a-4156-8e55-b70f5e2e714a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd0aee9-dc53-4a51-8a81-d60a85b0f890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f7ca545-8dc7-4e98-8033-b6382472e437"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "92f67121-e10b-4e9f-847e-8a25b442f9a4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5ff11ccf-7877-48cf-88d9-1a0fb3da535a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f0bac86-3dd8-4e2b-aa4e-8bcbcd7271e0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bf558912-783e-4a96-afe9-405fdacc023d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c36bd130-e83f-4bd0-9b96-81aec4f9d062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f7b6112c-bf7d-465b-8d8a-2dcce2cf15c8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "977b66e2-3ac5-4de2-bb4a-71d313307651",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "334cd1fa-a2f7-4638-a682-2271726a677f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d07a9b4f-c5ca-415a-97b7-aa3f086164dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "813f7ec6-419b-4e81-89ed-3d7543634d3d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1233da10-260c-45f4-83ce-f779dc433b6f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dcf9f036-35d1-4b87-99ba-25a4b3a4c5b4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f0c0f153-4a58-42c4-b2ef-41e4efd21140",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dea51c60-b135-4754-954c-d6e1da758292"
            }
          }
        ]
      },
      {
        "id": "343541bd-a9b6-4c66-98a0-6f49c73a7fec",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "ae36ca92-e4fd-4e9e-850e-dfe201b3a7c3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7fe660ba-319d-4812-9859-6c689c4d9598",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "27a6e414-88c1-4686-ab21-6ea9771c38e6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25dc293a-f0a9-49df-95f7-72b95e878610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8465c58e-8f06-4f0d-a4f9-4841e64e23a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be0b5253-498e-4fcc-b9ec-daf7372a4000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e38da791-cd0f-48cd-a925-990feaf1fd39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4755dd72-df8a-4c3e-980f-e6bf6034da1b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d30e72-77e1-490c-b2dc-12719121d9bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5602d6dc-f89b-4808-85e0-89d44dcd6787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7cf656a-0186-40fb-8350-bb7e9d54f220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd5bbde2-1f37-47ca-a44f-2b265a28a90d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6845b3c6-d064-4c4c-9ce0-996fdab5f9fc",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb2a810b-3764-4933-bbeb-6fa0c425ecad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baaec77e-d062-48bb-b70d-5c413f3a510b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccbf92ec-38a8-4506-80b7-66fe8c0af063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d63816bf-e273-4da5-ade9-1ff2940cd9ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb99a790-2917-4f97-b096-b9bf2b9aac44",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d067d0-ce57-4eb3-b9b2-cebe957ba096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b412119d-c799-4777-a5fe-a240da6aee93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8a81e88-ab14-4359-bea9-b6ae64061b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "211da01a-b28a-4726-ae21-8e519e86983f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8edc1d69-4029-4b1d-938e-591e41b49338",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67637ad5-ee16-42bd-b50e-811bb8b9917f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0f5792f-40c5-45a3-bcc0-d3b67c1f3ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54eb66ce-d580-49f4-af62-ce4520d87218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7cd3720-40bd-4d7a-9a52-2e6c17fdd545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5df0eb-5a03-4d25-b998-c370a1b76f33",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "825a711a-fa91-41bf-8419-baa9da88c2f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32ab7890-7aa2-4d36-b8a9-845db54887be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb1def45-0bc9-4125-ac6e-9f3c7be38fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "05997be6-9dd6-4e69-ab58-abc64345239f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1411df6e-f87b-4384-a7c3-2fc9e952bde8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da98753f-218e-4026-b3e1-e983a7b4512c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb7ff069-410f-462a-9d2d-db0bde8483fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb3655d-ad97-4b93-8889-33ea0693872d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "533774df-4a5d-4649-baf3-3f4249eedb3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05cc6ab8-9744-4636-a516-ef549f4385eb",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b58c71-53eb-4f8f-aefe-bdccffd8385c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "639b432f-2df5-47c9-9c18-5cbc3619b2f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc27128-336a-4fee-9e05-ee17c05470c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "636e206b-7281-493b-b720-9fc839ccb7fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d934d014-0d2c-4a06-924f-a9e0969dfe66",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a487b245-8771-4bc6-9832-d707b6b27b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "957ecba6-b293-458a-ab4f-df7312fd4ede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cf89dee-9847-4af1-82e6-8c8529a8ae00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bee677e3-1e12-43e2-afda-5495a97f1111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "858add9b-76af-464c-b691-aa6cee42093d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb35a47b-8e5b-4806-b9f0-6216ff2d3c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab9ae872-1e6e-4c98-97ee-8c165a740156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c830035b-f5f6-43ad-b4e5-ef3159e22d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "93849d51-9ddc-4967-87d8-7f66ba00220e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6679e7-00bb-4dd3-9ca7-2331626341de",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "669f2192-10ce-4b10-9997-4331c9a67ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c38e4829-8136-47f3-b5a9-392cdb86479e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f190567e-c2c5-48ed-8e16-bac83f40e4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ec16eacf-ee7a-4346-9175-fbf50f489ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f26364a2-ef51-4455-8606-d76aac8c611a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d49998a-3e02-4159-a796-9e82cd1cede9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15111c82-a567-404f-aaf5-e579482e34df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef63f43f-1bf4-40f6-95f5-0aac875381a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b01236a5-f361-4218-97e8-268897f23157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e6b22d-9172-4ab7-a470-a3e7961d0a14",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad09c204-ebfc-449a-b2d2-d5cad57adadf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6245eac0-c752-4194-a536-58ae314051f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc720d8-a13f-4334-ab06-8562a1db649c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec32f7da-69c8-4aa8-91dc-b38e19492b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5437ca02-fec9-40b5-a6f8-705dfe276e62",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdcfbdf7-6d17-4630-aa23-4603216e91a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09d5936a-9066-4983-b050-26cd29c77654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16c2bbb-f8c2-4add-8d5c-529eca0c90b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec7cf285-550a-4aa9-9a29-02cc1d969444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "839b188b-6587-4c3e-b304-487246afbfb3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e262bf27-6b75-4475-aa45-0e0127c2eab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6028775-c015-4dfb-9189-76c8694633a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e270fd2d-d617-4c85-8639-0984633626b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e14aaae6-4f13-4fb3-be26-22732b3969b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031df365-5f70-4023-b73c-c79f84b8349b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f5af93-f45a-4ce9-bd74-63b0b15fb48a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02f24183-0010-4d07-a966-58af6d668922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c4435b-2cba-43eb-a914-08b800561c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c51bed6-239a-4df5-b828-2080aad4cea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b87951b-c888-4e2c-9f31-64666b21b886",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "510618fd-c5d0-469d-bae9-0f00bb5b449e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c29dd727-4dc1-4be5-91a2-6a294f319184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a495ab2d-b599-4999-8cd6-eb82f6756b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa3bc0d5-782b-419b-816d-a2cedcc26b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f73fadd5-bbb0-403c-9e0f-7d6f99fbdb80",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e5f7fd-fb59-42b5-bd72-1ae3bf45672d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "597c2b2e-831f-4dca-964a-e96cc0a814d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e00abb-6b02-47dc-a72b-e885bb65a251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a16dfb80-3965-43d3-bc25-e7d1048c8d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b39d8b7-f2e2-42ca-8e05-fe4dbf2b74fb",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cce3021-facd-459c-88cf-661dff3cc53a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d90c4fd-8fa0-4db0-abb6-fe8c50f0c6b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d44b1f5-3043-4153-a54f-a3e2ef382c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "429fb9a1-c36f-4da3-b143-00b1112ca90c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3f04452-67e3-4daa-b3f5-a7a053d79dff",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea917c6-4e0f-4abd-a17e-4420d5411b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c83a8a8-6bce-44f7-a543-dcaa615e776b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1aa0010-3479-441b-b8b7-c856be8a1662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68c83847-5e14-466f-b25b-28266b8c9d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530a75db-16f3-430f-a9c8-76d30b624767",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57913669-3096-4ab3-8702-6cfffea4ada2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ddca9ca-c9ae-4d5d-803e-52e098bcd19a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d051f671-8860-4c18-b822-dc8948e44c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07a7900b-ff98-4fa4-b8e3-563c585ae1f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9160df9e-2e12-4757-a8f0-4c724722cc16",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5587e764-03f2-49c6-8de1-2c547a2decff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f606f19b-9991-4ff0-9e53-89d697acdf99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1601eae2-8f0b-413e-92bf-c99fa91efc3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8e05f9a-69e5-4b0e-ab56-0278c2c97a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4114a2-ec7f-4c1b-a20b-2fcfdbc947c0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6162e93-bf78-4672-9a8a-89d7ca922db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a0590cb-b751-4c22-a556-011f48727c91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f4d3f5-5f85-4499-ab19-d83f307a2bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7413eec-4277-4baf-ba1d-2e019b5e33d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3044b95b-551d-406d-9e2c-bada17952f5b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d29a069-2d82-4623-a400-cf7768ea199e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5c9db09-8d63-4620-9f5b-fff1fece451c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2bb5a6-62a5-40d4-8b79-2420d5b6b369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14b6716a-220e-4d8f-aad9-545c160203d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc7eeaeb-ced9-41b9-a790-55ab1944bc51",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c942feef-8b2b-4bf2-9b47-f530cb12521d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e25e7c72-51c3-44c5-b8fd-8f68c54e70cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb18d5d-b15f-4bb7-88fe-e7dff8bfeb57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf4709da-2004-4c66-b4ff-412d9e57ec4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e7d83a6-9c47-4cb0-96a1-1b959778f1ad",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d10bb34d-cb5c-45fd-a08c-c5005f4ba170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee7f3fa6-fdeb-4ef7-9f9f-f909cfa4d803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6819608-d19e-4b8b-8225-26e20604582b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06a587c7-c66e-4ecf-ae53-975b525f3223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb3f15e-d317-4467-9dba-094cce82f09d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c860c6-8598-4878-a7cf-b9776b65677c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "848bbe8f-a611-46b3-a9f1-ffcc8112033b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d08389-f9e4-4a20-92d2-847d071388db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "723483bc-6aee-43d5-a74a-fa109eaa31e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a9db9da-274c-48c1-a90e-d95f4947e255",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3b86a6-2431-4077-bf22-5940099f30b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10874382-a3d2-4fd6-ad27-1709294f8cad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd9d0650-6d20-4e3a-b021-7947d2b5fb55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cdde23b-1ec0-46fe-847e-f3ab5d56324e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecbc13de-12ea-4f41-909f-af8264bb0fab",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c2d020-fb46-4501-bbc1-e275a725e9cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d37a7e11-230c-4d13-a532-d58451f9c9fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb4d097-f29d-47c0-b6af-1159a44d96ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "370be8bc-25fb-4e55-b321-8a0634bf30da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "242decdb-b340-4477-bdd9-80e1078ce88c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49fa7fd5-906c-4e31-8e51-58ebbc340e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "335dc77a-b09b-480e-ad1a-a0d2590a08bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f9c591-e93f-4e7d-a9ef-7caff73829ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf5ec028-dd88-4e14-b506-e56bc26cb220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332e6d17-c4a0-4353-af1f-298082563550",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f15581e-99a1-4c32-b497-336ed9aba4cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c33edcf-d502-4737-a039-250f38d1a093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03933ef8-72d2-4753-ac98-504c132b6b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec53ba16-241b-4add-974a-24fab66fdbc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91feaa8c-1ea6-421a-ac30-5ca38151ec2a",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e05cec-06e4-4c27-9364-c4b158a62e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f88f8545-da42-466a-a34b-8da5da760238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "426db24a-63af-46da-ae85-92a1d7cd6d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "258d97ed-6307-44cc-88b9-41642e258ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ece64e-0bae-4a10-8470-048321e531c4",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "169d6988-4889-41bc-9e28-125029eba374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "128b2710-d80f-439a-b3a1-a8d960896cce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c4297a7-74d2-4e30-bf5c-0f5710034712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04e36183-6965-445f-9a9f-ae79dd906078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e505cff6-1a6b-4957-84da-dd4a3599a7a4",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1bd6520-ecaa-412f-9007-c672c6f528b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff5cb3a0-898c-4826-8b66-bb22f2341adc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0647431-bcd6-4a5c-a770-1155e71a1de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b692d0b-070c-456d-ae21-eb8df35e1171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c65201-b1c1-4fef-b943-8ae11b9e4ef9",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac5fbb17-d15c-40eb-b2d2-108c770be5a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e10a21f9-6288-4c5f-86f6-7c070e866518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b61480-e2b6-49fe-bf1f-2d7511c3c899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87d288ea-9cfe-4c51-b0e8-4f7806b7cac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abeb8af3-cd6e-45f3-8bf7-cd6138e4643d",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3919c5c1-52ee-4ced-af44-ff003245fdcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d11358b8-67d5-44c8-8783-38ee56caa32d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a0e31d-19f5-4953-ad14-0c8edbf24791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eaf76310-f8b5-475d-922b-b5d315582d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db721e76-d53f-4631-9cd2-8b71c5a9d6dc",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a44b843b-d976-4ace-9bf1-de307ba8a6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8b7e0cb-ea58-479c-92f9-ccf07ab0f9b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b28678-d87a-4787-93e2-e3fc173e5aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8065cdc1-c191-4d79-a580-774d6a3cebd2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a620307a-283d-40ce-a64a-6958a926fc85",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "29fb57b7-2370-4dfd-8c64-563a8bfcf90e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c411e79-9dca-4cec-8136-93e58fe02716",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e78b9f4e-70d1-4364-9273-72f034f4567f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa5f6d2-9106-4779-a09b-f2e02cf5754b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7e5e6d23-6e54-4e68-85fe-156a4cac9d08"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3eba9af1-5052-4b21-8b92-dc66ca3d7f21",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "480f69d5-dad5-4595-b61a-82a1c52ede34"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a114b739-2a59-4fff-9bbe-d2fadf95e316",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f294412d-3022-4301-98c3-b4276661badb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "54973b31-f87c-412c-a292-e853ac02fddb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "11739866-81c8-46b9-bfa3-3eb0d862023d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "84904deb-7dd3-4153-a9f2-b09266f83413",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f38dc0d4-7cc4-4384-92d7-3ac4e9c054b3"
            }
          }
        ]
      },
      {
        "id": "f3020179-1dfe-4673-b1b3-71162b31e263",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6956961b-73f0-463c-aad4-e219175e8248",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c43f0c2a-753d-49f3-85b4-d9fccb40705d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b868dba0-b32a-4e95-913a-09d4e0750757",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b13047-de29-4db0-9348-f0f7606476fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49270850-3a23-4a86-b17a-221fc0d966e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b338873f-243e-4255-b53e-f31611de7c49",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8658cde9-93f5-43e6-98b5-09e40869ea56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27f6f0b9-0063-422e-955a-3645d2aa5383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da2465c-9ed2-4569-8703-7d4de16316d6",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16138753-3706-4cdf-b580-442f28589d81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bff901f-3cac-45ac-af68-d73fabd391c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1bf73b8-43fa-4734-bf35-f6bd2383217f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5c6d7c-31b2-4af1-8307-344585a84c16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7646176-eb3b-4c39-b3b9-1891756a862a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f6cd810-777d-45e0-8798-ab7778693340",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc87999d-d15b-42c7-8cf8-bf9a4ffdcef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3262777-e90f-48ec-9c5b-5d1cc928f3c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec537630-67c1-4ece-a1e1-22f9c023506d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4bb0d3c-85fb-40a6-ba8d-406746d6fdc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08e2b0be-5f0a-4a3e-97d8-57d7c811a462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb7c64b3-6088-4780-90c2-bd6000a292da",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e55ae92b-12e9-477f-9ef5-07b8aca0a30a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b70e9f6-7187-4e89-bd0f-5ca0ce6ac53e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0c9f13-0ffe-409b-851a-1719a1715de0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ddcfc4e-0862-4849-adb6-7601bc1ba870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38bcbb0b-84ec-459d-be2f-edc2ee5654a7",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23249c14-f567-4e1d-9bde-c316512a8aee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22a0e615-9737-4b5b-9342-70da76eed803"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "708b8f88-6767-4fd2-a01f-284890b09bcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2bb3633-9b72-4dc5-be73-23d80f658c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a07e398-5149-4aae-8804-788fedd20c6a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c1f8a32-1b41-4217-a5f7-bfd7c6921bd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "566d827c-a178-4f48-bd13-1b8c24ed54d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac15943-056b-4104-b3dc-450f5f197a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92b874e9-f761-4a8b-92ac-dd41be335cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acdfec2b-4989-4d3c-b1ca-582c309c48b1",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5e8b0d-df3a-416b-b6d1-66b72ec4ed83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93638e48-9c55-4b13-ac0b-a827bec0324c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f59cdd-1c8c-4c75-a173-e2ad1ef43e0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ef059de-6c04-4268-82ac-37462249623d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b778e8cb-0044-4e64-af87-a0192ec9b382",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68deb3af-064c-4734-9710-a7bf6aceb8fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8b694ab-c8c9-4a8d-817c-1fff9e2c075b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f78a6c-fb9b-4068-b10d-c5774e0451f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8b4ab39-8edb-4058-b2dd-7694a8f026ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a3b412a-0ea3-49cb-ba50-fc34e4edfa71",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2fce0b-7db7-41b7-902c-34476b9654f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23e7a81a-de5b-4967-ae91-29d95d2a8278"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d458f8f9-a071-4b5e-8454-f38a760035b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dc1b594-ed79-4139-97eb-c41c29715eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e282a070-1782-46a0-9e93-c1a888138793",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da93fade-b6a6-40b2-b86f-47213d3506c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9caa24b2-38bd-475a-a439-249d61357b04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce7a590-c079-4729-b830-6a888d8f823c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dcd4a07-4087-41d1-940c-c30d470835b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd63596-ec34-4f13-8035-8a4548d1acc4",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "910d0751-c47c-47b4-9acc-9f6c19549c38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3698ba95-f928-44da-87f1-ed4b880a4d3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1cf506-08b2-4a56-8d3d-42261f67d5df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddd47954-e06a-4adf-b8d5-6ec5b3fdde66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfea9195-d9c6-4859-8e63-f44e848e2a87",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b223fb-49ca-4b5c-90c9-90fe1ae27f19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fe5fbfd-8a8a-4065-93ea-488a5885c452"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82dbb40e-a7c0-4339-af67-52c1fa06e808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4db664b3-e54b-461c-94b1-fa87eaa36e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be1f322d-fbe9-4760-a804-0466e3e53a98",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5573ed6-f643-45d3-8341-dd8f73c43dd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93c78ed4-f1a9-4e72-9b34-26594f5fa2c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6262e3-3790-4cb0-831c-947e384cc5db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1114d97-051c-4f7f-95ab-c68ed9402738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59fd94d5-4948-47bc-baa6-f0d463d77cd1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f57f6d3-171b-41a1-baa6-b5dceb0a128d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e3c6342-a2ca-4df9-89aa-77931b460a76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e7be1a6-9c34-4f79-80a1-17caf1330681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1046edc-6fc8-48ca-bfdc-d6cfa01d8800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd4cf49-d395-4e9c-9b29-dcf72a91a4e7",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f236283a-7060-409c-baa2-551924c7b78b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "760a5dee-9271-46b3-9281-192bf7c2281f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc55c29-b0a5-494c-8922-9c356a54cb94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89faeb8a-0256-4ce2-951a-138bdabcc9e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3552567a-fdc0-479e-ae4d-a7023dbd0e4b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74dcac24-8761-465b-bcfa-7bb21f49344b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9a00c17-00ef-4687-b36e-10813f9a5d49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5695a727-f9a5-416d-b1ce-7f9511a752db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d698491-abc5-4ae8-ac29-3175cc482e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6b68da-e80f-4aaf-9422-e7ab08c4cdcc",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dafac5b-0d6f-444e-8951-483130b2336c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0919baf-9e10-43f5-86bc-2bc4961878dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff812a1-4af1-494d-8375-953c3545c5e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4fcd3f9-d772-49ed-aa94-8acd2e145a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81096d9a-4a32-4f31-9e3f-9491db3023e0",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6985ae-9e78-48a0-b304-0d8d09023f3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e8a03b4-4db8-4b25-b65b-effcb4747948"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc3cb094-d7a7-45fc-a695-84aac057534a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51ebbd4a-91db-4c80-ba01-dfc92bc5598b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "575e0ee0-5f49-45bb-a603-6fa693b6355e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4103871e-b8ac-49d1-af6e-d4c70276171c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc0fe74e-143d-4058-bd10-3f783e61aace"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b57f89-6fe0-4443-92f1-d3fb81f2ffd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "049f2270-d62a-43fd-9e57-6e4e5fdf9ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a17d86e-c6e3-4f62-a8a6-35cde0836c9e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a238ac30-ab24-49aa-8c80-46678468fb12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3832139d-d026-4890-9b47-a1e955130595"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7688f0bd-3b5d-44c3-b1db-6945deec2be6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "217e78da-4a29-4bcd-ba02-b5acc7379ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2aab0b7-1b2a-4eaa-ade4-9c1f92fd8ab4",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe316c4-f595-4fb6-82f0-743a124d589e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "044703e5-51b1-43f8-a95e-83290e9e0c87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e73fe65b-3091-42b5-8c0e-e4e8e0148ebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6733b2b7-c150-4233-93d3-a4b670024c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d03cc1e9-0076-4393-9829-293dd23e315d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9084fa94-e5b5-46b6-a9bb-18ddd3bc1a57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efc8f2a3-6825-4ceb-816a-086d2f611ff1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32a50f9-3c9d-4b74-9249-4c37699ac49b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f616f317-6094-4f07-9ed6-6de6bdfb41b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c3bee6-a57c-426b-8dde-b19c7c0e69ab",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647b395c-eb83-4474-9b79-a9a1929fa0cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0c326e6-ca63-4822-82bc-9548ea03c2b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca28769b-8174-4d5a-b888-6a6680025f8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7476fbea-c741-451c-8e44-1d71899eac9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df48f05e-8078-44ef-ab27-ca26ed9c4781",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe18885-358a-41b4-8674-b998fe9bb854",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee715c38-57d2-4503-ae9f-ce4a91551caa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b149fc49-0e3b-4a19-8325-226f6685936a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b35521f7-b2fb-4d82-ba85-90e1fe102f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f722ca0b-6502-4495-bcd1-d3095bf5cf73",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2232236-1eb7-4a81-968a-be9ab999b18b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f31b75f-8157-486e-851f-3551984a4b22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d7b4523-53f0-462c-89ca-f1ca14ac6d9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e10436b6-7c74-43ba-aa0b-d0eeeca41478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aab78d6-fc72-4414-8057-45dc3281b517",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61693691-b818-48f6-992f-64c1883bb0ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92bace15-bbfd-4ee3-8cdd-253bedacff7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e2e74c-0b87-414e-906b-ad681643b95e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87b2333d-0684-46b0-a59d-1444b6772034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b7ad60b-0e6b-4cc2-a461-bcad283477e9",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c68e821-915c-42a0-909e-542c6902b5d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d2c06f6-115a-400c-ac12-7f3674201f31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea0a133-e9cc-4e4d-93e8-de50089cd210",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "927e3e1c-9440-48cb-8a24-0d5dfe4fa101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a61e1ea-6ba9-4e55-9077-53383125ce82",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec69308f-48be-43f4-a797-c611c0126f23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27a36815-9188-49e0-9122-d60b8214eb70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb3dcc0-1e05-4ee5-b84b-657affe18ab3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8146909-7ee9-43c6-b5a6-fef6c61f822b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f0de42f-ba34-4d49-ab29-ef84d74cdd63",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "969cc869-bd33-4ef7-894a-47d6c637ce7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13001f66-1ebe-450e-b0dd-e7c297ec7fc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a698a8d0-a086-460c-bf4b-a270ed70fe8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61fed43f-d74a-4790-aeba-0e6bac7193c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae54eb31-87da-4e22-8a7b-0b36ddcdd672",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1367e042-e618-4fbe-a7e7-a18a0d3c695e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09e44240-39cc-4051-b035-9b6b810a0218"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd11e09-7fe3-4954-a19b-77864362ed05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dc0d681-429a-44a7-b6ac-d13c5f5238a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b9e176e-56c6-4b9a-bf07-8fb6cb71510c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f22b0e-c59f-48ff-97db-d4f67574baa1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb581d21-1b90-4dea-a563-8d52547d1671"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c8a2d2-ca18-4993-9ded-e7c7c95011f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14b94a57-6898-44f6-ab4b-b511d633df8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a767a5-adfe-4500-b1e9-42a22830f010",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c0161d-ddb6-4f4a-b096-2ff9c8b09a2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96015a5b-203a-4d55-a906-a9b0af5ef552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c829b5d7-4444-41fa-8bb8-24d92e826394",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73b0b8aa-d1c3-49a0-9e9c-a0432b372faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60712207-04f3-4feb-84cf-fdec2614ff47",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fca0940-0d50-41ee-807c-f9ed81415de4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04bf400f-76da-4ac0-abe6-ccb7a23bffd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49eb4e7f-9350-4c40-9840-e33ac2749caa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4058a446-92c3-4b4a-b59a-69340bfd6c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ed7496-05b6-4c6e-8899-fb86c0668559",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "113245a0-8fbd-4b42-8fa2-1fae33e5ddd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea0494bd-4eda-4299-b4ad-e4d17a179df1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba68e2b-5945-42ef-bb6a-5851744e35aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed105085-191d-4d55-a795-8eb4f8accc09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b16b6d87-44c3-4859-a320-278666f3e56a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da36507-cd7d-4ecd-8845-ac0c3e099475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e58f749-84c6-4e77-937a-ea4c23388265"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd7fb122-72cd-49d9-82c2-56803dc6be3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd930e37-0bc4-4074-89bc-474f4b245efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab18eed-6df4-47be-9c85-215142439303",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f4b773d-8bb5-44f4-a7a9-2ce51a5a0f13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef2f0af3-f7b8-4a82-ba4d-da0303ec70c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a05488-b51a-46ef-a7b4-d494fa3cc9f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25e658bd-8d60-4a44-b5a0-5efae2ceaf94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f14796a9-4958-4767-89c2-27b8f541d6c0",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da4fb4a9-684b-49ba-b840-830dc9c96588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c6dc41c-5fb2-44e9-ae79-c488f598741f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9869f84-6c99-4588-8577-574bb6830e6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "942a27b4-6fd6-461c-b4ac-52b1d4c48724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b4b4e7e-292e-4e73-8fd9-499ad73d96d2",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5e4041b-7992-46d4-aab8-a0e08dbe0914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cf3f908-f5d6-4d01-ba84-98e09282fda1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1230c6e0-61db-42d1-9c92-2b4f6a288e99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a7608b2-b9e5-410f-8fe5-c6a3b8fcbe7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a2c1eb6-9072-437d-82cd-1524ed79696b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc069ccf-3eda-4119-b1e2-c2751ec9f0ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "887587ac-042c-4655-bde7-3427a6094300"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7a4299-6653-4eb4-82c2-0b8a6c386d42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "228038f4-e926-437b-a6ec-59b990f4babd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db70c44b-c1e4-4775-8f85-dd15b82ac2d8",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "522d623a-0dc5-4f69-8897-8edfee479775",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c7c8ebf-3c75-4411-8048-da363f297be7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b9140af-d820-4dcc-a626-dcf582a577fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df8e4fcf-b4ba-4edc-894a-ff9bf2ef7986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ce02311-569f-42ab-a8de-302956e4790b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d5a9eda-62eb-4cd9-aa5b-c5846ab4d239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5834bdda-53ca-45fc-a6d2-749e0680e060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52aa57c-b0ac-4590-a1cf-3517f598f89a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df43b891-29a3-4855-b50c-52315ca5603c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58652fa5-9322-445a-a523-47fcaaee273a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eea61239-0135-4ced-afb9-2bf5984687f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc80d215-e717-4601-98a6-651b5fd26f71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b07495-d77e-4fee-a0c9-63285091f12e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "768d9a91-959a-4e8e-9a92-316cc286db8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "834d5752-8a1c-45e1-96d7-f8c2ec6c78fc",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b98df4-0e1f-4ccf-a9b0-825ff9c1b68b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "725d27e3-2815-46fa-8c01-61c7f49e06f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c861de5-d67c-4b61-a4ec-018c3032250c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9146550a-3cc5-44f6-ae87-b6cce826d366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f157618-ed49-4c6a-91c2-133fcb569211",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b373b72-f451-4b2c-af4a-ea4345919f37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3809007-8009-4cc9-806f-7dba39f577b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "486c0eec-b8c7-4667-b628-6c0fd0172d92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a8d038c-bef3-4e14-91f0-ccebc94a4cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50cb505c-3b03-480f-bece-11ac49d2e986",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d88954-e5ad-4216-9b48-bbb5b7a07843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d3268b-8164-439a-bad9-a2c8cea77ac5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "183bbf6e-98c0-4afd-90c2-1eca9e099897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba12bb05-4ece-481a-92da-78f26dfe01d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d2efa40-3595-4b10-ba60-af4c255895e1",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b3d4110-3b46-4089-a5f1-c03ef56a1ae8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c24ed455-fb3f-421e-92b6-08fe16a1eb41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf64cf69-d271-4c7a-8389-7d3aeb8d6503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88620997-555d-4f23-a4d9-efc87d2fd4e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5730d9a4-a3e8-475f-beae-bb9765013b65",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bbd281f-0ea3-42c7-8c1c-f634c8257e90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2594bf25-0207-431e-9388-c36ec36fc857"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b3c73d-76f0-4cc6-8566-6d07281b5f6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16d9eab9-308b-4461-96b9-7f873e2f9a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "101005b2-189f-4e0d-b0c1-22913ef82c91",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01555079-b6ab-4721-aef6-6ccfe95a906f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0518d0c5-b78d-4fd6-acde-1726aa4a2e6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f802b7-251f-45a3-9ede-2e9d6ba57ae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "225ae6b5-e3f5-45f6-9049-3593db83046c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d00745b-8f38-4fdb-bbdb-0e59e882190e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb243a5e-8039-4cc0-a8d4-0fb50db1d242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "274612bc-795f-493e-af5d-114a7caa7868"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f27843-030b-41c3-a28a-2a7b29240c52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c37bb010-b0bb-417f-9b6a-1e9b459ebe29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "525a4a47-8e80-4224-bb9b-5c6684a33ac5",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c3f213-4821-4192-9ad6-9f8123431beb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48661356-998e-4a8b-94f0-e0137d354318"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c992ab-a748-4f7b-bbf3-d8bfabbeb5c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54138ef6-6634-4a8d-918b-7a9a92f4836f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c87b9f79-731c-4efe-9199-0261a258fad3",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f06f4a-1ad4-4146-b7b8-5e575f1a523d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb8e2723-1c63-426b-9079-74ee7af502f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e21159-cf37-47b0-a65b-11fc9dce53fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "311d756c-2363-487f-879f-e9425675a591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f95bde-45a4-4cf0-83ac-09d32e2aa92f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ae3db4-c778-4b4e-bfe1-46a156d723f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba7954e1-7699-46ee-9226-319557e670c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e42887-227c-4d2f-b3e3-62aa221f596e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ad4bbea-a36f-47f8-8a60-1210c863f06b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f503f4-f6d2-446e-83c9-e16ac30fc757",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1f9283-eec1-4511-a1d0-e324cd20e9eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cef2fbd-e1ad-429a-bbac-ba91aec3b1b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8783c0aa-e2eb-49ec-8dcb-158571c01fbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4f5d081-c9e1-4e90-a75f-7ef39474d36a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fc0f1a5-0dd1-4808-9acd-099a33009e62",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aaf5991-360e-47ab-b4bf-966721195348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1591345d-f28e-40b5-9158-1ace7176523d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b2f8dd-765d-4fbd-b60e-6849f5f88e58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54abf893-38ed-4817-9106-2b346e4ae879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68f0f98-55d0-4743-b126-6c1253297daf",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee16086e-8b3d-455e-9f2d-38c0b0082b3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65eba554-1729-4e27-9a39-2b994ad4f5e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "270c9b17-eea1-4cc4-a0d5-794f4ed1a4d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e3caaee-2539-4d0d-a15d-6474106d4907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e6e084-d3d2-4b14-9a70-573e2fb079cb",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae0aeb3-e872-4142-a88b-61ffda3a30e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51524f98-00e4-47d6-bc77-fb53817348ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc3c8de-6adb-41e6-abe1-f75e500a568d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0c9bd82-816d-4868-865b-ab5997451d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4dad346-e937-4ffa-bd0b-090bce18f64c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24298436-52e2-42af-b600-b6e655ce74f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d2e1a2d-5a06-4d3f-bd03-3f4cb34cc812"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "274dd71d-3257-47c3-bda5-cb9b8ca1325f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "774ec41a-895f-40d7-ac31-7089d12abd2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87f6bf8a-f86f-43f8-9bd4-66ebed6cc050",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a85c7300-216c-433d-b290-a3da0c8d537f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9732bc44-4324-4cbd-9132-f8555a18730d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b799a6-d844-450d-8b76-df48865524ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e73865a9-659e-4d34-b630-8e8391247424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f3575f-b201-4434-aadc-cd11c9212413",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5f3ed9-30a4-418f-a63e-1ae6717b0f2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "998fb8f1-472e-4388-adcb-c17c3c9c0129"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8913692-a2e6-4967-84b3-f9a36e81dfed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73ac2600-0f45-4c4a-b82a-23f17a20796a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e6d3b88-feb7-43da-b9d3-67013414c7f7",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f57b242-e6e8-4808-bb9a-e1a264b8a5b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00adf8f3-a5c3-44d5-a2e1-9bf1b55e25c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6148d9-4235-414e-8b6d-aff10464eb46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dff338c-78f8-45db-a5e2-a344b6625c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91bf02e1-deb2-406f-8582-c6780e2a1369",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "842054bf-1c1b-4258-bf8e-9c8060cdabdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95c82d4d-3a5b-4a84-8bf7-7b73183f2858"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf53cb6-ae57-4796-b9d2-404200e40f0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21e3d1cb-0e03-4a1a-9c2b-cc669a2f3c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ff4e19-1692-48dc-8030-a5bd0b3518bd",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b654ba8a-1688-4ede-9a3c-cd9d1b122d6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c01bb548-548c-49fc-833b-a048e014d7c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80d93fd2-fd7c-4198-9fd4-ee5a1bd9c66a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c26743e-eefc-4d70-9656-3be963afd152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb867687-f64a-4aeb-82a4-9c690cce8df1",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35170535-67aa-41e7-a1ec-ed5d28a4251d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80bba46a-1b2d-4f77-9ecf-f07a41874095"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2977c01-7cb9-4a20-b681-ef095f88b37a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0221a233-124a-42c1-83e6-c5469d676f72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a1f93a4-5a6a-4b15-bf0a-63c5bcf51160",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a976b32a-3ba3-4b24-b1a3-e3999b8652ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2146095-9532-46ac-a3ad-571787ceed15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf4eb35b-4d20-49e8-a813-69e3982337c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab4612cf-6345-4595-be6a-11f15afece62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d093e226-3094-43ac-b012-03ad85842e57",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2a0740-a5fd-42b9-909d-0d9086283fc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5094f10b-2b22-4058-aac2-d48c1fb4bcc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38b861c-25d3-474b-adfa-894a09460940",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96b297f7-c565-43ae-a0e5-28f1676860ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be6f7de8-493d-4263-8190-3bf0fa7a4391",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d858b4-5e17-48a3-8475-398561980f02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34ed1673-2e11-41a6-9696-42e270bb3771"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c3c756-c4b9-4d56-a96e-6aeadfe794b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6a52508-1061-41dc-ad87-c7d9e5b066d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88f7f62-6f07-42ad-9623-5dba8cf37e17",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56e997d2-43bf-454c-94c7-0b7f1591d6cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bb41612-6d58-4eca-b97c-8f534b764cb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a6ef1c-4d4b-42e2-b389-fe2e06c369be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51ada321-2dda-4f49-bf7f-f712c2803bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bcc7f6a-d0da-46b8-9668-7b804ed79c0e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46036a30-fd97-4af8-b37b-016da5acb818",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e213b770-9274-4729-a9be-a6768eb25541"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5900e6a2-0d02-4e8e-bd72-82009f5443b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4334b845-dc41-4efa-b9b8-92bc1356e8c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56457d93-0d84-4886-b8b0-2d595b278da3",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b3330da-9eb9-4b8f-86c8-bd48b3aed6b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e7f2825-05b8-4b0a-b447-faf2cc2f61cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e7dafed-dae8-4ec1-952a-1d341be5843c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1774607-af9e-4fe4-bf5d-187a79a7412f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77cc167d-cbd6-492b-bd78-fe2ecb1e1517",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33319b85-7dae-45f1-b177-e970764943ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa459914-9de8-4238-9bac-2cf97bf6da9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78852d64-3dfd-4efe-ab67-32f56cf84562",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afce4f15-9d51-40c0-a421-410e3c355a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce29e73-9936-4cde-a487-8fd27fdf2245",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc398a5e-266b-4d56-8542-3949531a8052",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb29d59c-c738-443e-8b45-6d2d3e08ae7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4228251e-5f21-4521-b5dc-4c889c727baa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b53671d-6831-4c87-86fb-9b0958fe5f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0450ed25-e4da-4dc6-bc23-d6c7320e8256",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c93d3812-09aa-40de-b288-fc6aac88cd9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9a6d597-c3ab-493e-84b8-ab0b9a5423bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f6454f-6b7d-41b7-8b16-0598ebf768af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e03b9607-50f3-4975-959d-05260b8a45f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a8a04d-247b-4977-8070-43fa47d10d3c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e9037f-3ba8-4054-bb19-9d0022f40803",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b746874-3afc-482e-a27d-775a62aa1b7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f8010e-cbf7-4db3-a62e-ec3f8f174742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "607a3ab5-8e5f-4de8-bf8c-2b0d5e2c0856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f54cdd22-ab6a-4591-9675-81c37bd0e543",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a8a2c8-d228-4d0f-b868-41f6dfe51e88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c126f44-b12e-416c-b480-10e7a1b80c19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c194b4-d777-46e0-b1a4-d1de160a65c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd99002b-081a-4bf9-9b68-5dc9b3c57974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2056235e-b9c1-4824-9845-24e82926d7c8",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa86245-4819-4f50-bfae-c6695ce28ea7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5318907d-cbe8-458f-b265-8a1d7de6a6b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa3828f-8e24-4a27-ac5e-5a884c5c2854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "956149f7-3560-4571-98d3-19db77ca1e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58bdc4d2-a93f-4a22-bba1-88bf459d4ab6",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03b9e671-be5c-4b37-98bd-3b6a2de4937a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ff4619c-3cb5-4ec9-bbf6-d633f7ae937d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14156f59-f571-4661-afa9-88ce79027576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e58c2ae-dcd7-4d5d-85f4-edba3f51ccd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f569f5-5f11-48d4-9816-e764438cab2e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a3beb4b-a397-43d2-ae7c-37d7b0736226",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce59abc3-f125-4b38-8656-4faec0760af4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e746903-4a3a-4386-bf16-273db6c1476f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57d44ff1-5282-4d8f-963c-0d6e47943f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4758e6-c258-4f08-8961-7a3baa20c407",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4376adec-3b17-47da-8ef8-595abcd758af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78ff5320-a559-4aa0-a2b1-35bbaed2da7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46af59a1-f333-4747-905d-aa83e7a8f298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "704444ff-b928-405c-bdc0-28f1309f35c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52efb722-871c-48ad-98ce-b9f76dcea71f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c65c5d21-aea5-4676-99de-cc7b85c88180",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f93969e-370c-42f4-8330-34b7e3b88a07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5764c971-5606-42d5-81ed-b06a02f0539b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4995b00-fc3d-49ef-b108-5343ec94b0a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81924d9e-eaec-4990-a058-e603f96bab0b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "495951c2-e00b-4b87-8a37-01242d80ea9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdaea5a8-9613-4673-910e-a79ebe4c74d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "735a8c36-93dc-4a52-a490-8fd24df0d3fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e761a9cd-54c0-46a2-800a-cb5ebc9e915e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d48d08d0-e010-4728-bf08-28fb4fdafb9b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c051ced4-365a-46ed-94f5-ff527bcc5d14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3712cf7-8bd0-42f6-9a4c-6d690438fc7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d355d8-65a8-47b7-8961-e0495087198d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bf8448e-5d4b-4641-86d5-422186b6033d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1274069d-91ab-4494-b4a8-995214336e0c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ac44bf-bae7-47a0-b9ad-586339b2b616",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79242c1c-6edc-481f-8161-1179db7bd5fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03418e0e-d7d6-435c-97f8-13121d3c214f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e8f8313-89c0-48a3-b1d4-4b62a7b4bc6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70588ee4-e671-495b-bbf1-6edaf7afffb6",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64dd4847-4995-4858-86bb-dfafafcefb91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11ff55a9-8207-42be-be75-7b876674c410"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce4c0c0-edf3-41e8-b376-ba2df5629d2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c19d861-eb69-40d7-9377-25080d8d0a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5544dbc-71c6-4f8f-bdb2-3161aea2cfcf",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a9e421-afa5-4814-9e44-b751e4d9a803",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e6ae719-6ba9-488b-846f-8c7d99912780"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49583e4a-f311-459f-a76d-dad5f97fb5b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2626700-9ba0-4df5-9b8c-e61f24b25c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "770f7618-49d3-4d70-becd-8a1bc5417c7a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb8bc17-a0df-4b66-bbc9-9a7ee08b3771",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91c23473-a078-493d-b9bf-0a8cf63f15cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af2a75b-c4c1-4d6e-b4de-a126729a3a94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "849ed9c4-2ae6-430d-bf6b-be0e099de88e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39026112-5d8e-420c-9c3e-35efa9527a1b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d60b488-774f-4352-a3d1-3e07265ef3b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "236704af-eed6-4415-b9c3-d7401465d521"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e17185f-9f68-488f-a89a-9fe20fc532d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a7734c7-0d4b-4934-9158-e5ad6776d16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e73e8b2-24aa-4f18-8267-43791c35dd4d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d0b24d-35e0-40d5-bbcf-a6cf3f99a388",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e8cbdf0-9f81-4a8b-b5a2-d41a58bf51a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc48a3f4-b0d0-4a54-a400-927166207826",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b59a40f-b8e8-4b55-9079-9161246c2b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fdd774f-2dab-4f0b-900a-63d348dba167",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "375f6362-5e81-42e2-9347-c2c9b781521a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a4143bf-19c5-417c-88a5-894f017d079d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4810327f-2711-40f9-b563-2828b2be1c37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6476af9-b4cf-43db-80b3-f42f9bba90c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd35694-8999-4ad4-b622-adb89a3a3bd6",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7010dfc3-60ce-47db-8f40-0537e1433260",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1afe155-db01-49d7-841b-c573aceaf409"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba5b6b0-cd79-4c20-a9b5-f8fc6afa825d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "525dcb71-63c9-496a-ad0a-3b0db241c374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2119ca-036a-4cc5-a7fa-e612a8a38d28",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45a05f8-a981-47de-bd06-7eb13f25060c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4590462-c26c-4654-aab8-15b45d458b2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e715f34f-fd47-4f44-96f8-abfd35d3c40c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "513b9bde-f3bc-4445-9981-15443d556370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16dbbd4c-3e00-44fb-9cd6-945216200398",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da3fd09c-3402-449b-9b46-3a71a75ec216",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5680a1c1-d80c-4913-b17f-d572872f3688"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b31d1c5e-9f46-4038-b367-3ff9fc1e84fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56d33345-a711-46d3-8af4-c583a721785f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f705e19-88bd-4836-8419-5f60636f303f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9864944f-fd6c-4c87-8c66-9eeb7f0dc776",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39fff59c-5b5b-472f-8db3-2f065cb8d149"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e680265b-2282-416b-b069-988c851d9805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "183f57a6-994f-43c3-b50a-0c9773055f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db22144-4988-4637-a7d4-3021671cc645",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c828cee3-44d3-48ff-9ea0-35cfed08a67e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf10d71b-96d1-4dbf-a5f4-4bdddd5fcd2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b0972c8-ae0a-4edd-b726-4d1b018a7e55",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe21df2-19f2-4795-8284-4824f345bad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b806edb-fa38-4fe2-9d43-32badef41a84",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6463a91a-c734-429b-8d5d-8f8a47a24736",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d8b4a68-d1df-4b3d-8b3b-ec8292be1473"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "509de54d-b785-4469-bde0-aced5d7ae0c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ae59c21-53b8-4de4-b41f-a89e72cc1611"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "46f7f3e8-dfc5-4755-a29c-81b1835e9c24",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d1aa7471-0551-4413-a169-8a8a3b41586e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd50ef72-e6c4-4814-8235-25e0bc487bf7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3823ab6d-4806-437e-b242-7bc310c0c380"
                    }
                  }
                ]
              },
              {
                "id": "b14f252e-c22c-49c7-817c-a4d52e0791fe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e1b15ca3-558a-437e-a3d8-ccec1e09684c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d01a47-a27d-4846-a986-28f7d0d2fa3a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c2e4497d-15ae-4276-a5b8-531c78345b2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e131220-7df4-45d9-ba6e-baf665d1373a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d559e5fd-f2d4-4968-9296-30cba2b3e857"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "427cbcfc-a522-47eb-b82b-2e0a92a25f78",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d3fd607d-ea43-4eb3-9731-ecb4f603f8ff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d70fcd17-a65f-4db6-9d44-d22997f34719",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07991bc6-91cb-453c-8198-1e05763b274c"
                    }
                  }
                ]
              },
              {
                "id": "ce6dfc27-0190-4b3d-8923-706f4cd44e13",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "61205615-28a4-43e0-8155-71b6d1951a0f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a435599f-24cd-455d-b0ef-efc7c02fa6bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "20de798f-832e-4cb0-86c9-424a51ca1a04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37586266-5573-4e5c-b11c-5862fbca5137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3f9447f-17b4-40bd-849a-560b1948dd9a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9261558b-ad65-4701-a615-f556e4a28309",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6df49c7a-19b4-4a6a-919e-b8226d4e73eb",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5656d593-3856-4459-b0da-c909e4cd6530",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1e0ee0cf-3988-4a7b-92dd-dccc7fd7f7c7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c8c56f6-dfbe-4953-b2e9-d8001dc6f162",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4890074-0a4f-4411-bdd9-4e48997c19e9"
                    }
                  }
                ]
              },
              {
                "id": "0ab7137d-936d-41f6-9ae3-5ce10017d891",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "024ae853-3788-4ef6-90ff-86f01c98dbd4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2ae95562-0058-48ff-8bc1-2b91d962beb8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c9e94ee-c021-4279-8947-66378ba26eaf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7d7eb1e-1b56-4927-965b-4b6295a3a8a5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6070e0b9-d4cd-4bf8-9470-a403bd317ab3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "31af64c7-e453-4f84-9186-1fee9482be7c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "14abb64c-4dd1-4649-bd6c-d77e542a6c76",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "301fa3b5-6dde-45c6-b4ba-98abb8853555"
            }
          }
        ]
      },
      {
        "id": "66554328-c9da-495e-8073-ad37a57ce507",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e2be25e8-791d-4ba1-9f9e-e70600905404",
            "name": "Negative Testing",
            "item": [
              {
                "id": "084dcadb-5a8a-42cc-bc6a-9c366163ee60",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5eb01857-1bed-4e50-8d9a-87bee8a12e81",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2195d0d6-fbed-460a-9c80-b21bb243249e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "858cb735-0afe-4825-b60e-fc1d2f63fff1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f094e1bc-d923-40e3-bf75-51bb7b1c720e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "30d394d3-d0ce-46e0-bc18-8113edae6f82"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "643f8f17-5080-4c8c-9027-47b7c86eff83",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd710c89-9fcb-4b9e-b0d4-a299fbb48274"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9052942-8ebc-43d4-bca3-76c02d22dcdc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0fd9fe61-3e65-4125-9ff0-33eea8a73999"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3ff13d8b-8b87-4965-809a-c83bce9e1b3f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "beefe41d-f5b5-4747-8bd2-86256e379cc3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "505aa0d2-27bb-432f-827a-8f38bc594b89",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "81e33a06-3b45-4f8e-827b-5ddfe1112f65"
            }
          }
        ]
      },
      {
        "id": "904ac95e-4447-429b-98e2-95459f0a5e80",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "82122132-708a-4f34-8997-ab31f6ef21fb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2469a5f0-f575-41c7-a47c-f1ada906e828",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "73f63425-b196-4780-883c-614b98649889",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0307eef-5c6e-491e-ab3e-235f8a8c12a3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38ef93ae-850c-4868-b229-ee72363b7570"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28196e64-ab98-4ae1-96bb-4528dfc84625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed93c657-2736-40d8-aa41-40274c8af2f0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3fd98e79-7598-4635-998a-a6d65f144a2f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d136cd0f-bdef-4784-a6af-2edc419df328"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4cf651d6-e1be-46f7-9c1d-9da37442b7ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19190f83-0bd4-43bb-88fe-bc5c94ec7cf0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1f932ee2-32e1-4056-9cb2-49a93f3babeb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "034550f2-67af-4656-a731-3d57e1e9ceaf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a1e35156-5c6f-4a49-88ab-01f28c387242",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dc04692c-8123-43d4-a4ee-e552adc272d3"
            }
          }
        ]
      },
      {
        "id": "fe211b13-a9e8-4a08-abf4-bda2239b67b3",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "4d1bf739-4849-4f50-979f-14adf26fa0a9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "306a8ada-3f50-4b95-9ccd-9d4530ba994b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "55208a42-710a-4b45-bad9-9256c9faff06",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9ad6dce-d8a6-43e5-8940-d8ea0593e906",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "267a405c-d1b8-46b8-9243-b228f6c32168"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7622055f-d05f-493e-b018-3b6e2213b8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1689b7d2-2c0d-462f-91af-6672199a7623"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "25b072bd-6ca7-468e-97dc-f573365b99d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52034f9c-31b3-4335-91e6-0445428dadda"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f08fae1-6b60-4b68-b1d0-3614af33dc6f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "631908bf-0d16-478e-8da3-d249b8f91172"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c14fe655-e609-4d36-9eab-fd2c35e8276d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c4785caa-5b3b-47c7-ab86-ca063a73bc32"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1eabb16e-e82f-42af-b612-bfc87a4adc2d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fcc41670-96ed-4ed2-bce9-61d8290e0c04"
            }
          }
        ]
      },
      {
        "id": "55ef582a-0d1c-455b-a4ae-38dd974fc2c9",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8d54f607-ef56-4a9a-bd53-358c7b1fb18a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "47020dc7-e50f-4370-8344-d69c18263368",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "cd1900e5-28ee-4b9f-a481-7bbda2bfa5ba",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0f8028c3-db2c-4b4f-b7a0-57756ca06934",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3b04a5fc-42e4-4254-b2d4-765d7ac31be8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 7.169014084507043,
      "responseMin": 3,
      "responseMax": 218,
      "responseSd": 17.859574238646246,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1688518252305,
      "completed": 1688518265566
    },
    "executions": [
      {
        "id": "832074eb-f18e-4d89-bb1d-314181673cc9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b3f6defb-066b-4f97-b00a-a562b4abc33b",
          "httpRequestId": "4b29c933-2027-439e-be30-ce5957c36a9b"
        },
        "item": {
          "id": "832074eb-f18e-4d89-bb1d-314181673cc9",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "faa9c272-fce8-4080-b464-28f0af994813",
          "status": "OK",
          "code": 200,
          "responseTime": 84,
          "responseSize": 0
        }
      },
      {
        "id": "ce4753b1-614a-4031-b53e-c4555fce873e",
        "cursor": {
          "ref": "09d84484-f196-4f1e-ac15-2bb20a7d5e55",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3ea3aebb-c3f5-432c-87f0-a51ef691bb78"
        },
        "item": {
          "id": "ce4753b1-614a-4031-b53e-c4555fce873e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ec6dda54-c00a-4bae-aab8-a944b76e9bcd",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "2d3aba48-93eb-45b3-a773-171710b019c7",
        "cursor": {
          "ref": "b0e6e1ec-7fed-48a1-8f14-e68ebaf17200",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a0a9b6cc-f069-4642-99c5-bcb5153293fb"
        },
        "item": {
          "id": "2d3aba48-93eb-45b3-a773-171710b019c7",
          "name": "did_json"
        },
        "response": {
          "id": "09019598-c7a5-4400-bd4c-7051856ac932",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d3b9a3f-de4b-4fc7-ab43-7a62dc92ff93",
        "cursor": {
          "ref": "6ab282e6-fd1f-40f6-9379-87765f01e70a",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8c1d68d1-a7f5-4500-a7f6-4bc51eba4a9f"
        },
        "item": {
          "id": "2d3b9a3f-de4b-4fc7-ab43-7a62dc92ff93",
          "name": "did:invalid"
        },
        "response": {
          "id": "041fe244-1d3a-413a-b85e-7fb6cc386250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d3b9a3f-de4b-4fc7-ab43-7a62dc92ff93",
        "cursor": {
          "ref": "6ab282e6-fd1f-40f6-9379-87765f01e70a",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8c1d68d1-a7f5-4500-a7f6-4bc51eba4a9f"
        },
        "item": {
          "id": "2d3b9a3f-de4b-4fc7-ab43-7a62dc92ff93",
          "name": "did:invalid"
        },
        "response": {
          "id": "041fe244-1d3a-413a-b85e-7fb6cc386250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97245478-a50d-4a5d-9438-f7ec198f3b54",
        "cursor": {
          "ref": "3e42fa46-9df9-40c5-bdb7-60da603b9eec",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "9800ea11-8f34-49f8-b1cf-7f4d566cd752"
        },
        "item": {
          "id": "97245478-a50d-4a5d-9438-f7ec198f3b54",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "62f89336-63f4-45a9-9d2d-7474c3a0476e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 90,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c86b63ad-e037-472e-a665-34cfbd13fd3d",
        "cursor": {
          "ref": "38356f74-3596-4383-b45d-0f480402c50e",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "959a3864-b6c0-429c-8a8e-070ac2b304c0"
        },
        "item": {
          "id": "c86b63ad-e037-472e-a665-34cfbd13fd3d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a2332a62-0558-4a65-8a5e-decc22cdc877",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6baa0abe-7a7d-4fee-bbd6-feb11acb5d36",
        "cursor": {
          "ref": "916c3106-cb03-41a3-b79d-0d732b4171f1",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a3751d51-c28e-482f-9977-6f51e987c5a5"
        },
        "item": {
          "id": "6baa0abe-7a7d-4fee-bbd6-feb11acb5d36",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "03ddcb34-6640-45ad-947e-b5683be7ec3b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d400a8-f346-4d26-b4f8-f46ef5c163f1",
        "cursor": {
          "ref": "f516ea77-b6c3-48fd-99af-588e83d18be9",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "bf93258c-daeb-4487-9237-4f985b1ed5a0"
        },
        "item": {
          "id": "79d400a8-f346-4d26-b4f8-f46ef5c163f1",
          "name": "identifiers"
        },
        "response": {
          "id": "72aed86b-9cae-462a-9fe3-1d13924d5e6f",
          "status": "OK",
          "code": 200,
          "responseTime": 160,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b7baca3-07e4-45c3-a19c-e12165462806",
        "cursor": {
          "ref": "4f132e46-a61e-47cd-bd8e-2461a9515300",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "37997449-78c6-44f5-a057-c4543a18f5e6"
        },
        "item": {
          "id": "0b7baca3-07e4-45c3-a19c-e12165462806",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ea7b3b09-dae5-4a65-8e8f-61e868479f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f91199a-e6f4-402f-a552-dd1054081744",
        "cursor": {
          "ref": "0b7abdf6-d0f0-4e8d-b3cb-3f1fe153cd36",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "bec92f34-02e6-4438-b70e-94977e6a7130"
        },
        "item": {
          "id": "2f91199a-e6f4-402f-a552-dd1054081744",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d59e3388-2b9e-4218-8426-2cf5974a2b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd2d2cfd-708a-4cc4-8a66-89b872102033",
        "cursor": {
          "ref": "ad65904c-8855-47e1-9506-cc3191eec105",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e824c5c5-bf97-49ad-8662-3b35ef423650"
        },
        "item": {
          "id": "fd2d2cfd-708a-4cc4-8a66-89b872102033",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "01e758ef-930f-4aac-ab4a-4159dbe9cd63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "310a3d57-412f-462f-9f1d-d8bdfc2c91de",
        "cursor": {
          "ref": "0add2f7b-7635-4e7f-9e59-98da945451f5",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "9386dbe6-9939-4002-8605-45788f41dd9b"
        },
        "item": {
          "id": "310a3d57-412f-462f-9f1d-d8bdfc2c91de",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e9205371-416d-41aa-9b4e-634893c557ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb5c509-3ace-4b4b-aeb0-c7c27d9d4051",
        "cursor": {
          "ref": "a8f76d41-3bc5-4d77-862b-1446e4cfdb38",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "43e97bac-fed2-4f0c-b682-7f04ac62b91b"
        },
        "item": {
          "id": "acb5c509-3ace-4b4b-aeb0-c7c27d9d4051",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "bddec630-8fd7-4690-8321-53b674c64aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3286845d-7d92-4e52-9667-9c43c4b3fd4a",
        "cursor": {
          "ref": "7f068a99-5e0e-4b2f-8e34-719c23c78c99",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7521eb71-df2b-4290-a03b-af0c43044c23"
        },
        "item": {
          "id": "3286845d-7d92-4e52-9667-9c43c4b3fd4a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "3de2f043-c9b0-497c-860d-691ec6764f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac07957-f758-4943-b186-4b9d6d19ff8a",
        "cursor": {
          "ref": "5cd9c964-fefc-474a-8396-27af6169cd85",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0b2b00e8-6fc6-4ee1-a1c4-b95c6760905d"
        },
        "item": {
          "id": "fac07957-f758-4943-b186-4b9d6d19ff8a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1cbeae59-ace3-49c5-8fff-48b81add22d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d09e3edd-4592-49ac-a2f3-f19ae8620279",
        "cursor": {
          "ref": "9e41c520-cc1c-4397-bc3d-52a1eccf74b9",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f585145f-e69c-406d-bb99-8e1f07cffbfa"
        },
        "item": {
          "id": "d09e3edd-4592-49ac-a2f3-f19ae8620279",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "9343f708-c850-49c3-b23d-7c44969bb8c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c87403d3-390d-43b4-bd23-4f64cfee59ab",
        "cursor": {
          "ref": "8b5a1563-3b20-418c-b186-b1a4063715f7",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d03e1033-3903-403a-abd0-7e0ab0ea70d2"
        },
        "item": {
          "id": "c87403d3-390d-43b4-bd23-4f64cfee59ab",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "52bb3ea8-56f4-4c62-ac88-43bd50c9dbe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0578a9f4-72bf-4733-8d18-008b73db3f50",
        "cursor": {
          "ref": "26a6299c-550c-4f71-be8c-c4788f0f34c8",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f32f6220-cf6f-442b-9662-0f8945a7e271"
        },
        "item": {
          "id": "0578a9f4-72bf-4733-8d18-008b73db3f50",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "3160b762-0853-4fa2-be7d-5116d9249b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c8e8fd-cc2f-40ae-9e78-4cefcb344a61",
        "cursor": {
          "ref": "ac163c26-c207-43ae-bda6-07b1894ca287",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e5437cf2-8553-4237-8cb9-4650684071ef"
        },
        "item": {
          "id": "f0c8e8fd-cc2f-40ae-9e78-4cefcb344a61",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e7d4222a-7956-47f8-beed-099bf9f17b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c20dae-7920-4d44-948a-4582461c1a16",
        "cursor": {
          "ref": "14cd180e-a076-4a79-b411-ab2b7cda9345",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "497e5fa7-71d6-4a7a-9ea4-f40d3a74b082"
        },
        "item": {
          "id": "10c20dae-7920-4d44-948a-4582461c1a16",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b3f0bf90-63b7-4705-99b9-4741a207cfbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33db736d-b57c-4d83-98c6-a24ac9345b2e",
        "cursor": {
          "ref": "4b8e0670-39fa-4ef6-bbd7-e4f3a569ac9b",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "56fdf1f0-5385-4c33-92a7-c7ee0b4edc97"
        },
        "item": {
          "id": "33db736d-b57c-4d83-98c6-a24ac9345b2e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "2e499fc4-8301-48b2-943c-577f1c7c91ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e67226-05b5-49c1-8d42-f10d17c5b4c8",
        "cursor": {
          "ref": "3cd703a3-04da-494b-a035-e0e556037c8e",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ff13a95c-e469-494b-a59e-1543c6eb818f"
        },
        "item": {
          "id": "15e67226-05b5-49c1-8d42-f10d17c5b4c8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "fb3664ad-e15a-4edf-860e-59c5b1b8cc4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b9db88-9346-4d8f-bee7-8d66ae31a303",
        "cursor": {
          "ref": "7697588a-d1b7-43d0-a9ff-605b4d081023",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "50d02dad-ee96-41b3-92fb-3a10180eda21"
        },
        "item": {
          "id": "a7b9db88-9346-4d8f-bee7-8d66ae31a303",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e255fbe2-a632-404d-a242-cdd6b2937b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c3d9a74-6887-483e-a4bd-77d2f516eff0",
        "cursor": {
          "ref": "7b8a2695-5963-4335-894c-ee858aa52ff6",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c1ff6f6b-0e61-4adf-ab90-32bfecbe5549"
        },
        "item": {
          "id": "1c3d9a74-6887-483e-a4bd-77d2f516eff0",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f030ec6b-4e70-4adb-aa29-e8cfe040ae3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6603177a-3ada-4482-856c-dd7b7373a133",
        "cursor": {
          "ref": "d72f8ac9-c99d-4035-b7d3-264df3c75938",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "377af9e4-6b93-4290-a47f-c1abdfe1325b"
        },
        "item": {
          "id": "6603177a-3ada-4482-856c-dd7b7373a133",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a77aa683-06f3-4bba-bd55-5a2c88747ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b106b5af-090d-4bb6-86fd-225eda5a9fd8",
        "cursor": {
          "ref": "bce30052-828e-4b63-a10a-9187eca86139",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a9cf39c1-9474-46b2-9e3d-2a52039c8b6a"
        },
        "item": {
          "id": "b106b5af-090d-4bb6-86fd-225eda5a9fd8",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "7d086a43-2f61-4aae-9f38-ddfee4c7303b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac4c114-2cbc-42e7-966f-3f9e86e9a1f2",
        "cursor": {
          "ref": "fe6315ba-f733-46ed-8284-8e97b771a2ce",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ea8ff7eb-6fee-43e2-9aac-1073c3f5e7e0"
        },
        "item": {
          "id": "0ac4c114-2cbc-42e7-966f-3f9e86e9a1f2",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "574576bb-23e4-4a12-b6de-2a21a2e56d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba666c72-ec91-4aa2-9c7e-02573b717078",
        "cursor": {
          "ref": "76a4fcb7-9617-4889-a2f3-8eb9cbb3945a",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f743143f-2404-4f22-8883-f74f621941a1"
        },
        "item": {
          "id": "ba666c72-ec91-4aa2-9c7e-02573b717078",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "29e22fcb-95a4-4430-9ef6-0618c798eec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a330b283-18f8-4759-9491-d1612de84ed7",
        "cursor": {
          "ref": "eb61dd80-c004-4b91-94cf-89ede66b53bc",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1743af1f-f2b8-4b06-aeb7-b298d76a705e"
        },
        "item": {
          "id": "a330b283-18f8-4759-9491-d1612de84ed7",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "25b44085-fc3f-45e8-8c43-1c67272f53a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbdf7ad8-1685-4e78-996b-92a6e0c1f5bb",
        "cursor": {
          "ref": "a850e4f2-2978-4681-988d-855f4b4ddd3a",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "4c7e6671-1a4b-40e7-8442-07856bed8fe1"
        },
        "item": {
          "id": "fbdf7ad8-1685-4e78-996b-92a6e0c1f5bb",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8cd32ac8-ff49-473d-8f73-d558bdfc97b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de0211c-aaa2-43dd-9481-b061425ebe99",
        "cursor": {
          "ref": "971e7903-c98d-4936-9b29-33d26b771885",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "171968c8-0fbc-4aca-a400-42e62104feb1"
        },
        "item": {
          "id": "6de0211c-aaa2-43dd-9481-b061425ebe99",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4437c223-b43c-47ca-afa1-5834d16796fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42dedb9-ef50-407e-b936-1d814d723b94",
        "cursor": {
          "ref": "2e8f880c-28d8-4893-b85d-0324d59e6c78",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c30178e5-0114-427d-882c-17894efd8c38"
        },
        "item": {
          "id": "b42dedb9-ef50-407e-b936-1d814d723b94",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "956ce626-8162-4a22-a1a6-28d903cbd0ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57357649-3c79-4c12-a3e3-6127ae344e0f",
        "cursor": {
          "ref": "d09c1851-78ae-4de5-8d3d-1f7997e54376",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "68aba69e-4086-4abf-869c-ff44acc33f94"
        },
        "item": {
          "id": "57357649-3c79-4c12-a3e3-6127ae344e0f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "1433c1fe-7a33-4b35-b743-d9ab5571106f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f02e90-221d-45a9-9616-b9644e8daf78",
        "cursor": {
          "ref": "0bb791d8-2d06-495d-a6c0-0e168fc06c10",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "dd4ae29d-06b9-458b-966b-705e0c788fa0"
        },
        "item": {
          "id": "37f02e90-221d-45a9-9616-b9644e8daf78",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "900d0b7f-0b2b-4620-a845-92734dc45019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd34dcdd-8722-4c71-a7e6-9a67cba87317",
        "cursor": {
          "ref": "fb94ffb0-e592-49c0-955f-4ba2a1b2f1d9",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4e4c783a-7cee-4db5-b9c3-1526891985e2"
        },
        "item": {
          "id": "dd34dcdd-8722-4c71-a7e6-9a67cba87317",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "30a46de6-7924-4c60-bcc8-e12816a259d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a05bcc-1ad2-46c9-921b-2b9b923cd5e3",
        "cursor": {
          "ref": "342c2097-87b1-4644-a240-66b6822961d1",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "3b16490c-9c11-4630-817a-463c4825228e"
        },
        "item": {
          "id": "12a05bcc-1ad2-46c9-921b-2b9b923cd5e3",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f737fffc-1288-47ce-aa20-2036d1774104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e57986a8-8525-40a2-93a2-7951be47a64b",
        "cursor": {
          "ref": "a292ba69-6137-47de-9efe-9331e5916f01",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1af4705a-5c26-497b-b8ff-88af03397fc8"
        },
        "item": {
          "id": "e57986a8-8525-40a2-93a2-7951be47a64b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "fcf40b81-9111-4e93-b25c-8521aed2632f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aff4628-23cc-45ed-96de-5899ddab66c9",
        "cursor": {
          "ref": "38e5a95f-eefc-49fa-ac20-fb0848100f15",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "fa1d6693-b079-4a1b-8639-18d099207c95"
        },
        "item": {
          "id": "4aff4628-23cc-45ed-96de-5899ddab66c9",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9781b637-c76b-4688-915a-63604b0061f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "509d284a-53fb-48f7-bad2-c7c53ca89ca3",
        "cursor": {
          "ref": "0035b093-732f-41e5-a3ee-522a6e860b12",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d075c69b-07c6-43a6-971b-71eeeb856aa0"
        },
        "item": {
          "id": "509d284a-53fb-48f7-bad2-c7c53ca89ca3",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "db146eaa-e554-478a-8440-8894e96d72dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d1c02f-63f2-4325-804c-f69977127c46",
        "cursor": {
          "ref": "0f6b811b-266e-4de9-9681-652cd3826c45",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d3364a1a-0301-4bd7-972a-d912e7e2c460"
        },
        "item": {
          "id": "b2d1c02f-63f2-4325-804c-f69977127c46",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "32529481-913c-4435-ae75-d273d7fd032a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b099f629-0824-46a1-b52e-90b9eae5ed1c",
        "cursor": {
          "ref": "b32f6b0f-e31e-4b4f-967b-a29e382fc770",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0795f17e-ea6c-4f1f-872d-88500e31bbe4"
        },
        "item": {
          "id": "b099f629-0824-46a1-b52e-90b9eae5ed1c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "afab0c0c-db77-4f94-ad0f-c5626bf02030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cea13f4-0def-4af8-948b-35373d96806b",
        "cursor": {
          "ref": "41cef6b2-335b-4044-bc5a-baefb68d3186",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "01921644-712b-4244-8780-fb8f34b4874e"
        },
        "item": {
          "id": "6cea13f4-0def-4af8-948b-35373d96806b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "65dea535-33ec-4584-8d6e-f1b44c957a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e39d9603-d94a-401a-803d-c275ed427c4b",
        "cursor": {
          "ref": "3a6917e8-0db0-4ed4-a17b-943f661520ee",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "361c23a1-ce87-4f1e-9f76-64cc63c758ed"
        },
        "item": {
          "id": "e39d9603-d94a-401a-803d-c275ed427c4b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c3abbe39-64cf-4b86-8c37-03648a123ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11480cd-6764-467e-a435-50a66bf0a1f8",
        "cursor": {
          "ref": "8c38a546-63cd-4240-b775-c346e9a95d8b",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "40ed11ca-0c89-4a5c-8ff0-a04374cf325c"
        },
        "item": {
          "id": "e11480cd-6764-467e-a435-50a66bf0a1f8",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "76ba2918-df29-49fe-950e-0eaa6335a427",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 12,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbdb5a5c-250f-4202-a3e6-b0e80a80a268",
        "cursor": {
          "ref": "c8e5c844-f38d-413c-b17b-0298ae3bf324",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "bafdd55c-d990-4967-b959-489fadb54430"
        },
        "item": {
          "id": "bbdb5a5c-250f-4202-a3e6-b0e80a80a268",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4d67d72a-fbcc-49ad-94cc-3640f0275d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e281e8f-ad53-4e51-b962-c696286a504e",
        "cursor": {
          "ref": "4a7d5550-6f03-4953-9c38-891dfc533abb",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "82fa1b8e-5161-4725-ba1e-30ee8af6ef0d"
        },
        "item": {
          "id": "2e281e8f-ad53-4e51-b962-c696286a504e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "97aa2efa-b02b-443b-8661-9609ef5fddcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be37a1f-775b-41e1-a9bb-d157fcd10eb7",
        "cursor": {
          "ref": "bdf08f24-508b-4c04-87fb-9f60e8ea3fcc",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "4ef1df7a-8063-4212-814b-abfe57a5c1f9"
        },
        "item": {
          "id": "8be37a1f-775b-41e1-a9bb-d157fcd10eb7",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b35b49af-f16e-4dba-849e-7d9d512018a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c49a5a-8ec7-490b-b67d-8617e1b0bdec",
        "cursor": {
          "ref": "ebf26aea-d6fc-4928-836b-acf17869ae9a",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5f6085e1-1df4-4292-a146-c20a05574695"
        },
        "item": {
          "id": "a4c49a5a-8ec7-490b-b67d-8617e1b0bdec",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a0abe6ea-9bae-4b61-9634-549d86197c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566c991e-f856-4608-8e55-4870de192c76",
        "cursor": {
          "ref": "4f90d385-1d6e-4e6d-808b-16ea97fc27c6",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d44a1055-7731-4a9d-80b5-a391b40004ee"
        },
        "item": {
          "id": "566c991e-f856-4608-8e55-4870de192c76",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "3018a4c7-1f4a-4ba7-b558-85b2462ab40e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ee1dc4-2183-467a-8b23-e7035627a08c",
        "cursor": {
          "ref": "7d7b4cc9-e691-4e32-82ac-c5ec71d6fffe",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ca3236ae-46ad-418d-ad5c-dac24e6f4dde"
        },
        "item": {
          "id": "f5ee1dc4-2183-467a-8b23-e7035627a08c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e2e9f8a7-7078-4d05-bd22-0eea09b9fbad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1833cb6-1e60-4f5d-a666-2f56c314380f",
        "cursor": {
          "ref": "c926e81d-49c5-4334-902b-90d555fd00f8",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "53f762a4-1055-48e4-99fa-62626ee2f179"
        },
        "item": {
          "id": "b1833cb6-1e60-4f5d-a666-2f56c314380f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0c8d7544-e909-4ec3-b49a-466dc1656b42",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 14,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230165fd-1b4e-4bca-9a22-b8176c04bd1a",
        "cursor": {
          "ref": "5c6729f9-1d97-4e0f-9d09-111a8af48176",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f9a9b014-66c3-47ca-9b48-405873f6d2e9"
        },
        "item": {
          "id": "230165fd-1b4e-4bca-9a22-b8176c04bd1a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "543d6d85-e37a-4d82-b78f-6d1141867669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22dde4e-4396-4973-b07f-abbde909b29d",
        "cursor": {
          "ref": "5ece04b9-ac53-43da-a0dd-5e890ff31627",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "679d3792-d3db-4806-a4de-81109f7a3450"
        },
        "item": {
          "id": "c22dde4e-4396-4973-b07f-abbde909b29d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ad9aa2ff-4329-4302-be7f-52d697179376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c568c8-76d7-48e2-be37-815a6b630402",
        "cursor": {
          "ref": "3a377702-2ebe-4067-8ae2-baee45ae6eac",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f574e287-dd6b-4230-8bfb-a3472d93b927"
        },
        "item": {
          "id": "84c568c8-76d7-48e2-be37-815a6b630402",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6a801357-92aa-47ad-947d-038fc2a46f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04ab1cf-754b-4b43-a671-08c6e35cf002",
        "cursor": {
          "ref": "9ed7df3b-7213-4926-8e1c-224d72f37000",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "6219dae6-4a1a-4d78-890a-1cdc6dc0a85e"
        },
        "item": {
          "id": "e04ab1cf-754b-4b43-a671-08c6e35cf002",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "fa6ce56f-77c9-44cc-abf3-1316149962ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f00262-56d5-423f-9b11-db605dec364f",
        "cursor": {
          "ref": "ebdf46e8-0966-4337-abc5-0e2d745b7e80",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d4d39277-b831-4ffa-9393-0d7061d19fab"
        },
        "item": {
          "id": "48f00262-56d5-423f-9b11-db605dec364f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f98b9493-502b-455f-bd0f-2afc2e46c306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca9e1d6-f5bc-4026-9b33-909490bed707",
        "cursor": {
          "ref": "9db1c003-7eaf-4c4f-9ed3-11c9e59ba435",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b6d8fbc2-8696-4abc-9fa0-aac95908fd15"
        },
        "item": {
          "id": "bca9e1d6-f5bc-4026-9b33-909490bed707",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "1e22012d-47bf-4b31-91fb-cb676dad62d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044ff042-adbe-4389-a0cf-7bad5c6d18b7",
        "cursor": {
          "ref": "a3b530d2-2761-4591-9b2a-f67dbfccf05b",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2eb11ccd-db52-4d28-9a0b-903f953a10ff"
        },
        "item": {
          "id": "044ff042-adbe-4389-a0cf-7bad5c6d18b7",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d6dc2cb4-82e2-49c5-97b4-47f5ceda6e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8567b98-0c4d-45b7-8261-f5681d3dcc25",
        "cursor": {
          "ref": "f6cf331e-58c5-4c38-94cf-5ce29a94b9d0",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "81905483-97df-4c24-9bdd-0c23204a177b"
        },
        "item": {
          "id": "f8567b98-0c4d-45b7-8261-f5681d3dcc25",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b4e3f709-ac6b-4da4-95c3-bd89aa43e23e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd7c8b7-d7d5-4157-ac68-cc1242f30033",
        "cursor": {
          "ref": "4d4c9e43-826d-4019-a3fc-8e8cf9b126b9",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "0f0b8925-ad99-4982-a31b-13a7856a80d0"
        },
        "item": {
          "id": "8fd7c8b7-d7d5-4157-ac68-cc1242f30033",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b2494ba6-5532-4152-b51a-cbc6a4d98976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a02b550-13d4-4bea-91f2-b0ea339a32b5",
        "cursor": {
          "ref": "8044bbcd-4c61-4d4c-9f24-5452a3737237",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0a587f3f-1c28-4e4a-b8d2-f55b4c605ff2"
        },
        "item": {
          "id": "3a02b550-13d4-4bea-91f2-b0ea339a32b5",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e013da0b-b6ba-488d-962a-c1474641003b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "820f70a9-7407-4d05-8538-b375cd19bf78",
        "cursor": {
          "ref": "aa8307e3-f316-482c-ba8a-475e6ff2b1bc",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b071b8da-216e-4943-b658-6a69ab3d49dc"
        },
        "item": {
          "id": "820f70a9-7407-4d05-8538-b375cd19bf78",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "5bc7d8e1-ab3f-4fbb-8b8a-9e18b6731d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d33ac09-3172-4638-9a2a-34febd12d6db",
        "cursor": {
          "ref": "50425a74-5424-4693-a5b5-3c4c062769cd",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "0628ffbd-cf79-4dfd-9642-0771cd7deeac"
        },
        "item": {
          "id": "2d33ac09-3172-4638-9a2a-34febd12d6db",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6b820472-f706-49ee-b3d1-a7114c847b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d8c5c1b-7c1e-4646-a38c-fce1e818923a",
        "cursor": {
          "ref": "7ec0b721-ff0c-4232-a635-1bbd686a59e1",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8f35945a-9801-459b-9d9f-91ad63d97408"
        },
        "item": {
          "id": "6d8c5c1b-7c1e-4646-a38c-fce1e818923a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "1e4f8b69-4079-4e2c-a262-f6c2bae7d932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e3ca6c-e0cb-4ae5-8c0c-ee162beaace9",
        "cursor": {
          "ref": "ff9b545e-f563-4068-95f1-fe6d9e5dc08c",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "466a2ed0-986e-47bb-b804-03c20ccdcebd"
        },
        "item": {
          "id": "10e3ca6c-e0cb-4ae5-8c0c-ee162beaace9",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e21923ac-0a40-4dab-8aec-ed4dd938ba26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301b3260-02d8-4c74-960d-777acd492047",
        "cursor": {
          "ref": "4caedb52-a4ff-437c-9a12-79b797c5e9d2",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ebda7b4c-b095-46a1-9aad-a8854763b57c"
        },
        "item": {
          "id": "301b3260-02d8-4c74-960d-777acd492047",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "dc1d24b1-386f-4454-befc-b612a4c09bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae8098ab-37b7-4c1f-a034-8c8787b36ab3",
        "cursor": {
          "ref": "f87b8a3d-33a0-447d-86f6-17940936497b",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f23412d7-c72a-4c32-a05e-5d12b7971557"
        },
        "item": {
          "id": "ae8098ab-37b7-4c1f-a034-8c8787b36ab3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "feb0aa97-2c96-49c8-9afd-a3c1d084a9a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e1896a1-8894-48fe-98fa-e91ef420aaad",
        "cursor": {
          "ref": "a89c8301-0776-449b-9384-0d9deb343788",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "18a10ce8-e6eb-444f-8afa-9033a5d30d91"
        },
        "item": {
          "id": "7e1896a1-8894-48fe-98fa-e91ef420aaad",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "df29c647-a7d9-408a-83e3-a1bbcc1970c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c3eaa4-5de1-40f8-908f-3df17d26e523",
        "cursor": {
          "ref": "d9afbef9-86ae-42af-8239-31b9b65b2003",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "bffdec72-7548-4183-8be1-1ab2538c0cbc"
        },
        "item": {
          "id": "94c3eaa4-5de1-40f8-908f-3df17d26e523",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a20e4200-7b39-4bfc-ac7f-6f635554cf07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc710bc-6107-4b87-b295-0ae2a8413f31",
        "cursor": {
          "ref": "b57697aa-2f25-4e04-810e-89fbdba18ef2",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f1556c3f-822f-436f-aeec-b985f123d7c7"
        },
        "item": {
          "id": "7dc710bc-6107-4b87-b295-0ae2a8413f31",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "73a0aae3-7a78-41ea-b9ba-0f47bb536b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1806bb47-3891-434c-9310-12e505691974",
        "cursor": {
          "ref": "a360d2af-b5ce-49f6-81f5-07471f83b714",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6317c2bb-3967-43f0-a1fa-b0838866c0d7"
        },
        "item": {
          "id": "1806bb47-3891-434c-9310-12e505691974",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "8b841a68-795f-49a2-be10-07bbc2ab6338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "554134fd-b1da-4764-aa50-674ffc09738b",
        "cursor": {
          "ref": "b2e5ddb8-24b3-40db-86e4-c84c6d9649b9",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "fa7e1788-ee0b-4140-bb42-c0a1b12d0b15"
        },
        "item": {
          "id": "554134fd-b1da-4764-aa50-674ffc09738b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9c416546-375b-407f-9aee-8e36edfe9846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4802ffa-ec74-416d-8e85-a87923bfe072",
        "cursor": {
          "ref": "32c39e5e-4f9b-4227-912f-aa03198c05ac",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "bfe7470d-f88e-44b6-9d07-fcd6f69d6caf"
        },
        "item": {
          "id": "f4802ffa-ec74-416d-8e85-a87923bfe072",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "4c593c34-dff9-4703-9731-fe46c711d40c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "008cf1a1-9dd4-4910-87c3-68071a38a2e1",
        "cursor": {
          "ref": "93e15915-2176-418e-a650-1e2c8c5a3b3f",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5064652a-82c5-46aa-bb4d-1737c40e1537"
        },
        "item": {
          "id": "008cf1a1-9dd4-4910-87c3-68071a38a2e1",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "1827989c-2c00-4851-847a-7f546f8062d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a64358a-3b4a-4424-964a-f90b511cdf79",
        "cursor": {
          "ref": "4fad445d-b8f8-4cce-b14f-13dbe07df1d2",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "9efdb243-de59-49a1-a4ca-2e62572bdf6f"
        },
        "item": {
          "id": "8a64358a-3b4a-4424-964a-f90b511cdf79",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "bbdcd440-5c1f-44d7-b44b-709bb48e121a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6eea2cf-1ac3-46c9-8f4b-a07deb933681",
        "cursor": {
          "ref": "cc5dc338-b021-468e-bdda-5bcc4e422d10",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "02b6d933-599e-416d-8e0f-42e5f2e656b8"
        },
        "item": {
          "id": "d6eea2cf-1ac3-46c9-8f4b-a07deb933681",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a94c6c02-0191-45b9-95b8-3dd40cda7654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df34a64d-a0c2-48a6-bc45-4e167a3dde76",
        "cursor": {
          "ref": "0d47abfa-d6f8-49e1-aa8e-4572048e884e",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "06af12f9-a69b-4977-97e9-60fee23d2221"
        },
        "item": {
          "id": "df34a64d-a0c2-48a6-bc45-4e167a3dde76",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "3813d89d-c3c5-4127-8dc5-1c83a3d447b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "302a9ba6-4d0a-444a-8470-2d7f8ad0ece9",
        "cursor": {
          "ref": "9f912f5b-9489-4b2a-9e29-e9bd4d506970",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3cd87fcc-b0f5-47ed-aeb0-1d38a8412457"
        },
        "item": {
          "id": "302a9ba6-4d0a-444a-8470-2d7f8ad0ece9",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "1ccbbb41-99c2-4c63-afa4-bb5b7de94d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a87b1e0-e0a3-4413-a154-53da00dbd494",
        "cursor": {
          "ref": "c6817550-6fa3-46bb-8ec5-8c16bed4e390",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "558675ad-20db-4f9b-bc31-a7b0ff550006"
        },
        "item": {
          "id": "0a87b1e0-e0a3-4413-a154-53da00dbd494",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "73e426c1-5488-421e-a9e1-2bbea4857326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92457dee-e7ad-4fae-b892-3c962c213499",
        "cursor": {
          "ref": "84ba4ce9-0806-4c5a-b79e-acddf8756ea9",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "bebdb5f7-f1a9-4617-a125-5c1d665a141b"
        },
        "item": {
          "id": "92457dee-e7ad-4fae-b892-3c962c213499",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "004e97f7-720d-4fe9-a216-fe2691a3b936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c329c147-810b-4ace-9b2b-0d25bb8eb7e6",
        "cursor": {
          "ref": "a5c5ec9e-96cf-407d-86f2-24d0c9cd32a1",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9251b76f-4701-4ae1-8ab3-3d0601ca948b"
        },
        "item": {
          "id": "c329c147-810b-4ace-9b2b-0d25bb8eb7e6",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e8bc239e-8fcf-429d-b4e6-3f572bb34948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c17999d-3667-4965-89b5-382630d16756",
        "cursor": {
          "ref": "8f7d63af-e11e-4909-b71e-5a072aa6bb1f",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "fadc7188-65e5-4a92-ae75-27490d55e2d9"
        },
        "item": {
          "id": "6c17999d-3667-4965-89b5-382630d16756",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "2fc000ba-2388-455d-9726-dbe09010174d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2e3e46-9071-4fd3-982e-ef526b514209",
        "cursor": {
          "ref": "4d215209-8515-4519-8a4d-3c4c8274f913",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c3deea56-3aec-4ede-adc1-2f96a7767d60"
        },
        "item": {
          "id": "6d2e3e46-9071-4fd3-982e-ef526b514209",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "549bb2d2-2e06-49ea-a8f7-9cc35ea048f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4135d4d0-324e-45b7-bfd4-15d22dc2e6fc",
        "cursor": {
          "ref": "360abe33-c459-42c4-b3fb-6586df2f71dc",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c9d80050-476a-4102-a482-bcef6ab1cfa4"
        },
        "item": {
          "id": "4135d4d0-324e-45b7-bfd4-15d22dc2e6fc",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "476d2123-012b-4683-b40f-efbe16e44729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5daad66-d7cd-4ae3-b417-c695e0cb3b5b",
        "cursor": {
          "ref": "eb61b6b9-66d9-45ae-af48-da445645dfa2",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f245ac4f-4295-4f39-89d8-ff17aed9044f"
        },
        "item": {
          "id": "a5daad66-d7cd-4ae3-b417-c695e0cb3b5b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e242ddda-60e7-436d-9ceb-cf698ddbc159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "560e01bb-d5c8-4688-94f4-d46ee4c0cac8",
        "cursor": {
          "ref": "803730ea-66c3-4d2c-b1b4-e615aee88e6f",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "3c67ea7b-345b-4863-9aab-0216255cae42"
        },
        "item": {
          "id": "560e01bb-d5c8-4688-94f4-d46ee4c0cac8",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "07013794-3822-45ef-a705-d7d85196bc6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0efb0095-bba2-441e-8022-1171e248a025",
        "cursor": {
          "ref": "7b12e445-84be-49b7-890b-a71ba223afcf",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6aa09873-c70e-4105-a74d-8a9a7949441b"
        },
        "item": {
          "id": "0efb0095-bba2-441e-8022-1171e248a025",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d758827b-fd22-4789-82aa-e1e79ca308d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e973d08-0118-4302-8b33-254371387872",
        "cursor": {
          "ref": "b5bf4071-c74f-4f13-83d9-c2cc04d49ef6",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "57b11434-a743-4ce7-bdb7-3a18f67ede7b"
        },
        "item": {
          "id": "8e973d08-0118-4302-8b33-254371387872",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "470fe2e8-7518-4715-a549-ead9124d3db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93248156-2441-443a-8679-c7bec0574409",
        "cursor": {
          "ref": "cd7c1275-8998-43e1-811b-b680c26408a9",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "17640a7e-bc88-40dd-a02a-b2f896334d16"
        },
        "item": {
          "id": "93248156-2441-443a-8679-c7bec0574409",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "17e4a05e-ebda-4bc6-8e0f-98264077feea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd92281e-d6b9-42e9-8f5c-f3941a3e219d",
        "cursor": {
          "ref": "1107a23a-33d0-467f-8f6f-a8846e4f0c36",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "eb8d9a13-e06e-4db5-956c-d9d8780f8fd6"
        },
        "item": {
          "id": "fd92281e-d6b9-42e9-8f5c-f3941a3e219d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7c724194-afe9-484b-8df6-aa4fa5a99c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da0bf54a-01fa-4d75-b7e7-91168c582df0",
        "cursor": {
          "ref": "310ca7e0-e600-41ce-bfec-f62f43bfeb65",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "517ff224-50f5-4f99-baf9-6d2ff87a4257"
        },
        "item": {
          "id": "da0bf54a-01fa-4d75-b7e7-91168c582df0",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f0011f87-5f28-4d4c-b450-4d96aa7d2762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0712e33-94c2-4f4f-8dcf-7d9c4a41471b",
        "cursor": {
          "ref": "f9a819dc-2624-4f9a-8e61-0487506da918",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a2ba5f91-6f01-4054-a5c0-73e0460417e2"
        },
        "item": {
          "id": "f0712e33-94c2-4f4f-8dcf-7d9c4a41471b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b2af6b2d-7bdc-4e3b-af96-859e296a4758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46343ef-47e5-431a-b97f-33f35ec09a36",
        "cursor": {
          "ref": "5fc1fda2-6f17-456c-920d-3fb308cd3d69",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "6e0e4799-8efe-4e23-bc76-012227d49559"
        },
        "item": {
          "id": "d46343ef-47e5-431a-b97f-33f35ec09a36",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e8d1b527-4466-4807-ac3d-f4b79036bdb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f09ca0-0262-4878-83b2-57279a95f4f3",
        "cursor": {
          "ref": "89c87bc9-800a-4028-b44d-d4807c050b59",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8f048677-334b-4f36-8b29-97d0daf99d00"
        },
        "item": {
          "id": "60f09ca0-0262-4878-83b2-57279a95f4f3",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "77601cee-5da9-429a-912e-fb69ef51679d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb3d12a3-76f4-416c-942c-b7b8117ebedf",
        "cursor": {
          "ref": "8c223a7b-cba0-426c-8460-409f41cc7d94",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "911325f6-4da9-4347-9e2a-d20d8ae5cfd1"
        },
        "item": {
          "id": "eb3d12a3-76f4-416c-942c-b7b8117ebedf",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e08a91ce-4bc3-418f-b5b8-8a54ba932bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e25c329f-4dd2-47f9-9b62-e405ffc73141",
        "cursor": {
          "ref": "80b04d9b-6839-466c-83f7-18732e5a7c60",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f1bf7b50-df9c-4bd3-8403-e71dca8b784d"
        },
        "item": {
          "id": "e25c329f-4dd2-47f9-9b62-e405ffc73141",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "7be90a94-41d8-4a6c-873a-323b15356c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2016bef1-14bc-4ae6-a94e-09e55bbdbe2c",
        "cursor": {
          "ref": "cfaf990f-ef5f-4537-8137-b4639aa09b1b",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "95ab6012-3411-4613-b2a2-61ab30544e03"
        },
        "item": {
          "id": "2016bef1-14bc-4ae6-a94e-09e55bbdbe2c",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "18afbccd-1531-4229-9803-a56047d322ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02a7731-6b93-49ae-abf1-7b04cf446659",
        "cursor": {
          "ref": "17bfe711-febc-4249-92fe-90f3a682c310",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7c25b909-ba04-466e-a9d2-993882cd6adf"
        },
        "item": {
          "id": "c02a7731-6b93-49ae-abf1-7b04cf446659",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f8e7c701-9f91-41b2-9d17-863586675a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adabf74c-a0eb-4a31-abe0-2335b897c83b",
        "cursor": {
          "ref": "b2ff9427-c45d-47ae-8ed1-53bdb03b59a9",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "fa6b03f1-d959-4f9b-a207-45a3b7dd4d41"
        },
        "item": {
          "id": "adabf74c-a0eb-4a31-abe0-2335b897c83b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d51b453c-a9da-44cb-b6d4-bfaa3d5b035d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9009138f-f52d-4f43-8100-f897357843f7",
        "cursor": {
          "ref": "bf835e24-22af-4889-9278-3e9f49374a6f",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6b8b7d22-9c7d-4a87-ab1d-a726e185725b"
        },
        "item": {
          "id": "9009138f-f52d-4f43-8100-f897357843f7",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9552e450-7541-4996-90a9-45704886fe13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa522aa-15c0-4e8b-9f21-bf6026e45cae",
        "cursor": {
          "ref": "96c3af19-3069-4594-9a11-ff7d605ae486",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "fe00b054-c762-40ab-986f-0868adba877e"
        },
        "item": {
          "id": "7aa522aa-15c0-4e8b-9f21-bf6026e45cae",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "cf919f78-028e-490e-a509-4f787f62f05b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea2ca55-82ad-4b62-955b-c93fd72077a0",
        "cursor": {
          "ref": "fcb67428-194a-4797-899a-ff0ce928ca79",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "4e93e02b-f89c-469e-90ae-01be883d61cc"
        },
        "item": {
          "id": "0ea2ca55-82ad-4b62-955b-c93fd72077a0",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ce408762-d6aa-4290-957b-5da9a1e05782",
          "status": "Created",
          "code": 201,
          "responseTime": 24,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "471c68c2-cd82-4040-a810-05d21d6128e3",
        "cursor": {
          "ref": "0c053d76-c81b-47e4-961c-5af5c672fa38",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4dff91f4-18b1-4cf6-a462-07406d514a40"
        },
        "item": {
          "id": "471c68c2-cd82-4040-a810-05d21d6128e3",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "fed85ba0-4437-4fb5-9f4c-4d543807a9b6",
          "status": "Created",
          "code": 201,
          "responseTime": 53,
          "responseSize": 905
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f189ae1-4f06-4ad0-928e-0623ac93d323",
        "cursor": {
          "ref": "770c2985-863e-4056-9be3-1760848298b1",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "5e55976d-4ccd-4e28-940c-d0ff803edbee"
        },
        "item": {
          "id": "2f189ae1-4f06-4ad0-928e-0623ac93d323",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ef9c20ed-9719-49e5-8485-1defb71a576d",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "790cbd4d-f3c5-4f08-bbd2-31b853c46182",
        "cursor": {
          "ref": "f58b1fa2-7566-408e-bead-f692df176a08",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5ed7971f-a100-4f98-8183-c64237adc447"
        },
        "item": {
          "id": "790cbd4d-f3c5-4f08-bbd2-31b853c46182",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "439d3d33-3d70-416a-85ea-5681b149f630",
          "status": "Created",
          "code": 201,
          "responseTime": 22,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "345b312e-cecc-41da-ae6b-51ad7dfda632",
        "cursor": {
          "ref": "13ab018f-953a-47eb-bfea-78108738be7d",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "054bcb4f-d692-4c07-9cbe-65c9ccc8eda0"
        },
        "item": {
          "id": "345b312e-cecc-41da-ae6b-51ad7dfda632",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d932117a-239a-4108-95f9-370222615193",
          "status": "Created",
          "code": 201,
          "responseTime": 22,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "6960e896-1a7e-4809-b95f-c17edadaa48b",
        "cursor": {
          "ref": "4adf12fa-a71f-49fa-83e6-6cc386cde20a",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "bc864eaa-0f6b-41cf-975e-fd143df76245"
        },
        "item": {
          "id": "6960e896-1a7e-4809-b95f-c17edadaa48b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "bb0ba3c4-01fb-448c-b7a1-63003e5ff667",
          "status": "Created",
          "code": 201,
          "responseTime": 22,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293e0809-782e-425f-8c6c-7af72eec382e",
        "cursor": {
          "ref": "83f8c3c1-7fec-49f7-9ce6-da91c88d8c1b",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8818d9cf-df02-422b-b11c-23c9c4c9d0c1"
        },
        "item": {
          "id": "293e0809-782e-425f-8c6c-7af72eec382e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "594fb012-c120-4702-a1eb-04185a9f1578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aee3b7a-ffa9-4ac7-a686-3716e12588f4",
        "cursor": {
          "ref": "052e5411-543f-4b81-80e4-7c49cb31eeae",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "468cbe2e-37ef-41bd-aea4-b8586e395712"
        },
        "item": {
          "id": "9aee3b7a-ffa9-4ac7-a686-3716e12588f4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a64b8fdc-a60c-4162-affe-802e821d4fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2e4c284-8975-4f87-a6f4-fa30308bca73",
        "cursor": {
          "ref": "f32c812c-807f-45ed-baa7-f2c286a786d8",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "381b4ed6-e4f0-49ba-87d4-b831adad97c4"
        },
        "item": {
          "id": "f2e4c284-8975-4f87-a6f4-fa30308bca73",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "80114a7f-04a2-4c48-b330-288402c33bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a3a32a-b56b-4fa2-af78-d7f5e3c4be4f",
        "cursor": {
          "ref": "edb99f46-e946-46a3-bfd0-9b2045996e12",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "5461a1b5-26b4-4317-8261-c7d3fd49af12"
        },
        "item": {
          "id": "e5a3a32a-b56b-4fa2-af78-d7f5e3c4be4f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f52ad237-a724-42f6-91bc-c3873960105c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d119c310-2eff-4726-bcf5-3f4ab26ec0f6",
        "cursor": {
          "ref": "08ee68b8-0beb-4414-9d30-c8773db7e2cf",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "0eebaf11-4f71-410d-9767-7b581a9733c7"
        },
        "item": {
          "id": "d119c310-2eff-4726-bcf5-3f4ab26ec0f6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d05834fe-7d64-4742-b9a2-ddd2459005a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6401259f-86ed-4cf7-b55b-4cd0b9008492",
        "cursor": {
          "ref": "6ac01b6a-3abe-4ebd-a372-a67a37458e4b",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e47fd3fd-6012-46a7-b86a-a84c4cd46cc1"
        },
        "item": {
          "id": "6401259f-86ed-4cf7-b55b-4cd0b9008492",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "806b399f-225f-4dde-82c3-5451695539ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aabd24b-e916-4a10-9751-65e5b74eafae",
        "cursor": {
          "ref": "c70f3645-69dd-4e6c-a622-812e166f94a6",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b6bfdd59-8353-4a7d-9c1c-a9f62163e551"
        },
        "item": {
          "id": "7aabd24b-e916-4a10-9751-65e5b74eafae",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a2e7920f-4ce5-4a0b-88bc-9c5de216766f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2db6eee-3a0a-4e53-a9b5-8ebaf7c69c6c",
        "cursor": {
          "ref": "ec2824df-282f-4325-ab1b-89b93ffa502e",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "bc41cbe3-c391-4b4d-b38d-168da2a0ae41"
        },
        "item": {
          "id": "c2db6eee-3a0a-4e53-a9b5-8ebaf7c69c6c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7e318908-ed73-4ac2-80ad-e6ccd456e171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3061f5d0-c5d0-4ef7-b222-b0c12a53faa2",
        "cursor": {
          "ref": "fd8ed3aa-945f-47bb-96f2-73d251347175",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "3bdc0aeb-527c-4de7-9630-76f646e3904f"
        },
        "item": {
          "id": "3061f5d0-c5d0-4ef7-b222-b0c12a53faa2",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fdcb8bed-668c-4501-a39f-01be9867a259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1381b2bd-12a8-4cdb-8647-52b782a4420c",
        "cursor": {
          "ref": "96ae4712-4331-4339-9c0f-58694bee71d6",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "36aad747-8db2-4cd9-9aeb-737f73a057d1"
        },
        "item": {
          "id": "1381b2bd-12a8-4cdb-8647-52b782a4420c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "edac9b36-91b2-4b6c-8bfc-2555d2c8bf88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ff9f55-d7b0-4b6b-8cff-5e7bd0cf5dfb",
        "cursor": {
          "ref": "ad5a61c6-d40f-4bcd-aa93-c7d24e555ee8",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a4a12986-fc04-4030-b872-c7ac82f2d7e4"
        },
        "item": {
          "id": "a8ff9f55-d7b0-4b6b-8cff-5e7bd0cf5dfb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "563b196b-c794-4bb8-a4ce-434ca3720733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49dbac2e-78f6-4daa-8d3d-78b14eac9eaf",
        "cursor": {
          "ref": "99a2abda-07e3-465d-8ac4-e653f0c66aef",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "98d93946-9fe0-4b49-974a-b65ff37d4e72"
        },
        "item": {
          "id": "49dbac2e-78f6-4daa-8d3d-78b14eac9eaf",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7a05d75c-1c10-4339-8479-799c9d187ff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f9e0df-3165-47b1-8725-8166941905bb",
        "cursor": {
          "ref": "1c790167-dbf9-4aca-81fd-d129f8099ecb",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2abcb97d-43fc-47a5-91ec-e720dfa46217"
        },
        "item": {
          "id": "f8f9e0df-3165-47b1-8725-8166941905bb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "fee2be8d-8417-4396-aff0-673624f9a9ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d25926a-3a7d-4ca5-a899-c9c7b62227e7",
        "cursor": {
          "ref": "5aa09c73-912a-4580-928a-2c1074251fbc",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ce2e32be-a7e2-4d4f-97b4-3fc59e1f54a4"
        },
        "item": {
          "id": "9d25926a-3a7d-4ca5-a899-c9c7b62227e7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ec710a60-7244-48ff-b190-db2ce3c6e5e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f98e1cb-6bae-48b5-aedd-6f4a3466f1f6",
        "cursor": {
          "ref": "39be9a81-3c4c-4f90-83fe-38d1a960a731",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "3673b357-1169-4c86-abb3-07e2dd131769"
        },
        "item": {
          "id": "3f98e1cb-6bae-48b5-aedd-6f4a3466f1f6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "db66a1f1-341e-4445-b002-dd35afdf254f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65874dc-75d1-4565-9c04-b57429c5e6d0",
        "cursor": {
          "ref": "7b51d1a5-0490-4945-bcb8-70ef62235816",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "3787d7d8-8bb0-457f-80fb-e57b4482011f"
        },
        "item": {
          "id": "f65874dc-75d1-4565-9c04-b57429c5e6d0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6921b19e-c9dc-4214-a8f1-30b5fb295498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce6c2bd7-4330-4b81-97bb-580390c9d58c",
        "cursor": {
          "ref": "46750227-383c-4716-abae-9f8d5da695f4",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "31cba401-1cac-42e2-ad01-5efe965a39a1"
        },
        "item": {
          "id": "ce6c2bd7-4330-4b81-97bb-580390c9d58c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "de3c04d0-858c-4fa7-87f5-6050e810530d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f9bc9c-5b0e-4428-9d87-9f0d71eb091c",
        "cursor": {
          "ref": "487031ee-cf6c-4d45-8949-abeeb093ec7c",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "48e53487-7ddc-4eb4-aae5-5b049e19d354"
        },
        "item": {
          "id": "a4f9bc9c-5b0e-4428-9d87-9f0d71eb091c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6c96d0d0-9d3c-48e5-859e-af5306e1ab09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "859fa698-dfef-4883-a952-3da4f3ed2434",
        "cursor": {
          "ref": "a4e6cbae-1b03-4081-889d-d5cdb4d1daeb",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ff3dd710-051a-40fc-950d-7e8d543007b5"
        },
        "item": {
          "id": "859fa698-dfef-4883-a952-3da4f3ed2434",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "24bef18a-1f57-4165-9408-e0462d419219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e864a3e-0b93-4856-8883-0a9bb4ca852a",
        "cursor": {
          "ref": "2921675e-ab95-4e8d-8ce7-d4ba9bd03887",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "fb092a4f-b3c5-468d-934f-05accc74370e"
        },
        "item": {
          "id": "9e864a3e-0b93-4856-8883-0a9bb4ca852a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e5a34cfb-226c-47e2-8ce9-a3d3fb2bb430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ad2d02-7007-474d-9eb9-349e6aa248c4",
        "cursor": {
          "ref": "6afac658-6a81-49f5-8af6-5d5d6f749c8a",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "bb236f57-f591-48c3-b320-2fd3122ebf12"
        },
        "item": {
          "id": "38ad2d02-7007-474d-9eb9-349e6aa248c4",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "323c815a-a308-43d4-b317-c09787088463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd5633cc-e05d-4999-b194-ad804d1c4da7",
        "cursor": {
          "ref": "431bf81f-4193-416f-9a9d-18c4d59fe94c",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "96a6212f-69d1-46dd-9470-adb589450f4d"
        },
        "item": {
          "id": "bd5633cc-e05d-4999-b194-ad804d1c4da7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "70f0add6-f63b-4fba-a5de-813cacb8b13b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c020293-f0b5-4372-a601-59daf5814b5d",
        "cursor": {
          "ref": "3c6a4e6b-e116-4290-8b26-2a7740b25825",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3c1f359f-94f1-495a-a6f9-2ceafc9bab3a"
        },
        "item": {
          "id": "3c020293-f0b5-4372-a601-59daf5814b5d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7214a9da-1902-47ed-a389-26d6bb3c371d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5348f0b-ec8f-489d-a297-46393d3c4342",
        "cursor": {
          "ref": "b96112e3-686c-4bee-9d3a-e3f134354890",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "00605914-f6fa-40c4-beaf-9ec7e400c157"
        },
        "item": {
          "id": "f5348f0b-ec8f-489d-a297-46393d3c4342",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d8ab5fbc-4cb3-4ccf-8a22-6b53de7ee5d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a7a14c0-8539-4c75-884e-0d1aa48172f0",
        "cursor": {
          "ref": "fac9c9f5-6fc1-4c59-82f9-e1a9c48d5ef1",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9e260d70-3889-4a5e-b52a-2dd2dfdfb088"
        },
        "item": {
          "id": "2a7a14c0-8539-4c75-884e-0d1aa48172f0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a268284b-eb56-4540-8847-7b0fe81f7f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e08efa-8da6-4f32-b562-0ba73892274a",
        "cursor": {
          "ref": "8b17a0d7-7194-4d2d-9b8c-d49f8a74032e",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b399bed1-69ba-4559-8da3-4b8931ebf1c1"
        },
        "item": {
          "id": "58e08efa-8da6-4f32-b562-0ba73892274a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d73174a8-b8ed-471f-807c-262effff2f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4750174a-e02d-4893-a388-8be18bb19acc",
        "cursor": {
          "ref": "4cb089d8-1270-4a87-95d0-e9d074cac46e",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "bad2603a-9eff-420a-8860-2d6c40aa55e6"
        },
        "item": {
          "id": "4750174a-e02d-4893-a388-8be18bb19acc",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "cb8456a3-cb11-48dc-934b-4746662d7186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f414d1-e82b-438b-9477-f13902c642de",
        "cursor": {
          "ref": "43dae53c-b9d7-4aca-aa12-599e152b008b",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "7d26c4f7-2499-46f4-b3e4-d1ba23924cd2"
        },
        "item": {
          "id": "25f414d1-e82b-438b-9477-f13902c642de",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e21e9eba-fd57-4cb6-9391-a409e38fb3b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4122df82-9f8d-43f6-bc94-0068cba02615",
        "cursor": {
          "ref": "a975e866-7ecd-4fe4-9b39-fedce6f15a12",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "41f8c51b-c5c6-431d-a6fd-d33761064889"
        },
        "item": {
          "id": "4122df82-9f8d-43f6-bc94-0068cba02615",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "21845dec-78b8-481a-a332-f551d8710a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd65175c-fe74-4514-bb97-7cbd24a4b259",
        "cursor": {
          "ref": "b1fdfb2a-aee9-47a4-880b-3160b2d4bb91",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0ba2d5f4-3401-4bd8-bf87-4df1cf5fab9c"
        },
        "item": {
          "id": "dd65175c-fe74-4514-bb97-7cbd24a4b259",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7069215e-4a9d-4472-bbe0-935bafbc5dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035892a7-b360-46a2-9227-57843daa6efa",
        "cursor": {
          "ref": "06d6db58-6ec4-403b-abb7-2d51b767965c",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e927725f-1252-4372-aae7-5dc26c8a3ab2"
        },
        "item": {
          "id": "035892a7-b360-46a2-9227-57843daa6efa",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c7fee307-fee3-43ea-9986-70ddfd963016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68cafc00-77dc-4588-af5e-de14213a24d5",
        "cursor": {
          "ref": "55600ba1-18c7-4613-8b02-d7887a276097",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "fdbb4f9c-8851-442a-896f-27560d9b1a26"
        },
        "item": {
          "id": "68cafc00-77dc-4588-af5e-de14213a24d5",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "3e48dbf5-91a7-415c-bc80-29248357719b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff11ccf-7877-48cf-88d9-1a0fb3da535a",
        "cursor": {
          "ref": "dc0665bb-bc7b-4d71-9435-19c52ba58df5",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1dd2e171-b268-417a-907a-c092720ef44c"
        },
        "item": {
          "id": "5ff11ccf-7877-48cf-88d9-1a0fb3da535a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ba380bc6-97e1-46c8-8334-098599ba4c97",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a6e414-88c1-4686-ab21-6ea9771c38e6",
        "cursor": {
          "ref": "a46e8d52-1335-4362-98a7-4090f3ccaf37",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "fae4abff-2f61-47be-8ce9-4cdcad54418c"
        },
        "item": {
          "id": "27a6e414-88c1-4686-ab21-6ea9771c38e6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "feebe4af-5709-40bf-bba0-e8b38c8dbe62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4755dd72-df8a-4c3e-980f-e6bf6034da1b",
        "cursor": {
          "ref": "c7d9ac1d-cda1-4565-8150-98cce381e48c",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "2bb04084-55a7-412e-9d24-dd4c0d145f17"
        },
        "item": {
          "id": "4755dd72-df8a-4c3e-980f-e6bf6034da1b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ca4b1833-0c4a-4be7-8d81-905a55758e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6845b3c6-d064-4c4c-9ce0-996fdab5f9fc",
        "cursor": {
          "ref": "59baf8bd-01db-404f-8096-b1a42d6d4acf",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "2df637a0-f82b-46e8-9aa0-1728727c4b90"
        },
        "item": {
          "id": "6845b3c6-d064-4c4c-9ce0-996fdab5f9fc",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7f65c389-04a9-4aa9-a74e-d8c614382d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb99a790-2917-4f97-b096-b9bf2b9aac44",
        "cursor": {
          "ref": "5b2bf058-79fb-423c-88a9-d2717db473e0",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "edaa2e20-ddbd-4364-9228-738e6859453b"
        },
        "item": {
          "id": "bb99a790-2917-4f97-b096-b9bf2b9aac44",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2042995f-8efb-4927-b48e-48ab504f03f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8edc1d69-4029-4b1d-938e-591e41b49338",
        "cursor": {
          "ref": "a197e86b-f0aa-4bb5-acde-f16a5e2cec50",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "8d813909-5b7f-454c-b8c4-43d66a4793f5"
        },
        "item": {
          "id": "8edc1d69-4029-4b1d-938e-591e41b49338",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3c87773d-4db8-40f2-b8a7-d42e2fb3bdaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5df0eb-5a03-4d25-b998-c370a1b76f33",
        "cursor": {
          "ref": "5a695997-c653-4ec9-aea5-da9f139266bd",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7cff2772-d8f2-4fb0-ad46-12ffedd40266"
        },
        "item": {
          "id": "ae5df0eb-5a03-4d25-b998-c370a1b76f33",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6d603640-e6d3-47c2-ad52-7eeac72166a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1411df6e-f87b-4384-a7c3-2fc9e952bde8",
        "cursor": {
          "ref": "958b7e24-0280-45de-9295-ddd475082eef",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "12b0edd5-bee1-4123-ba13-5db194e5bbbd"
        },
        "item": {
          "id": "1411df6e-f87b-4384-a7c3-2fc9e952bde8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b3034caf-a99c-455b-a05f-177e190d9fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05cc6ab8-9744-4636-a516-ef549f4385eb",
        "cursor": {
          "ref": "2d621ced-fd08-43fe-abb5-d53dbe8890d8",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "81ac49cf-d3ee-4188-8123-8074ae851d03"
        },
        "item": {
          "id": "05cc6ab8-9744-4636-a516-ef549f4385eb",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "fbd4ca70-5620-4451-8b92-2addd79c73eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d934d014-0d2c-4a06-924f-a9e0969dfe66",
        "cursor": {
          "ref": "0f147b5b-645d-472b-9dd4-c09329cc0e25",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a1577d4e-cc39-485c-8ca4-d6089345d978"
        },
        "item": {
          "id": "d934d014-0d2c-4a06-924f-a9e0969dfe66",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c1e664b3-e55b-4119-84f0-2a5b7becc5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "858add9b-76af-464c-b691-aa6cee42093d",
        "cursor": {
          "ref": "88c25464-f351-4496-bfa1-ff8d3a0bc341",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d21cc438-93ae-4775-974b-f907df3c7576"
        },
        "item": {
          "id": "858add9b-76af-464c-b691-aa6cee42093d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7c2273a2-b596-4665-9277-92fa0cb86d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6679e7-00bb-4dd3-9ca7-2331626341de",
        "cursor": {
          "ref": "978af811-56ca-45d0-9d7b-e9ce15e23e80",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a3efd865-1e30-4e0b-b83a-831faa446c0e"
        },
        "item": {
          "id": "de6679e7-00bb-4dd3-9ca7-2331626341de",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "98e9648d-4f34-4115-85e6-8d787efd0bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f26364a2-ef51-4455-8606-d76aac8c611a",
        "cursor": {
          "ref": "96dba852-90af-4153-a7a6-6a8b7460a758",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "3c8b853a-0863-4376-a44f-9e023e6613e8"
        },
        "item": {
          "id": "f26364a2-ef51-4455-8606-d76aac8c611a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bb293049-4679-46e7-98d6-8ce01d57d197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e6b22d-9172-4ab7-a470-a3e7961d0a14",
        "cursor": {
          "ref": "a2790f37-ebcd-4621-bac7-f5efba9ca8d1",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "0a8127fc-5775-4512-b101-e5268d8f3979"
        },
        "item": {
          "id": "f0e6b22d-9172-4ab7-a470-a3e7961d0a14",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c728eb54-c0ab-4c26-bd41-0c7a39b4b927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5437ca02-fec9-40b5-a6f8-705dfe276e62",
        "cursor": {
          "ref": "d09ed6a1-c532-4bc3-8a9f-c0322afb269c",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f39081a7-246b-411e-af93-c181583cb5d8"
        },
        "item": {
          "id": "5437ca02-fec9-40b5-a6f8-705dfe276e62",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7d2a70a9-04ea-4e9e-a427-0260b8d97126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "839b188b-6587-4c3e-b304-487246afbfb3",
        "cursor": {
          "ref": "88a3846c-879b-4760-aba7-c383f2624a90",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "69a26422-d9d0-446e-b308-872c154eb11a"
        },
        "item": {
          "id": "839b188b-6587-4c3e-b304-487246afbfb3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "be9c75f1-6978-49f4-86d0-c6381dba88f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031df365-5f70-4023-b73c-c79f84b8349b",
        "cursor": {
          "ref": "51a4c553-6e51-430f-87a6-06443aa56ebe",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d426b88c-3a66-4fd8-bcbc-07fe6ca23a26"
        },
        "item": {
          "id": "031df365-5f70-4023-b73c-c79f84b8349b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5f3c7e14-5ad8-44e1-920b-280aeabfbe6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b87951b-c888-4e2c-9f31-64666b21b886",
        "cursor": {
          "ref": "137c7998-553a-4e4e-81ea-20ce41f88f47",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "9b60b25c-bd6b-41ec-b8ff-bbbf765e0f0a"
        },
        "item": {
          "id": "7b87951b-c888-4e2c-9f31-64666b21b886",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "cde27bc0-27be-4a45-96d7-839ecdbc6e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73fadd5-bbb0-403c-9e0f-7d6f99fbdb80",
        "cursor": {
          "ref": "373baf0e-0d1e-44be-9c50-41eb94f4ee89",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3a70734e-30d9-440a-8381-4bae7f169d66"
        },
        "item": {
          "id": "f73fadd5-bbb0-403c-9e0f-7d6f99fbdb80",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "346c79bf-cf2e-4ad3-8068-0b80c3b1b1a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b39d8b7-f2e2-42ca-8e05-fe4dbf2b74fb",
        "cursor": {
          "ref": "bda85206-23bd-4e2e-8d64-f2b25c5ce1e1",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6bb8d28b-73ef-4459-9de2-351a46dbd8b1"
        },
        "item": {
          "id": "2b39d8b7-f2e2-42ca-8e05-fe4dbf2b74fb",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "13ec3697-94a9-4fdb-ae4d-d293136c86bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3f04452-67e3-4daa-b3f5-a7a053d79dff",
        "cursor": {
          "ref": "829213db-fc86-4dea-97f5-608a04e07998",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "aa2cada9-58e6-48ce-8ad7-94b9b38997fe"
        },
        "item": {
          "id": "e3f04452-67e3-4daa-b3f5-a7a053d79dff",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2bea1867-6d0c-48a5-8974-278d33227bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530a75db-16f3-430f-a9c8-76d30b624767",
        "cursor": {
          "ref": "acdd8e92-c5cf-4624-b1c6-abfc988c5c09",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e4aa9258-5a56-4cbd-880d-c3bece64d98b"
        },
        "item": {
          "id": "530a75db-16f3-430f-a9c8-76d30b624767",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "65e426c5-950b-41c7-9e2b-46cf4f216377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9160df9e-2e12-4757-a8f0-4c724722cc16",
        "cursor": {
          "ref": "7810ca45-9887-4450-8ae9-1916ebd421c8",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "5df5c978-70ef-4f3e-89b7-884bd25d7858"
        },
        "item": {
          "id": "9160df9e-2e12-4757-a8f0-4c724722cc16",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "fcee0a7a-f49c-4ce8-9273-fbc452ae62d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4114a2-ec7f-4c1b-a20b-2fcfdbc947c0",
        "cursor": {
          "ref": "dd3995ea-28ca-41eb-bced-3e84eb93ba3f",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "79827210-9594-47e0-aa50-2a847d2dc034"
        },
        "item": {
          "id": "cd4114a2-ec7f-4c1b-a20b-2fcfdbc947c0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e75b0cb1-06e1-4c2e-ba90-de44122d5b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3044b95b-551d-406d-9e2c-bada17952f5b",
        "cursor": {
          "ref": "e735ed02-235b-4b34-9fa0-2d1247c13a04",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f70f4bf6-1517-4170-808d-eb284060fa71"
        },
        "item": {
          "id": "3044b95b-551d-406d-9e2c-bada17952f5b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8a67949a-1144-400b-b9a0-0594fc044f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc7eeaeb-ced9-41b9-a790-55ab1944bc51",
        "cursor": {
          "ref": "099df94b-832d-4f49-b2cc-07e4e142990f",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "bf3530af-e27b-403a-b41a-765504f32244"
        },
        "item": {
          "id": "dc7eeaeb-ced9-41b9-a790-55ab1944bc51",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b01f30cb-7aaf-4f49-a97a-2a45dd2868e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e7d83a6-9c47-4cb0-96a1-1b959778f1ad",
        "cursor": {
          "ref": "749c01d7-850f-4be6-a09d-902b1d4ac29f",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "baae8b93-e410-4e77-83a3-66c9f426dcb0"
        },
        "item": {
          "id": "3e7d83a6-9c47-4cb0-96a1-1b959778f1ad",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e82ea0ee-f9c1-4a16-94ec-839261cd9cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb3f15e-d317-4467-9dba-094cce82f09d",
        "cursor": {
          "ref": "06fe2149-18eb-4768-b32b-a5e4b75c9939",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a5c4c150-7d4a-48a8-8a1c-405b2bca2b30"
        },
        "item": {
          "id": "6eb3f15e-d317-4467-9dba-094cce82f09d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b467e5a8-e402-407b-94b9-6dfcff8d2df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a9db9da-274c-48c1-a90e-d95f4947e255",
        "cursor": {
          "ref": "a16e1d0c-cd2b-43b4-b2e1-4ea6511839fa",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "fee95216-4a0a-49dd-9ace-f24b9bc07e66"
        },
        "item": {
          "id": "2a9db9da-274c-48c1-a90e-d95f4947e255",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c30c5e80-f1e0-48f7-8460-2e6b1a3952c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecbc13de-12ea-4f41-909f-af8264bb0fab",
        "cursor": {
          "ref": "4fe7ac6f-5e56-4e4f-b501-7909b93bb698",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "60fd7ea7-a227-40cd-8c7f-2f349d32828a"
        },
        "item": {
          "id": "ecbc13de-12ea-4f41-909f-af8264bb0fab",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d86684f3-a99a-4198-ba8b-b43934212b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "242decdb-b340-4477-bdd9-80e1078ce88c",
        "cursor": {
          "ref": "fd29a1e7-ede7-43a9-94c9-342190026dde",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "2f61306a-51a4-4e0a-ab0b-3d1230742418"
        },
        "item": {
          "id": "242decdb-b340-4477-bdd9-80e1078ce88c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4fc35713-78cb-49c6-a98b-b2a94c1bac48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332e6d17-c4a0-4353-af1f-298082563550",
        "cursor": {
          "ref": "f92caa11-efa9-4d10-a046-4dd6be3471f2",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "549de0f2-fdb7-4228-a078-2aae589f8440"
        },
        "item": {
          "id": "332e6d17-c4a0-4353-af1f-298082563550",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3cc5b9ce-8cfd-41f3-b638-4c45d8999a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91feaa8c-1ea6-421a-ac30-5ca38151ec2a",
        "cursor": {
          "ref": "9e46009a-9231-4621-9ae9-32748fb96549",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e7a7bb6e-eb9e-462b-84b4-b7e5220eb4cc"
        },
        "item": {
          "id": "91feaa8c-1ea6-421a-ac30-5ca38151ec2a",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "2aab4a22-e1a8-4cb4-83fe-974c7dde8d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ece64e-0bae-4a10-8470-048321e531c4",
        "cursor": {
          "ref": "76bdadbf-8008-4049-894a-3fc4f8cd3821",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "67453888-f829-462d-abcc-8ba6a9461462"
        },
        "item": {
          "id": "b9ece64e-0bae-4a10-8470-048321e531c4",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "a5d26e89-df30-4abe-9635-3327e061379e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e505cff6-1a6b-4957-84da-dd4a3599a7a4",
        "cursor": {
          "ref": "6ad519fd-33b3-479b-836f-5f5593f5faf8",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e9f6fd42-954a-4a79-adde-5c6b6c5a9427"
        },
        "item": {
          "id": "e505cff6-1a6b-4957-84da-dd4a3599a7a4",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "b1482a0e-af90-4476-bc81-e12e17ba136f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c65201-b1c1-4fef-b943-8ae11b9e4ef9",
        "cursor": {
          "ref": "89076d23-2fc7-4610-b06c-3785f0dfaefd",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6edebc2f-8bea-4f96-8c5a-4c3344270568"
        },
        "item": {
          "id": "58c65201-b1c1-4fef-b943-8ae11b9e4ef9",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "181c6345-18b8-4ed6-b8a1-2761c54a6255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abeb8af3-cd6e-45f3-8bf7-cd6138e4643d",
        "cursor": {
          "ref": "f288e0e0-ea8d-4113-956d-b0372daa1cae",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "850c8260-7522-462f-860d-4c4dcd29e865"
        },
        "item": {
          "id": "abeb8af3-cd6e-45f3-8bf7-cd6138e4643d",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "8d80cdb4-90d1-4d63-9fd7-e1a49f03d284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db721e76-d53f-4631-9cd2-8b71c5a9d6dc",
        "cursor": {
          "ref": "6139db1a-3ad5-46c1-aaf6-6b89b93799c6",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "3bafb950-e97c-48db-a32b-79e1fa083611"
        },
        "item": {
          "id": "db721e76-d53f-4631-9cd2-8b71c5a9d6dc",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "140364d1-f380-43c8-bad7-057b6a34fd8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29fb57b7-2370-4dfd-8c64-563a8bfcf90e",
        "cursor": {
          "ref": "6b6ad153-e358-49c5-866f-84370a949f91",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c8cedf6a-4b97-4815-9e72-219c6aee4cd8"
        },
        "item": {
          "id": "29fb57b7-2370-4dfd-8c64-563a8bfcf90e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1c94be49-d944-47ff-8871-235fa53921e1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b868dba0-b32a-4e95-913a-09d4e0750757",
        "cursor": {
          "ref": "7445eedf-2650-4a5e-9a1a-4052fe156d6f",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e8b91944-58b1-4e05-8ee7-59fb99e4e7ab"
        },
        "item": {
          "id": "b868dba0-b32a-4e95-913a-09d4e0750757",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8fcbbf70-8e9d-43bf-8950-025fce6e076d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b338873f-243e-4255-b53e-f31611de7c49",
        "cursor": {
          "ref": "952c93c2-7008-42a3-ab26-7083c17aa94b",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b64e016e-1489-45df-86d7-fe65462c79da"
        },
        "item": {
          "id": "b338873f-243e-4255-b53e-f31611de7c49",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d19acaf2-bc7f-4b8b-b0c5-2113c73070d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da2465c-9ed2-4569-8703-7d4de16316d6",
        "cursor": {
          "ref": "28a3fe9b-6ac6-4c60-9cbe-6d2a6cf11bb7",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "cd0d59fa-7693-4b4a-812f-8ebed9682a40"
        },
        "item": {
          "id": "0da2465c-9ed2-4569-8703-7d4de16316d6",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "caad4ca5-cfd1-477e-966c-22152416ab34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1bf73b8-43fa-4734-bf35-f6bd2383217f",
        "cursor": {
          "ref": "d6f78a45-aa49-45d6-a03b-73e7a73baca7",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0d1ba77b-2a9e-4ca6-9f21-ebb62db7a6fa"
        },
        "item": {
          "id": "f1bf73b8-43fa-4734-bf35-f6bd2383217f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8ee6bf5e-c6cb-4977-a813-d8950dfa016f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f6cd810-777d-45e0-8798-ab7778693340",
        "cursor": {
          "ref": "9399d6f8-1e37-4748-9130-ec63ab3af0a0",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4db28ab7-ff31-4e1c-b262-83ce46a8f6f0"
        },
        "item": {
          "id": "2f6cd810-777d-45e0-8798-ab7778693340",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "e985e625-9975-4520-85fc-b839f7c27f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec537630-67c1-4ece-a1e1-22f9c023506d",
        "cursor": {
          "ref": "f80d1dd6-3cf9-4758-8089-f266624f209a",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "9131aa2a-5472-47fb-a4d6-53db63605592"
        },
        "item": {
          "id": "ec537630-67c1-4ece-a1e1-22f9c023506d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "36d7f20b-1dce-4a1b-a83d-2c4ce40724ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb7c64b3-6088-4780-90c2-bd6000a292da",
        "cursor": {
          "ref": "bae3f05e-b047-4f28-9a6a-226883947380",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "3a775500-2fe6-4144-afd8-44e8afccfbd4"
        },
        "item": {
          "id": "cb7c64b3-6088-4780-90c2-bd6000a292da",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "5d0a4fe4-daf4-4a95-b9f2-2bbe1f4cc076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38bcbb0b-84ec-459d-be2f-edc2ee5654a7",
        "cursor": {
          "ref": "4f76632f-f577-4806-a188-a039aad311e3",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c95105a2-f9a9-491e-9a76-91789214f957"
        },
        "item": {
          "id": "38bcbb0b-84ec-459d-be2f-edc2ee5654a7",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "26dd501b-9259-4cf4-95f3-1e1d061624e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a07e398-5149-4aae-8804-788fedd20c6a",
        "cursor": {
          "ref": "ba9a58c7-1585-417a-b654-ad2c6b71c416",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f5501670-6b50-403f-b96c-e3c4c379ef32"
        },
        "item": {
          "id": "4a07e398-5149-4aae-8804-788fedd20c6a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "5834d64e-53c5-4fab-99fd-66bf31d2685c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acdfec2b-4989-4d3c-b1ca-582c309c48b1",
        "cursor": {
          "ref": "a8cac32e-cc35-46e5-8be1-73d9213e7a24",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "5aa153f1-f019-46e7-ad35-a08f34dc5e13"
        },
        "item": {
          "id": "acdfec2b-4989-4d3c-b1ca-582c309c48b1",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "09e67ea7-95a3-4bc7-b058-20cf760069ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b778e8cb-0044-4e64-af87-a0192ec9b382",
        "cursor": {
          "ref": "1108b316-e49b-48cd-8d63-f09af302e5fd",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e4859e9b-193a-4b2b-83e2-cc3088b56bb8"
        },
        "item": {
          "id": "b778e8cb-0044-4e64-af87-a0192ec9b382",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "4c5b85ef-5d8b-479d-8d8e-4b3f4ebf92b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a3b412a-0ea3-49cb-ba50-fc34e4edfa71",
        "cursor": {
          "ref": "fa342070-a189-41bc-9179-861ad88cecd6",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "00cc4b59-c3ad-44aa-90ed-ebfb40dced02"
        },
        "item": {
          "id": "8a3b412a-0ea3-49cb-ba50-fc34e4edfa71",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "6e6a2fc8-87b2-43f1-b94c-954ba619032b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e282a070-1782-46a0-9e93-c1a888138793",
        "cursor": {
          "ref": "45fd673c-894b-4eae-b454-b2cef0215ac9",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b631ab4f-40f8-4494-9d6f-1f44c9a384ba"
        },
        "item": {
          "id": "e282a070-1782-46a0-9e93-c1a888138793",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d5949cf4-43c7-490c-9304-3b039609f66d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd63596-ec34-4f13-8035-8a4548d1acc4",
        "cursor": {
          "ref": "e603e46f-54fd-4fee-8062-8361af2e9e65",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "20071276-4248-48f6-a027-fc504cd6622f"
        },
        "item": {
          "id": "2bd63596-ec34-4f13-8035-8a4548d1acc4",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "286f73cd-3fd2-43aa-819e-4fc3d27b401b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfea9195-d9c6-4859-8e63-f44e848e2a87",
        "cursor": {
          "ref": "5dc01b56-0f47-4587-9d57-06c3ce4d59ed",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "3a003bb5-97d5-4915-96e9-56430296e5bb"
        },
        "item": {
          "id": "bfea9195-d9c6-4859-8e63-f44e848e2a87",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f54c856a-e86a-4c64-a1ca-7bd90cf73c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1f322d-fbe9-4760-a804-0466e3e53a98",
        "cursor": {
          "ref": "39bdf42f-5975-4e83-8d07-7ea7a3fd796c",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b1f1e457-db00-4517-bb06-f0684b4c07e3"
        },
        "item": {
          "id": "be1f322d-fbe9-4760-a804-0466e3e53a98",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8dc3f5f4-083f-4d74-ac35-2978000154a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59fd94d5-4948-47bc-baa6-f0d463d77cd1",
        "cursor": {
          "ref": "63f7f83d-91ce-450a-9380-172c1f0b92a7",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "4c8149b0-ef09-4444-b276-114ef3bf7ccc"
        },
        "item": {
          "id": "59fd94d5-4948-47bc-baa6-f0d463d77cd1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f9bb6ffd-5e2a-4015-8988-b334fe1d0caf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd4cf49-d395-4e9c-9b29-dcf72a91a4e7",
        "cursor": {
          "ref": "58a2ab4f-5cfd-452b-8848-787c0d0498a6",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ad676c4c-0df9-4ec2-ac7c-7152dea915e7"
        },
        "item": {
          "id": "ecd4cf49-d395-4e9c-9b29-dcf72a91a4e7",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4072aa65-8cea-4d38-b4c8-6c70e4b01dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3552567a-fdc0-479e-ae4d-a7023dbd0e4b",
        "cursor": {
          "ref": "dee318cd-2147-42ca-910a-2108f0bd6506",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "dff866b6-c983-4e15-b9de-45f112572a40"
        },
        "item": {
          "id": "3552567a-fdc0-479e-ae4d-a7023dbd0e4b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "353f8233-a480-447b-ae27-f78518e3d95e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6b68da-e80f-4aaf-9422-e7ab08c4cdcc",
        "cursor": {
          "ref": "e9b95a27-ea1f-46a5-b1e2-099bb568c47b",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "27df7cb9-a85f-49a9-8dac-d22d325bfa34"
        },
        "item": {
          "id": "fa6b68da-e80f-4aaf-9422-e7ab08c4cdcc",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "5a789226-fa6c-4018-b743-b8b37443d610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81096d9a-4a32-4f31-9e3f-9491db3023e0",
        "cursor": {
          "ref": "16c2e775-1f97-47a8-858a-44b7e8888310",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2859e98e-ed56-4455-8e0c-e235a9eebf37"
        },
        "item": {
          "id": "81096d9a-4a32-4f31-9e3f-9491db3023e0",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6d88d366-2bfc-4f3c-9a37-42b17600d171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "575e0ee0-5f49-45bb-a603-6fa693b6355e",
        "cursor": {
          "ref": "ff32a3ed-133e-41ff-8881-a9c5d0fa3f93",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "2c656e8e-34ee-4eff-a3f5-373e034cc637"
        },
        "item": {
          "id": "575e0ee0-5f49-45bb-a603-6fa693b6355e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b8ab0254-53e7-41fe-ab7e-0e835ac1329f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a17d86e-c6e3-4f62-a8a6-35cde0836c9e",
        "cursor": {
          "ref": "05a47a27-1b95-454b-b883-c2583527d5c7",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "0a7f872d-aa39-43e1-b26a-0269c286697e"
        },
        "item": {
          "id": "7a17d86e-c6e3-4f62-a8a6-35cde0836c9e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4d582214-2647-40dc-866b-5d3706f71fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2aab0b7-1b2a-4eaa-ade4-9c1f92fd8ab4",
        "cursor": {
          "ref": "e3878a90-bc39-402a-a012-c093fc4ae58c",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "28922959-dc0f-4bb6-971f-9a19f8cc1b47"
        },
        "item": {
          "id": "a2aab0b7-1b2a-4eaa-ade4-9c1f92fd8ab4",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "34da4fab-1c59-4673-b5cb-84e6732c4c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d03cc1e9-0076-4393-9829-293dd23e315d",
        "cursor": {
          "ref": "d4537d2c-158b-4241-9421-68fa7db01a38",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "dfbd8ce2-c4cd-4d4d-b057-a5804fb294e2"
        },
        "item": {
          "id": "d03cc1e9-0076-4393-9829-293dd23e315d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "62401bc0-1219-4fb3-a01a-9ef196a7ec87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c3bee6-a57c-426b-8dde-b19c7c0e69ab",
        "cursor": {
          "ref": "0d6bd730-b24c-4fe8-bdd0-38e97246b580",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "338250b1-205b-4e47-8f8c-72b11efe58c8"
        },
        "item": {
          "id": "a5c3bee6-a57c-426b-8dde-b19c7c0e69ab",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "28b2183d-711e-43d2-9b41-bccf34daa644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df48f05e-8078-44ef-ab27-ca26ed9c4781",
        "cursor": {
          "ref": "9f77f449-4098-4b56-846f-f2ab25af8d30",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d32b6cf1-eae1-4ea1-84eb-e8aecbe66d65"
        },
        "item": {
          "id": "df48f05e-8078-44ef-ab27-ca26ed9c4781",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a1525e4a-1fcc-4d94-98b1-40c976a0ba78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f722ca0b-6502-4495-bcd1-d3095bf5cf73",
        "cursor": {
          "ref": "2ba32f95-1c0c-496a-8b62-c407817f5146",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ba8666f5-9534-45b8-b650-f104c6db590a"
        },
        "item": {
          "id": "f722ca0b-6502-4495-bcd1-d3095bf5cf73",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "4ac5aafc-4a4f-4996-85e4-c1ce8258e330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aab78d6-fc72-4414-8057-45dc3281b517",
        "cursor": {
          "ref": "30087cd2-eaba-41e6-b5bc-1fb19531fb38",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "83f0e15a-ca30-4641-9be7-d17a8188b26c"
        },
        "item": {
          "id": "0aab78d6-fc72-4414-8057-45dc3281b517",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "3ee09450-e765-45db-b5aa-f52c4b68e983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b7ad60b-0e6b-4cc2-a461-bcad283477e9",
        "cursor": {
          "ref": "f365e8af-a164-473f-a587-72591a250e97",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "dd44e73c-5e2c-43dc-8808-ffe6dafd9d4d"
        },
        "item": {
          "id": "3b7ad60b-0e6b-4cc2-a461-bcad283477e9",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b2a16060-69be-4c9f-99b6-f27178fb3689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a61e1ea-6ba9-4e55-9077-53383125ce82",
        "cursor": {
          "ref": "73e18376-b326-4898-874a-2bcfb812d601",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "003af329-0460-4462-87f5-7658d0140575"
        },
        "item": {
          "id": "7a61e1ea-6ba9-4e55-9077-53383125ce82",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c1581c0f-8831-43da-96e9-3f68353f518f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f0de42f-ba34-4d49-ab29-ef84d74cdd63",
        "cursor": {
          "ref": "5f726f3c-2fa6-48b8-9981-83a3265d402a",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "5543e693-9d3b-4a5c-a729-57afb56b4912"
        },
        "item": {
          "id": "0f0de42f-ba34-4d49-ab29-ef84d74cdd63",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "9ab64c11-3de0-44a0-b1b0-d9bce4178e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae54eb31-87da-4e22-8a7b-0b36ddcdd672",
        "cursor": {
          "ref": "dd35c6fd-a86c-48d0-96f3-174e78328a6f",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "676274df-c7dc-4ecb-8a48-022eeec85d99"
        },
        "item": {
          "id": "ae54eb31-87da-4e22-8a7b-0b36ddcdd672",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "95f00ddf-618d-46be-ba7c-e8e60fbf973c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9e176e-56c6-4b9a-bf07-8fb6cb71510c",
        "cursor": {
          "ref": "d47ee8d6-a625-447b-bb77-708f947b5575",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "7a0ef73b-e333-4d95-80d0-b276e17e2c35"
        },
        "item": {
          "id": "5b9e176e-56c6-4b9a-bf07-8fb6cb71510c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "2bfbcf2b-472d-42de-943f-f6d1b70963e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a767a5-adfe-4500-b1e9-42a22830f010",
        "cursor": {
          "ref": "94a97fa6-0c86-4986-ab10-6e7214bbdf22",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b82d13be-eff2-4746-a7b3-805430704df0"
        },
        "item": {
          "id": "31a767a5-adfe-4500-b1e9-42a22830f010",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "4bbee998-f82c-4754-8cf2-851fb3156f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60712207-04f3-4feb-84cf-fdec2614ff47",
        "cursor": {
          "ref": "348af03b-f04d-4e5a-b8e1-50d44b23bf84",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "53cec785-baa9-4f35-83d0-5aa3ca7becca"
        },
        "item": {
          "id": "60712207-04f3-4feb-84cf-fdec2614ff47",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "183a5f0e-4706-4506-a69e-c69ea7226566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ed7496-05b6-4c6e-8899-fb86c0668559",
        "cursor": {
          "ref": "297a1b26-75db-4864-b7a5-44743fcc1ccb",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "99ca0e0a-bd18-4746-b863-f76174fd5f24"
        },
        "item": {
          "id": "e2ed7496-05b6-4c6e-8899-fb86c0668559",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "889ab29e-b5ea-4bed-893e-2dbe646024e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16b6d87-44c3-4859-a320-278666f3e56a",
        "cursor": {
          "ref": "babc71cf-5f16-4735-82d9-ac70177be74c",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "4bae3502-8948-49a6-a2bf-764b624f9e38"
        },
        "item": {
          "id": "b16b6d87-44c3-4859-a320-278666f3e56a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5ff015e2-46e4-4963-b0fa-bbda91484614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab18eed-6df4-47be-9c85-215142439303",
        "cursor": {
          "ref": "9c9fb663-86c1-4d8b-9f67-3a739db55f76",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b8be389a-ebaf-476a-a42b-1ac1c63bc61f"
        },
        "item": {
          "id": "9ab18eed-6df4-47be-9c85-215142439303",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8e681006-3060-476c-8723-65b42c2116c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f14796a9-4958-4767-89c2-27b8f541d6c0",
        "cursor": {
          "ref": "21307b6a-1b82-40d5-930b-169048af4d0c",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "1701db50-512d-48aa-86ba-153a84077857"
        },
        "item": {
          "id": "f14796a9-4958-4767-89c2-27b8f541d6c0",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a6b8eda3-fd29-4b6f-8893-250d9c0a4196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b4b4e7e-292e-4e73-8fd9-499ad73d96d2",
        "cursor": {
          "ref": "8116186d-f97c-40d2-bb2a-d761576c6c21",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "4871daa8-38b0-4fca-a56a-ba36f4d8a2ef"
        },
        "item": {
          "id": "4b4b4e7e-292e-4e73-8fd9-499ad73d96d2",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "42dc9dcc-d230-4504-a92b-e0d740d04184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2c1eb6-9072-437d-82cd-1524ed79696b",
        "cursor": {
          "ref": "b3c31e5d-81b9-4363-afc1-9544d0186dc0",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f328d3df-7a4e-4678-94de-c2f20eeffdfc"
        },
        "item": {
          "id": "3a2c1eb6-9072-437d-82cd-1524ed79696b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "3b621f3a-8b92-4dbe-a82e-1412e944e72b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db70c44b-c1e4-4775-8f85-dd15b82ac2d8",
        "cursor": {
          "ref": "ece98d11-8592-466e-86f7-08c361e17aa4",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "6ef1844b-7c6f-420f-aa23-60a4e3d96367"
        },
        "item": {
          "id": "db70c44b-c1e4-4775-8f85-dd15b82ac2d8",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "75529cdf-0f4e-46aa-9a35-3634fd1df6d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce02311-569f-42ab-a8de-302956e4790b",
        "cursor": {
          "ref": "1dd18143-7d05-4c0d-85d0-b0dfe6b56a46",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0b25f2b7-a9a5-459a-a61c-6f0957bd26e1"
        },
        "item": {
          "id": "6ce02311-569f-42ab-a8de-302956e4790b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "76e46d11-1de0-40bd-9dec-9153ccd8ed41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58652fa5-9322-445a-a523-47fcaaee273a",
        "cursor": {
          "ref": "5ff5c3a8-f5e3-4746-a54c-dfb4b5459d5e",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ec290e0e-c536-4174-b8f3-67f20afc1ffb"
        },
        "item": {
          "id": "58652fa5-9322-445a-a523-47fcaaee273a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ae17082b-d997-4f0d-8304-76faceeac28b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "834d5752-8a1c-45e1-96d7-f8c2ec6c78fc",
        "cursor": {
          "ref": "b81a1584-1aa1-4d33-a5f7-585d9a99ded6",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "8c6f216f-4a34-4b33-abf1-1d0968903292"
        },
        "item": {
          "id": "834d5752-8a1c-45e1-96d7-f8c2ec6c78fc",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9a01d500-39eb-4bfb-93a9-16e1714995b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f157618-ed49-4c6a-91c2-133fcb569211",
        "cursor": {
          "ref": "f11a404a-cd84-43cd-883e-93956cab106d",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ab246d50-6f17-4cd4-bddf-75cde444377c"
        },
        "item": {
          "id": "6f157618-ed49-4c6a-91c2-133fcb569211",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "dde52c3f-a41a-4fda-9b71-1dc748d77cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50cb505c-3b03-480f-bece-11ac49d2e986",
        "cursor": {
          "ref": "bad3de90-2067-4d2d-8ba5-2a4c532e336c",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9c952b7e-29ab-44a5-a087-5d8dae9b094f"
        },
        "item": {
          "id": "50cb505c-3b03-480f-bece-11ac49d2e986",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "57c9deca-1a54-4280-beb1-d0da14506f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d2efa40-3595-4b10-ba60-af4c255895e1",
        "cursor": {
          "ref": "b1865c64-d951-4eed-bf13-5e4f14b9b340",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "08822958-3d6c-4d0c-8ba4-5241d356c66d"
        },
        "item": {
          "id": "5d2efa40-3595-4b10-ba60-af4c255895e1",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f1fd6ac0-c29b-4cb3-88f7-5c370cb28fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5730d9a4-a3e8-475f-beae-bb9765013b65",
        "cursor": {
          "ref": "806b876a-2e9b-478f-a719-f332afd101bd",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f8f14b05-e1b0-4a31-92d5-bdc41cd1ec3d"
        },
        "item": {
          "id": "5730d9a4-a3e8-475f-beae-bb9765013b65",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d1ff4adb-1334-477e-ae12-186295a7f9c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "101005b2-189f-4e0d-b0c1-22913ef82c91",
        "cursor": {
          "ref": "d156de6d-026d-4d30-bb0e-575a109fea2c",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9db371b5-4746-491f-80a5-0456fd01b4df"
        },
        "item": {
          "id": "101005b2-189f-4e0d-b0c1-22913ef82c91",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "34eb0439-a66f-4988-8c6a-f2c3385a5fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d00745b-8f38-4fdb-bbdb-0e59e882190e",
        "cursor": {
          "ref": "9c0331d6-dfd8-4692-a5bc-4d147ad59fcb",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ada78bff-baab-4283-ac02-ccbc1c25d036"
        },
        "item": {
          "id": "7d00745b-8f38-4fdb-bbdb-0e59e882190e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "8eb29f1c-baf0-46ae-ad64-b62ab6624776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "525a4a47-8e80-4224-bb9b-5c6684a33ac5",
        "cursor": {
          "ref": "10bc8e1a-8652-4619-bc3c-121914c87bd9",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "8528e861-29a0-4fb2-9b9a-6baedacad5fc"
        },
        "item": {
          "id": "525a4a47-8e80-4224-bb9b-5c6684a33ac5",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "72b1931c-26af-4ca9-a326-976d8c14c931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c87b9f79-731c-4efe-9199-0261a258fad3",
        "cursor": {
          "ref": "1ad25593-5179-40ec-bb3d-0a7e7e4c3c18",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "04a31e40-44ed-4e84-9f6d-f7f3b94b1c8a"
        },
        "item": {
          "id": "c87b9f79-731c-4efe-9199-0261a258fad3",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3efac97a-5641-422f-a2c8-2087896c3b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f95bde-45a4-4cf0-83ac-09d32e2aa92f",
        "cursor": {
          "ref": "22369a94-558c-4bca-932f-744c7d2bfa53",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f1bd8640-df9c-4b87-af00-c84da7e22845"
        },
        "item": {
          "id": "e2f95bde-45a4-4cf0-83ac-09d32e2aa92f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e87c6b16-9579-477d-ada8-6e3c45c7f02a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f503f4-f6d2-446e-83c9-e16ac30fc757",
        "cursor": {
          "ref": "9431e60f-9702-4f13-a390-450b7c140cd2",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ec8c4905-8a3e-4587-a3e8-1a924ac33049"
        },
        "item": {
          "id": "50f503f4-f6d2-446e-83c9-e16ac30fc757",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "9ff3cf91-08c9-477c-bf6a-97565f7e36a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc0f1a5-0dd1-4808-9acd-099a33009e62",
        "cursor": {
          "ref": "4337fe2b-52d1-4f3b-8608-db0bf164ae4c",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "bb2fcd6e-bd7e-4e86-84a3-02b1d70e352f"
        },
        "item": {
          "id": "4fc0f1a5-0dd1-4808-9acd-099a33009e62",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b1ea38b3-834a-4b9a-8f60-cc85f3c7be36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68f0f98-55d0-4743-b126-6c1253297daf",
        "cursor": {
          "ref": "13fc563a-2df6-49fa-9c32-d2c1344729e2",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "05030930-9c51-4e76-ac19-03fcf744a91a"
        },
        "item": {
          "id": "e68f0f98-55d0-4743-b126-6c1253297daf",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "254c3175-258b-49f5-b569-57aa31b82a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e6e084-d3d2-4b14-9a70-573e2fb079cb",
        "cursor": {
          "ref": "39df2b42-40df-400b-bfd6-bc28d6a9ac4d",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "5a6b1dd2-2002-4295-8316-78505f3a839b"
        },
        "item": {
          "id": "16e6e084-d3d2-4b14-9a70-573e2fb079cb",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "065eb50b-8510-4bd3-afa4-9420cb3dfe37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4dad346-e937-4ffa-bd0b-090bce18f64c",
        "cursor": {
          "ref": "31682a28-205c-4535-9d66-568f3bba3112",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d7257267-477d-44d8-bd5b-fd916e8374b0"
        },
        "item": {
          "id": "b4dad346-e937-4ffa-bd0b-090bce18f64c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ffe93e4f-d5c5-4c1b-8c7b-6aa2303f9ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f6bf8a-f86f-43f8-9bd4-66ebed6cc050",
        "cursor": {
          "ref": "8ea16abd-e607-467e-8fec-06e28904e2f9",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f117d023-10e4-4547-aa21-c1a5e25d0c74"
        },
        "item": {
          "id": "87f6bf8a-f86f-43f8-9bd4-66ebed6cc050",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "86db0a44-5e67-44b0-ab64-e3f9e8783a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f3575f-b201-4434-aadc-cd11c9212413",
        "cursor": {
          "ref": "d338f1ad-452f-4c38-bca2-fab7e35fb015",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "09a6da10-b9fa-4540-bb8d-b6c092909ba3"
        },
        "item": {
          "id": "69f3575f-b201-4434-aadc-cd11c9212413",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "2a7c5deb-8976-4503-944a-f038bde5411e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6d3b88-feb7-43da-b9d3-67013414c7f7",
        "cursor": {
          "ref": "f6813188-130a-4f28-b926-0dfe2dc98cfe",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2d46fc42-4d2a-4ee0-88a8-2c1001bb2194"
        },
        "item": {
          "id": "5e6d3b88-feb7-43da-b9d3-67013414c7f7",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3d6fb960-4025-452f-89e3-44b65d997e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91bf02e1-deb2-406f-8582-c6780e2a1369",
        "cursor": {
          "ref": "908bb3e5-327a-4c45-9a32-7e9267ace65f",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b82f4196-55d0-43a9-ab1a-bca5edfc44ee"
        },
        "item": {
          "id": "91bf02e1-deb2-406f-8582-c6780e2a1369",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e69ff013-adf3-48d8-b9f2-9728abd873d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ff4e19-1692-48dc-8030-a5bd0b3518bd",
        "cursor": {
          "ref": "39497f1d-96e1-450d-b9e8-582d09895191",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "81a4ad34-398d-4a31-a8d7-f9260299dbc2"
        },
        "item": {
          "id": "53ff4e19-1692-48dc-8030-a5bd0b3518bd",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ddad3076-f6b0-4779-8a17-6f9f6eb6a7dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb867687-f64a-4aeb-82a4-9c690cce8df1",
        "cursor": {
          "ref": "c38f53be-e8fb-45ba-9775-1c6d1aef75a1",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "12f36e5e-98a5-4670-b4ac-b2b6008991c4"
        },
        "item": {
          "id": "cb867687-f64a-4aeb-82a4-9c690cce8df1",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "34bad314-cefb-4cc7-8c3e-00581c5767ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a1f93a4-5a6a-4b15-bf0a-63c5bcf51160",
        "cursor": {
          "ref": "1b78edcc-49d4-4dcf-8437-247097be859c",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "938cda21-afea-46c0-8104-482361ba05eb"
        },
        "item": {
          "id": "5a1f93a4-5a6a-4b15-bf0a-63c5bcf51160",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "609bb582-2490-4fba-bbb3-8731eea0a822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d093e226-3094-43ac-b012-03ad85842e57",
        "cursor": {
          "ref": "26bd4cde-2f90-4837-8b5d-43b44da29254",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a13698b7-f965-40ee-800a-3e31c4dcf45e"
        },
        "item": {
          "id": "d093e226-3094-43ac-b012-03ad85842e57",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b40114d6-2067-472a-9b83-9909715e5adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6f7de8-493d-4263-8190-3bf0fa7a4391",
        "cursor": {
          "ref": "cecd3b24-6b19-4110-b298-57493715550e",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "3f473a21-fe97-4edf-b2df-57c246cc26dd"
        },
        "item": {
          "id": "be6f7de8-493d-4263-8190-3bf0fa7a4391",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "9c28df41-ab86-49ee-9bd0-a52c5bc763fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88f7f62-6f07-42ad-9623-5dba8cf37e17",
        "cursor": {
          "ref": "cdcfc443-f692-419f-9c4a-ae0ca9f9b15a",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "62a4f44e-a238-4d0d-990a-bd1484e18158"
        },
        "item": {
          "id": "b88f7f62-6f07-42ad-9623-5dba8cf37e17",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "03382b5d-91c8-4f9d-9bf6-e2afbc0cc926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bcc7f6a-d0da-46b8-9668-7b804ed79c0e",
        "cursor": {
          "ref": "297afb4f-3fd1-43c4-b59c-41d96213f7d0",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2764ea4d-e2bc-4969-a8ad-d4badd5b0f85"
        },
        "item": {
          "id": "1bcc7f6a-d0da-46b8-9668-7b804ed79c0e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6bf931c4-f430-4987-9989-0658eb8d88b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56457d93-0d84-4886-b8b0-2d595b278da3",
        "cursor": {
          "ref": "72d33431-f295-4450-9f69-c5981b1296a7",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4600aef6-0ead-44d7-94f5-8c3c36305f0f"
        },
        "item": {
          "id": "56457d93-0d84-4886-b8b0-2d595b278da3",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2663fef0-437e-4e63-a298-0e91c42e0bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77cc167d-cbd6-492b-bd78-fe2ecb1e1517",
        "cursor": {
          "ref": "f2fb5f73-fb58-4466-81d4-c7aed36138d6",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "0c060fb2-f3de-4c88-a436-143a88a2d792"
        },
        "item": {
          "id": "77cc167d-cbd6-492b-bd78-fe2ecb1e1517",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f173eefa-3fe2-45c5-a249-a407499ef6bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce29e73-9936-4cde-a487-8fd27fdf2245",
        "cursor": {
          "ref": "d77f7c1b-fdfd-456f-a99f-9ec4cf427463",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "379ec56b-a313-4b61-9aa7-b12475a24733"
        },
        "item": {
          "id": "9ce29e73-9936-4cde-a487-8fd27fdf2245",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0c822ad6-31b9-48bd-a088-42768cdd6da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0450ed25-e4da-4dc6-bc23-d6c7320e8256",
        "cursor": {
          "ref": "097b1ec1-3ebb-4f0e-a68c-27a451504553",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "9559af9a-c5c0-4c9a-ac15-e7246046914d"
        },
        "item": {
          "id": "0450ed25-e4da-4dc6-bc23-d6c7320e8256",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "69fbd496-b489-4ca2-9e7c-c8dccf142284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a8a04d-247b-4977-8070-43fa47d10d3c",
        "cursor": {
          "ref": "335084ee-05b0-4132-bf21-fb034a052f5e",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "46b29694-b063-49c6-9b75-64d6cf421c38"
        },
        "item": {
          "id": "26a8a04d-247b-4977-8070-43fa47d10d3c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f124713b-9d60-48ad-a08b-9f497371d9d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f54cdd22-ab6a-4591-9675-81c37bd0e543",
        "cursor": {
          "ref": "150cb943-c3e7-4b4c-a774-436e83aea70a",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "11ad6bf0-ba21-464e-8d1f-45c45c2cef0c"
        },
        "item": {
          "id": "f54cdd22-ab6a-4591-9675-81c37bd0e543",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "6b2da30d-b4f1-4c2e-abac-50f501ef85a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2056235e-b9c1-4824-9845-24e82926d7c8",
        "cursor": {
          "ref": "c49c56fd-681a-4bca-99f1-6cb55c27bef5",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "9aa22f65-f6fe-4560-bb4e-933c31c86768"
        },
        "item": {
          "id": "2056235e-b9c1-4824-9845-24e82926d7c8",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "f28a0b2d-d933-4605-924c-a03b1975b4db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58bdc4d2-a93f-4a22-bba1-88bf459d4ab6",
        "cursor": {
          "ref": "02ab29bf-189e-4a3e-b00e-11d37ca5b060",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "b653446e-93f2-425b-85e2-020bb5ac17f9"
        },
        "item": {
          "id": "58bdc4d2-a93f-4a22-bba1-88bf459d4ab6",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "062445c1-7772-4033-90db-8f4855b4401b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f569f5-5f11-48d4-9816-e764438cab2e",
        "cursor": {
          "ref": "96d54d93-67ae-431b-a266-1f65b109b44d",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "2e59ecfd-945e-4bb4-baf4-ed7a9926d5f9"
        },
        "item": {
          "id": "09f569f5-5f11-48d4-9816-e764438cab2e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4060dece-c918-4fa9-a0e7-19f7553303d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4758e6-c258-4f08-8961-7a3baa20c407",
        "cursor": {
          "ref": "ed1758a3-6606-4948-bed1-39adfa9a96af",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "e9c4af0a-f8ef-4674-8623-bec0f450bddc"
        },
        "item": {
          "id": "8d4758e6-c258-4f08-8961-7a3baa20c407",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5d157335-dfbe-4d63-9f6a-7044b6ef283f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52efb722-871c-48ad-98ce-b9f76dcea71f",
        "cursor": {
          "ref": "d71d33ee-c42a-4d67-a92a-e43d1b9f6dd6",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "8da09ff6-9962-4429-b8cf-209f211bc9f0"
        },
        "item": {
          "id": "52efb722-871c-48ad-98ce-b9f76dcea71f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ac85657a-37b5-45a5-bfbd-9dc4f1d78fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81924d9e-eaec-4990-a058-e603f96bab0b",
        "cursor": {
          "ref": "20401541-53f0-4ea3-895b-f80989a59b46",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "8bcb921f-00a2-47e9-8a04-2722f81dae4b"
        },
        "item": {
          "id": "81924d9e-eaec-4990-a058-e603f96bab0b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "7964ec99-eccc-4bef-a985-203f7070523d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48d08d0-e010-4728-bf08-28fb4fdafb9b",
        "cursor": {
          "ref": "cd8d80f5-d425-4d0d-a7c0-6d81a9598ff7",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "0bd45d02-5b40-4277-b310-67d34a7fe4d8"
        },
        "item": {
          "id": "d48d08d0-e010-4728-bf08-28fb4fdafb9b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "de152bcc-1ccd-4ddc-bb59-618febf22b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1274069d-91ab-4494-b4a8-995214336e0c",
        "cursor": {
          "ref": "f06ddc32-4311-4730-a6c4-ddf51e9b97d8",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "21227530-91c6-4e95-a90c-4a483874e925"
        },
        "item": {
          "id": "1274069d-91ab-4494-b4a8-995214336e0c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d6e6429d-33f4-4771-8c18-d07d0117bbbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70588ee4-e671-495b-bbf1-6edaf7afffb6",
        "cursor": {
          "ref": "702ad692-97d7-4bc7-9a80-c2db02d0bb31",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "2f4812e5-e53e-441d-ad8b-71aca310c9db"
        },
        "item": {
          "id": "70588ee4-e671-495b-bbf1-6edaf7afffb6",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "79565cba-f7d2-4829-9588-022968242b50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5544dbc-71c6-4f8f-bdb2-3161aea2cfcf",
        "cursor": {
          "ref": "8121a09d-ae9b-41ee-8230-206083a5f99c",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "63255c0b-9e71-4ea2-bc30-bcdb71160e25"
        },
        "item": {
          "id": "c5544dbc-71c6-4f8f-bdb2-3161aea2cfcf",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "76f5cd81-a5b5-443f-ae14-f67619e9e72c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "770f7618-49d3-4d70-becd-8a1bc5417c7a",
        "cursor": {
          "ref": "0cc18cb1-0232-4937-912f-a728484f8465",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "16bb1274-f750-434f-9613-b353ab939c92"
        },
        "item": {
          "id": "770f7618-49d3-4d70-becd-8a1bc5417c7a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "74f4a221-ca27-4afe-91dd-1fbb8d95da0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39026112-5d8e-420c-9c3e-35efa9527a1b",
        "cursor": {
          "ref": "2dfc8988-ca83-4842-8ddf-b0198d59dfa2",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "781102fe-7ff6-4f44-b64c-47bf5dc841c0"
        },
        "item": {
          "id": "39026112-5d8e-420c-9c3e-35efa9527a1b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d6ac50d4-7c59-4717-90cd-a6753063892e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e73e8b2-24aa-4f18-8267-43791c35dd4d",
        "cursor": {
          "ref": "100ccd53-3ea8-4f04-8d9c-501314ff8475",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "3fd5c5d1-3e79-48c0-8c29-a2ea2aa3558e"
        },
        "item": {
          "id": "7e73e8b2-24aa-4f18-8267-43791c35dd4d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "550422c2-2179-4a72-b344-fb5516b7e9de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fdd774f-2dab-4f0b-900a-63d348dba167",
        "cursor": {
          "ref": "6378fe7b-82e5-4614-be31-4445baa79bfb",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "0fa74407-f11f-4290-9b8f-62b5034ccbe4"
        },
        "item": {
          "id": "2fdd774f-2dab-4f0b-900a-63d348dba167",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "fb472e35-a92f-448f-9d1c-5015bef3ddca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd35694-8999-4ad4-b622-adb89a3a3bd6",
        "cursor": {
          "ref": "bb19dca9-4908-4e34-a773-dac43da1ce5a",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "d9c050f6-af49-44d4-a3f5-faac49b36ea5"
        },
        "item": {
          "id": "efd35694-8999-4ad4-b622-adb89a3a3bd6",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "0d0a71dc-78f2-49b9-9a51-57c31c73b9e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2119ca-036a-4cc5-a7fa-e612a8a38d28",
        "cursor": {
          "ref": "060c6698-334b-4d6f-b472-9776e97dcc75",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "8b037202-6737-4678-ab66-0d21fc63182a"
        },
        "item": {
          "id": "9e2119ca-036a-4cc5-a7fa-e612a8a38d28",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d68cbaca-83f9-4ee6-89a4-a9e06c8226ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16dbbd4c-3e00-44fb-9cd6-945216200398",
        "cursor": {
          "ref": "de1116db-e7e4-413d-a331-cd8761b6da57",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "efc63c55-5aa0-4087-a348-799323e50052"
        },
        "item": {
          "id": "16dbbd4c-3e00-44fb-9cd6-945216200398",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "8994c894-92be-453e-aa6d-00c33e2f07e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f705e19-88bd-4836-8419-5f60636f303f",
        "cursor": {
          "ref": "3ac5e574-6409-462f-a87e-1f7ee066a7ae",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "b584de1f-ba3b-4fbd-a95c-1fc5ecf1a05e"
        },
        "item": {
          "id": "8f705e19-88bd-4836-8419-5f60636f303f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b90bcbbd-3109-40dd-a821-d078daddf74e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db22144-4988-4637-a7d4-3021671cc645",
        "cursor": {
          "ref": "c570b109-d178-4885-bf46-3d261e3f165d",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "f02965de-a262-44ec-b528-b83f5d06f852"
        },
        "item": {
          "id": "7db22144-4988-4637-a7d4-3021671cc645",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e96a08a1-5a60-45ca-bd4e-59c1fa49625f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b806edb-fa38-4fe2-9d43-32badef41a84",
        "cursor": {
          "ref": "44c0ce44-7afc-44d9-9e1a-ae5924278f22",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "9db7f0a5-d364-4e3e-b880-d8de056c8e22"
        },
        "item": {
          "id": "8b806edb-fa38-4fe2-9d43-32badef41a84",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ca7b86a3-21fb-4ea1-b370-4d0cdaf3087a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b15ca3-558a-437e-a3d8-ccec1e09684c",
        "cursor": {
          "ref": "38f8473f-40ea-4857-ae25-e5a6acd7e54c",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "c740f294-a575-45b1-b6df-1f9b83b00e4e"
        },
        "item": {
          "id": "e1b15ca3-558a-437e-a3d8-ccec1e09684c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9ef7669b-fc7c-4ef3-b8d3-1ae670fca56a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61205615-28a4-43e0-8155-71b6d1951a0f",
        "cursor": {
          "ref": "99a3f57a-568a-4648-a538-cb76040e51c6",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "5f7049fd-a782-4a17-b1f2-92c4d81299d2"
        },
        "item": {
          "id": "61205615-28a4-43e0-8155-71b6d1951a0f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "adb38e73-2e49-49a3-b0ee-783cb62e9ac1",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df49c7a-19b4-4a6a-919e-b8226d4e73eb",
        "cursor": {
          "ref": "06ee717d-1364-4c51-9e0d-f6794147f326",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "a79e8401-6988-4f6a-98db-ec3b40aa599c"
        },
        "item": {
          "id": "6df49c7a-19b4-4a6a-919e-b8226d4e73eb",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d472efa5-4784-4259-8ea9-306beeb80b39",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab7137d-936d-41f6-9ae3-5ce10017d891",
        "cursor": {
          "ref": "4e1a995c-ce34-401a-b5c6-dfdad655c619",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "958b6c68-514b-49a3-ad40-4bbe80b0a373"
        },
        "item": {
          "id": "0ab7137d-936d-41f6-9ae3-5ce10017d891",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "62028300-b853-4bec-98ed-227e54836bd5",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb01857-1bed-4e50-8d9a-87bee8a12e81",
        "cursor": {
          "ref": "cd42fe9b-6e6a-4ea9-a911-71e0978341bd",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "4625e04d-de93-4f76-b31c-01c28a12760b"
        },
        "item": {
          "id": "5eb01857-1bed-4e50-8d9a-87bee8a12e81",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "366e104b-c8a5-4eef-8ed3-472f1ed3e09f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb01857-1bed-4e50-8d9a-87bee8a12e81",
        "cursor": {
          "ref": "cd42fe9b-6e6a-4ea9-a911-71e0978341bd",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "4625e04d-de93-4f76-b31c-01c28a12760b"
        },
        "item": {
          "id": "5eb01857-1bed-4e50-8d9a-87bee8a12e81",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "366e104b-c8a5-4eef-8ed3-472f1ed3e09f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f63425-b196-4780-883c-614b98649889",
        "cursor": {
          "ref": "d8c961fb-af5b-48d8-9fb1-0dfdb3569cfc",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "5e1d7881-9631-4b80-a34d-6fc36f0c6f23"
        },
        "item": {
          "id": "73f63425-b196-4780-883c-614b98649889",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4ff8c329-1712-4478-97f3-191d6b0405d5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55208a42-710a-4b45-bad9-9256c9faff06",
        "cursor": {
          "ref": "6fd08a5b-2d24-4d17-93f1-f8d5707ab6a9",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "15453ef3-44ee-4d4b-843d-34f8d0fe853d"
        },
        "item": {
          "id": "55208a42-710a-4b45-bad9-9256c9faff06",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9abe7151-4861-4325-9172-7a4df3cc5985",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}