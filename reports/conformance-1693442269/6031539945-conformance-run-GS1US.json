{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b1244e22-61fd-47c1-abf7-95816668b67d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "1b6dff43-c725-448f-b245-98e1d5e0eb2b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3736430f-57b1-4435-9c3a-73c09352cf02",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "17ef01f9-3cf4-481d-8b64-8c15de6db015"
                }
              }
            ]
          },
          {
            "id": "eab3ef92-a44d-439d-8bc9-aa34157c611e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3f36adc2-cae6-481a-9cf7-136331783328",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "12009ce3-e29f-4087-9298-7a2b38c14444"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d4dd570f-bc31-4c26-82fd-aecc16c345a0",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9ab49b30-8454-4c9d-bb90-ff31b856817d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9ec16243-147b-4500-8e7c-fb3e9987adcd",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f5a413b-5fba-4c54-b41b-010ea2589157",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "068370e3-80b8-4ddf-8556-04a9d9e4367c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "86e4a181-0e6e-4bbb-9d54-e53cd81cb08f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "304c629b-658f-4cc7-a45a-0e8e7f89c6a2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e4b9cfea-2f85-470a-b358-5ba881981b65",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d5dbc5ac-a16d-40e6-ad67-2c8ce7db46c1"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6e197d30-88a4-40b6-81bc-3df543cae785",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "cf3547c2-0902-465b-b03f-60f98a3bd4c4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0e73a9de-344b-4ffa-92fe-5edec7f331ec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4cb59b4b-1853-4c20-9bb2-bf53131e16aa"
            }
          }
        ]
      },
      {
        "id": "28e5ac7a-cde5-47a8-88a3-eba44068ce6b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "aadcf73a-cafe-42e8-938f-421473e97c67",
            "name": "Negative Testing",
            "item": [
              {
                "id": "308b2110-6655-4706-982b-0291c952e677",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fc39c4a8-414e-4c74-ad9e-8d51717aeb06",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "484ad4dc-09b2-446e-832e-d54457b8325b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8dd5f58-8a61-4a7a-ad34-c8092af321a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f24f11-9bd3-4029-ad53-aee674e9beb8",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de91a652-df0f-45a3-9486-d5e44d925a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "63d1d8f6-014e-464f-9825-6016e992123c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd084dc-6ada-45e8-be59-f77da5c273c5",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc593c2d-c3ee-482e-a7a5-ef1d825e585c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be348be3-50ce-441d-9b6e-00fd4ed9d769"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8679d100-0c5e-4cef-88c6-7b90a83cd587",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "92eb49b8-2f09-494b-b9d8-0ed26b1fac34",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b01dddc-7898-4163-9242-7d0f590c6583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "15a5fe1c-a10c-4948-9b46-a17e089a4360"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5542b68-353a-4d4c-a58d-e01dbd6cadcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "618c168a-878e-487e-a127-2068d1a0e3a9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8a7575e2-35c5-4634-b021-46a8959ffd48",
            "name": "Positive Testing",
            "item": [
              {
                "id": "25527c02-725c-4b72-9a39-27f0d73858f7",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2722791-f8a7-4507-bfaa-055d1941b580",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "bd3a5912-e024-461f-b3b1-b8f88bd3766d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1b3acda3-00fc-4d71-94e6-45f1e40229a7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "6a6fbf39-f74a-45ad-afff-cd194be86c9a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ee740ae6-a4f3-4bcf-8f84-3a0b2e98b33d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c8d7ce87-bf51-4dc0-a6e7-c9edf9db2892"
            }
          }
        ]
      },
      {
        "id": "fdf5af7c-1c28-439c-8992-62eff55e2ab7",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d3e4b63f-cbae-45ce-89ea-65a07b937a15",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c6c42ce5-97fd-471a-a843-2714283ee1da",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a0e71d86-f3c3-4b71-aedf-7b4d0d1a71e0",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e983f1fd-a579-4545-8c83-5ea426de5020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35b2f83e-0036-443a-9c82-7dcd88809d7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a89bb0-d454-4657-bacd-08ea601fece6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a24f61a9-e862-4dac-90e9-a9b5af6ec567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f40bd24-2b6a-4a17-81ae-da2c2aba679b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c43afe-3878-46e9-83d7-a2ea82b53cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b47ab797-3db9-4ad9-97a5-5e60bcb582ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3574833-7be1-455e-94dc-6f6ad8d9b4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b99043db-75cb-4c28-9b07-d6ee2adee889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6caf52d8-6f64-49ef-b346-5a4a0b8670b9",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7aaaf1-cd88-4d7a-b68d-892f5dde2038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc6b3c9e-9197-4918-a699-ea5ff5c10f37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7098a762-146d-4f00-9fd5-7f7efb0116d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09724f21-d2bb-4fc9-8ba4-870942bfda64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659b0219-b787-47ae-898b-181bbb5fbaaf",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61529c76-3a1e-4fdc-8d80-f18af11df2cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab5cd351-97ef-4a60-969d-9ac6544ff159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4ec500-f2f9-4be7-992d-65ab6237bc28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af41c33b-84fa-4b4e-aa9e-4727a41f9634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6deb5773-23bc-4431-a7ba-9e4a27e83cf9",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a14b4c3f-41b7-4b79-9122-c78854ef937d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "890f63d1-6a3d-4950-9a8d-e15e5bcedec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a8fbf1-213e-445e-b928-ff73b5051f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42ae204c-5d9f-4462-926e-8b10ec780cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "019a23ea-7b37-4aaa-af7d-486e3c02cffe",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde94d05-150d-42ea-aaf5-f97bf9ad6613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef5b3efc-0f1a-4d54-9307-f7eec38ac2b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc48eb3-94c7-48d7-9d9f-8d58c362bbcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "282e34a1-a196-49f1-b1a7-58c12d6f5256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af86245d-c6ed-46b5-a33c-5dec019f26ca",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a3dc91b-540b-4291-845b-9abc064f8ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10e2c243-652e-454c-a8bd-761df7166beb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2f490b-6c58-425c-b478-f47923cb1e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc678d37-57ec-498f-96a1-ac9d14c0fbbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b210e124-5696-44e2-b5cb-2743eed7a45c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7061313a-8857-478b-a61b-2057326539ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b19732a1-d6ae-44df-aa09-5f923c3d1a98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b88c6647-4413-4c63-a91b-00fe93a7c2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4e0cc8c-8fe2-4014-934e-5785286f8a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16dc97ec-98be-40ef-93b4-e2afe1cad05b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b634a8c7-8f30-4ca4-a8bd-01f66e63f053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86fdbd7e-a522-425e-b82b-5b52d2cf7640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7cb3f53-b601-46b2-a536-e52ecbef4b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "649b713d-38db-461d-81fc-f87f80868a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301dd07c-0e1b-4501-ac5e-702192ffd1dc",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f4bd313-2dcc-4cc5-873d-f1eb771bad5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ee028b7-5cf9-48be-b916-a0f6178dcb41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b9b4f73-83e4-4dcb-a1f7-a1cffcdae83b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a13533e-49d3-4ca7-8d62-d465dc513990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b63a70-924a-456c-a34e-a231a62004d1",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee98322-9be6-43bb-b5e9-c4e035b68924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "649e930e-b9ea-4dea-a686-321b1e38af7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f271b9c-e0ba-43c2-8b1c-5a86e57318cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c70d5aec-a26d-46cb-8e8c-3931a8fe6e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f5782c-278e-4e8c-a814-471599d39af6",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e8db057-5813-4d47-93d4-307f14234b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42a0b3df-37a0-4372-9350-6642f5d6b751"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d02d492-54df-4eca-a796-828121042261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78fcb060-997a-4fcf-a8ac-c9192dc7766f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e06fdaf7-0187-46e8-9b84-d9f311714ec6",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7d9780-bd51-4980-b38c-d10f1e9b0ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26c559b9-7bd3-4cb5-b70a-86c5bd3b6a7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e801fe0e-c640-47f2-9abc-85122c8c11b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb8d8f09-db35-4176-848d-e497b3af88a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca118952-86ad-403c-af81-a6fd1a4eb5af",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e95b9e7-d819-4a5b-b348-5fec6c243d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbf9a967-24db-455e-bc31-77c4d4fa7ec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f19647a-7e01-4d8b-8d1e-17768c09cc97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef1c8af7-ce56-4bc1-bb3e-56da817ce714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e619ae4-1188-43d9-8cd3-0fbf07530b46",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6cfbc9-9015-420f-a27a-795274908904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c6920a8-335f-4a5e-a5f5-4ab8cc36306b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72ca494-a0f5-42de-9596-e51fd63f2c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5425f7d-27de-404e-9e7e-6da1286993d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f24387-a090-4530-8bb6-0990cbe8bb2d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "985bef76-776f-4d03-a273-077a77754281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c7f11a7-83d9-4154-94aa-40841697b33d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f74dc64-bf2f-4b44-b2bc-ac2efddbac59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed4713ea-070c-40e1-b817-40cd3b365f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13aa70b0-b21a-4c39-b3c7-0b527b2420a0",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2d5f00-ea34-45b7-8bd9-ea45dad2c37e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00f2fdfa-2a3e-4669-95fa-c6ce5075f17b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17805487-3f4e-4988-bbb9-05239fb628fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a85212ed-8a71-4642-ac13-83b4d60be9fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acbc4834-37ff-42a5-93ef-f281635d5039",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "656f411f-b07b-47ea-afbb-833854cadbf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "736ba7a3-0f1b-4819-b33c-281973c434c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475059af-5f26-4ab7-bd5b-747d78693de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8cb4ff9-71c4-460e-842f-d42dc3559d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f66724cb-b188-4762-b63b-8f2b7585e7dd",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64db5617-3497-410e-bc7f-5f39e4a44541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81139286-9118-4ff0-aeaa-6a59b4b51cc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c624f5a3-0e85-46c5-b367-3da01af98742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fee7afda-9b17-4a56-83e2-37106841f5e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a0ac43-b5ab-4d46-a53c-4b5515fabff2",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d238471-5754-4431-87c7-446dfeb3da70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b6e8016-964b-4f56-ac2e-2a36ac804c78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5453fb2e-b1f9-4de7-bbef-b71814d85720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0c850c5-f897-4b47-8365-bd2e979dc6ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc1119db-c7bc-4db1-88f2-c3abf9fa8dbc",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a875c18-166d-4309-9dc0-4ec4b1fba75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d0d6d37-35f9-4b81-b9ad-e7a0716d1c0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d79dbd-faa5-433b-ae7f-259b2f713482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d5552ee-2be7-4c65-91bd-0e56cdecc573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d869bd38-afc7-4ab3-9540-c063768dc2f8",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b40a834c-52de-4094-bbea-e7cf0e8b1e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d696cf5-fbf4-4750-ade8-6aeb727bf8cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c36632-2612-464e-a3f9-03b15fdaff39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "77f6760c-19ed-4607-bfa7-7fa99e45be04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf6db5b-91b1-4a9f-bfdc-15a579285d43",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac0200e6-49b4-44d7-9966-72a6a8f35cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f577ec72-5a6d-4557-9258-b68bf3408e96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e22784-b2c9-40ca-a951-196ff3df3bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d1186599-a525-4691-9dfd-26dab926ff7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d509706-367f-4d82-956b-0fac34d7775c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "634b4965-ad68-40a0-ad29-34e4157c713e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "951b1127-a389-48bd-a305-b580c556ba57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da51e56-2a77-4d8d-b291-d2820c9fb1b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "719ce1fb-64f7-41d5-a2c9-53ea68a138d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ccbfa98-3754-40b4-b48d-8e0667cea134",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21859069-cfb4-4785-9dff-d07bc8bc73eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99900492-bc74-42fb-8a78-157d85d29204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "684bc16f-8dd1-4e80-a235-88d1f928fa4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "99757342-8633-49cf-b3ef-46ec753eedf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f9ebc50-966e-435b-9153-9e30546600ea",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b5027ee-6478-434c-a073-7a11537992eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eb40309-a920-4774-9365-ead6830ccbaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "188d89e0-eb3a-47a1-8e2a-0187b07c6495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dc4b191-d581-421f-b66b-48dd5528b757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d05b34-aa8e-4c72-99ae-67b17246bf74",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6006b954-c8ba-4c04-a482-da4f4d64e5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d57b27-d62f-4261-a218-cd2837af5613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd871bfb-86b3-437e-b920-6adb35a5737a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "22b4c861-a035-4cb4-9a86-bbb519177fc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f519a3-b045-43a7-984f-6d30a0086bc8",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d4a8c86-445e-4aee-aff9-7155089fec16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62145a8a-9fff-4308-9185-46632fccc7e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1696c648-9750-4534-9668-6a2ff60f5a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5aff6048-2e6e-4ab1-b54f-c701d9bd45c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d2522a-cb08-46b5-bf07-774b7c161eb0",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c3a696-9f17-4b6e-812b-bafddcc69064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f411e734-a518-4f29-a424-9b7d4a5d2ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdaeb431-690a-4a5f-b517-836964d9fbed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ef573b7-e910-4854-8a23-c3034bbcc71d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2906461b-a129-4f99-955b-411feaf4cf1a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eef1765-0648-4028-9be6-4f9edb4b3b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c998c91-d494-41be-85e2-431aab422b48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e0f113-9973-493d-b9a1-8ecfddb7dcca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5b63677-80fe-4006-99d6-6d9935332792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5dd326-86c4-4334-a157-704051aefc98",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d34d9869-31e4-4adb-a716-770c977edc00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7af32862-7ada-4716-8114-9914c7a38ea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c7af9e-c94c-4d7a-914f-5804c332f3e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bdb11a5-9c0f-4d51-ae6f-23c5236a9a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b13e5797-46fe-4ea1-b240-5d95e492d935",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71125e2f-4550-40bb-92f6-4a7671213df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db111724-ef49-4a5d-8ae9-9aa4aeedf82e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8afb1e3-89cd-4a51-a8d5-4912d089d46d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b8bfbb6-9dc5-4bf9-9b67-62a056113a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5bb1817-9981-4ab5-84d8-77cfbe685895",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d60e0334-c406-48d7-95da-3c6384d1f5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff355964-dba3-478c-b29e-fb651a880d17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae30723-a833-48ea-ac1a-da2416d54f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "528763cd-9f79-4d72-afc9-92f09ad646f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5a1a8d-7991-4510-8b04-aa1aee78dff3",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8186250c-00ad-4cf2-a013-7f522265acdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed6479b1-a288-4243-bd2f-6449f12c98c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb04f6b-2684-42cf-9c3d-590901307670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9f5780f-c432-4592-9465-5fff866af5a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ed1aaf-f071-4e3c-bcd9-ca9cc964eb41",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c6181d-ec27-4ee7-9692-416f1c90275e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a603732-f32e-4893-bf78-7b7983a43153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37123abe-20a0-4810-b612-fa16ed406e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "18256cb1-330a-4665-a028-5af156a06a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34fdcb81-e8e7-402a-b74c-16f963f18119",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ed6e09-0b6c-43f0-80f6-81db3a0d526a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd1be79a-db68-4eb3-bbd8-2cc114223734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db18fe9c-b7fa-4ffc-aa3e-76465fa94ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3a5b4e22-6a9e-44e0-912b-2612adc40120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72bb2519-f0e9-4605-a091-b21a1a58af8e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "999ebaa5-6296-41da-a601-3d8a7a81ed1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4b9dbc3-00b8-4656-8151-91d2f0d26f16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e875446a-65e7-420e-8d55-20c299e2714c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "71487627-9ed3-4c29-8e93-4d760bbcc810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c872f8-057d-47fd-b4b2-d169096fc7e7",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a3bb12-0012-40ca-afec-774a8bd8de04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4994b96-b781-4c3a-a9e0-aed2a75c1f06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d48bd99e-6b82-46bf-9287-27b1a710b054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8df0878e-4d28-433f-8de6-cd280a19d920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5483a1-c86b-40b0-b3b9-4216f0b19013",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "571f7f55-064d-4803-b73d-14e2b2a01ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3dced0b-7704-484e-a484-c300f616ec19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4edbdd98-e0d9-4e1b-810f-be05e73e65ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5ccc8a5-43dc-449e-aa83-4a7329a772c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afac63d1-5949-415d-8d36-69e63bb46766",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad88e9d5-d33f-4017-9c11-041ad6b59d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45a4ba33-0e8d-40e0-849a-8626b52014aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "566f0134-8452-4553-bf71-557e788bb658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe5cd6c4-a1e2-4688-a13f-9330a721b5c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328f5bf7-4afc-4bb9-81ea-64873cfd664b",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8520893-113f-4c00-a524-fd4ea0fa4aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "696d254f-03dd-4961-b4b2-c608d04b0e83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4085b406-5620-461b-a2a7-a22380f9ad44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a70f1628-b869-4bca-832c-b6b7c36ba6b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a22ca5bb-e9d3-44bc-a69e-08fb7339366a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7884d7e6-17e8-4fa3-a25f-09cc741bfa88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f1b92f3-aa6b-46c3-81e4-4f19bbe21c54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb067ab-f03b-4f5a-88b4-3ddcadaad7df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c3fdcd60-35a6-44dc-a95a-40f11dcc7b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2f1293-e3bc-4614-8584-946401a6444f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bfe455c-245d-459d-96cd-9c875da8b614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e38581bd-a442-437f-9f63-9be5a7c0a60d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4533aa4-aa92-4c5f-868a-860a018c7729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8bb5bf03-b0f9-42a3-baf6-4ac197b71341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8ccb69b-5b85-46f8-9eb6-bb887fed6077",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7248bf32-22ea-4f88-8bb8-ad41d7d3dac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cc823d0-95c8-4496-b410-9559e06fab07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696543ed-a1b1-45fa-b5bd-734250867415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ccd6bc4-564f-4dd5-bade-5c11c339e1de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f46516-d595-421b-a1a8-722aaa847c2a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4633c53f-b9c7-41a3-9903-0a2433c08c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "649c0bfa-7083-47e1-bd49-d9654712cc0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d564c2f-1840-4c3b-b3ae-c83a5d41c513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b374c911-8264-40f2-86ef-4861ed69a0a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e0348ef-a9af-4ea4-8e05-2a78cbe92b9e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "babc1bd0-5820-49b3-8fec-fd80a56816a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db3aed65-8fab-4c8d-9f8b-b750021a2942"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9d2efb-d5f3-4761-a0b3-b2d1a8b3bf1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6946fc7-3ee0-489b-a2f2-ea8e3773cef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb9f14cb-39fd-4198-a968-8c1a40c5552d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e59b8b-5e04-48ab-90f0-d602136d34eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aba4b825-636a-4eb2-9fe5-dbc47e72ade0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b78a2639-60f1-4820-9c0f-abebb8aed1f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "363b5572-0bd7-4c51-b7f2-8b55666cdb74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcfc0a87-4054-47bc-b561-d0fa3040a951",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14542572-67db-4e65-bf6c-c1766f4ddf18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8c4c331-a392-42bb-88e4-b5b69f7a79a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a11deb7-eab2-4753-8c85-b995c1df9904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0d57f91-1442-4042-a2af-47a722341670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8100cb4-6ab9-4a57-887b-a02cf9b0d6bc",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1004d5f3-a495-4a2b-a2ca-f4e645b406a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8af0193c-bfe4-4022-9d55-9909a660761e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05874328-76bd-4971-aa76-5572724cd307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "618317b2-6a06-409e-be49-eae4d16dd151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30639100-2e90-4586-a1f6-a776638fe061",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7ce3cd-4ea8-43bc-b134-c83fcb68ea70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7696caae-c587-4652-90f1-b5ca88c969f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "788b9bab-ef08-4a4b-b26f-f38752a76c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "321e1b82-9775-447d-8e76-be9bcbc531c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aec4b5f-b81a-42bd-8c12-e0f90bb8843d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32775400-1978-42ed-907e-4072791ad4d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cc3063e-e551-43b4-af68-9df224dd61ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "840c2ea3-d6d5-4779-ac26-0038daf9a043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca8851a4-2060-4bc2-86a2-a2a905f08fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92c0171-521d-41d0-8098-a721dd8034f3",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c059a7c-3f01-4268-a62f-882081df155f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a799629-172b-4385-88d1-7f92f7028baf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57683588-0424-4e49-955b-4a3a4a4d9828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ef01014-e264-49ac-ada1-730c1198862d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be5c45d7-9e19-4b59-bbde-f3cda2c86ab0",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bea535e-734a-463b-b4b6-2e2788b6f353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "501f9516-bdaa-4db0-b926-b1c845edfef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e85e5a-4716-40d7-a101-694d5ce6e376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d023533c-f46d-4b67-be7d-2237cc0aa8a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94750912-8787-40d9-a322-c1e6b8dcaa64",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd0dd3b-9cad-442c-886a-af3b61b1bf0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a45f44d9-b945-41d6-8b69-db100600fc59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163ae42b-436a-4822-b6b0-83b38c5572df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb1affc5-7862-4d37-a0f8-3a52a9cba6f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8937aeca-dae9-4748-a79d-cc5afed17680",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2352c2-1c36-4de4-a5ca-76f874c023de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff44bbec-2185-4b7d-96a0-9e8559ff738f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b88287-4277-4a28-b225-5ada9c9d6a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9baf88b-3240-44b7-bb42-758ea54cc04b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c14cab0b-214f-4a87-b21c-be8c0b474c23",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a0cae9-b0a8-4be3-8066-7a988f829480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1c75a7a-2c40-40ad-b554-aa3c7133c7c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "082bd0ac-0158-408f-a065-ea289b597e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f94497d6-8996-4eaf-9cf3-496cd58a0762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b71bbe1d-a950-4091-a961-b6d6a6791ef1",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7febc41-e7b5-4fb2-8a1e-63ec60a0325c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d8ca803-9ea1-43a8-88c0-50e224ed571e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb31881-860a-47d3-b7ca-74da606a834a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c97bbfa4-e488-4c42-935c-c859b1995c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64b6a5d-43c5-40c2-8a9f-2ad7f0f76dba",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1a7024-f5cf-42b5-9dc1-bce516257b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4836edad-9034-440d-a57a-ea0a913180ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d054691a-3d5e-4ce0-a93e-f9da3e816f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "42973595-bc68-4191-b21f-2389938c00b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a14954a8-d4e3-4606-a874-ce40c53976e5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48589993-61b2-484c-8cba-839bd0d4ead9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e382a0a-14ba-46e3-92ed-6ee335e762ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11bb603-3b9c-4398-95bc-9e068037a722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b42e51ea-f92c-4262-8ce5-3d8985d4b789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d420567-4148-420a-b2e3-30780fe867c7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ba6c74-932e-4bed-9cba-d1bbf850268b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "475343eb-85fe-4d5e-98e0-fae2fafe01ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d163d4-fd07-421a-9b41-3e56f57cb6c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d17bd56-fcf5-4335-8dd5-8b345cd0cad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f37ade4e-ce00-414f-a4f7-c207f6aab150",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0162e6c9-54fb-45ab-8360-2074a88157e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0418a62-4a9c-42f0-be1a-0f8f2ad0f290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b5a0ca-c8b4-4775-b494-e722b7b0b3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8bfdb95-392b-41f7-8ca4-cb8ba1ea59fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8249fd2-3883-435b-95c8-a2169685378c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4603a77-d40a-4d71-83f5-a1c0b3fb6cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05cbfacf-a9f7-4193-ba9c-3e390ec671ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b047f70-5ba1-4594-a2bd-2453de8fd9a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea147b0d-0c11-4e94-8629-3cad549e2e56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f273f23-38c4-4950-8101-117d35bed248",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42391c6f-5dba-4207-8bd7-bb0d21918175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cdbe958-7206-42b8-b193-9e972969dbad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1af58d-5fa7-4aa8-877a-12fc1b438d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "46263f15-04bc-4662-938d-a44c96e10384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e727652d-77d2-4272-80eb-141ca1750a6d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea114d8-1c43-4c13-a8ff-65aa625f318c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d3c2e1-b802-4b43-bc25-d23f4239063f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2328a288-1b96-425b-9081-c548499fdb1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8e3747b-a0d3-41ca-9282-26a4ad01327c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe367c4-d46a-482b-88e2-f054d9b3c22f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a40755-3d10-489c-94ed-14f25402702b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb5a575c-4aee-4ff1-9b05-e252172b168d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd8fd75-c88f-4b06-a9cd-905099aa4b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2db2373d-2aee-45d6-99f5-d0415a117cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee46a9b-2e72-4603-98cd-6a1de796b090",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1690a80-5d80-429d-8af4-d74bfe09c2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cea7550-9052-44db-9395-38f23ab78a19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca4cdd9b-d148-4f2d-ac0d-bf9b98fc50f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f261b1ca-806c-4afb-aeee-191bba22d1d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51199b84-7acc-4c40-bb53-43eeefb847a0",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acf942f4-9bb7-4473-8127-d3d1d1cbf177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4979556-ba17-4eea-a91c-0fd03453b9c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38db977d-05ba-47f9-b2db-4e1251d78344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1b7c4a7d-2504-457c-b93f-ebdfef926f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a10908d0-f8d6-456a-95ec-24baddaf449f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe00106-5c58-4be9-a62a-c4b9f28110cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6df5ca8b-cfa0-42e9-8ffa-520a13864e0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda9453c-599d-496e-988c-5cb48f1b7af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5ea46cd-b880-4b83-8285-a30b629a985c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f147a4-4e34-45c7-a3cb-2d7774b1148a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c90c8c-57e3-430e-b1c5-688d807e14b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "539ea83e-4d88-4148-95a5-e2d86e5194da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "099c0dc0-dce2-428b-87ae-3c2278a135fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b13565f-c968-474f-98ec-7df2ea22e427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cce0f57-972e-450e-9aa0-d143ab350265",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7acdbf-4018-4582-a826-b45612a55595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ff9bdcd-8497-477b-8f7b-8371db7d95f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b37eab-010e-4f82-b142-6299c9907b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1d64d17-c36b-4b98-ba5d-a4732e2360b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5288e5b-ab4d-4f0f-9608-09fef8bb497c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb59114-1d09-42f5-a732-4bd5f4199812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e6e230b-c2c1-46f1-b41c-48b212222d5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa65672f-cd19-4ebb-bf1f-7e81dd7ee71b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "894df012-6fea-4db3-a041-b9e954be6812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f0f6b25-e5db-4cd0-a9f5-80efac3db94f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "896f3d41-cc42-4364-b974-19ba659d3283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8401b1b-2bcd-421a-95ff-c95fd45a67bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "377f6c62-13cc-4a78-9190-b361e29c3aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5332f3bf-8f8f-4d26-add2-563a78cc7618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d09dbb5-f48f-40ef-a34e-0ade4db879ce",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25f5e80-17bb-4c63-95f2-acc1d0a906a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e77c01b-28f2-42da-a5d8-52c4a5d0a9e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c5f6f06-8bae-47b9-a1c4-274d025f36da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "85d10195-71a4-41d9-b92a-d85bfdc351da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5962809-fb9e-41f2-bb59-645167ee3fc7",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "978c6ee3-3e9f-474c-9bb2-78f40544ae43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e379a278-d188-42c4-928e-cc87b2c23e52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a75b45f-0c8d-4e84-82be-48a582493fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "50849759-f219-4622-ad59-49cd12383e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145331bc-92cc-4cad-b16f-cb2b7fd40719",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1756cc-30e6-4fef-a67e-feb3e504abb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ee49ad4-bdaf-44d1-ba8e-4661ff1fb179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02681232-4953-42c2-9a19-a195ccc95ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d9023a8-a930-4f29-a24f-c1382f8f28b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41eda4c7-4dcd-4ba4-adb1-ae00ba0c1535",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a228f157-1019-46d7-8f47-e450d9983ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dca3f37-724f-43cc-b8f4-16183bae8f43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2adf980c-b268-41cd-9252-40c011467a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "117728ff-6337-4790-be9a-0443d72140ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c36a2388-2ade-46f0-bd25-6c38db68f29b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "846d2fe6-a8c7-46ca-8ed2-bed5ba94805a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e69a20f-a9a1-49d4-8cb7-c0b905b11544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e11cad-b280-4497-a569-bfab8701e7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "98992b75-263a-4539-aec8-9fb514b32bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1def431d-75f3-4c8e-bee0-d6adb63c6379",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "908ec07b-ed34-478d-94ac-faf9698390e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1407e1f2-ddd4-412e-865a-49bd30c1d1f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "478b7aee-c045-49a9-a32c-133b73e6c135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "993c5a57-e5ad-4936-b100-f91545f69977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12576b2e-4371-4a78-8ad2-a5762f2cad1c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3330b77-e2e0-4e33-bc3e-ae6aca4d21f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2852bf3-0ea2-4292-9159-c5a6a17d4af6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8aad8be-61db-40f5-aeca-183ae41e34a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0bc3246c-aaed-47fe-a8b6-c0f2371ce142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "540bef9d-7f6b-4690-ada8-7dfe9afa365e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9586c86e-35be-48df-83a4-8301f066b47d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "384eb272-c7cb-491a-bbff-332fea52e6a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b9f5c28-a719-493d-bf46-53ff39149793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "54ed9f6e-8997-4b65-a011-ac8b9edc938e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c5b343-4956-4c53-9f41-dfc6f861f5cb",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf506a6-6ff2-407f-ab43-615d400d9dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43b6c39d-dd1f-4ac8-8559-e541ce711eab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a156c96-202d-4d51-98c0-78e0e3a22c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "da3d2d0d-0071-42ab-bdcd-b143af73293c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca42c40-0194-4c91-a037-d0b7f39706f1",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8aaff4-18b0-4282-bda8-46a26c3454cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee2bb7ac-96b8-4fff-ab3c-4a9d91242ef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ccac3da-7e3d-4426-a19f-a6a6ac92406d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "117d329e-d50c-4c6f-82fc-82c221e97609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4aab8a4-7a57-466b-806a-b0961f957bcb",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63bbf34b-7b43-4276-b821-fa54cec8f24f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcd12bd1-7475-4ea2-8622-cadeb65c92ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93142b8e-a678-473f-9844-3183dda5e0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6aa9b2d-b55c-4fee-bdfe-f78baa2d15da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f85bacae-266f-4bd3-8f96-92bf8d3ff21e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb82fca4-53a7-4f20-b64a-63f1c2dd2c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e25e224-a7ef-47a3-b425-43521895f2ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e93cd8-8c46-4f5f-ba92-b13aea974506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f732040-34d8-4f3b-aeb6-e3f02e16a4b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b90c35c-0020-4c26-899c-2331f495f97d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad9d6659-ae19-40c8-99a3-d740020a4c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fae93e2-c2e5-4692-aa26-1ca4aa00a76b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9684023-9d7d-4f92-8c74-74fd51b238ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "684ff5a0-c878-40b1-af9a-273fc98a5f1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba2b0295-3465-4b4f-9c24-f1a747506d82",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb0f841-fe33-4c3a-b015-d5bc20573e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c8182d0-6e0c-4d24-b208-a59cb4b470d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b38c2e5-7ba5-41a9-aa39-34d6fbc91411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5bd611db-8e49-4657-af3b-57749588cdb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4811b69f-2f63-4f2b-bc95-72aa068c4981",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa3469bc-6be7-435f-bd30-6b6f5a380646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d232b551-6dc1-48a9-83f6-8eb885525b2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd7ace6-78a6-4a18-a0b6-28079c971fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4618ccfe-87b2-4390-9a01-48d3f7a3c0a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82856b24-63ab-422a-8c50-234344aa0960",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ddbdf3-388d-4f1a-9edd-aefcc8f5afc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdbf3ab7-f0a7-417f-b1a1-722757334d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1843c47b-90fc-4478-8e40-901e1c8b8c29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "42dc1b27-6c18-4e62-ace5-6f30b2178237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d11f2450-84e0-4c6a-b82c-a297b774b9d2",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "587e29f2-172a-4c57-9362-a3b435df67a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "239ea06c-88aa-48c3-8aa6-57cdde2c1714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b740e93c-ffd6-4671-b92e-4082ffcc7b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "73cb1c91-ee78-4603-bd9a-a68c643320d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b10ba5-0639-4cf2-a360-ed660f64b3c3",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b1be61-4803-4e5c-92da-bec87ce19e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dc09b26-58b3-4b8f-905b-ce07090cf9b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0519de1c-bd14-411e-9101-03cc8fc3f661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9cb29f4-de47-4dd0-9cbb-bdd7ca88c0b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd125a03-d0d6-40c5-ba0b-b469ebb19c72",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60872d8-29c6-4c70-92cb-cdaaa315ad3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0c3305a-ba1f-4967-89d2-7dc33fd55d0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff209aa-feb6-4050-811d-75f579ca9aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e110dd2c-a707-4381-ac36-18d6abf117e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c07085-db62-4974-9e0e-eea0b5313769",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "530ee310-1860-4991-92f3-20b15ef71a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e3d7a8c8-6334-4a5a-854e-4b03763e78a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763accc6-ba93-42c5-b2b7-091845ca50b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "15135ab0-cb79-4d76-a741-1cfa1b99e708"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b22534ca-7716-4ed9-b6c9-80d47c7404e4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6fee74d0-092d-43a6-bbda-3e360c822646",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66f7073-0d74-4831-b69c-33c6d683e596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1e40caaa-287a-4a8f-9253-c07f818dd772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fbb5741-34e8-4ec8-8f5c-d01c34e1936b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "badbcd9f-a774-4206-b800-d4348296db97"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8665d54-e4af-4587-ad9e-719a6a1f1761",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "33b02a79-5a7f-4496-ba52-ae934c0f7591"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5964e000-6b2d-41f6-a6ca-edfa36d5a504",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ead96fd9-6c43-4b00-a07b-c7847a613a1d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8a56e112-d5ad-41e7-8007-06a66ab0b679",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "72ebf905-f210-4b52-a8a6-b6057e4fcee8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "07342023-fbaf-484f-9bd7-f25ba443066c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0e60cd9f-4efc-408e-9b37-8dee1cb1e01d"
                }
              }
            ]
          },
          {
            "id": "12096ac3-c155-4165-80a0-5f1478f002d3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7292b9b9-345b-44c7-8b03-7257b99b23dc",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "78e1cfdf-88fc-4c08-a06a-e523feef1cd0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b3cb54ac-8df9-49e6-bfe6-668f6828b627"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04d7b233-4df3-49a1-8250-76224bc3c8e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c965d1de-9cf8-4825-9f2f-3b5be72fd65d"
                    }
                  }
                ]
              },
              {
                "id": "4279fb6d-ff43-4701-b66d-bb216f082dbb",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0195c748-3789-426a-add5-d6dfae0f2964",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b234793a-366c-48bf-97ed-9873e2aafdf6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ada3b6b2-648e-468d-9cf9-a809d6464af3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ecbcbaec-3d92-4c80-aaa1-0b3b97cbdce9"
                    }
                  }
                ]
              },
              {
                "id": "286ed7e2-2f21-4425-9e8b-cc79884187e4",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f305cbde-7c62-4912-afcd-6f0c641bd03f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "51c8ad1c-9002-4cf4-80d5-4b210d83a852"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a0d0fd5-6bf4-4a32-87b2-b23940fa9963",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e2f6df41-7792-46e4-a47e-0e5915f8aed8"
                    }
                  }
                ]
              },
              {
                "id": "a0a9e6cc-512a-4af6-9590-e43e37ad57d4",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eefb5515-7a5a-4a61-9616-5fbe12a221b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5e92c497-6644-4dfa-8fb0-e1b4e9bfb018"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a7e174cd-6d50-495e-84ef-368438a791bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "726d20a2-dd0d-4ce1-a5be-9b99f62e390d"
                    }
                  }
                ]
              },
              {
                "id": "2f60a87c-441a-4cc9-945c-7dce0637bc56",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "67f02ec8-f517-4935-9670-3ae2a31a5818",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0bbf1797-2955-4694-b15b-a8741994c186"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce2ffb3f-d07f-4e29-a978-52d3bf127931",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a7efc0dc-c0d4-434a-b545-61fbd4eaaf81"
                    }
                  }
                ]
              },
              {
                "id": "b0ee127a-ebbd-441b-94db-52b1e8db9723",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "03221ce7-79f0-47a8-ad40-c8f69038ac1e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2b09f74f-eb86-4166-b7ca-9086c8272544"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08e68319-232c-4ce0-9e54-2123f2e8ad6f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "68e82932-ac3f-4f0e-969e-71d05c3b0033"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f0a9f632-b112-4219-be05-88f2a92737d4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "381a304e-f91a-4956-a200-e8051f26a3f8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "98de108e-66b9-44ec-b60a-1a2e83b0f6f2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5c70fda3-b185-4d71-8212-4444ce08fc57"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a52c037-2e36-4b8d-800d-a9865ac39db4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b4290d29-7a4f-404c-af93-d3bac544e206"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b7664f1e-05b2-4fe1-abcd-701be127030c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ba231621-da9e-4c75-a5af-0c0ff15f722f"
            }
          }
        ]
      },
      {
        "id": "d85b26e8-1682-4d37-9d7f-85fa8c9d1d15",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "6ef24e70-3577-4bee-993e-f9f86ece4b85",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2cf755fd-4e93-4141-97ba-36fe0db830cf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "71f199ac-21c7-4694-a227-e89fbe21d36f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7b9a40-8b4c-4f2c-9d86-31333d6ca6ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbfbb20d-ee3d-40bd-8fef-7c9bbdba19cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc60fe02-9fef-43c2-a608-0817d5023064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "141d4925-b571-4122-b34f-13b178c10975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f59c7b-04d5-4230-a527-80e2d8752ca8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38539fe5-7c75-45b8-b853-eaa35f4b195d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51bd6e92-c838-454b-8acc-2f0026ed4537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a12143-40d5-4f9a-83e6-73d1db0ce7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6e04f9a-16a4-4b37-ae45-0b2e342999e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff3802e-9fba-469c-a7b0-08b008220ebb",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88dde047-a87d-480a-bf07-9f9b5097bbd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbf9da99-d0d7-4d90-9fb2-703f490d20f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80beabeb-ee10-4979-8caa-eb483fa1629d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6b9f631-62b5-4295-ba8d-9e0e49dbed7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a144c542-e03d-453a-907f-18974b7d88ea",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c0c2e6-4272-4b57-b0a8-34be72589d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b12a457-3741-42f4-b8a9-0d7ae6044fd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a747a7d7-695c-4257-9e7d-1253ba324a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcc5cc0c-b36d-460b-8f0c-f2b4e47aa794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085fb7ad-de5c-4ce4-9db9-ac6776385719",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5516aa38-7dcf-4961-9e99-9a57b3466f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d90f175b-ea1d-435b-9510-455f82e3e570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64487c63-26e5-42ba-b6fd-91687b1d4583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4c8f9d6-b899-4167-a42c-f78623752d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eea9390-ebda-429b-b4b2-088026cc676b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc47420-bb38-42b9-bff8-00707cdf742d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4150595-e671-43cd-95d5-2cd6ac8d5e9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a1344d-d19e-4fad-baf4-20368adc6fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b935ae2-f964-4c07-a1a2-36466807b617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7103da7-b080-4bd9-9deb-549c6127a917",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f2d9bf9-5d96-4a5e-b857-87a425e8015e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e30b587-0fb5-4ec1-baaa-89ad78a96a87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce973e6-504a-457d-b3fa-2967c900366a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e726660-852c-4048-99c8-e46e81425d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f60be0-910a-4187-af58-aa739c3a8daa",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aee863f-dca4-4f6e-8bbd-8c86718a4887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8ad2f9e-2d20-452b-a408-9066d692fb79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ecc7521-44cf-48da-ab0a-a93127386fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf5c8e59-6d19-4a3b-92a2-742393ddb915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41fdf1ce-fe4c-407c-a62e-e63f573a597d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c9908e-d0c1-44b0-9611-8c48a9ca5d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e694ca3-579a-4f4c-9e38-21d1c69c3f22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea6f748-6765-4692-bd08-b53deeabe9ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae25abdb-511f-4995-b842-c25c32123d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95db39fd-3e37-4526-b813-55f4084d85c4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee836a6d-ebdf-42cf-9428-04d71e52f296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "800b62f5-9e7f-4408-b99a-6b16992bddc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "826ef449-58c5-4348-8cda-82ed7dd10346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b692b28-917d-48fc-b94d-3cff8f8ee770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f7cc8e9-949b-4b13-8cce-4b83d3488292",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7600a38-f521-4492-b890-5ec5d2de0724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c165afe7-3baf-4f97-a3d4-1a61635a3251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d37b1034-1e4c-424c-be94-ad1d3ceb6e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f978caf7-f607-48fa-b0e3-fdde2a2e21ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b0fec74-b509-46b1-b757-171cdd34590b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b335a682-2997-404f-828f-4285f0438130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8776c7c-f49d-4e1e-b32b-9c1d0b5672dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c473f111-76d7-4b96-8861-65fc732449d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0892e237-d62e-4a26-93ce-c69d146cb906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad75304c-dc2a-4140-bb7d-1f20ecf09e80",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f64bcda-53e7-48c7-bdc7-e87d398da02e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ed9f795-6e1d-403d-835b-15539fee9d48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff33068d-7fc0-457f-b34f-732dd6fc5689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e59b9f1f-f634-421c-97b8-f3a7e8cf21ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9fb282-817d-4968-bb0f-0fd74fe0b0ff",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad3d5bf6-f00f-46fa-a97f-8274895ba469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83cbe03d-77c0-4981-b15c-2266e9c62bc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c0133c-10a5-4a78-9cf6-142cab9ed1e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bf90d6f-889e-47bc-a1f1-f4cb06d6074e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "274a1a37-4a7e-49f4-b3e9-6859cc882614",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2af68fc-51e9-42ef-a7e9-e26e56d6e80f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eab966d-fd04-462b-bcbc-599c0c0f10a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de9ea736-391b-46db-b610-5dcbb11c3684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "84ee08ea-709b-47c9-a87b-ab4b232bd910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0475c0-a72a-413a-bbc4-b2ff9279e2db",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "044b96f3-b72e-48b9-a88f-184aa92ef01f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de7da95c-1257-4745-9557-d8c38a0a186e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abc2febe-ab38-4243-b18b-7cf39ceae6b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ce081e9-0988-48b1-9de9-30f84cb5e1e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1ae788e-7c40-4c51-a277-4f8a89c2e988",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f539490-4417-4af4-a718-438ccf8969b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13fb5338-cbe9-4bb6-89c1-95a0d1d24ffd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95dcedc1-8a06-4068-8740-73409a987cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "76fe9c28-b997-41b0-a2b3-ced81905fde8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d9be6d8-072c-4e6f-bb98-33d1c741753d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d36d476-be3c-485b-9d9f-c9fcd80baafe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e4f6450-53eb-446e-a30f-332d54c7938b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac988290-b934-4157-8617-4948349d1149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e16aab0-8218-4903-b946-1f6344d49844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b693774b-c16b-4eb1-a5d5-a2f4f1c06665",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d970a3-3443-4151-b879-96906b94d853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b755ac55-87ae-43d0-8034-ae2053d3bb36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1fafc63-a322-49ee-99b1-070ac47c37bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b51c0b8-e3a9-406a-84c8-8041db2cdc1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23359347-cc38-4044-859b-ca2b9ae17d66",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e659af-ed09-404f-ad08-aa420a90edea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a9f7c3e-a263-4730-b857-1f200e87c192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62fe43ed-f2e4-45b0-8071-f75b4221d94e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c2c4dee-65a8-4dfb-ac51-8107460e1768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d37fed30-fef1-4bb3-8dcb-2f68aadcc3ac",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f402339-149f-4e83-a83c-06c198d719a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04279809-fd95-4dd9-9a81-621fbac996f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b239fc-3fab-4605-a590-6321ae9ca7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17a4318f-4ab5-4b75-82c7-7b5c62514d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3893175a-3305-486a-afca-73f75c4ec0aa",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c06c76-9fb4-4e01-82e5-129ad46b4491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba767333-c2f0-487d-9325-436920f74aa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd10fed-6659-4cdd-a2b0-5816a647c321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfc076a5-1924-4b4d-ae12-388cf640e8c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b014748-e97b-4a23-b221-cde9d2a5fc92",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c580a22a-33b3-4b72-87b2-9311e9d92c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f68d4825-b38d-4de2-9182-52f8362468b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e0d222e-958f-4034-b234-947f712a0f86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcdd96f6-d33e-4c20-b063-d111f03ee50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de32d2a3-2294-4202-9932-856e00e22d95",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2bdc13-26c0-4a94-9d38-ea5ddbc545ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5a027b8-0820-42b6-b7c6-81d672a9925d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d238182-d49b-4ebe-bddf-b90eebf4a479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "480acf5e-21da-4801-9470-9c3a533886d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9caccb50-dd50-424a-8569-514521b79765",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d2edb5-3508-4430-9a19-b9f4b0a6c921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c6c5bf2-60e6-4091-8c91-6dd3c0089f38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd6ab10b-4ebc-44e4-9c02-9dc6a1943ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65179465-df37-4a1e-85d2-b3715d2bb137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "537952f5-c31a-4125-86a3-aa7e5e9612c6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99583ddd-25d4-48a4-ac71-9315b802c32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a604043-0a39-4e05-ba38-de23dd5c9d5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba2c826-6fa2-45d1-bc90-b4c06b9e07d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9eb1abe-18d2-4203-be98-8433e8c725d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "773a03ad-7d55-4f8c-87c2-1740dbbf7842",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f946c0-44da-423f-874a-3302587536db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86a45baa-99bf-4b5b-98e1-428cc58a2deb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864d47d7-85d3-4563-8c5f-5c947b9bbb15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "301355aa-75b8-4dea-b0f5-f9133ab82e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bedc0aff-f855-42e3-beeb-89621b1fac53",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "255c6a17-2a0b-4aca-894c-7055403cb478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3f8c518-4f37-40d3-ab15-c6044efbb630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b813c9b-2d15-4383-8f8a-b438a1a99194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04fd0dc8-4979-4af7-8988-17bd96e75892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f7b4c1-e0d6-49e5-9edc-a13de47f08a1",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ead8f6-7dea-40d6-8d8b-345a486b7bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "683ab0e2-9f57-4722-98e8-c312b1ab368c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c451920b-b1de-4690-a6fe-936cb1f46750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f179ba01-ba33-44a4-a0f7-0e249c889fa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea88821-9fb1-46bc-9690-e9ac1a883e3c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16369406-e456-4c42-b266-c6a46101ca59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d789fa8b-fa59-4c17-8fee-581ef31b22c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f7b24ee-e3f2-4651-aed3-80e57e13b307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e609bb91-15ea-444c-8859-fb88b1f56e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "595fe23f-0a13-45ef-a060-b7cff912e90d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "694dcc11-3327-4dba-8eb9-8685e8d798aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6bbde08-7308-4820-b032-47134b8077fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0beb213f-c7aa-4201-a65a-e80eb7051292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6762259-391e-48de-bb22-fd5e68619635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c014f8-3d1c-4abd-b0c5-7378597bf1c9",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02ee666-ebd6-44ae-92e2-e16708938006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f869cc23-69d6-40eb-87f5-4b157a0c7829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e06fac79-56c0-4de3-a533-de9396c9cda3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47a56c41-7aca-4ba1-bc07-e1c7ed7474e8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "57ad57ce-5fec-4f56-b71c-256ec6cc759a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d55212b5-3a8a-4578-92f7-b62695a3f487",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f7b4d6-c1ac-4c57-98b2-f56e877c180b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5355e8f5-454c-4bb7-905f-963fcac073b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d206327-e423-473a-8932-79ffc3642f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a36eafed-afb1-4f8f-9e0e-82ddff35fc53"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ebd9ea9-6126-475e-9d3d-c53f3e3e3072",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc96dc91-5bc1-40a6-b39d-aae5f7e3f759"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1020bd52-4e50-49b6-a03a-5dec51acb756",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6935d241-601b-4b24-ad71-c351bdb4a731"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7dd6992f-7a25-4e8f-8e64-ab5a15b94310",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b732c692-e369-4f0a-8e01-2776e0a217a2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3320a9a8-2e02-4907-ad14-6b35e93179c4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9e89bf6b-a485-4421-ae0c-834852cb2381"
            }
          }
        ]
      },
      {
        "id": "2d0dfca3-ed40-4f34-af51-2fbafc3e05f8",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "3f01d61c-0f37-4481-b5c8-f8a05fa0289c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "572d3e47-1db4-47ba-b636-ca9db7fbe01e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "544aae62-f0bc-44d9-8b9b-3ccae998e088",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "935dfcf3-4502-4977-90f6-5f5b25b82797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcef10a9-7a63-47ee-ac73-a4af20070e88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b3be41-bbfb-4852-8c08-ad6b42b61ed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfdf94d9-d8ea-4c86-ba62-bd303b767202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b53a17-8ab4-4640-8fd9-4afaebe6c42b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "407a2cd7-b531-4576-b31c-8185a07dd68c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea12d76-9bd8-4498-9585-9593b78f1c55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb3eabf4-fd74-4e3f-a781-a392e3525e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8192fb99-40ac-49d9-957f-d4c4299b00d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff31689-deb2-464e-a946-ff76cc977abc",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a5ac06-bfa7-4c93-a401-f4fc04cf307d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67e940a2-3330-46a0-a7a0-40a8da9560d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc418620-3293-477f-b136-321d45ff3f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "422e840b-a713-46e9-a22b-64256779b7b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93cff16a-018d-4d22-8ad5-49dbf2a0a4cb",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "002e828d-06b6-4cc9-bced-330999fd8a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d42cff4-6fc1-4355-b3c5-be8b0cef4a5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d580655-f6d2-4b03-a619-9d1efa251dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "13c0eb8f-cb27-4747-b6b5-4d4d5467a528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "262c8bf5-a439-4bf3-9dc8-2c0760a5551b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a992bf9-dee7-4576-85e6-b3bea6adb841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4013221a-b7df-4626-b0e8-f4fa2bed3b9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d4bf3aa-9987-4b3d-baba-1cd84fec83b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "245f8875-d575-4f70-9c0e-c9907fa3f36a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "885a774c-fb8b-4ddf-b890-6a7e0d6de00b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a4d82b3-86f3-4a7c-9e33-4c4fa0854ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db54ad83-5eb5-4b03-b072-5bb706bce397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1acdb93d-1564-4b8b-9497-0f84b3278f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4da5073-d84f-49b6-9e06-3c585f89933e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db9a41f4-15f3-4656-9747-c84aaaa847b9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5edad047-fc49-447d-8c3b-aa20eac13173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e770d45-a30b-4756-9be1-eed5a82a221c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48f806f-df5a-4053-8ad8-3e8ebdd70c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "18e97408-2796-4da1-bc0e-b2adb284c4a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d1f5e8d-3088-4297-a2c2-9cf54c5bf23d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88235d48-9b21-4199-a287-dbf2eb96469e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47e355e8-09f7-48d7-b9e1-cfac31f3d2c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7510d8bb-74ee-4824-be90-8b25e97821f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae77dcfe-b89a-4f04-a02c-f10c39b13ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a814f18-ecb9-438b-a2e4-3da6b187ebff",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be9d84e-3b8b-4517-a164-a70bf2d2c0cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f3ff62f-cc42-401a-812d-abc8ed59c2f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb5cefe0-1924-4809-97da-b57041e313d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "850603c6-4856-4036-bacf-ccfaa2d8daa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ddb1d5a-fed2-4acc-9f3e-75cfff5d3206",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f8a160f-df63-4ff2-bdaa-356ae55e5716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a99938ad-3e4c-4bb4-b98e-029c2bce52ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a0465c-19a8-4676-8975-57fbdc471d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bb51ca8-bbd2-425d-829f-5e5dc5b210c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df87bf70-a089-423f-8f22-eaa48735e1d9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "468a54ab-ed89-4485-ab42-af7881307935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcf88674-575a-4c1d-ad5c-74bf1c2ae8d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e50aac-8801-462a-93ba-5766f711592d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1b40dc6b-44d5-4913-ad2a-105f1ffccdcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db7c1127-8311-4865-b3da-2c4485fbccb6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3457ebeb-039a-4c3a-9b48-4d5b95eaf8bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8faf837-7625-4d6c-be45-a049472b1947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda7417e-5780-4c5a-ba36-e2f7792f7e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8dae54f2-d219-4d04-90d0-bc74abd9e49c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e36a9e1-1c35-41f5-a496-aa21609bcd3d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3884f4-3de8-4b22-9fc9-fbe32d34ead0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8213ee87-34db-4792-bfd5-a8a192b7a8e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2969ac3b-df37-4726-9961-138f94f68c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e44822e-d899-4b17-968c-58d47ebf58ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b08e4c0-c64d-4d92-ad39-0401b93aff15",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "663ba730-e8cf-4148-87f2-c05ba5c323b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17363049-fda4-43b9-8a93-5a8e62bb518a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b40c4271-6b6c-4bce-a4d4-8899c3e095c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f430ea5d-a66d-41e0-b132-6c07eb421e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10acbc9c-6ccd-4024-b3e3-647cb0fc9208",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "556ce367-a6e4-4200-8d90-d900ffa549b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3ca7630-ad83-4100-a8a4-75b61761615d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0643dfa6-775e-4d0e-b0c3-707453e00e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4e0e50a-cf27-4ba5-bdda-2f929554ac04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e74272-9b83-4d58-b092-78f57833e722",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca5654b-3061-4f2d-84f3-a413d248aeac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92a69bb5-366c-4857-ac26-8c10417da024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d0eb6b-cc4e-4a6d-9020-84ee86284789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4e79ca5-e935-4c98-b0ca-d90ba5bbebe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73794d13-966e-47f8-9147-eaf0df1715d4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39aea218-dede-4d2b-95d9-e29aaef9d27f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf0b1027-22be-40b5-bdb1-94f33e62c78d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86164861-da14-49c0-91ec-0c717b9967ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab56cd55-a30d-4b41-98ae-777a80a1ce02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39009a1b-e3d4-41e4-a209-c7e12ff8fc71",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a16fac6d-ef8e-41a2-b6d2-b13d413872dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a98b8d5-cfb1-44b3-b3f4-415c8386a94e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "191877a4-a46f-4a11-a07f-7a48faab679f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c0ded18-a3a6-4059-9ac9-ee6b135b02f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92912f49-c50b-41e0-a772-87000c7c8191",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd89bd8-0cac-491b-830b-c373a6ba1463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f10f062c-621d-4672-9aea-512c918d3f0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a5dcce5-d985-4efe-86a8-7f516624ac53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f83ad079-469e-4c8a-9b0c-f2be6cb35c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95885701-2d7a-42d7-b491-bb46f6adb956",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce777cac-b0a3-4a18-852a-f78c3503d9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6935b099-bef4-4ac2-a1e2-512c9f63af32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeefd7ee-194e-4e74-923a-dd2239123539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b344cee4-8e2a-4972-b528-bdbef99c0a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "179e3fc4-f831-4139-ad50-d1c9d28803e5",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1221b6ab-7013-43d9-a105-56f0c0ff7970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6c1ce21-da5e-4f74-be82-5e65d9995b14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f80da5-af4f-49c4-a4ac-32096688afc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "366ff297-e2ff-4ae9-a612-23ee13fb4676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08361d3b-afd3-4cd2-ad4d-17f95730b541",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d48ee3b-b3a8-4dd4-a534-1d07865f90c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca6905e7-ac62-4a76-bbfa-2e9ab19541e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3fb22a9-639a-42be-9f7e-99b8da29e826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3597cf15-6fe9-4e38-a494-b35b173dd5db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b6b305-2d4f-465a-b73c-c0dc69a90416",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7823e7c2-e6e4-4935-b2ec-21077fb176e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a43c5df-0855-4b8d-9b3a-d70873dde519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb26527a-1777-4f95-8a43-35e7e3973364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba5af6be-deda-4b4d-99e2-364cf15ee9c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7825d3-bb82-40ec-a98c-f5087f27357a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a7df39-405a-4021-8f55-590ed04121f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5878c1d5-5266-4aaa-b715-b549d22d5beb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f1b0656-d040-4d7c-a6e5-70f1f5b8a19d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93b4cc74-b837-4fff-aa2c-8a0ff1558e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10924841-73e6-4782-bd5e-251ab6912d8f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1cfc63a-8094-4ac6-8f70-e0c2b218a99d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cb6d2cd-ee0c-4c11-9724-0289dcb6b19c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "918cd1ba-b1ac-47c4-a2d3-bb402df408ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e956920-98c4-48c1-98e2-a742ecab62df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f433e73-d9a2-44e9-8c50-d122f7bf642d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23310461-4292-4479-b83b-7d3e71bb1278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27d0e988-8c9f-4b1b-b51c-b8c9ebf4addc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c772a6-8195-4345-bb34-a5097177a755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f826d10c-2b6a-435d-b9d1-025915fc0914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1dc5aa-ca6a-4d0b-bd4a-7ffc99c40982",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "810ae63e-85a6-4c67-b78b-8ac1e8cbdec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cff5276e-0fa6-43fe-93d8-2d882c6af575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ecb481-2655-47c8-a7de-e14f661cdffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8edb649-b321-4755-8158-3479bbf1d4a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9adebfe-b4be-4ce2-b491-ba3465402114",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61305b7f-43d7-4aaf-b161-04c75860229b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17c32197-9569-412c-b4f6-964ee6976934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f81988-3811-46ee-9d9f-cf6c525b58f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "438c981e-294d-4c89-80c9-ab957220983d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec77168e-cd2a-4c1b-aa1f-b97e506f8a22",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb43892-4c18-48df-80ce-0d4a0d58bdfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d74daac-5d0b-4c88-8a9c-08d4a285b924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d50332e-abe7-43d3-8344-b54935e91272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ce03b14-eeba-44fb-a890-2cb66b24120e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df58947f-fb1a-4b87-a318-d177056de563",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ac25bd-6cb8-4c92-b6f0-fca87cfd0900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee4c9d24-9e87-4089-a722-b2ef9fac530c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92f2459-078f-498a-a576-56ad2f5d5a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb94b88f-fbc6-4719-8217-ed57973c5d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef31c45-3f2c-41ad-b0d2-4fc179c0bec5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45f81d1-605e-4b9f-b3eb-9f0b443959ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eb06c5f-1c8a-4264-8e6b-1eb21a46786a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8103763d-19e1-40e6-83f9-11916d4970e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc28dde3-301d-42e5-badf-fc28de528900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168d4d11-d187-4fee-86e0-4c4529ea7778",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92cb91e-3bdd-4034-b809-cedbe8e746c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a187532-ac97-4668-868b-adabe04373f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f58808-7df3-4d54-9959-5d3b2dd48ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df4f0beb-7ed5-4673-b3d7-926bcf45b6b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e224c23a-afb0-47b7-beb4-e2f0aad82bc6",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c917bbf7-d9ee-4824-bd3b-c6f7db47b3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae01843c-d1ae-4e2e-97fa-b80ef79815a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c2eb90-d13c-46c6-9421-2d59895e03be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51de1583-f32d-4eef-85a9-034dd9394286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66427ce8-d4dd-4fcb-ae09-23611aafa6e7",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc55b8d-0577-4944-9c77-ee005547563f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "097fcb40-923b-4529-ba71-eb59936e2b0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c34363-4395-41f7-b39e-ac0325b90e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce4423f8-f3c9-4284-90fd-8ba4cd59837e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c2726c8-badf-4350-991b-8fa825e41c87",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fb58aac-2af1-4c55-a651-e15b9b082258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fa4cc9e-665f-4019-a3ca-07e9728010bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e371b9a-d8ee-4e78-926b-26fc5d1ee4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8accba84-0099-4420-b8eb-6af7c170d0e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf477dff-b74f-4f8d-8011-1b39af948f6e",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16bd4626-6018-47e8-8e47-34d360e023bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8b20dfb-c3cd-4ed8-ad3f-7b5dca86effd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dcf31c5-40bf-401e-8b66-988bc3feea8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac156f05-0485-4f12-b0f6-87a63e6401c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fbb4118-0256-44fe-bc4e-00e4b81142c1",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c3d37e-586d-4601-99a7-3f004ed43c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0535699-d116-45c2-b7eb-1e92e03ac9dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f37efef3-2fd6-495d-8876-79324b5d39d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31476316-326d-4dbe-987f-1167b21d9f78"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4b0c29aa-924b-4469-b723-758bfa8b82dd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7ef5f9a1-3355-4ed0-b769-58cadf23981a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d56179-ab47-4519-a153-f522423ca574",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "23ed7842-9634-41b7-8f42-bb2befb3ef05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb1a09a-9df9-4723-b15a-6502bc433d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2bc46970-8362-44be-a0fb-4f062b661e03"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d52449e6-c130-4a02-91ad-af9c867ef97b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "703bc205-0091-4e38-b741-49537533b563"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4dc737f-fc59-4a1f-8f74-1b1bf817ea8b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4724d9f3-0d8c-4cf6-b662-1068ec397a70"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f1f4d96a-138e-469e-adb4-fb2776dcd76b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5b6b7777-b776-4179-8fe8-918319d8af51"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5baa742e-1f3e-4b8a-bcb1-0859e28dc0a5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f640b189-49fe-45ee-b867-636870b96b0d"
            }
          }
        ]
      },
      {
        "id": "f21d9a1a-3102-44b7-b8f7-8fd406655a60",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "7a46593e-eacb-4c18-8d6f-83991dd0c8aa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "db0685a8-63fa-4947-94a6-ef57ff792f94",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "23062fd2-3642-4811-8466-3c128c7e919b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2695f8c-21a4-48bb-a50f-7327ae8da237",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "640366db-a2ae-4f27-9754-2b4528e70a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7733b3eb-dcfe-4065-a770-da24509631f5",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e34e86f-6fc2-4046-9837-fbcb591d0c48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d687255-3ba9-4f43-98fb-79b18fa6e499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49be5c77-0119-4a3f-85b2-f5023ba56716",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b9ffb5-9802-4438-8e21-7bfe23db02a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "552fa47d-4d4a-46dd-80ec-9b97b64268c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3bced65-cf83-44bb-8862-e181a3044f1b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff046cda-d121-4de8-ba3f-01e1109a8900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b678b11-b9cf-4fb7-8288-c659f53f5677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecdde21e-bdbb-44cc-92fc-869f84d1ab64",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e43d8c5-b6b8-4b86-b7ea-fb7656874211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01b9a60c-c31c-4ae7-995a-47809740bbeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c2610e-4afb-4ce2-9253-b34cfc36c259",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecef57cf-807c-4dad-b3c3-f44e312097f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa40c9ac-1b3c-462d-9f1c-a3042116c8ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12140257-aa12-4235-b08e-a5e203477034",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a36edae9-900d-496b-b6dc-f809892d9b50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9027b7ff-e2ba-418e-81c5-f69b7dfb346d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2257ac00-8580-4d7b-87ca-c1b66e5bbce1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05eece1c-c94f-4417-a64f-1421061e2f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2956c646-22f1-4498-9be1-cd226ea7b8a9",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87eb09b5-4204-4a72-81b5-f3dea7f01e64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2a40a57-42c2-4ae1-9963-200bcc46df52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e83f54cc-f2d6-4b67-93b1-e8bd1644504f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fe220ef-aef3-437a-b782-4c6bcaeee2e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f19186-c987-41e6-9977-64a679dd92df",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d81ae7e-1e9e-486c-9dc4-ee9d7c4ae53f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3663e36a-c91d-4266-967b-ab9f0ff32851"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b67e44-feed-419c-b85e-e2cc1a34a500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "381c71f8-7e50-45ef-aab9-5df7a6251364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c1a3741-e3aa-41fe-a3f8-44c2cc69fc60",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edfad547-935e-4756-838a-7919c475ec33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75b42080-e8df-4487-bc81-dcf645b4c3d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04055baf-ddcf-4284-bb90-20a7cc52dc3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2b5a0a7-32e9-415e-814b-8d4c93db9c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43723e4d-efa8-4b2c-be44-6d26367bf3af",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2904764f-5b53-4af0-b064-fc32cbaca7e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8cf7d27-15c1-44c7-87a5-bdf2c9a0cd96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15758a84-468f-4039-a757-de79f132d824",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b332c295-2f81-40b4-8851-519ab654cd7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9510b5e5-a1e9-4f00-a289-d9676acbfb36",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c77b346-b82f-4215-8a7e-045b772b097a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c25642a7-c9d3-4c74-98a7-285fad656eec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01addc7f-5f71-4dce-9473-0556fbd41309",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39a16d8e-de3e-4335-9d46-ea7faaf0061f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8392a085-a154-47a6-8c1d-b847bbc4784c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c7658f-6ddb-4e1a-be2e-0fc0cdb06e65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "379a71d3-32f8-4339-a068-7624d0c58569"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4786bee1-d65e-4e4f-b3d4-093b4295dbc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "063d38ab-c59e-47e8-b481-d3f668d762fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b6f718-1602-457c-a00a-3dbd13978e34",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5ac1a3-626a-4f96-b4e9-bf44b0e35ca5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0869d21-f20a-427c-9dd9-0cbc15f4fdc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d35e87-d54f-4ca6-8748-dc7df603aa03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cb57eb9-c242-4c92-b764-e5926334be0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4d379e8-ae57-440c-899b-eb1b3b81850f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c381417-7aea-4af4-82b4-0c7154e9f799",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "188d2511-4481-45e3-9932-2d94cbf15a2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "371e080e-3ffd-470d-9c7e-614a2d8bc39e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2a22ba2-264b-428e-8250-db8e5c208e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7a1062-ac17-4848-88d9-191d80547edf",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0933cc5-aaa2-46bc-89ce-d491f6e83532",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cd0207f-f307-4f18-baed-ae6b64ccb64c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c85772-cd93-4dcc-ae79-45a78ad55184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6082325-aa78-4921-9bc2-c8d5fbeb2ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a0147a-fda1-40a6-902e-c585df96a9d6",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f9c6fbb-1b06-439b-8376-234532232abe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48f2df1e-5457-4f7a-ab17-b0b4140bb6d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e57315-8f7e-4216-b13c-6e132162a311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e476008e-7f5f-45a7-8b45-7d4424109441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659df7f3-4889-4a5c-a2b2-3156603583f1",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4813925-f2d3-49c6-ba14-9481e37add4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b0d7562-0443-4c28-b6b9-ae4f70677eb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8a4593-b615-4e7d-be5a-0af3b818332c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78ae15d4-425d-4c66-baad-1c20515ec272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ceda044-1e7c-4889-a590-c1e5d0551a20",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d08775-50b2-4954-a3a8-054b8ac2c9c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48c6561f-25b0-4530-b132-01f60aaa5176"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0590fcea-adbe-4b39-9ab8-a1c723e54cb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01906c74-5e30-4751-81f8-64a4308cfe68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f70e6119-5c80-4ff7-b2f8-366da9ce73cf",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff96789-75f6-4d2d-bdb7-dc99e007e09c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b42532e-26bd-485f-be2a-2596963ccaac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0020678e-9c12-4ed8-8d26-e1ce8c77d607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7c9d5a5-e937-4f0d-8f4b-8f029c78801c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fc96808-e87d-48fd-bcc2-93e28b336687",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8055042a-ba14-4b45-b4d1-609044ad5009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da56f3df-38f3-433f-80f5-0699ab4d2eaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13633bc-5abc-4461-bdc8-528c62482514",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb5c4e55-ed6e-429d-a0a3-dba7aed7eb21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02660df8-a3d8-4707-bab8-0dd14594d15f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "489d0ff4-53c1-46c0-b78a-39401bee2fc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f1cea8f-94dc-44a9-823e-aaf4ce14602a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7eb7375-c4d6-4b18-9acf-58b961238bd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d985b54c-413b-4860-951b-f4e4ac24a507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a341591-4fd7-47fd-8dff-b965290681ba",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d476d033-3b0e-4f94-8b68-5137efd6b039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7eb1471-ded8-4d52-a377-53e5da737f90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6a79191-93ef-49f5-b260-ac858bef38a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a94bbd9-7798-40ff-8df1-7866a8361d49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a72552-1738-4b16-ba19-6de7b4aef648",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0561977e-abb2-46b5-999a-831be9b054b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6add2001-1712-4764-84d1-a5c59238d79b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91103c1d-e2a7-4e2f-b5a4-8d98d21d5deb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "371213b0-d1e4-4e99-be4d-ea9c24772241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccab3cd8-47a8-4e3d-8121-20db0237b083",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f9bb2b5-ca81-4e90-b9a7-83c4e664bbd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab4d6f98-ebfe-4559-9307-2c6dc42530b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ec32e5-f7f9-4a31-b821-a9dab784019e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbf1c50f-f780-4f04-aa1c-e65228d10dce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0889ab7-b9bc-45a6-a3ff-9918ecb12d73",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "326af204-69db-4209-83c7-a16dd10cdc9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa7f729d-0e76-451c-969e-a7ce644c26ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff8f948-abff-4ac0-a36d-f5af1270a3d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b0efd24-1081-4aa8-80d8-b1147dc17043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be85d203-c410-4bb7-9832-00215fc35ebd",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95f374b-a5a5-4269-94e5-140e089d8c35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "919a6d53-abcd-46e3-8675-3973e37ad955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a771044-7d50-4b1b-8b63-9e49d5389cb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9155e3b3-1ca7-4213-ad3c-99442388c744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "509b9449-1d28-4b72-8c4f-310c8e5847e5",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52255930-2abf-4536-8ce5-5c9f1129ce33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1da1f8bd-eb96-4c85-a414-1a5ceda58d89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccfb87d2-b943-41a7-a1aa-ca0c9c53270d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "501ff7ab-5cb9-40a9-8ffa-19efc224c4cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b70a0e-39f7-4f3b-b166-fffffc656a24",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c192bcf0-39d0-45ba-8ceb-7542ca0dcfbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5541d754-3470-4259-858a-babadfb9ac0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a156206-ac39-4a00-bc80-d41e6f75f4e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bf9d26d-c387-4d70-bd60-85d5e0a0d012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd58767e-ea1a-43ac-a044-76ee2c3511d5",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d9880af-4283-4837-a30c-0840cffa10ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5374c5b-eab4-4d01-b665-fc731df64349"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1bcc8c5-2cb4-404d-b484-7ad6dc7a048c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "549e1a70-5a62-4012-89ac-d0f06b68b93b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd4242f7-c19d-457f-afeb-848553eb86c9",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8834b445-596e-4e73-88c1-002966817665",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4998edad-ea2b-401f-9494-7a9c07e7181e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ebbb21-3752-486f-84d5-b3469f75a600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64d59b97-bf38-4fc0-921e-36ddc72d7587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74dcb74e-bb36-4465-87e1-a28b955efc0f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84598d34-60bb-4b71-a49b-51b025c1796e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b56feee1-6981-49ad-9213-3fa8bdd0ba00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d604848-2b54-4532-9e45-8d58e964091c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cce953b-7ded-4af8-b4d0-4055b5c91149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07482411-b0c3-4822-80a3-20fe0c55af1e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98774c8-3579-4459-ba66-04f8f0d470a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4518b6c9-3d15-427c-bcd9-8557c3315f2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01176529-d84e-47e6-9a6b-35d2e605a960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "018e325a-086a-46bb-9c42-648dccb83827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e291ff-ebef-48b0-a2cf-e98a95237455",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5501659d-1626-4cdc-83e2-c3ec47e44106",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2b3e0cc-a241-4c00-967f-8aa3364e9f7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed51270-7cd6-4be2-93a6-3d23e57e9969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26b4ff25-d419-47a1-b4a8-b0915ed5902f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e35bdc-9cb9-4209-b3f0-fb8944a05c53",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa5308fb-731c-4e40-bf32-03ca5abecdf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e3b1fd6-0441-49ea-9ee1-348d2b0e62c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "396935ea-de4f-4bb5-b63f-2884c84cdd45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b3f0a15-19eb-4f02-ad3e-2229fa105711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe17d56-262b-4602-b164-58f4428aab44",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15789cf2-ccd7-4d55-a4ef-cf54ff524633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0646bba8-0e8b-49c9-af39-ab219c4a2bb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd81350-62a6-4c72-b790-5045a0aa5e7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79164a5a-950a-414a-b1ec-a25b354480f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5a0279-d19f-4660-9292-58a4a8f5252f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6597b7b-416c-4556-919b-5d4b46949d37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7689943-3e74-46b7-bd77-0bded07e6a0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa70b08-5560-4bab-a07d-f9c895b63367",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a713e8f-92f1-451f-9e81-0ad25fca2a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b86f5a9-0bff-4fa5-9d95-3ebd1f2ae2c3",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f93aa937-f489-49d4-a710-4df6e1a20d33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9cd2d8a-ee89-478f-ace7-68a1474c24c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f761a69a-aadb-4197-a095-01c3d1a19667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93e3c0fc-997a-4726-b3e0-b6b91121e7cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "831f269e-7b96-455a-8c8a-ac36102bb434",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2297ea9e-38c9-45ce-bee1-cc48d0be2d1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "352462e6-d47b-4cf4-b6ef-cb9e31d7eb78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc3b0cc-f108-4bef-80ff-64ae374adde2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa978848-ca7b-4dd2-aec6-4988c923b06b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe4b6d8-d121-4ad6-964e-836e68f278cd",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f587ac-dc14-4e6f-81ab-829db3d469e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02657ca2-40cc-4e05-8c22-c70c8cec107a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c4a221-4676-48d8-9b96-8dc0cef32cfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1d8019e-42e8-49f7-b15c-ea483839dfed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0416cee4-60be-4523-8582-02316b29e0de",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1aebed8-b410-4cc2-bfa5-e9394b682a17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd6829a2-c384-4954-b209-8eb0dbd6c8e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7186f9e-7918-4cb2-a4df-4d3919326c49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae3bd30a-ab33-486a-a8d4-2d8743d07910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e474e218-a84a-4fc0-affd-f88943b1b5d6",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc1226c-e2b8-45f0-af5d-eeb706bad235",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2911388-e25d-44dc-a601-b49136f90181"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e49f658-b41a-49b0-9890-4d7f525981e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45610540-5a04-43c1-b488-599165072f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb1b5ef-7bb3-43d9-822b-b2d82256da23",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "618e473f-d48e-4d52-98e6-283d740c77e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa7c3a2f-9827-4c7f-81f7-b12c3b42c516"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9896c1f-28be-44a4-97a4-2fbbb330757d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "255cd010-fcf2-4f6f-9f0e-7c3f32bec148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48779fbc-097e-415b-885e-dda419c9eb7a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd92f8a-9323-4a2f-b7c0-1d5658c0801a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59a0f95a-1955-404c-82e6-2354bf0f49e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e7713d-2bdb-4d04-a14c-b3e5626029ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aefc2d6-d56f-462a-b886-a8f8355724b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd513dac-983d-4074-b74b-3494a4ebb18f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "034e54f0-c767-450d-b3fd-512d5013e266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d60f32c0-ab92-4ad6-86d0-571f0cd0b7ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df3872c0-90aa-4ea9-8fa7-2e926c5a035d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f723d90f-b37f-43a5-923e-537db6889031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2eb93d3-03ae-43cc-a131-53bcbc3a401f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29fdf8eb-1fe8-4489-9063-bbbc8fbd9db1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee5ff6f7-60d9-47df-98c9-33e39569295f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2c35b7-b688-4026-9114-4f901c3af67e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47d7db30-0a86-469c-bdfb-6e53a3335ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "191ee97e-f27a-414e-aab8-d9a9bff7edcc",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "026e6574-70db-443c-961a-1a796fffcef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a4efdb9-303e-4e82-98cd-8ed6a9cdac78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb48b75-2ba9-463d-96f0-796e0fe25e3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94cfd09b-9770-47a7-8af1-dc7516cc0bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d1a221-c666-4675-9da2-368d17c332da",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f7ad4a0-ec7d-4130-be25-2a598de2e6be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "176a9c7e-80ea-418a-81df-ba0ab63da500"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "247f61a9-cb6a-47e6-886b-d39b77993786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ede77c5-8b94-48da-b5e3-5be6a90e4401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2395bd49-8661-4c64-a44e-5afcc8b1766d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a0014a-fda3-4370-bcee-a409907b9ff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f332b39f-ee9e-4555-a967-15893e03750d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d283d3-b53a-4af3-ad41-077af246a937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c68c2c2f-96d5-4f45-b554-c4de4d8b247f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b321198-0009-4c90-9097-d579524c57bd",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f964b83a-3bfa-4328-99b4-1256471338e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d84fb80-1a37-4a3e-bfb7-e63315d6323e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c893f175-a03b-4d75-8667-145231a0feeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55eb9719-239b-4a3a-a248-2a66edb6781a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f18c76-50be-4195-9dfe-254a81be743f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a915526-f993-4bee-9a0b-d1f03d65fdb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a16d5d1-32c5-4cb5-b54b-ed24a9b758c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e840984-fc5f-4a9b-a94f-bc3c094faa01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a40c358c-5a65-4cb2-8c93-e4247a03b05c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0b9b198-17ca-4465-acba-1de088d42a91",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae325ef-c943-4b91-b536-3b96a26a28c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a67c8e74-703e-4108-b0fa-6b05196921e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00216b01-ee43-44d9-9da1-81424bed9a89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bcc81f8-c708-43de-b16e-207ea237bd1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b72b22e5-9df2-4264-b987-efeb93f1d3f1",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8728fb-a51a-4331-a18a-bd5e499d54ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17749397-de3c-47f1-a313-f4b6e17e045c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4424411f-ca80-41fd-81ac-9d9df5b6287a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "692b912c-8a5f-458c-8df9-fc92f776b6c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea486543-001c-41e2-9d0f-f1d95613a400",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523a590d-2f22-431a-ba77-c0aa2e2dff6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "461d04d6-fc29-4c64-b557-b23387f0c763"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dab4a43-fcbe-4120-aee8-2ef88d716dac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f440cdb1-d814-45dd-9e67-a731dfb0112c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "105542b9-772d-4612-b377-12b2273ada78",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f72ad1de-e188-422f-a5e6-1caa1e555898",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f92d1ad-20d5-426f-a81f-9b34f1465652"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a744df1-e392-4b79-b923-f63b59ad4a50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bddaf7c1-da99-457b-b491-b0e2b1f3a004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a64771-5a5c-4c3b-be3c-366cc30aa780",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c74ea9-4beb-4ee3-ba42-338b7aed7ca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdddb813-eb0a-4220-9939-431dfed92c83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55eb7145-2edb-48ac-a21a-2e675e5b2716",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7075c80a-a379-4d64-b4d9-6ec1dbee379c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9803fa18-fbee-4945-9664-c5dd8db22116",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c44ed0-c860-48b8-a2ba-4a1984ddd117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54306ef8-6501-41e9-99fc-eb97e4aab056"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92824fca-f622-492c-b1d3-e526f8404678",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e69fed0a-f8d5-4f89-8fe6-3dc6f3a1a65b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f176da-8f31-4a42-a78e-bcbf8924a2c9",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f7c036c-795c-4fb7-904f-a298bc77f5d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "470b5488-90e6-448b-9666-3b048c580f7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3db3cbb-5f4f-4f09-a095-4ede6f2e1652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5acd803-6be0-4aec-8a67-36b8e186f9c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88e177e8-2a96-417b-8bdb-aaf0ed145f51",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daf22910-fd16-4bb2-b3aa-b5f5d5a3077a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcf7ef18-6f5e-4abe-a600-40708bb37924"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d8f51c-0289-416e-b37b-c6c934468330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9659a4c4-5264-43eb-b2ae-55256ef3cbb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e0516cf-0494-4ed9-9a8d-a45da8f38929",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3683f7f-4e48-4b3f-a5c1-a7c552b7279f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd12f6bd-2139-4c18-b734-5e766c660949"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21e3497-3f67-472c-a852-df4a187c69d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2907d036-98e6-43c3-a03a-e71f7b0ae4d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b97d98d-a256-455e-a673-589a3ba8f6f8",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a04f841-775e-4869-bf84-bb91a65e1c9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94e3b4fe-fbba-4649-98bd-8181d77f1bbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a8dba9-ee82-4bd2-a743-1d09e0ab22e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb7c1925-3776-4c74-af04-5e6c41c577fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96dbc18-c035-43c3-a802-379fd803b6a1",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be0daa98-a1f8-4d35-9250-c8aee9ea0358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cf993cd-18fe-4fa0-8ec3-f34c78e43cc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f21746-1a87-412c-a9a2-fdc1f04e5720",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a96cd13-e246-4127-94b3-32dbff3068ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "402bd0c3-b4ab-4ddc-8eaf-2336cb0b14e6",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6708d74-602c-4e08-a88c-fe97db8265da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "278d0d73-5345-4e33-8f61-025f63274ce2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7017dd-330e-4d75-8ce3-aba20643d1b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a124705-b509-47a1-9b32-9d606e06dfe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8bf180b-a8ce-46e2-8958-e75a22e820a0",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27e1dd7b-e8fc-4a87-952d-d685b877cfdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26c13515-7f2e-456e-80af-53f965dd7e74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74dfbd05-53a9-42bb-bb0a-0ef9527b1423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4044ca14-c8fb-40b6-a409-96bcc99a8d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "376ec5e6-b4f0-4c3a-99bb-b752ec4fbc92",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d50488c8-4a54-4663-b0f5-88fc82fbdcea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e7891a4-b1ad-4e94-82cf-3b13b34761c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af11334-5d11-4eaa-9043-1a14e2fb75c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ef5fd30-7419-483b-b953-9a8e17aeb9f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa06b1f-8eea-41d9-a623-065afd347147",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f4fc13f-633d-47eb-a6d1-bc159cf1b560",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d9fdcb9-e0e7-4c6e-b052-88cd38da499d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e11c941-a546-4c59-a9b0-133bba5ef5d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dee67234-8425-4510-8fb1-53afcbe136ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65dc2e9d-9e0a-4fa6-a69f-4502dcc18a55",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b416a26-3f63-4b9e-8479-576fa616b322",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ca8d477-caf4-4bba-980e-0886b73e6861"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba02da3-cbf4-4256-b4c8-699d054eaa13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "856c4f4b-071d-442d-9b7c-45e4c61517ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9cffcf1-b181-42b2-99b9-003fca1c902c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bdc9c76-51d6-4701-a76e-063356d6b3f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5502785-27ae-4ca8-87f1-600b7d8756c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "880f0cc0-d0a2-4ab7-9b40-513868788b62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d96fe51-3868-422a-aa12-4bc4cde60623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "676c17b1-fdac-4b34-8350-d58a73cc362d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a96606c-50c3-4f10-8c25-8dae3ceb594e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9aea6027-4b33-441d-8e2e-653e960d052d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3bf840d-0615-48ad-be99-1968ee7f8289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1320d5fe-0bee-4d6a-a7d6-f029e494e8c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765db581-b377-4692-bc8d-fab9e3eb16c6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89467c9b-5ab3-49e6-a1ad-94a84658a90f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3edeba02-457c-464e-b172-7cf611a258f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c1d4579-5eb7-46e1-ad54-8850937fa1cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b6fcd1d-0324-403d-9a7e-ab430c0d281f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ac917d-bf08-4a30-bef5-1b8ba2584c7f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece0769e-dedc-4e5b-ab53-432125ef3383",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03002eaf-881e-413e-82a9-0c0d1985aa16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "365eaf0b-09f3-4ff0-b8c1-b05f5596c3fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d5930f8-6046-4800-8377-4eb3163d0dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d99769-8a1a-40a3-addd-646f401d2362",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d32cab-5e6e-4878-a645-94128df9f50f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b7dee46-c33c-4810-9a42-c8b91695feba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17487dcc-adef-4677-a1f0-a0be45300d3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee6e5e25-93d3-4a25-a37e-668eb5aa46de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71de6e1f-87eb-4fa0-9c4b-fbd8d1bf3c40",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a2b2ac-c6c1-4c9b-aa71-2320df49bace",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c334811e-815f-4a21-97a6-5429dbb84354"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f392dd-e33a-4413-a147-e7ecc76f9352",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e1704bb-78f0-47c9-bed8-fca31b24a8ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b79b6be-e3af-483c-950a-d287061d54bc",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548cf743-0870-4784-a6e8-2f94aeb713eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e01bd09c-3f22-498e-b8f2-fd5170bfbabd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e3d55e-54df-40d9-b35e-3ac33e40a117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10220d45-7314-4a27-a21d-52deecd4e45d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca47c432-9d43-47c0-af5c-45351eda566a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84acc4e7-2e3c-469f-8736-130f80bf01bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be6c19a7-598f-4c2f-866b-aaf7bcf66440"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c91d6615-6a42-4a7c-a1f1-8f4ef415c962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c126d9f-ba2f-4325-b904-ad7a8dff06dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96736823-bac3-44f1-9ef7-e62ac4e4ba40",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "affe1287-de8f-45f3-b77b-36197d7be0d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4bb41e8-1737-459b-8775-d0c8b699d782"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4a6fe24-87d4-416d-9e54-7b0e0a555a7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13021096-9297-44ec-b8c4-b6acd2f7b50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cfaf965-e076-4448-98d5-a44049425873",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1abced27-a952-4882-bbde-f2ab0e53fde6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e989ca06-6fba-43dc-885e-2b82b5e8ca52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ba53e2-b793-48a6-9168-5992ef4a444d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "434e4c95-67f4-4532-a264-a145f5a165ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af2427e2-8bbc-43c6-a307-1043d525aa3c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4542e998-de99-4c65-adb7-61c618b9e820",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba0372b7-6123-4e4d-b876-944d3807bf96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2459946d-e1b5-4e0c-b9b6-cdffde4284e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73a9c39b-da33-4801-ab3c-feb8a3f97257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea97522f-cee0-4b4c-824e-434f08751910",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce6d337-b276-4292-b73e-6942121fcc39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7be8fde1-4822-4099-b786-d4ab08f3388e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a47ee8b-a2c5-4f38-8ef2-5e6b4144451f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e554b70-6b18-4484-ad24-726d1d6ab090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d6ecff-3913-4c3e-81df-b2a943e6c9ec",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c83d640-f714-4ba7-a9d9-3fce69ad2a0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7309e86-d9e6-4074-9a2c-2d64dd6ff641"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de8206a6-6723-4051-b8d5-b0c0fe95fad5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d706778a-fd03-4b89-9942-a6cd1fca54e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "160cdf6a-2afd-4fcb-9a7f-ab0026ef7111",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fafaae1-f25f-4e24-9bd4-acbd7cc8279c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97b01c33-7ab7-4af0-961e-d3f878242c4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c86cc8-ee6c-40a7-a9bd-d4ff8583aa11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb9088e2-846e-4032-a045-ba6d40c3a0aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "354edfa7-cc75-48e1-8c29-879f9389c35b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e2756a-83a1-4d93-b101-facfe9f7d8e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9cb97ee-94a1-4f91-b1ff-28783afb88be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb178ebd-3b4e-4421-8923-cbb9968018c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fb28a09-1a01-477f-ab69-31ed5c67eb38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f0bd2b1-8e8e-4f61-88c8-f637e0dd2c13",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b35f7d-a6a9-4134-8cfe-4b3892dad751",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fcd5712-279d-47f8-93d0-b7b18d40ac4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a855deb1-6180-47f5-b1c1-1937e1473c5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65ea5611-2ff6-4301-9e1b-719b22082c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e5d03f-9b47-42b8-a9fa-2aec4278bfbc",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7945e44b-2c2a-4c7d-9d04-3522d16d2b1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "499a68ca-269d-4887-9170-c3c812ab352b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d2a35b-9092-40b5-a720-07d412157121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a74a703-9fc3-4944-85d7-0f969b1b7ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad441845-9fb6-4954-bfb1-b32bbd69a4c4",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0adf1308-d933-4f1a-91d6-99153c92fb1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9afd1eea-ea53-4121-a0b3-a7717a676252"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a4c766-fc9d-4ee1-a941-fdc3dadc5606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce909157-949a-44ac-8c41-5891a40ae586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70cbd7d4-5c45-484f-afb2-254c4db44f9e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d082902f-5661-4910-a8f1-8c9b672d79e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f50f76e6-39a6-4548-830b-44a2ba25bd6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ea8253-2841-40fe-b984-16bf3b09022c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7a22f2c-ca5b-44ab-9b26-a34214ee5c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca4ffc59-5a4a-41de-b837-b27b4d246b77",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d0b318-0302-4da9-a710-24edc1d9cb41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23ed83cb-cd6f-4796-ade0-8c505d93eab1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c7d3363-6352-492f-87bd-160a66c369bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e304669c-3bd9-49b1-ae00-5b72a7bccafd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f388fb7-9a68-4397-82c7-888b5b29eaed",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e03d25b6-a167-4cb8-93e7-d4ba1792446b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcc8f120-70ea-4c73-802e-96102f407b77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2590d77-7269-4d7e-9d48-def702ef6850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec9dbe83-5807-4211-a0e9-9aaa1b0c8fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90478413-d7b9-40d8-9e5e-154534138a4f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c80576a-a431-4df2-a3dd-bdd8172c7e1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0571618-fae3-4bed-866a-ff0876cf9d18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d864e1f2-48cc-4b63-ae89-130ef98b7141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baf6cccc-6e2f-48ff-a818-1271efa33b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0307aff-5de9-4400-b7fb-47901bdbb287",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6814d388-444a-451b-a924-6a9dca413303",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "302302fa-53e3-4155-8778-7b81fb4a5da8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2438785d-a3bb-475d-98df-3645818d4b78",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5468771-5ed6-48b8-88e1-76420b0ec399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc492cef-dd10-4a0c-a496-7c803b94ab52",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "938d0dbc-4413-4057-8de7-e58edd441a30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9894bdef-14fb-4717-81bf-2f8d9240d561"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd4a498-cde6-419b-bc05-1aa4c7333be4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12b63ad2-204c-4f73-84a0-d5676beb28e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "637dfd7d-fdd9-4c38-8ffe-bc74c9aca1a9",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de21dd86-f549-4fac-97b4-5581ccfa84fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b605e907-1262-464a-8dc7-9fff21a68769"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "913c773b-5962-4521-98f3-0c1f5a2cd252",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0769a907-2ee1-4eb2-b863-b4c8c7874bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc076a31-5988-42e3-9401-142aff138d48",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d2775cd-7213-4842-9252-ac4a499ea93b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33e3b6d1-6bfa-4578-9ab4-5f03d41ba4a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e97db3d8-3452-4cc9-964e-06c21dfda92a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c75c5e6c-a9af-4761-af08-b33b4cd3fc67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f033aeb3-ad82-4516-8db1-56a52dc286c6",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "817814c6-0dba-497e-bc15-5145a8fa465c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cbeda32-3367-4266-b062-92712c65c82e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "182c96c8-7fd7-4f63-b786-8e541e54a6af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "021abe37-a54f-48f6-bdee-52b134662243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5983f69e-2d8e-4335-9014-bbfd8521862a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c3a3398-d6ac-4fb6-af1b-2a3027b1e506",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fccbb16-1f96-41c1-a73c-da3d0de5ceca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "131cd3bf-d6fc-4b58-9e67-5bad710c3521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4049ba0-5d14-4654-a816-ea330b9d2837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f044d92b-1021-4310-8f14-cc4f39da3944",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61194a17-b5b0-4b8d-ad88-5a95d3a560a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fa2e083-5d8e-4f54-8739-2780f57e84c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f75a142-78b6-4e15-864e-91fee3a6e33c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbbcf9af-4276-43cd-aba4-64bed2086e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec3a5c3-3596-41b3-aac7-8c7b85161b97",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8deb6d3-a58a-4b73-ac2d-a40967992b93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3564b6e8-76ed-412e-b978-c04a2a8bb0ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf59e52-997f-4e6a-b7a1-1dd1a63ba6db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f48a8ad4-ab02-49a0-bf64-2829c87611af"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a370c57e-40b7-4df1-ab4e-6ab585b85c3c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f7b4472-7f2c-4468-b064-a102a97f5667"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "07834ed7-df35-41d1-b2b5-d119f77bc88b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "82a6cc87-fb3f-4242-8607-f278b4cf8692"
                    }
                  }
                ]
              },
              {
                "id": "c6c466aa-ed24-42ec-ac92-413f165cf729",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "df79e5ee-041a-44e7-8a01-0d20bc752d39",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc2baea-4cb6-4501-bd8e-0ba761f833c9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a99b3d8d-24f3-47d6-988a-a0ee6595d321"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c75ac8e1-d061-41f0-bf54-2d620b5d46e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8c8de46f-f21a-4a3a-8786-90849353fc9b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57384028-8c6c-4002-aafb-fc316057a4c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48bd7850-8755-498d-a3fd-ded2a7eec064"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b16eb59a-f960-43a7-a007-d8ceede82f9c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea3fb1a7-4b27-45bd-93a8-21861db19bf9"
                    }
                  }
                ]
              },
              {
                "id": "b2513f55-e74d-43dd-9c1d-17193d223962",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e4465af6-9ed2-4003-93a9-da8909db900e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a92815-3ef8-497b-b23c-9dd4b0e6c989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ddf8f8ba-3f16-4d9b-bde4-ba4beebca8c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbfbd33d-d2df-4e1a-99d1-8915f41ed07a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "436e3895-4db1-4a63-9078-a7fa20b9a5f9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "95f18304-51a8-434d-9eb5-e8319a87ecfc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "66223ec9-8b73-4e1f-88aa-cf91e56924bc",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "09514437-f487-4a81-8e03-33a7da4b6b80",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "00d3269c-80f7-4fe6-957c-2e424d587acf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3fe10bd-8565-4589-bc5f-8062c942df8e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e1a615f8-4096-4b55-b392-c8e58bd498bb"
                    }
                  }
                ]
              },
              {
                "id": "00d30c31-4060-4888-a2e8-0676c42e62db",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "da9fef06-bb5b-4b72-854c-e8e827d43b27",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4ed3453e-1fc0-4017-ba6e-d478548735f6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a27e1e42-b123-4484-a0ea-ebc8a8232a19",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4065e8b2-2499-435a-b338-fa945dbbaf76"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "371912a0-014e-40d5-b218-af6bb09e6203",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d3d027d5-09b2-4a8a-b1eb-6b2eba0679d1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "73791119-cf09-4c0d-bfb4-c7ac1c2204cc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8c9cdbc9-25b3-4e76-95d1-be24dfbcf7ab"
            }
          }
        ]
      },
      {
        "id": "dbe9eee8-daeb-4e13-ad0e-d99bbdb6d3ac",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0e81c1da-7464-4483-bdb0-1dc21d043a66",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c2ee9883-8eed-41ea-8381-a570dcd4648a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "31469e8d-928b-4344-8e3e-bf6b93678558",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b63934-802c-4c51-9caa-e3567dde65bb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c05e517f-7b64-44fc-9b6c-3d8d2f9e3b21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c322566-03d3-44c7-b59e-8622231c0a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "28e55e43-60b5-4cd6-a79a-5ecf6c002b80"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a30ad5f-6713-4254-b8ec-95acbbeadde0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e58f26c3-405f-44e8-80b0-a0298233d5ab"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e974bd4d-ae29-4d6b-ba7d-859f052d3d2e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eaf6138f-1163-42c2-bb37-d5365b94749a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eeec5af7-6b52-4d92-b7af-264015a5d64e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "bfe440ea-134c-4c64-9544-10c8b81dfb68"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "13a9d1ef-e41e-4cc2-81ae-b5a6a50cd357",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "712cb5dd-fd18-491e-a145-1678bf6bc75f"
            }
          }
        ]
      },
      {
        "id": "3d0ab19c-9390-455d-95bf-b1d2de3c864f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0b9d3055-c323-4d6b-a270-7f027381941f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a360fb84-8155-4553-9051-5b6269d34aa8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "194215c3-702b-4b03-b3a0-599a3f90c30d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24807041-2a98-48fc-8b73-52cdc83101a3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa6e3ecc-9ab3-420c-b6f1-46333722a759"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b465627-5f27-415a-883c-0114df4e0983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e0b19dc0-19ed-4818-9f54-a0bb9524b00a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb4035de-ee69-4e9f-b0a3-604f2d68b761",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a317c2f0-47f4-4708-b4b6-0fa454c3abef"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5440b63-d731-483e-a76a-af8cc6fad68f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9dc5c30b-d790-4d37-9abb-26d5f66d0281"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "54687638-53dc-4991-8b4d-ff12d226220f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "25871457-13b2-44a6-ac32-03527389582d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3d0167b6-c69b-41c8-94c2-858951d9234b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "37fcfb3c-ec65-4fcc-a600-93f8f5a822b6"
            }
          }
        ]
      },
      {
        "id": "6c430c7d-01eb-4f63-839b-8030aa7d0ab5",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "6db1ad6a-ed07-41b8-a17e-a595149384bb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b6361ef9-6b2f-4493-b05a-48503895736f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "85f0b240-a7e9-47d5-ba28-a39e32d1700b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4646d452-7085-471d-85c7-bbdca95146b7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a56228c-5f05-40b1-828b-6cf7835aa45f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f2ff95-ab2e-434f-aabd-68c30c713e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1655324a-b6cc-4452-af09-9414b008acc3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0c34f9b0-00cd-40bd-83d5-872b7352c9e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cbb2c5e8-d787-4d57-8fbc-406cbb87f1aa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ae5e152-cf57-4239-99fa-42c71672fede",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "555b0fee-0bef-4783-9b09-678ef40850a3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ba2d3ba0-91f9-427b-8414-3f6ada21f8fd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "91e1b7a9-8031-408c-962d-10865347ac59"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4f716b92-33dd-414c-840a-19442264e0fd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d5227e20-8bf5-45b1-b6d5-34b09862e803"
            }
          }
        ]
      },
      {
        "id": "63130151-cec8-4d2a-b0a2-41e70bd7966e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e737f585-b673-4ec9-a47c-5690d0a3a607",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a974b43-af88-4369-8ea9-7c4e3ebdb158",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "aae5ee29-3a58-4b5d-9518-64f3c8dfc4ff",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2816f9b6-0aec-495f-8675-c625eb641ed0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dca036aa-03ac-490b-a24f-62f2a7f5c058",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 71.31338028169014,
      "responseMin": 11,
      "responseMax": 4388,
      "responseSd": 366.3546783983359,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1693441961308,
      "completed": 1693441993382
    },
    "executions": [
      {
        "id": "1b6dff43-c725-448f-b245-98e1d5e0eb2b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "79330930-0778-4dad-a97f-995a01c3f7f0",
          "httpRequestId": "87041016-65ea-4762-a7e6-db6548fee2a1"
        },
        "item": {
          "id": "1b6dff43-c725-448f-b245-98e1d5e0eb2b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "1b2ff7a1-d6ed-445f-8b39-77706de1d07b",
          "status": "OK",
          "code": 200,
          "responseTime": 101,
          "responseSize": 0
        }
      },
      {
        "id": "eab3ef92-a44d-439d-8bc9-aa34157c611e",
        "cursor": {
          "ref": "cf849186-92cb-467a-8a98-16691852dcc7",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6a983a38-abf0-4273-8d99-dad8476a6823"
        },
        "item": {
          "id": "eab3ef92-a44d-439d-8bc9-aa34157c611e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8e45c55c-8335-406d-8bd5-6b4fb12a5d88",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "9ec16243-147b-4500-8e7c-fb3e9987adcd",
        "cursor": {
          "ref": "047b0ce8-89ca-48d8-be56-459525ec2143",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6f33e30d-32f7-48cb-b576-fcff2f28faa1"
        },
        "item": {
          "id": "9ec16243-147b-4500-8e7c-fb3e9987adcd",
          "name": "did_json"
        },
        "response": {
          "id": "e088e792-8356-48b7-82d0-44a81bdfa358",
          "status": "OK",
          "code": 200,
          "responseTime": 134,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc39c4a8-414e-4c74-ad9e-8d51717aeb06",
        "cursor": {
          "ref": "45b145b2-3bc5-4041-b2aa-6e20591c8e9e",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5ffa040f-6832-4f1e-ac99-37084aa3419d"
        },
        "item": {
          "id": "fc39c4a8-414e-4c74-ad9e-8d51717aeb06",
          "name": "did:invalid"
        },
        "response": {
          "id": "13ece7fb-62ad-4f0b-89c5-d0be0cd52a83",
          "status": "Not Found",
          "code": 404,
          "responseTime": 788,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc39c4a8-414e-4c74-ad9e-8d51717aeb06",
        "cursor": {
          "ref": "45b145b2-3bc5-4041-b2aa-6e20591c8e9e",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5ffa040f-6832-4f1e-ac99-37084aa3419d"
        },
        "item": {
          "id": "fc39c4a8-414e-4c74-ad9e-8d51717aeb06",
          "name": "did:invalid"
        },
        "response": {
          "id": "13ece7fb-62ad-4f0b-89c5-d0be0cd52a83",
          "status": "Not Found",
          "code": 404,
          "responseTime": 788,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f24f11-9bd3-4029-ad53-aee674e9beb8",
        "cursor": {
          "ref": "8db89afe-8961-4873-835c-cbea2a6ff721",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "16997cc4-83df-4c0c-a0f6-315dab56f388"
        },
        "item": {
          "id": "66f24f11-9bd3-4029-ad53-aee674e9beb8",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "be3596d7-01ef-4a1b-8ef4-7b8ec8f0c639",
          "status": "Not Found",
          "code": 404,
          "responseTime": 22,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd084dc-6ada-45e8-be59-f77da5c273c5",
        "cursor": {
          "ref": "9b7a738c-6daf-437c-87e9-00c0f1e5a1f6",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "443002d0-9658-4a67-b303-9519bc6644c3"
        },
        "item": {
          "id": "2bd084dc-6ada-45e8-be59-f77da5c273c5",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "82ae47c2-32c2-4a85-b5d1-075ba192b902",
          "status": "Not Found",
          "code": 404,
          "responseTime": 21,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92eb49b8-2f09-494b-b9d8-0ed26b1fac34",
        "cursor": {
          "ref": "428c9492-bb64-4104-beac-1d682df682d4",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "30d34f0d-27cd-416a-a7c0-d830b8a8be6e"
        },
        "item": {
          "id": "92eb49b8-2f09-494b-b9d8-0ed26b1fac34",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "37d0fc2c-2129-4640-b3ee-e01cc71daa8a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25527c02-725c-4b72-9a39-27f0d73858f7",
        "cursor": {
          "ref": "d0d4cbe1-4732-4213-93f5-bc97cfff2cea",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "268c7644-1a46-4c11-8a20-01808a552bd4"
        },
        "item": {
          "id": "25527c02-725c-4b72-9a39-27f0d73858f7",
          "name": "identifiers"
        },
        "response": {
          "id": "09a2f695-cf7f-4558-adf3-e4a95c6e6322",
          "status": "OK",
          "code": 200,
          "responseTime": 25,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e71d86-f3c3-4b71-aedf-7b4d0d1a71e0",
        "cursor": {
          "ref": "cbdddf33-459a-4f13-91e1-5cb9631feca8",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2c639b1e-71fb-40ea-b6ac-660c8f308e4b"
        },
        "item": {
          "id": "a0e71d86-f3c3-4b71-aedf-7b4d0d1a71e0",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ca2f5107-8d80-4d87-943e-10bb56a00ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f40bd24-2b6a-4a17-81ae-da2c2aba679b",
        "cursor": {
          "ref": "a1806797-85b2-48c0-8500-804bf8f25751",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "da9a421d-ae79-43a5-9bb9-22daf5342849"
        },
        "item": {
          "id": "7f40bd24-2b6a-4a17-81ae-da2c2aba679b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "fb684603-ecdf-4a4e-8e08-b88037b8b5f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6caf52d8-6f64-49ef-b346-5a4a0b8670b9",
        "cursor": {
          "ref": "f9569f1b-60cf-4bf6-a23b-0dafd4d7d103",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "916f51b8-c20d-40ae-8ccf-01575caf8126"
        },
        "item": {
          "id": "6caf52d8-6f64-49ef-b346-5a4a0b8670b9",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e8ff5ca9-850b-4534-a136-fc6180617b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659b0219-b787-47ae-898b-181bbb5fbaaf",
        "cursor": {
          "ref": "776b3b4f-8df3-46a4-bc81-514d4bd79693",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "85e94336-4247-46b1-b0ce-3bf546f19b05"
        },
        "item": {
          "id": "659b0219-b787-47ae-898b-181bbb5fbaaf",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "34eefbc4-3d6d-40d1-b4ce-cd12b931de60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6deb5773-23bc-4431-a7ba-9e4a27e83cf9",
        "cursor": {
          "ref": "335b7536-2316-4665-9746-8eb87a443939",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "52313ccc-8705-46c0-bb29-2ffcce786670"
        },
        "item": {
          "id": "6deb5773-23bc-4431-a7ba-9e4a27e83cf9",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "974a50e4-5a55-416f-b858-356c62b7e3d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "019a23ea-7b37-4aaa-af7d-486e3c02cffe",
        "cursor": {
          "ref": "dc4b5f40-9570-444a-aa2c-758b884ca039",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "60612432-7143-4de1-a536-ce4eeac18865"
        },
        "item": {
          "id": "019a23ea-7b37-4aaa-af7d-486e3c02cffe",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b475c069-d652-45e8-97f1-c0f655f7f2f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af86245d-c6ed-46b5-a33c-5dec019f26ca",
        "cursor": {
          "ref": "0104d748-793c-43b6-a5ab-c6b85d2985d0",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e2926846-244c-49ce-acf3-80c2b593554b"
        },
        "item": {
          "id": "af86245d-c6ed-46b5-a33c-5dec019f26ca",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "69d37fb3-8c83-4c4d-ad6f-c03d5f3608d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b210e124-5696-44e2-b5cb-2743eed7a45c",
        "cursor": {
          "ref": "faaf601b-200e-4564-9a10-a48e29b08680",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "633aaf5d-367d-4bde-a58b-f5882354e637"
        },
        "item": {
          "id": "b210e124-5696-44e2-b5cb-2743eed7a45c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "e5b33048-9835-48c8-aee2-6056b2c7fc49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16dc97ec-98be-40ef-93b4-e2afe1cad05b",
        "cursor": {
          "ref": "2cae03a0-7548-4f83-94d4-d2fcbce2a84a",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d4da631d-17e8-4fe4-a838-4e9b3059e88a"
        },
        "item": {
          "id": "16dc97ec-98be-40ef-93b4-e2afe1cad05b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4547fb66-3e15-4f82-85c5-d7a39536cedb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301dd07c-0e1b-4501-ac5e-702192ffd1dc",
        "cursor": {
          "ref": "0608dacc-ad39-4c43-948d-d1c06d6bfea1",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c17f68dd-fb51-4c6c-a855-f5335d7bd6b5"
        },
        "item": {
          "id": "301dd07c-0e1b-4501-ac5e-702192ffd1dc",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "0af4be68-634c-4d45-b2d9-5c6573c3f8ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b63a70-924a-456c-a34e-a231a62004d1",
        "cursor": {
          "ref": "c30693d6-ba12-487f-abd5-d9c175558d8a",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2409b9f4-90d8-435e-ae47-621afeea586e"
        },
        "item": {
          "id": "f0b63a70-924a-456c-a34e-a231a62004d1",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b1613b3f-3a63-417d-bfd9-0610fc3cdce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f5782c-278e-4e8c-a814-471599d39af6",
        "cursor": {
          "ref": "edcb8f14-6866-40ff-bbcd-85b4d928aed5",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "0ca918bb-67d7-49a3-9165-8701ec064978"
        },
        "item": {
          "id": "b9f5782c-278e-4e8c-a814-471599d39af6",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c1dc9fbe-9fd8-4241-afb0-ae7815d37b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e06fdaf7-0187-46e8-9b84-d9f311714ec6",
        "cursor": {
          "ref": "27b1aa9e-b546-495d-9210-f327d0ad376c",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5c23840e-9604-45ce-af72-ad940e9dadbe"
        },
        "item": {
          "id": "e06fdaf7-0187-46e8-9b84-d9f311714ec6",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "646baa1e-bfe3-4e9e-bbb1-f336510fb787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca118952-86ad-403c-af81-a6fd1a4eb5af",
        "cursor": {
          "ref": "f4b38112-ffff-494e-b0a8-d02fb273516d",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "642cc9ec-4e6d-477c-b6d8-3d50bc68ea6b"
        },
        "item": {
          "id": "ca118952-86ad-403c-af81-a6fd1a4eb5af",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e057e368-1516-45ce-ba19-f59b7b4e7ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e619ae4-1188-43d9-8cd3-0fbf07530b46",
        "cursor": {
          "ref": "cbeef9e4-72e2-4910-88ec-b453e07715e0",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0a45ffaa-29be-4f91-bd20-d3fe7da5097f"
        },
        "item": {
          "id": "8e619ae4-1188-43d9-8cd3-0fbf07530b46",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "464f61b6-a779-47b6-a884-05a83045c2ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f24387-a090-4530-8bb6-0990cbe8bb2d",
        "cursor": {
          "ref": "7bc9f5f7-e297-4f05-a259-bf090f59cf7e",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "5f6d8c9a-a0e9-4803-b029-4d43b106a87e"
        },
        "item": {
          "id": "51f24387-a090-4530-8bb6-0990cbe8bb2d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b0eaa3d1-b9c0-4b9f-b380-ab10fbd18a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13aa70b0-b21a-4c39-b3c7-0b527b2420a0",
        "cursor": {
          "ref": "275a19ff-527d-4af2-94db-3db015d363c2",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "328573fb-ec40-482e-8820-60735dcb4725"
        },
        "item": {
          "id": "13aa70b0-b21a-4c39-b3c7-0b527b2420a0",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "fd41349e-a8e1-4c57-be3a-a0236d642f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acbc4834-37ff-42a5-93ef-f281635d5039",
        "cursor": {
          "ref": "3fc32468-2feb-4d42-91c0-b5bca7da1807",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f74ce3ca-c033-4114-8827-5f79b8d5296e"
        },
        "item": {
          "id": "acbc4834-37ff-42a5-93ef-f281635d5039",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "7b19c42f-4b01-4b27-98ab-07226f7c6f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66724cb-b188-4762-b63b-8f2b7585e7dd",
        "cursor": {
          "ref": "cdd75dc9-5b3e-4057-a0ba-72d7b1d4232e",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "2095befe-eeac-475c-85b8-682b91297954"
        },
        "item": {
          "id": "f66724cb-b188-4762-b63b-8f2b7585e7dd",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "424eebe6-de2e-445c-ba72-21e30c8c3507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a0ac43-b5ab-4d46-a53c-4b5515fabff2",
        "cursor": {
          "ref": "10bef0e8-d41a-42ea-b0a9-0905f86ae673",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2ce791f2-8898-4ba9-81bb-8112a53d42a0"
        },
        "item": {
          "id": "d1a0ac43-b5ab-4d46-a53c-4b5515fabff2",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "2e82d997-706b-436f-bd59-5c81177ed312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc1119db-c7bc-4db1-88f2-c3abf9fa8dbc",
        "cursor": {
          "ref": "fbfcdad3-1cc5-42e3-adb5-ce8b418a7532",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "678fe345-8118-40d1-859b-4171c00aae17"
        },
        "item": {
          "id": "cc1119db-c7bc-4db1-88f2-c3abf9fa8dbc",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "08ef25aa-e965-432f-8d65-28d6d73d9f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d869bd38-afc7-4ab3-9540-c063768dc2f8",
        "cursor": {
          "ref": "e3947005-8bca-4a2b-950d-6139186a7966",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "80969dd2-ca71-4215-8013-7aee7d31749a"
        },
        "item": {
          "id": "d869bd38-afc7-4ab3-9540-c063768dc2f8",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "7722386c-9a7e-4f92-b724-e68340147dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf6db5b-91b1-4a9f-bfdc-15a579285d43",
        "cursor": {
          "ref": "833a2486-9970-41a2-b675-88521224a686",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "43638bad-00d7-40c3-87b9-e122e6f06cd9"
        },
        "item": {
          "id": "3cf6db5b-91b1-4a9f-bfdc-15a579285d43",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e6c72d86-c109-4110-8b8d-4599ac43cadb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d509706-367f-4d82-956b-0fac34d7775c",
        "cursor": {
          "ref": "04a35e71-efde-4689-bd4d-0a9b1939ca3d",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f896cf68-dd36-49b3-88b2-ca0fd7f3fae7"
        },
        "item": {
          "id": "9d509706-367f-4d82-956b-0fac34d7775c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "429fd621-6c25-4680-9100-eadef21d7e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ccbfa98-3754-40b4-b48d-8e0667cea134",
        "cursor": {
          "ref": "6bc8ff30-4f4b-489b-bdad-c2d1ac5edafc",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "20c90424-b7c3-4ad1-91ac-698e7bc51404"
        },
        "item": {
          "id": "8ccbfa98-3754-40b4-b48d-8e0667cea134",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "1e571b8c-90fd-4c24-b051-d9ceaa7731c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f9ebc50-966e-435b-9153-9e30546600ea",
        "cursor": {
          "ref": "8ab90cd1-31eb-4705-93bc-eeb4b8491579",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d17348ba-4fab-4e03-af29-26d22b1431d7"
        },
        "item": {
          "id": "8f9ebc50-966e-435b-9153-9e30546600ea",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ccfa074d-ad86-4302-ac1f-a99c5c535a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d05b34-aa8e-4c72-99ae-67b17246bf74",
        "cursor": {
          "ref": "e5f43cea-de28-484c-9a06-7602bfa22c5b",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "58bacaff-2d6b-443a-a9b8-69f1ad9191dc"
        },
        "item": {
          "id": "e8d05b34-aa8e-4c72-99ae-67b17246bf74",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "083fbf42-9602-4ee8-b062-58b3432e9a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f519a3-b045-43a7-984f-6d30a0086bc8",
        "cursor": {
          "ref": "a8939c5d-dd23-4ccd-9be2-56daa2e8ce7f",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f6f62e0b-4744-4d93-b501-9239d8af6bb3"
        },
        "item": {
          "id": "90f519a3-b045-43a7-984f-6d30a0086bc8",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "1d42fb10-3b8c-484e-ab9e-3faa1f49ecbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d2522a-cb08-46b5-bf07-774b7c161eb0",
        "cursor": {
          "ref": "590e214f-938e-4556-9926-1078bdece88a",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "4d6a99af-d901-48bb-88dd-4d71656b0a80"
        },
        "item": {
          "id": "20d2522a-cb08-46b5-bf07-774b7c161eb0",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b694801a-31d7-408c-bd5a-9805f0ea8311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2906461b-a129-4f99-955b-411feaf4cf1a",
        "cursor": {
          "ref": "b51f22cb-93f9-44c4-99b9-715e254703ef",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "3dc51fe6-0ab8-4e81-9262-80d5edd21f53"
        },
        "item": {
          "id": "2906461b-a129-4f99-955b-411feaf4cf1a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1c5b820e-bd57-4ae5-81ec-b068977afd21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5dd326-86c4-4334-a157-704051aefc98",
        "cursor": {
          "ref": "f57fe9a7-e8dc-45e5-925e-c745fb16989a",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "7127759e-ab5f-4837-af3c-c826e6841495"
        },
        "item": {
          "id": "ce5dd326-86c4-4334-a157-704051aefc98",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f82431f2-0424-46f1-871a-2e6c694bc50c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b13e5797-46fe-4ea1-b240-5d95e492d935",
        "cursor": {
          "ref": "5ec7d14f-46de-495e-9a07-9adab8178ab5",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "527f7ed2-7698-4919-952b-3442c89f4645"
        },
        "item": {
          "id": "b13e5797-46fe-4ea1-b240-5d95e492d935",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3b84caea-7768-4f68-9768-00d831597018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5bb1817-9981-4ab5-84d8-77cfbe685895",
        "cursor": {
          "ref": "394a8f30-e783-4dc9-8683-0eff40aa3c2c",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "abb1e33e-33e7-47b9-86a0-894af947ad9d"
        },
        "item": {
          "id": "d5bb1817-9981-4ab5-84d8-77cfbe685895",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e9929a2e-5d53-4b34-97a0-00c1f77af442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5a1a8d-7991-4510-8b04-aa1aee78dff3",
        "cursor": {
          "ref": "352c58c2-6672-485c-b0ea-a36ccce94556",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "77c43de0-e7cc-40a9-88af-1e0baa54560a"
        },
        "item": {
          "id": "9e5a1a8d-7991-4510-8b04-aa1aee78dff3",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "d6390cd4-f3e7-4826-bd4f-a6637286838c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ed1aaf-f071-4e3c-bcd9-ca9cc964eb41",
        "cursor": {
          "ref": "79c93cc1-3627-456f-a775-4f54d645a10f",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8e0415d4-3106-4e97-811f-949491c36da9"
        },
        "item": {
          "id": "72ed1aaf-f071-4e3c-bcd9-ca9cc964eb41",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "aded893f-cda4-4dd4-aaa1-8076e7df801a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34fdcb81-e8e7-402a-b74c-16f963f18119",
        "cursor": {
          "ref": "75006611-0db5-460a-90e8-258ddd7879b0",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "72f3b474-7e3c-4b95-8db4-ebd91f464642"
        },
        "item": {
          "id": "34fdcb81-e8e7-402a-b74c-16f963f18119",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "31e749e4-dd70-4dcf-af1b-cafab8f2867b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72bb2519-f0e9-4605-a091-b21a1a58af8e",
        "cursor": {
          "ref": "29a19b3b-0edc-494e-a0d8-1c1cb6492676",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9b422c51-5f1e-482f-9bdd-0fe03ba610cc"
        },
        "item": {
          "id": "72bb2519-f0e9-4605-a091-b21a1a58af8e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "db5f9df1-e4b0-4442-9434-84a17a2632fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c872f8-057d-47fd-b4b2-d169096fc7e7",
        "cursor": {
          "ref": "9d9d8eda-3845-45e0-9003-f62517d76740",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f32376de-98c4-49d4-b674-2b9485788602"
        },
        "item": {
          "id": "21c872f8-057d-47fd-b4b2-d169096fc7e7",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "9e2c984a-ceb0-470a-9268-98c3081c756b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5483a1-c86b-40b0-b3b9-4216f0b19013",
        "cursor": {
          "ref": "9fb10044-a5c6-4903-a202-d7e965dd9ad4",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e998b035-9e5f-4d71-ac09-6a1979247eb8"
        },
        "item": {
          "id": "fd5483a1-c86b-40b0-b3b9-4216f0b19013",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "14a164cb-edc1-42ec-b39e-d90314aec864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afac63d1-5949-415d-8d36-69e63bb46766",
        "cursor": {
          "ref": "0fba17f9-2def-42ac-9256-a69f48905632",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c5b6e172-845e-49be-ab48-7823e99e25b4"
        },
        "item": {
          "id": "afac63d1-5949-415d-8d36-69e63bb46766",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a2941fbb-11bc-4aeb-9f43-c036b5a14b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328f5bf7-4afc-4bb9-81ea-64873cfd664b",
        "cursor": {
          "ref": "2ad49e46-0654-40de-b914-ad1bc9381d63",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e3a19cc7-f6c5-45ee-a6f8-ac40feeaf34d"
        },
        "item": {
          "id": "328f5bf7-4afc-4bb9-81ea-64873cfd664b",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5a22190e-8648-443d-800b-d4752ed1c54f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a22ca5bb-e9d3-44bc-a69e-08fb7339366a",
        "cursor": {
          "ref": "ffab5ea6-e011-4467-8f34-2a478a3ec775",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "956b39b7-3b44-4c21-88d3-d382831284fa"
        },
        "item": {
          "id": "a22ca5bb-e9d3-44bc-a69e-08fb7339366a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "9f3fa276-8611-4ed3-bfae-1268c30271be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2f1293-e3bc-4614-8584-946401a6444f",
        "cursor": {
          "ref": "cd39df10-cd2b-46e5-b4ae-f7dfe08b2590",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0d7de369-8232-460f-9b13-15bd80ab6734"
        },
        "item": {
          "id": "ce2f1293-e3bc-4614-8584-946401a6444f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a8620482-21cb-4d8f-9b65-4c2243cf694d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8ccb69b-5b85-46f8-9eb6-bb887fed6077",
        "cursor": {
          "ref": "9ae38638-d85c-4073-842f-1318d6d5c9ec",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ba582e7d-781b-4f32-8ba4-a11a4f5070b3"
        },
        "item": {
          "id": "c8ccb69b-5b85-46f8-9eb6-bb887fed6077",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b501c872-42d9-44e1-9f66-71875e984d32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f46516-d595-421b-a1a8-722aaa847c2a",
        "cursor": {
          "ref": "0d543491-3279-4a0d-bf3d-ec1c10c06d6e",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "4b68c069-e939-4af4-b2a6-b3fd9f0b6825"
        },
        "item": {
          "id": "44f46516-d595-421b-a1a8-722aaa847c2a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a6f92c47-fd0f-4cc4-af20-2a0e326925d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e0348ef-a9af-4ea4-8e05-2a78cbe92b9e",
        "cursor": {
          "ref": "bcfc1ea0-db1d-422b-a713-257d5fbb1cb6",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "69b86371-f07c-458c-8a2a-3b4f37d54f41"
        },
        "item": {
          "id": "7e0348ef-a9af-4ea4-8e05-2a78cbe92b9e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "05b6899b-35d7-485d-add1-cf06ee12b3c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb9f14cb-39fd-4198-a968-8c1a40c5552d",
        "cursor": {
          "ref": "af855ce8-c37b-4697-ab93-cab7e98fbc44",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "16fed264-71e7-442d-a2a0-5f954f1aba4b"
        },
        "item": {
          "id": "cb9f14cb-39fd-4198-a968-8c1a40c5552d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f7aee932-e058-4bb8-b21d-05bec6035693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcfc0a87-4054-47bc-b561-d0fa3040a951",
        "cursor": {
          "ref": "503af722-53ba-4dec-bfb8-7fa88d13824c",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9f51f314-ac0c-45cd-b112-290fbf535f9c"
        },
        "item": {
          "id": "dcfc0a87-4054-47bc-b561-d0fa3040a951",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "120681cb-6010-4d5f-9937-16d554ee1cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8100cb4-6ab9-4a57-887b-a02cf9b0d6bc",
        "cursor": {
          "ref": "919ad046-a4cd-4416-9354-18cdb6cae6d1",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "463753ba-f308-4eec-8b59-d2aecbb5de47"
        },
        "item": {
          "id": "c8100cb4-6ab9-4a57-887b-a02cf9b0d6bc",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "3845f119-e131-43b3-ad3e-00df2d3c568a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30639100-2e90-4586-a1f6-a776638fe061",
        "cursor": {
          "ref": "119d9c56-868c-4809-aefb-25a4e0bccaf4",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b8804b01-6e4a-44de-aef8-eb1d80c081fa"
        },
        "item": {
          "id": "30639100-2e90-4586-a1f6-a776638fe061",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "5ad89085-c3dd-4530-9b03-f39134080dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aec4b5f-b81a-42bd-8c12-e0f90bb8843d",
        "cursor": {
          "ref": "d956d6aa-e1b7-45d0-b6e9-782e8e7ba1f3",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "162eac8d-ebfa-4d63-96a0-94a6acf9e2cb"
        },
        "item": {
          "id": "8aec4b5f-b81a-42bd-8c12-e0f90bb8843d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5b6009a4-dd60-4938-b99a-a672700fae8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92c0171-521d-41d0-8098-a721dd8034f3",
        "cursor": {
          "ref": "ccb6a171-0bd4-4604-adac-07041765a26a",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f1f43432-db35-49fc-89a9-bed6d65556db"
        },
        "item": {
          "id": "e92c0171-521d-41d0-8098-a721dd8034f3",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "0de92ac6-412a-44b9-a9d7-5fccf527f140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be5c45d7-9e19-4b59-bbde-f3cda2c86ab0",
        "cursor": {
          "ref": "7817379f-f057-438f-ba30-6015e5982375",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ae800f4e-1541-473e-b926-a1be0e89483b"
        },
        "item": {
          "id": "be5c45d7-9e19-4b59-bbde-f3cda2c86ab0",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "55954468-7f6c-42e4-a279-7ff3b192f5c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94750912-8787-40d9-a322-c1e6b8dcaa64",
        "cursor": {
          "ref": "b7735131-0304-4478-8a3b-f3e434c72dfd",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "44c2f25a-e6d5-4513-8395-423aa854eed0"
        },
        "item": {
          "id": "94750912-8787-40d9-a322-c1e6b8dcaa64",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e9145bf2-4ecc-409a-ace3-e786448e43ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8937aeca-dae9-4748-a79d-cc5afed17680",
        "cursor": {
          "ref": "362523dd-3539-4721-bc44-a7ef7f7cb44a",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "277583a8-7266-449e-b0a1-3aef44585c8e"
        },
        "item": {
          "id": "8937aeca-dae9-4748-a79d-cc5afed17680",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "90aafb31-fa44-4fb3-b6bf-a4deb8747441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c14cab0b-214f-4a87-b21c-be8c0b474c23",
        "cursor": {
          "ref": "38682075-3b70-4300-a23f-bc8cfe3dfe2e",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "fbe62426-b9b8-4236-999b-0a1cf1ed9fc6"
        },
        "item": {
          "id": "c14cab0b-214f-4a87-b21c-be8c0b474c23",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "47a7c82e-fe0c-4932-8166-882edc80b8b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b71bbe1d-a950-4091-a961-b6d6a6791ef1",
        "cursor": {
          "ref": "97e22656-5423-4f44-8269-859705b0e7b2",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9d21a528-ece9-4217-8af3-0c10984aef1f"
        },
        "item": {
          "id": "b71bbe1d-a950-4091-a961-b6d6a6791ef1",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "38bf14e9-c201-4d8f-aa5b-70e1b038afba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64b6a5d-43c5-40c2-8a9f-2ad7f0f76dba",
        "cursor": {
          "ref": "af187a51-883b-41a7-a85a-26ad655f6261",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3257576d-a2fd-44b0-8556-a05ca154469a"
        },
        "item": {
          "id": "b64b6a5d-43c5-40c2-8a9f-2ad7f0f76dba",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b0b201b8-33e6-4960-9af3-d6b926c4c7ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a14954a8-d4e3-4606-a874-ce40c53976e5",
        "cursor": {
          "ref": "dc7e85cd-c03b-4080-937d-e863037eb815",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2b87bbfc-3025-452e-a09d-8fb306ceb1ad"
        },
        "item": {
          "id": "a14954a8-d4e3-4606-a874-ce40c53976e5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "9bd4cdb0-405e-4dd2-bc9b-f282bf089f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d420567-4148-420a-b2e3-30780fe867c7",
        "cursor": {
          "ref": "8d8ba96f-77c5-423c-9808-f0e066ff2ddc",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3777a022-5adf-46dd-862f-5d46efc29fa1"
        },
        "item": {
          "id": "9d420567-4148-420a-b2e3-30780fe867c7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "42995abf-5d92-4508-a2a9-34358e670202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f37ade4e-ce00-414f-a4f7-c207f6aab150",
        "cursor": {
          "ref": "35cf818e-ecf8-49bd-98d3-2311f48bc978",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "0519e893-e418-43d2-ac2b-3d064b9f12fb"
        },
        "item": {
          "id": "f37ade4e-ce00-414f-a4f7-c207f6aab150",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c15e85fb-ec20-4ad1-b5d8-fa9766af4caf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8249fd2-3883-435b-95c8-a2169685378c",
        "cursor": {
          "ref": "51b873a4-8e91-4a57-8078-9f2b0f31b8b4",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "bea6978c-3c2d-46a2-af4d-f2f716ba152a"
        },
        "item": {
          "id": "a8249fd2-3883-435b-95c8-a2169685378c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4e4241ba-ab52-411c-abbc-96450c7c7e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f273f23-38c4-4950-8101-117d35bed248",
        "cursor": {
          "ref": "0e8af315-d4f3-454c-8133-f4b81f1b5e1c",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "8f6ae633-0a92-46ea-b742-2762c906f73a"
        },
        "item": {
          "id": "8f273f23-38c4-4950-8101-117d35bed248",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "fccd2e3e-7aed-49a4-ad6e-ef472613706f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e727652d-77d2-4272-80eb-141ca1750a6d",
        "cursor": {
          "ref": "475994a6-854e-48ac-9f4a-abcd36e84131",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b9586912-01e6-4af6-a75b-b07d47845505"
        },
        "item": {
          "id": "e727652d-77d2-4272-80eb-141ca1750a6d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "0cf4c80c-05fb-4a11-aedb-c2bb28881af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe367c4-d46a-482b-88e2-f054d9b3c22f",
        "cursor": {
          "ref": "ce8c6972-5417-4dc5-898d-5f559a10a5a8",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9d480fdf-db6c-4e7c-9ff6-950bb566d366"
        },
        "item": {
          "id": "3fe367c4-d46a-482b-88e2-f054d9b3c22f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "7680cbe9-0770-47d6-a0f9-94a8083f60c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee46a9b-2e72-4603-98cd-6a1de796b090",
        "cursor": {
          "ref": "503725f3-ca3d-434b-80f4-2702a0c63103",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "45b6595e-59b2-4235-b49a-88af92c97b85"
        },
        "item": {
          "id": "0ee46a9b-2e72-4603-98cd-6a1de796b090",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3daac417-1a75-49a3-9bd9-68dd0b38e789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51199b84-7acc-4c40-bb53-43eeefb847a0",
        "cursor": {
          "ref": "099cdd4d-4748-42e4-ac98-340d5efa2e31",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3345265f-01a5-4bb3-8d58-bccf8ced25ca"
        },
        "item": {
          "id": "51199b84-7acc-4c40-bb53-43eeefb847a0",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "2d496a21-acc0-4863-9adf-ea3231611668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a10908d0-f8d6-456a-95ec-24baddaf449f",
        "cursor": {
          "ref": "b3affe5d-c0ae-4e44-b393-0560efef2ac6",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "eb2ffacf-d50a-46a1-9c63-72fd9cb4a57b"
        },
        "item": {
          "id": "a10908d0-f8d6-456a-95ec-24baddaf449f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ea9dd667-998f-4ee1-b924-4d4cac68466a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f147a4-4e34-45c7-a3cb-2d7774b1148a",
        "cursor": {
          "ref": "73c56419-a195-4697-9dcd-6fd42c346309",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a42e3406-013a-41d9-b1c1-62c09e155050"
        },
        "item": {
          "id": "c8f147a4-4e34-45c7-a3cb-2d7774b1148a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "08dab4a6-5416-4d7f-93af-1f9e376ea9a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cce0f57-972e-450e-9aa0-d143ab350265",
        "cursor": {
          "ref": "b37c00b2-d862-4c81-85ab-8c82d5803d57",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b7dcde7d-91a8-4189-8a8d-df347eb2777c"
        },
        "item": {
          "id": "7cce0f57-972e-450e-9aa0-d143ab350265",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9b90ac8f-8454-4044-80aa-a55aa0844405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5288e5b-ab4d-4f0f-9608-09fef8bb497c",
        "cursor": {
          "ref": "cbaa03c9-adbe-4e25-a8d3-65b6f94093a2",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c03df1cc-c9d8-4112-bc4d-e011abac9d26"
        },
        "item": {
          "id": "d5288e5b-ab4d-4f0f-9608-09fef8bb497c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "964f46dc-8447-4278-83ba-60093fc50cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f0f6b25-e5db-4cd0-a9f5-80efac3db94f",
        "cursor": {
          "ref": "c83e00b8-6e9b-4fcd-9910-047258e3c58f",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "20ddad0c-79f8-438b-a647-32b922c1d2d3"
        },
        "item": {
          "id": "6f0f6b25-e5db-4cd0-a9f5-80efac3db94f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "acd3484e-619c-4a21-9f47-1c9261a18975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d09dbb5-f48f-40ef-a34e-0ade4db879ce",
        "cursor": {
          "ref": "7ca1d360-fa6d-499d-a288-f48b0b43a917",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "dacc5750-23ed-4c45-b758-a0c708110adf"
        },
        "item": {
          "id": "9d09dbb5-f48f-40ef-a34e-0ade4db879ce",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "03fe5a79-7ab7-46eb-a962-2f63756a1a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5962809-fb9e-41f2-bb59-645167ee3fc7",
        "cursor": {
          "ref": "0770e866-0746-40cc-819b-6a6326cc8f7b",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "93da8a72-9753-4864-a980-78e8910baea0"
        },
        "item": {
          "id": "c5962809-fb9e-41f2-bb59-645167ee3fc7",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "51f5401d-3a6c-4a59-8541-527c7829daa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145331bc-92cc-4cad-b16f-cb2b7fd40719",
        "cursor": {
          "ref": "e5db8145-f5b7-4730-a822-fa475fd1dc03",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "65597f4b-afd2-4e36-b32d-fe2eeeb763f1"
        },
        "item": {
          "id": "145331bc-92cc-4cad-b16f-cb2b7fd40719",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "eac2dbf2-afba-49a4-a6dd-49d82aa053c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41eda4c7-4dcd-4ba4-adb1-ae00ba0c1535",
        "cursor": {
          "ref": "a4ac6570-ca48-4023-8b42-535967007bc3",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "14eb02ec-5de5-46fc-a635-ca330abb4067"
        },
        "item": {
          "id": "41eda4c7-4dcd-4ba4-adb1-ae00ba0c1535",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "011377a4-542c-41d8-af88-bb590164170b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c36a2388-2ade-46f0-bd25-6c38db68f29b",
        "cursor": {
          "ref": "4eac0fd0-0b22-4267-934d-729b59c17e76",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "68c49d8b-0ed8-4bb6-93b4-3026a58e180b"
        },
        "item": {
          "id": "c36a2388-2ade-46f0-bd25-6c38db68f29b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "cd5af556-b425-412c-aa60-3594f85eb415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1def431d-75f3-4c8e-bee0-d6adb63c6379",
        "cursor": {
          "ref": "57d62694-9bb4-4bf8-8893-454f5e27b20b",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "3dc0748a-2d6d-4eb5-b778-c5b1014b8482"
        },
        "item": {
          "id": "1def431d-75f3-4c8e-bee0-d6adb63c6379",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "42039c61-45f4-4433-bfbf-ce4da04baadc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12576b2e-4371-4a78-8ad2-a5762f2cad1c",
        "cursor": {
          "ref": "5ec5231c-4657-42df-94df-e580853b15a0",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "69d70862-a056-470e-9c3f-301501e04a27"
        },
        "item": {
          "id": "12576b2e-4371-4a78-8ad2-a5762f2cad1c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "1d6d36d5-40ed-4eb9-97d7-a26e377e8d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "540bef9d-7f6b-4690-ada8-7dfe9afa365e",
        "cursor": {
          "ref": "58ce1a5b-dec3-425f-b6b1-7ce6b7151f8b",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1a62ecca-3444-4ddf-bc66-a317a46dddeb"
        },
        "item": {
          "id": "540bef9d-7f6b-4690-ada8-7dfe9afa365e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "00857748-831c-4981-a61b-62037fc51596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c5b343-4956-4c53-9f41-dfc6f861f5cb",
        "cursor": {
          "ref": "cd95a340-2986-4e29-8cae-2f4ee35257f3",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "02b3f88d-f161-4b5f-81ef-c2fd54d9fa6c"
        },
        "item": {
          "id": "b3c5b343-4956-4c53-9f41-dfc6f861f5cb",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "15f2cfca-0071-4080-9a11-fe83b4cebb1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca42c40-0194-4c91-a037-d0b7f39706f1",
        "cursor": {
          "ref": "5ecb30d5-7d62-4616-ab68-c9bfd8efadb3",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "928e4aaa-234d-4826-aae2-61375b1a2cf8"
        },
        "item": {
          "id": "5ca42c40-0194-4c91-a037-d0b7f39706f1",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "59713965-1e2a-46a3-a4a3-2c126318c87c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4aab8a4-7a57-466b-806a-b0961f957bcb",
        "cursor": {
          "ref": "4b24e3fd-38f7-44a9-9937-ff53e1946b6b",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "845375f9-616b-4b95-959e-cdd25e06e4c4"
        },
        "item": {
          "id": "d4aab8a4-7a57-466b-806a-b0961f957bcb",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "bb61f50d-bfe7-420b-976b-157e037e5bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f85bacae-266f-4bd3-8f96-92bf8d3ff21e",
        "cursor": {
          "ref": "dd3c47b7-0809-4f98-9612-263481c9c401",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4603a687-f943-4e44-9443-077b60600813"
        },
        "item": {
          "id": "f85bacae-266f-4bd3-8f96-92bf8d3ff21e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "3de9c1a8-fe97-409c-beef-233d4ed53ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b90c35c-0020-4c26-899c-2331f495f97d",
        "cursor": {
          "ref": "82f31eed-931e-40b3-8bf2-e3aac1fd6b2b",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d5e45bb5-9eba-49a7-a242-8694de739239"
        },
        "item": {
          "id": "8b90c35c-0020-4c26-899c-2331f495f97d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f61946e7-9d7b-4106-82fc-c985666dca12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba2b0295-3465-4b4f-9c24-f1a747506d82",
        "cursor": {
          "ref": "8aed6696-6cec-4bdf-b660-67b89e44c968",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a637e980-6c1e-404d-8519-9f72b82fd026"
        },
        "item": {
          "id": "ba2b0295-3465-4b4f-9c24-f1a747506d82",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "87d102d9-15b4-43dd-a3d6-ca301bb92c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4811b69f-2f63-4f2b-bc95-72aa068c4981",
        "cursor": {
          "ref": "2f35f2c0-34f4-4daa-95ae-dcdf741e43d9",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c7512394-65ef-40e0-97ae-096731003a98"
        },
        "item": {
          "id": "4811b69f-2f63-4f2b-bc95-72aa068c4981",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "99fb4a30-f056-4e89-b197-ff6428a9bc06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82856b24-63ab-422a-8c50-234344aa0960",
        "cursor": {
          "ref": "283869f1-4ebd-43e4-9da1-ffcc86b07014",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "aebe25c9-a1c3-43d2-8b6a-522a5b732456"
        },
        "item": {
          "id": "82856b24-63ab-422a-8c50-234344aa0960",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1810d243-1fb9-4249-a73a-4a3df07d5660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d11f2450-84e0-4c6a-b82c-a297b774b9d2",
        "cursor": {
          "ref": "d111f5d7-9b56-4370-abdb-44078681cfc3",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "cd4448fa-adc9-4ba9-a690-c88750079ee2"
        },
        "item": {
          "id": "d11f2450-84e0-4c6a-b82c-a297b774b9d2",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "9aee69ec-36f5-4365-9fda-94bd81804d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b10ba5-0639-4cf2-a360-ed660f64b3c3",
        "cursor": {
          "ref": "4fb18231-0f76-4f9b-af51-9250344e3d14",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "33f18f7f-8b65-4c92-86eb-5f78aa34fe08"
        },
        "item": {
          "id": "27b10ba5-0639-4cf2-a360-ed660f64b3c3",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "7765d9c7-0573-4ac8-84c9-edaa5e603d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd125a03-d0d6-40c5-ba0b-b469ebb19c72",
        "cursor": {
          "ref": "9faf4d94-d54e-4c77-92eb-8879376bd1df",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "19d6ecac-04d9-4fc1-9713-aad6c2ca487f"
        },
        "item": {
          "id": "dd125a03-d0d6-40c5-ba0b-b469ebb19c72",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "446ea6a8-3fc1-4eb5-b175-bafd2c801e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c07085-db62-4974-9e0e-eea0b5313769",
        "cursor": {
          "ref": "477abf0e-98a2-42b8-8e1f-23a34f0200cd",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "26dcdbcf-40a4-4c7b-9fae-a562ad03a7f4"
        },
        "item": {
          "id": "04c07085-db62-4974-9e0e-eea0b5313769",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9b34619b-a83e-4e16-adc1-d45fce8e18d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fee74d0-092d-43a6-bbda-3e360c822646",
        "cursor": {
          "ref": "187efbe0-5cd8-4ee2-a597-30d2286d8b5f",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1f9750b3-2e01-4293-9acc-cc93cce2588a"
        },
        "item": {
          "id": "6fee74d0-092d-43a6-bbda-3e360c822646",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c25555a9-5106-43b5-81a8-cd1e0852c18a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7292b9b9-345b-44c7-8b03-7257b99b23dc",
        "cursor": {
          "ref": "dff21c6a-0d75-42a5-b886-e025655c7418",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f49feec2-ec22-4b96-9f4b-2eec2bbb7205"
        },
        "item": {
          "id": "7292b9b9-345b-44c7-8b03-7257b99b23dc",
          "name": "credentials_issue"
        },
        "response": {
          "id": "dd63d0e8-fc0e-49e9-9b6d-369f5160a1aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "4279fb6d-ff43-4701-b66d-bb216f082dbb",
        "cursor": {
          "ref": "18e81cd4-7afc-4abe-be77-3f2b92a3370c",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c09c9060-e624-490f-ac56-acbac727caf8"
        },
        "item": {
          "id": "4279fb6d-ff43-4701-b66d-bb216f082dbb",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "4bc92de8-0f7d-4997-a6b0-41004453042e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "286ed7e2-2f21-4425-9e8b-cc79884187e4",
        "cursor": {
          "ref": "f4f4d800-34bb-40c9-b647-b2ccf7349020",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "dc6d3fd6-55c7-46f3-9ae6-2d2b6c7969d7"
        },
        "item": {
          "id": "286ed7e2-2f21-4425-9e8b-cc79884187e4",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ac33b5ac-bc18-4f22-9168-75c7ef8d4fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "a0a9e6cc-512a-4af6-9590-e43e37ad57d4",
        "cursor": {
          "ref": "8b1640b0-91a5-493c-9b75-731d7fe85602",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "641cfc09-6b15-495f-bbf1-3c42b198e6e0"
        },
        "item": {
          "id": "a0a9e6cc-512a-4af6-9590-e43e37ad57d4",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "7b937e2e-f686-4901-82a1-5c2032ba97e8",
          "status": "Created",
          "code": 201,
          "responseTime": 4388,
          "responseSize": 994
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f60a87c-441a-4cc9-945c-7dce0637bc56",
        "cursor": {
          "ref": "10d9644b-a0d3-4743-b829-cd3c4ce0c473",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "21a9b37f-0069-49f8-8a03-8e0adbea0e50"
        },
        "item": {
          "id": "2f60a87c-441a-4cc9-945c-7dce0637bc56",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "86f4b4c2-97ae-4515-82f4-4ebb9ced9123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "b0ee127a-ebbd-441b-94db-52b1e8db9723",
        "cursor": {
          "ref": "984cb17e-c24f-47b3-b423-8c30a733de2d",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6840ed3a-821d-400c-8849-ca8218ca8280"
        },
        "item": {
          "id": "b0ee127a-ebbd-441b-94db-52b1e8db9723",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8452a06d-7692-4b1d-af8b-b57c17968c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "71f199ac-21c7-4694-a227-e89fbe21d36f",
        "cursor": {
          "ref": "783a5ed8-9d38-41f9-87a0-73fd64c17c98",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "79a7492a-57c7-4704-926e-6cafcd5665be"
        },
        "item": {
          "id": "71f199ac-21c7-4694-a227-e89fbe21d36f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "da09cc0c-c3da-4a1e-ac0a-56c93b890e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f59c7b-04d5-4230-a527-80e2d8752ca8",
        "cursor": {
          "ref": "8424e1cb-5445-4e3d-9544-5074080c6770",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b27466ed-312d-4a3e-8f6c-0e5715c6d4dd"
        },
        "item": {
          "id": "07f59c7b-04d5-4230-a527-80e2d8752ca8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "27ea8b0e-5c7a-46d4-9718-a38d5fa6753d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff3802e-9fba-469c-a7b0-08b008220ebb",
        "cursor": {
          "ref": "8a152b9c-d1a1-4175-89bb-dd999e294113",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e72ee686-7aa7-44bd-b636-f8602d184989"
        },
        "item": {
          "id": "8ff3802e-9fba-469c-a7b0-08b008220ebb",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "87520362-f5fe-4a01-996e-80232ca3bf5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a144c542-e03d-453a-907f-18974b7d88ea",
        "cursor": {
          "ref": "2b32d0a0-cbd2-4dd6-b846-8cfd5fcc3e7e",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "31b03e72-8a41-47f6-a3ad-7621b809e666"
        },
        "item": {
          "id": "a144c542-e03d-453a-907f-18974b7d88ea",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "81b83bea-5da8-414d-be91-9c25238c7632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085fb7ad-de5c-4ce4-9db9-ac6776385719",
        "cursor": {
          "ref": "6643e2df-5598-4623-a26d-6a0ab2a3a8d4",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "be976ab8-39f9-42d3-b9fc-f3f3b9ba77e4"
        },
        "item": {
          "id": "085fb7ad-de5c-4ce4-9db9-ac6776385719",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "bc2444a7-c336-4100-bd09-cdb0c11afcad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eea9390-ebda-429b-b4b2-088026cc676b",
        "cursor": {
          "ref": "cf5f8f25-b6ed-4545-beef-5476eef1fba2",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e865124d-2ecd-43e9-903d-f6b0294e1a94"
        },
        "item": {
          "id": "5eea9390-ebda-429b-b4b2-088026cc676b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "dd8b1094-577c-468d-aafa-961311e3507f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7103da7-b080-4bd9-9deb-549c6127a917",
        "cursor": {
          "ref": "80ae4173-aaf4-4c81-b168-841ccf087529",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c84002fa-4741-4267-b776-551052227eaa"
        },
        "item": {
          "id": "a7103da7-b080-4bd9-9deb-549c6127a917",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f1f9aa43-1cd3-4ed2-9ab9-6f7642db13ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f60be0-910a-4187-af58-aa739c3a8daa",
        "cursor": {
          "ref": "3c7234bd-a7f6-43a3-b19b-9c16f9fb5be1",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "68f8739c-cfb1-46af-90dd-3f50f248ae84"
        },
        "item": {
          "id": "22f60be0-910a-4187-af58-aa739c3a8daa",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ab42a1e6-8f1e-41d8-832a-224d3a6e0d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41fdf1ce-fe4c-407c-a62e-e63f573a597d",
        "cursor": {
          "ref": "ab94ddfb-ba4b-4cae-b45d-15ee923cbae1",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "05a148d6-9683-4474-bbfc-9e6f627e4208"
        },
        "item": {
          "id": "41fdf1ce-fe4c-407c-a62e-e63f573a597d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "efb531a9-d59b-4c90-b04c-497058c3a8b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95db39fd-3e37-4526-b813-55f4084d85c4",
        "cursor": {
          "ref": "6386b69d-1d43-486f-8ac3-3eb51e482df7",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f31b032c-11b8-4dd4-9a8f-27e938fc4ecb"
        },
        "item": {
          "id": "95db39fd-3e37-4526-b813-55f4084d85c4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "dd865236-7e74-4d49-bb4f-68a35746961e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f7cc8e9-949b-4b13-8cce-4b83d3488292",
        "cursor": {
          "ref": "0fb57f30-9af5-4f27-aa13-466c031683d5",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d6810e29-8111-4c77-8c13-87b78fd319da"
        },
        "item": {
          "id": "3f7cc8e9-949b-4b13-8cce-4b83d3488292",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "24dcb696-fc3d-40f2-85a2-e4eb42e4d0a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b0fec74-b509-46b1-b757-171cdd34590b",
        "cursor": {
          "ref": "c91d030a-2ed5-4523-840c-ac09d5bde8e1",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "250e9904-c37d-40ee-8afd-b638d98e86ad"
        },
        "item": {
          "id": "8b0fec74-b509-46b1-b757-171cdd34590b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3b0a1690-2a8b-42a8-8564-ca57bafda09e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad75304c-dc2a-4140-bb7d-1f20ecf09e80",
        "cursor": {
          "ref": "c98f6ca2-b566-432f-983f-aff6a5f5cc57",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "dbce5fe1-23ea-42c4-8a7d-5434d8cbb8b4"
        },
        "item": {
          "id": "ad75304c-dc2a-4140-bb7d-1f20ecf09e80",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "cd4e1e68-230f-4a4a-b547-e107c6c94117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9fb282-817d-4968-bb0f-0fd74fe0b0ff",
        "cursor": {
          "ref": "e440acbf-d291-402a-a660-129149f64cf9",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "3437e9e7-d5de-4cd0-85b8-c26fab90263f"
        },
        "item": {
          "id": "9c9fb282-817d-4968-bb0f-0fd74fe0b0ff",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "126c4421-2dd1-416b-9602-ed7f8206fcef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "274a1a37-4a7e-49f4-b3e9-6859cc882614",
        "cursor": {
          "ref": "8f797b42-9434-489f-9fa1-9b980b40c201",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "30ad0857-53e6-4627-8415-49e211f0f693"
        },
        "item": {
          "id": "274a1a37-4a7e-49f4-b3e9-6859cc882614",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "32945530-82d5-42b2-a000-d4021ad0ccae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0475c0-a72a-413a-bbc4-b2ff9279e2db",
        "cursor": {
          "ref": "75db8c6f-78b1-4997-a512-9fd8e059b8eb",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "6e111754-b264-4040-80a7-cb4f642bd1c0"
        },
        "item": {
          "id": "4d0475c0-a72a-413a-bbc4-b2ff9279e2db",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "987c1494-cb4f-4ecb-b4b1-692a046c5675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1ae788e-7c40-4c51-a277-4f8a89c2e988",
        "cursor": {
          "ref": "59ac6a18-b780-4edd-8e73-27ce76cded94",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "de87dcb9-d309-4866-8576-000649e6dffd"
        },
        "item": {
          "id": "c1ae788e-7c40-4c51-a277-4f8a89c2e988",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5e408aea-86aa-49d7-90e0-bd395d795ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d9be6d8-072c-4e6f-bb98-33d1c741753d",
        "cursor": {
          "ref": "217f783f-dfb0-4c3d-bbb0-40a550337fc3",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0a5b08ed-7a04-481a-bb7a-2088dc0ecf03"
        },
        "item": {
          "id": "6d9be6d8-072c-4e6f-bb98-33d1c741753d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "eea2e5ad-e266-43e4-b1ac-6a4428f572ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b693774b-c16b-4eb1-a5d5-a2f4f1c06665",
        "cursor": {
          "ref": "06b32adf-b3bc-4914-b05b-0b85ac6d9bcd",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6ec494ff-8f4b-4bfd-a352-bb7244377bc4"
        },
        "item": {
          "id": "b693774b-c16b-4eb1-a5d5-a2f4f1c06665",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2f07763f-d810-4d5e-b043-d04dd28f3208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23359347-cc38-4044-859b-ca2b9ae17d66",
        "cursor": {
          "ref": "63df9a97-48ae-4702-acba-2187068c679f",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "98eaf65f-6a0f-4c77-a81c-15137d4ce3b9"
        },
        "item": {
          "id": "23359347-cc38-4044-859b-ca2b9ae17d66",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a370df70-2121-4b87-b02a-d6d6569b2ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37fed30-fef1-4bb3-8dcb-2f68aadcc3ac",
        "cursor": {
          "ref": "2537f31c-bc42-4afb-8aed-2ae6b499efec",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "bbbef3a5-573d-437e-bfa4-67ac4b4b7f2e"
        },
        "item": {
          "id": "d37fed30-fef1-4bb3-8dcb-2f68aadcc3ac",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "70936880-36d2-43eb-ae75-8f41e88951e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3893175a-3305-486a-afca-73f75c4ec0aa",
        "cursor": {
          "ref": "c7ffabc9-fc10-4475-8f57-d7623f10d11a",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "9f8ebf19-771e-4d4f-97a5-00f6ba2e607f"
        },
        "item": {
          "id": "3893175a-3305-486a-afca-73f75c4ec0aa",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3aa9fd16-62b8-423c-9de9-764b4f039370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b014748-e97b-4a23-b221-cde9d2a5fc92",
        "cursor": {
          "ref": "edaeec66-9696-4295-a763-eb6f0d8b4448",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d52a08f2-8da3-455d-b9fc-fe8896e5e2b4"
        },
        "item": {
          "id": "5b014748-e97b-4a23-b221-cde9d2a5fc92",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "99285790-b334-4043-92f0-7b4f8d4b33b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de32d2a3-2294-4202-9932-856e00e22d95",
        "cursor": {
          "ref": "51a0eb5f-43a7-4353-9685-354edc250e1e",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "625ba10d-841b-448b-84d0-0be4c0772e94"
        },
        "item": {
          "id": "de32d2a3-2294-4202-9932-856e00e22d95",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ec7a5376-ed61-427c-a16e-ccddd63b494a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9caccb50-dd50-424a-8569-514521b79765",
        "cursor": {
          "ref": "284b8fa4-54ad-4b19-a656-3ded30fa45d0",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ff5ae351-2e11-48cd-9165-cc903ae5479f"
        },
        "item": {
          "id": "9caccb50-dd50-424a-8569-514521b79765",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7e692486-f1e4-4845-9702-1f9faa654127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "537952f5-c31a-4125-86a3-aa7e5e9612c6",
        "cursor": {
          "ref": "d8864b68-ac7e-494e-8c7c-d75072ebe1ca",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "69dac6ee-b2b4-4afe-ab16-10172442ed9d"
        },
        "item": {
          "id": "537952f5-c31a-4125-86a3-aa7e5e9612c6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "98430d4f-d6c8-4cfd-95f2-245bb7c70b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "773a03ad-7d55-4f8c-87c2-1740dbbf7842",
        "cursor": {
          "ref": "c7af8ab4-df58-4f06-9723-59365e5db45e",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "1a50d40b-0d90-4aa2-8825-06281f738973"
        },
        "item": {
          "id": "773a03ad-7d55-4f8c-87c2-1740dbbf7842",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2ef5e8bc-a82e-4f41-a6af-fcd9472c6adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bedc0aff-f855-42e3-beeb-89621b1fac53",
        "cursor": {
          "ref": "3af6a840-39a6-4214-a303-f10689c7ea8b",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "cc2db113-3976-4b8d-bd7a-2aad43d6464b"
        },
        "item": {
          "id": "bedc0aff-f855-42e3-beeb-89621b1fac53",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0e95acb5-fe26-4925-8a7d-c99931b33e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f7b4c1-e0d6-49e5-9edc-a13de47f08a1",
        "cursor": {
          "ref": "c39e598a-6cba-4567-9966-69f1c7bc0974",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "21380f2e-5a9d-4a73-b840-817f5b2a5480"
        },
        "item": {
          "id": "d2f7b4c1-e0d6-49e5-9edc-a13de47f08a1",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5a5b5a86-db0e-4707-ad33-ad9cd67d0ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea88821-9fb1-46bc-9690-e9ac1a883e3c",
        "cursor": {
          "ref": "4e63f3ce-1abd-403a-8723-41b3413fc568",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2b9b27fa-97dd-4b58-a8d0-7e96e545fd19"
        },
        "item": {
          "id": "cea88821-9fb1-46bc-9690-e9ac1a883e3c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6ad08edc-9748-4be0-ad4b-a0fba46a7852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "595fe23f-0a13-45ef-a060-b7cff912e90d",
        "cursor": {
          "ref": "ba33cb22-ac97-4642-a4b5-975faa4e1c44",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "5c4d8fcc-4f22-411f-a55d-6cc96907f928"
        },
        "item": {
          "id": "595fe23f-0a13-45ef-a060-b7cff912e90d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f63edb14-7c44-4ae7-b05d-d748db042f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c014f8-3d1c-4abd-b0c5-7378597bf1c9",
        "cursor": {
          "ref": "2128b78d-e14e-45cf-a9de-b8b2d68ff20c",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "646192cb-6f9c-4f98-baf5-cd8ce7ae53f4"
        },
        "item": {
          "id": "89c014f8-3d1c-4abd-b0c5-7378597bf1c9",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "fb205cb4-e5a4-4388-b185-fe8a72e08148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d55212b5-3a8a-4578-92f7-b62695a3f487",
        "cursor": {
          "ref": "152892ef-16a3-4ebf-a2f4-7a5fa7888102",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d06dce86-50e2-4324-920e-cfd6ff9b1951"
        },
        "item": {
          "id": "d55212b5-3a8a-4578-92f7-b62695a3f487",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a73de9af-9e21-4b7c-a920-72fe84587a35",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "544aae62-f0bc-44d9-8b9b-3ccae998e088",
        "cursor": {
          "ref": "6b3c0fab-08e4-4ec7-881f-c3d8faaed306",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "2faa3669-1b97-48d2-8b00-81b2f1b1da2f"
        },
        "item": {
          "id": "544aae62-f0bc-44d9-8b9b-3ccae998e088",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f47630e0-be95-4c9c-b126-4e03dd3c1f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b53a17-8ab4-4640-8fd9-4afaebe6c42b",
        "cursor": {
          "ref": "17fbb8b6-413a-4fb8-a679-b2df840c33b0",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7ed58204-2d9a-485f-ac16-b196b162d198"
        },
        "item": {
          "id": "06b53a17-8ab4-4640-8fd9-4afaebe6c42b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "594018ba-4487-44ca-a882-10c957bc6e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff31689-deb2-464e-a946-ff76cc977abc",
        "cursor": {
          "ref": "12d0c746-8ef9-412a-beb0-b41d49c15d31",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "0d6560f7-140e-4372-8781-0c5d815ed3b0"
        },
        "item": {
          "id": "3ff31689-deb2-464e-a946-ff76cc977abc",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "518b4621-1924-4c66-ac2b-d02fc50429d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93cff16a-018d-4d22-8ad5-49dbf2a0a4cb",
        "cursor": {
          "ref": "ffd7acd7-55a8-402e-99d9-aaf518c40a39",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "26f65c6d-649c-4b15-b9cc-e2c0ddc66444"
        },
        "item": {
          "id": "93cff16a-018d-4d22-8ad5-49dbf2a0a4cb",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1a47cb0c-19b2-453d-bd8e-5c36bb101c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "262c8bf5-a439-4bf3-9dc8-2c0760a5551b",
        "cursor": {
          "ref": "70c030ff-904f-4a85-bc91-93dbe681968a",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "70aabd5d-9873-42ee-870b-9acff31b2fbd"
        },
        "item": {
          "id": "262c8bf5-a439-4bf3-9dc8-2c0760a5551b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "40086855-ed9f-4402-a435-87bd4318cce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "885a774c-fb8b-4ddf-b890-6a7e0d6de00b",
        "cursor": {
          "ref": "a39221f5-f2fd-4371-a8eb-07192c38ede5",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "79edcf13-16f2-4a17-9839-8215401ac94c"
        },
        "item": {
          "id": "885a774c-fb8b-4ddf-b890-6a7e0d6de00b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7da66659-5c8d-4192-9109-5ee0591e54a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db9a41f4-15f3-4656-9747-c84aaaa847b9",
        "cursor": {
          "ref": "27c6fb98-a17d-48b3-87a5-7f6681e80dbd",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c0b88d5e-cfe8-448a-8b11-ddc9b93550ce"
        },
        "item": {
          "id": "db9a41f4-15f3-4656-9747-c84aaaa847b9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b89fb582-dbcb-41ab-83b5-3b8ca93e9826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d1f5e8d-3088-4297-a2c2-9cf54c5bf23d",
        "cursor": {
          "ref": "5af64a35-49eb-4709-a92d-5e4d34f48554",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "20905112-4a59-4fc4-bc4b-3795312f2713"
        },
        "item": {
          "id": "9d1f5e8d-3088-4297-a2c2-9cf54c5bf23d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4c3df4e0-06ce-41f1-9bdd-0d9f1006c320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a814f18-ecb9-438b-a2e4-3da6b187ebff",
        "cursor": {
          "ref": "370359bc-cd68-423a-a77b-c216098ea6a0",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "68f2299d-cc85-42d9-90fa-00bc7f41288d"
        },
        "item": {
          "id": "9a814f18-ecb9-438b-a2e4-3da6b187ebff",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "98933560-b6e3-4a2f-8d1f-25986f1f1601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ddb1d5a-fed2-4acc-9f3e-75cfff5d3206",
        "cursor": {
          "ref": "f559883d-3e9a-4921-8143-ad343808536c",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "852922bf-f4f6-4a8b-8eec-6c44f88a7182"
        },
        "item": {
          "id": "1ddb1d5a-fed2-4acc-9f3e-75cfff5d3206",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "322d17b8-3114-4152-a144-53888ef145fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df87bf70-a089-423f-8f22-eaa48735e1d9",
        "cursor": {
          "ref": "656904ed-272b-4df4-a2b2-f795cdc39c00",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "49ac0d22-2cec-49d5-9232-4896783511cd"
        },
        "item": {
          "id": "df87bf70-a089-423f-8f22-eaa48735e1d9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "43404c71-e3e8-44b3-98b5-b559b94e9374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db7c1127-8311-4865-b3da-2c4485fbccb6",
        "cursor": {
          "ref": "dfa9b177-3b41-4c89-a300-ccefbc061c5f",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "580d1919-4499-478c-96a0-f440c2addcff"
        },
        "item": {
          "id": "db7c1127-8311-4865-b3da-2c4485fbccb6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2a13861a-0d08-4cb5-a8ad-0a43974a0f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e36a9e1-1c35-41f5-a496-aa21609bcd3d",
        "cursor": {
          "ref": "63b813cc-0ad8-45ca-a2bd-f55b05fc0783",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "229baf48-cfab-455c-a8f6-2a8590d710f5"
        },
        "item": {
          "id": "0e36a9e1-1c35-41f5-a496-aa21609bcd3d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "30f422f2-b3b7-42f9-a48a-68c0ad51a852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b08e4c0-c64d-4d92-ad39-0401b93aff15",
        "cursor": {
          "ref": "d0319340-1d8c-4772-90eb-2c10a038624d",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "507fbd7b-f2fc-4ad5-8508-d0f416d4be17"
        },
        "item": {
          "id": "1b08e4c0-c64d-4d92-ad39-0401b93aff15",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6379fe0b-d62e-41f9-adb4-e3b94016270a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10acbc9c-6ccd-4024-b3e3-647cb0fc9208",
        "cursor": {
          "ref": "0a3574e8-9771-4347-9b57-a5f7e05da490",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "cc03133f-6ed1-448b-a7c5-f3b5335bb0e2"
        },
        "item": {
          "id": "10acbc9c-6ccd-4024-b3e3-647cb0fc9208",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "69b9bd21-1c9c-4951-ab66-0684bc8b1047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e74272-9b83-4d58-b092-78f57833e722",
        "cursor": {
          "ref": "b9fafa7e-c3fd-4464-b8ba-03dc530e2489",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "6bc73b07-6f2e-4997-8c83-4431e89cf5a9"
        },
        "item": {
          "id": "59e74272-9b83-4d58-b092-78f57833e722",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "55b3fbd1-bf45-4660-85b1-640b5a81c8c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73794d13-966e-47f8-9147-eaf0df1715d4",
        "cursor": {
          "ref": "f5427ec3-2789-4ea4-8121-332b133af8ac",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ddc8c62e-b5f5-4f42-8497-7ddf21c50e95"
        },
        "item": {
          "id": "73794d13-966e-47f8-9147-eaf0df1715d4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "025b088a-dc1e-45eb-ada8-33393e5fe57a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39009a1b-e3d4-41e4-a209-c7e12ff8fc71",
        "cursor": {
          "ref": "046805db-914e-46dc-98c2-9092f8c0858a",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "4f6d3174-e19d-4d64-a789-fba6ae3e801f"
        },
        "item": {
          "id": "39009a1b-e3d4-41e4-a209-c7e12ff8fc71",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "730c0c7e-4856-4c83-badc-5df334671143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92912f49-c50b-41e0-a772-87000c7c8191",
        "cursor": {
          "ref": "d447bbe4-87b1-400d-93fb-4509ee572f4b",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "58a2e2f5-5a93-4e03-b1d6-0cd2e7e85626"
        },
        "item": {
          "id": "92912f49-c50b-41e0-a772-87000c7c8191",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a693d07e-7ff0-4d5e-b162-31fa40d704fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95885701-2d7a-42d7-b491-bb46f6adb956",
        "cursor": {
          "ref": "c5df894f-ac3d-457d-8b3e-d1e3df26646f",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a361b79f-b826-477f-b0a3-70539877151f"
        },
        "item": {
          "id": "95885701-2d7a-42d7-b491-bb46f6adb956",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f1ceb634-bd1f-4e1c-a4e7-1b52bf7a46d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "179e3fc4-f831-4139-ad50-d1c9d28803e5",
        "cursor": {
          "ref": "2bf306dd-d895-4ed1-99d5-6b1b05d1c382",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f19b1b6b-5dd0-4730-b05b-95fb8906fa5a"
        },
        "item": {
          "id": "179e3fc4-f831-4139-ad50-d1c9d28803e5",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c088a5d0-4404-43a4-8674-176e4d415952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08361d3b-afd3-4cd2-ad4d-17f95730b541",
        "cursor": {
          "ref": "a2de495c-5afb-4364-aca1-73b87edb0434",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "301174a1-296d-470e-9d49-6847cf6229f5"
        },
        "item": {
          "id": "08361d3b-afd3-4cd2-ad4d-17f95730b541",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e6f1106c-c02e-41d7-bb9c-285d0d616379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b6b305-2d4f-465a-b73c-c0dc69a90416",
        "cursor": {
          "ref": "fac64fe5-9054-48f5-a8f1-bdbd5a71f6b1",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "32ad6b2f-d4d1-4768-a5b2-4939bf3064a0"
        },
        "item": {
          "id": "99b6b305-2d4f-465a-b73c-c0dc69a90416",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "863ad869-67c8-4d29-a40d-34518372ce4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7825d3-bb82-40ec-a98c-f5087f27357a",
        "cursor": {
          "ref": "5d84ac33-1b7a-4762-95d2-a3ddc6c00da6",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "cefe97e8-6a9e-4a46-b806-196a0ceccb0f"
        },
        "item": {
          "id": "2c7825d3-bb82-40ec-a98c-f5087f27357a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7ab03220-468e-4db6-a74b-786bc8f3d6b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10924841-73e6-4782-bd5e-251ab6912d8f",
        "cursor": {
          "ref": "dbc214f9-7ffc-4325-bbc1-a68b76b73dd1",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "7c84a2b0-ba3b-4fa3-aa5b-8d1b696de75c"
        },
        "item": {
          "id": "10924841-73e6-4782-bd5e-251ab6912d8f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "13692c17-6b4e-4e68-a5e5-14b191421b11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f433e73-d9a2-44e9-8c50-d122f7bf642d",
        "cursor": {
          "ref": "7df78f68-9558-4008-b0dd-33b9d578a8da",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "eda6019e-232c-44a9-975d-6fc14664aed6"
        },
        "item": {
          "id": "7f433e73-d9a2-44e9-8c50-d122f7bf642d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f76a1a20-48fa-4753-b160-d045c6172e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1dc5aa-ca6a-4d0b-bd4a-7ffc99c40982",
        "cursor": {
          "ref": "e6de0a40-34df-45af-a3b1-93b725ef8805",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "543459af-8868-4c7a-b6ee-797231eae26b"
        },
        "item": {
          "id": "ff1dc5aa-ca6a-4d0b-bd4a-7ffc99c40982",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "85bf06bc-855d-4aea-a8b5-002aee0e0827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9adebfe-b4be-4ce2-b491-ba3465402114",
        "cursor": {
          "ref": "58aec3e6-f4b7-4292-a246-8fe5172ebb0b",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "9c2fd0e4-4316-476c-a8bd-d31f071f158a"
        },
        "item": {
          "id": "f9adebfe-b4be-4ce2-b491-ba3465402114",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4321434d-2dbd-4f5f-9c88-87f41cafb11a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec77168e-cd2a-4c1b-aa1f-b97e506f8a22",
        "cursor": {
          "ref": "c96bbdc6-6625-4d59-ad85-060698cf9884",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "94c9e88c-06ce-42b2-b838-6b906d5b7cf5"
        },
        "item": {
          "id": "ec77168e-cd2a-4c1b-aa1f-b97e506f8a22",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6f182e8b-2cfc-4620-a6ef-df7a3df39f58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df58947f-fb1a-4b87-a318-d177056de563",
        "cursor": {
          "ref": "804a79cb-57ce-4058-a4b6-fe216e277712",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e62a0cca-8640-428d-82d0-459f95acb11d"
        },
        "item": {
          "id": "df58947f-fb1a-4b87-a318-d177056de563",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5134fc03-641f-48d9-8e2d-c5bc4b5049c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef31c45-3f2c-41ad-b0d2-4fc179c0bec5",
        "cursor": {
          "ref": "dc563baa-df6e-4a5d-8a37-65c75ef4387f",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "1da8dba2-ba7e-4429-9670-a28dc3ca28fc"
        },
        "item": {
          "id": "5ef31c45-3f2c-41ad-b0d2-4fc179c0bec5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "bc63a2d3-6704-4daf-9dc4-fa013380ee41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168d4d11-d187-4fee-86e0-4c4529ea7778",
        "cursor": {
          "ref": "cd862106-dfab-4e66-8c38-a3672c86ace9",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7633e6d9-d146-45bf-aaa7-cac812542c5b"
        },
        "item": {
          "id": "168d4d11-d187-4fee-86e0-4c4529ea7778",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "4af9f643-1750-460f-90d4-f98654f7cddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e224c23a-afb0-47b7-beb4-e2f0aad82bc6",
        "cursor": {
          "ref": "a639fd12-b9d7-48a5-b50a-0fd63f5ded15",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7c7114f2-c338-4ef2-8c1d-5a37d3f2e3d1"
        },
        "item": {
          "id": "e224c23a-afb0-47b7-beb4-e2f0aad82bc6",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "da017025-b94d-4a96-87f0-21c1ce8e9438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66427ce8-d4dd-4fcb-ae09-23611aafa6e7",
        "cursor": {
          "ref": "1c51d55b-3534-4c9e-b46c-2be4e3804a42",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ed12dc8b-986b-4462-a939-6951dd7993c3"
        },
        "item": {
          "id": "66427ce8-d4dd-4fcb-ae09-23611aafa6e7",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "4041e4e0-b799-47a6-8b6a-5a1e389b3988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c2726c8-badf-4350-991b-8fa825e41c87",
        "cursor": {
          "ref": "792c92d0-6a9f-4a23-932a-e87551b8ac3b",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3b967225-4e55-493b-8b9a-5a4658e6bdba"
        },
        "item": {
          "id": "6c2726c8-badf-4350-991b-8fa825e41c87",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "4d63d7c3-90d1-4ba8-9174-d89357db1908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf477dff-b74f-4f8d-8011-1b39af948f6e",
        "cursor": {
          "ref": "848ccdc5-1b5c-49fb-bacf-f625fbce97aa",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a8b7a44b-83f8-4d51-b3d1-42c53cedaffd"
        },
        "item": {
          "id": "cf477dff-b74f-4f8d-8011-1b39af948f6e",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "870ffe21-2600-4f1a-80dd-7ace06f16ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fbb4118-0256-44fe-bc4e-00e4b81142c1",
        "cursor": {
          "ref": "a8d70f84-7fe6-4588-829f-22c77d054ed2",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "00d15b2b-7ddd-49ec-b824-b06eeb61770c"
        },
        "item": {
          "id": "2fbb4118-0256-44fe-bc4e-00e4b81142c1",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "2d4e0f3b-6ec4-4579-bfc1-271e416afc46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef5f9a1-3355-4ed0-b769-58cadf23981a",
        "cursor": {
          "ref": "c0c8a0c6-3113-4600-8fd5-c356bdba1afc",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "7023f22c-6ea4-416c-8577-e98364645bdc"
        },
        "item": {
          "id": "7ef5f9a1-3355-4ed0-b769-58cadf23981a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6085dcbf-9f61-46af-bad8-240f696dc1d2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23062fd2-3642-4811-8466-3c128c7e919b",
        "cursor": {
          "ref": "81e9a772-0263-4a5b-bc41-cd50fc126fe6",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2740853a-4fe4-4210-abd4-daa366eed2a5"
        },
        "item": {
          "id": "23062fd2-3642-4811-8466-3c128c7e919b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e56cc1ed-55e1-4614-a73b-ba66dd44dc5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7733b3eb-dcfe-4065-a770-da24509631f5",
        "cursor": {
          "ref": "82b64316-e7de-4e3f-a347-0cce59705bde",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "410bb60f-513d-457b-8fb9-38ec2c6d714e"
        },
        "item": {
          "id": "7733b3eb-dcfe-4065-a770-da24509631f5",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ccabb240-c823-4d98-bd60-57e9f68c748e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49be5c77-0119-4a3f-85b2-f5023ba56716",
        "cursor": {
          "ref": "e98cc579-18ed-45d8-9ae4-696fbf152449",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4d7eb68f-f9e7-4542-bb26-0e252f03bf37"
        },
        "item": {
          "id": "49be5c77-0119-4a3f-85b2-f5023ba56716",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "551629d7-3972-4433-abe9-3ee89970ee0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3bced65-cf83-44bb-8862-e181a3044f1b",
        "cursor": {
          "ref": "167403bc-14cc-48a5-855f-337e5760bc80",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "78a40538-3ad2-4a8a-9012-57e4c709a0af"
        },
        "item": {
          "id": "e3bced65-cf83-44bb-8862-e181a3044f1b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2023c030-633e-49a0-b620-53ece9215706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecdde21e-bdbb-44cc-92fc-869f84d1ab64",
        "cursor": {
          "ref": "b6ed4faf-9a82-4f60-afd1-d0ecfad0a3f3",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f2515e25-252f-4585-aa36-91c10b57b523"
        },
        "item": {
          "id": "ecdde21e-bdbb-44cc-92fc-869f84d1ab64",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "810420cb-dbad-47bb-b5df-9cf93ac3e50c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c2610e-4afb-4ce2-9253-b34cfc36c259",
        "cursor": {
          "ref": "67206c7d-8a94-415f-8f95-bc55c6d4504a",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "19dea16b-83e6-4e50-a7f6-29d34d77b58e"
        },
        "item": {
          "id": "25c2610e-4afb-4ce2-9253-b34cfc36c259",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d2aadbf6-75dc-4f67-812f-a714e6b768e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12140257-aa12-4235-b08e-a5e203477034",
        "cursor": {
          "ref": "7fde5e5c-7a6c-4c08-82f9-899596e47a48",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e639ccb1-a5b9-4db9-b6d2-50575f1d9ef2"
        },
        "item": {
          "id": "12140257-aa12-4235-b08e-a5e203477034",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d53bd827-cab6-4ee7-a9c2-1fca62f43589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2956c646-22f1-4498-9be1-cd226ea7b8a9",
        "cursor": {
          "ref": "1fe4476d-41a9-4619-b014-04a492d55c8b",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "6684d3df-7976-4a7f-991f-b1596d94d106"
        },
        "item": {
          "id": "2956c646-22f1-4498-9be1-cd226ea7b8a9",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "5e025d41-f8c0-4817-912d-06feeb138924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f19186-c987-41e6-9977-64a679dd92df",
        "cursor": {
          "ref": "d8a9f180-3e55-4949-a3d3-c86f69a9efdc",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "60c3e936-2a7b-40fb-99e7-373cc81ff757"
        },
        "item": {
          "id": "e0f19186-c987-41e6-9977-64a679dd92df",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "542f5f22-815f-42c8-ae66-f0b64ebb8eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c1a3741-e3aa-41fe-a3f8-44c2cc69fc60",
        "cursor": {
          "ref": "ef850c0c-8637-49bc-8698-3321c9879299",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a08a8ca5-37fd-43a9-8cb5-0d1244ec3915"
        },
        "item": {
          "id": "4c1a3741-e3aa-41fe-a3f8-44c2cc69fc60",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "8d0dffc0-1fc0-4479-b582-55dceae3baa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43723e4d-efa8-4b2c-be44-6d26367bf3af",
        "cursor": {
          "ref": "490452db-e3e0-4fb3-8e0d-8b7ad36a9c5f",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7df6bb36-014a-40c9-a435-54c48f41f8db"
        },
        "item": {
          "id": "43723e4d-efa8-4b2c-be44-6d26367bf3af",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6d428286-7899-478e-be27-d62d24f59eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9510b5e5-a1e9-4f00-a289-d9676acbfb36",
        "cursor": {
          "ref": "7cd21fa6-0358-402c-a8b5-5fdfe71e2627",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d096c381-3568-406a-90f6-3b6c1e708270"
        },
        "item": {
          "id": "9510b5e5-a1e9-4f00-a289-d9676acbfb36",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a40af41f-0a1c-45d4-9a46-5ec52d3dcc42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8392a085-a154-47a6-8c1d-b847bbc4784c",
        "cursor": {
          "ref": "8223bb65-2106-4b19-a2fc-5b64c806969c",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e21c85d4-4e3d-4698-9bdd-65f382706675"
        },
        "item": {
          "id": "8392a085-a154-47a6-8c1d-b847bbc4784c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "9dcdf74a-35d2-4864-b4fa-ebcd4873028d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b6f718-1602-457c-a00a-3dbd13978e34",
        "cursor": {
          "ref": "cd916768-731f-4d5f-a155-b563ff294585",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "20ba7d83-2910-4d34-8054-5725f29bc0cd"
        },
        "item": {
          "id": "82b6f718-1602-457c-a00a-3dbd13978e34",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "fb0b59ae-0e28-49fb-9a6e-f0319dce87ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d379e8-ae57-440c-899b-eb1b3b81850f",
        "cursor": {
          "ref": "725906ba-50af-4cbc-91c2-da5d68f2d273",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e45ed052-4758-40f2-a03b-77e6e1631327"
        },
        "item": {
          "id": "e4d379e8-ae57-440c-899b-eb1b3b81850f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "082a7fb8-d58e-4985-9fc7-e30186d30d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7a1062-ac17-4848-88d9-191d80547edf",
        "cursor": {
          "ref": "7077ef48-1bb1-4f2e-88ab-0b426261fc1c",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d99e0688-370a-4866-80cb-ad80a396a2cd"
        },
        "item": {
          "id": "0e7a1062-ac17-4848-88d9-191d80547edf",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5ed2f08b-4d6d-4012-8c80-8bb3893bccac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a0147a-fda1-40a6-902e-c585df96a9d6",
        "cursor": {
          "ref": "c3de699d-e7e0-4c06-90d3-9b7f71f0804b",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ef7f8e3e-c131-466c-bf33-e77e9fd880c1"
        },
        "item": {
          "id": "42a0147a-fda1-40a6-902e-c585df96a9d6",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "020017fe-7246-469e-8bf2-0a082e68c248",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "659df7f3-4889-4a5c-a2b2-3156603583f1",
        "cursor": {
          "ref": "21479b63-ed18-4be3-930b-808837a783a1",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d2dc99ba-aa3b-4aad-9baf-0d8657c5a7b0"
        },
        "item": {
          "id": "659df7f3-4889-4a5c-a2b2-3156603583f1",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "3d57b06e-a779-4b8d-961b-dae5fc7b325d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ceda044-1e7c-4889-a590-c1e5d0551a20",
        "cursor": {
          "ref": "05dc4706-b488-4414-a5e1-8a057a3ba4e4",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "bda2f7e7-1dbe-4b66-a7df-8e5ca8e34106"
        },
        "item": {
          "id": "6ceda044-1e7c-4889-a590-c1e5d0551a20",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "1164e858-30f5-45eb-9f56-4d93e80ae826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f70e6119-5c80-4ff7-b2f8-366da9ce73cf",
        "cursor": {
          "ref": "ba6fe99d-7b2a-4775-8ecf-399641ed5880",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "68062a7a-353a-476b-8e01-2c7152091ad9"
        },
        "item": {
          "id": "f70e6119-5c80-4ff7-b2f8-366da9ce73cf",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "2a2e3a97-6cc3-426a-b66e-1644352dbeef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc96808-e87d-48fd-bcc2-93e28b336687",
        "cursor": {
          "ref": "5927fb29-c129-41e5-ac83-b2627148d720",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c39467b0-8f98-4ad7-88ea-fa20cc66e309"
        },
        "item": {
          "id": "4fc96808-e87d-48fd-bcc2-93e28b336687",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "64e1c5c4-0ed9-496e-8a03-36767ee483c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02660df8-a3d8-4707-bab8-0dd14594d15f",
        "cursor": {
          "ref": "9c5c83f7-9622-4ade-bba4-98af5ec4cd92",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "46942c37-5e2d-46ed-abc9-41a75cd40d99"
        },
        "item": {
          "id": "02660df8-a3d8-4707-bab8-0dd14594d15f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "c78a992a-3588-4f29-8dd4-7ceedc9ae4d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a341591-4fd7-47fd-8dff-b965290681ba",
        "cursor": {
          "ref": "b6681c2e-afbe-479c-af8c-05af63a18bfd",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "846dc336-8085-4546-a4a0-f1f403983a64"
        },
        "item": {
          "id": "1a341591-4fd7-47fd-8dff-b965290681ba",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "30b078da-0c9d-4215-9ded-5df3cd4a3d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a72552-1738-4b16-ba19-6de7b4aef648",
        "cursor": {
          "ref": "d26c40b7-17b7-46af-b16f-c1edd3d29cef",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "39ae9338-29f2-4c9e-a5e3-c9d50a184a55"
        },
        "item": {
          "id": "e6a72552-1738-4b16-ba19-6de7b4aef648",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f2a2c0c2-58c7-4886-8088-22e532152d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccab3cd8-47a8-4e3d-8121-20db0237b083",
        "cursor": {
          "ref": "8c8f09df-2a32-4bdb-bb2c-84a2fc440417",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "78483300-ba5e-488b-8e3a-9047393f5702"
        },
        "item": {
          "id": "ccab3cd8-47a8-4e3d-8121-20db0237b083",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "bb5955fe-527b-4454-af84-e2a5dfccc3e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0889ab7-b9bc-45a6-a3ff-9918ecb12d73",
        "cursor": {
          "ref": "b6459526-9e28-4979-994e-9526ffe4d3b9",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "24d2aa11-8a66-43e8-9900-47a6fc43c6aa"
        },
        "item": {
          "id": "a0889ab7-b9bc-45a6-a3ff-9918ecb12d73",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9b60b314-8715-4425-8c57-31ea39acdf62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be85d203-c410-4bb7-9832-00215fc35ebd",
        "cursor": {
          "ref": "0b62af68-d785-482e-8582-b9a01825cac8",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9be6f670-fa87-4d30-9dc7-32bd42f8a594"
        },
        "item": {
          "id": "be85d203-c410-4bb7-9832-00215fc35ebd",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "05c5b294-f4bd-4d11-bdc5-963ac5308dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "509b9449-1d28-4b72-8c4f-310c8e5847e5",
        "cursor": {
          "ref": "08bc8286-5f22-4f65-9926-45147251f947",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9f7f7ef7-1991-4e1a-abea-a74373db31d1"
        },
        "item": {
          "id": "509b9449-1d28-4b72-8c4f-310c8e5847e5",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c05adc4a-5e06-4f78-af36-a43072a40e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b70a0e-39f7-4f3b-b166-fffffc656a24",
        "cursor": {
          "ref": "d8aa790d-2fa9-4816-9ecd-261c35b63a56",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "25cef2c5-bf5b-4740-85e5-fbcacbc97607"
        },
        "item": {
          "id": "61b70a0e-39f7-4f3b-b166-fffffc656a24",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "20466e56-2ab7-437a-b4a7-582a6f28c843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd58767e-ea1a-43ac-a044-76ee2c3511d5",
        "cursor": {
          "ref": "3a38e315-24f4-4cc4-b061-0e9f645bc0c6",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b20b3b22-d8a4-43a3-b29e-52fc80b32a55"
        },
        "item": {
          "id": "cd58767e-ea1a-43ac-a044-76ee2c3511d5",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4b2cebbe-400d-4a62-89ea-f0e846767227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd4242f7-c19d-457f-afeb-848553eb86c9",
        "cursor": {
          "ref": "c109d437-9960-43f7-a8b6-28ba14cbbf1e",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f4fab2d1-c0df-4f9e-ae2d-489099a5e03d"
        },
        "item": {
          "id": "dd4242f7-c19d-457f-afeb-848553eb86c9",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "5b7df331-606e-41b7-ab5a-5632213305cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74dcb74e-bb36-4465-87e1-a28b955efc0f",
        "cursor": {
          "ref": "6b5e065f-3108-49d8-bbee-2c4f01051a9d",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "33254ca7-9a50-45db-8835-edc0602db24e"
        },
        "item": {
          "id": "74dcb74e-bb36-4465-87e1-a28b955efc0f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "05d045e4-4227-4825-b0bf-956959e0803c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07482411-b0c3-4822-80a3-20fe0c55af1e",
        "cursor": {
          "ref": "f8df2a81-721c-4660-8051-51d2c7b5b88b",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f4ec184c-bfa9-46cf-ba76-590619331319"
        },
        "item": {
          "id": "07482411-b0c3-4822-80a3-20fe0c55af1e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0ada853f-b3e5-4c27-ad72-51f7e739f44f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e291ff-ebef-48b0-a2cf-e98a95237455",
        "cursor": {
          "ref": "6e579896-5a07-47c2-96c7-2f211716cc67",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e6712085-01d5-4b36-a76e-16c49a40dcda"
        },
        "item": {
          "id": "e3e291ff-ebef-48b0-a2cf-e98a95237455",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1e0d2fa8-2679-4ec8-9a4d-1442bba149f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e35bdc-9cb9-4209-b3f0-fb8944a05c53",
        "cursor": {
          "ref": "a85597d1-c24b-40dc-ab81-f2b9e29b1ef4",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "7f7e2f75-8401-45e4-894b-438d502dfacc"
        },
        "item": {
          "id": "47e35bdc-9cb9-4209-b3f0-fb8944a05c53",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "8e591b10-44d4-4c4f-83eb-6bb72b502bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe17d56-262b-4602-b164-58f4428aab44",
        "cursor": {
          "ref": "841f5a17-6851-4163-8f78-1d3eeb4eb03b",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "030dfbf8-47fc-4cfb-905a-3dde4214241c"
        },
        "item": {
          "id": "bfe17d56-262b-4602-b164-58f4428aab44",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d871c970-9c89-46f8-9caf-10fcde024562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5a0279-d19f-4660-9292-58a4a8f5252f",
        "cursor": {
          "ref": "41c05a69-9a12-4c1d-a8a2-69d9d02919d4",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "104b3dad-a43c-44b0-9fee-c0729b12cf3d"
        },
        "item": {
          "id": "7f5a0279-d19f-4660-9292-58a4a8f5252f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "3401c0cf-ece0-499f-9bca-79601b2151cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b86f5a9-0bff-4fa5-9d95-3ebd1f2ae2c3",
        "cursor": {
          "ref": "607a5ba5-1510-4e9e-aa80-3e3c8f2a7873",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6d483b4c-a6bc-4e69-98c3-fff0481dd132"
        },
        "item": {
          "id": "3b86f5a9-0bff-4fa5-9d95-3ebd1f2ae2c3",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ef9b61c7-2781-41ab-9552-5c47f201381b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831f269e-7b96-455a-8c8a-ac36102bb434",
        "cursor": {
          "ref": "e09b0dec-3a61-42bf-89e3-fcb8fe862873",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0764cf57-8259-44a1-876e-84ec5899bbd6"
        },
        "item": {
          "id": "831f269e-7b96-455a-8c8a-ac36102bb434",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "65dfd886-92cd-4c25-bda6-d91a7dc5d2e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe4b6d8-d121-4ad6-964e-836e68f278cd",
        "cursor": {
          "ref": "4a58f389-1531-4fb5-9bea-88fb95f5f3dc",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5d129451-c4b1-40bb-b76d-846db9ea03fb"
        },
        "item": {
          "id": "ffe4b6d8-d121-4ad6-964e-836e68f278cd",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "22bd70a2-0a20-4e2f-b7ad-1706366192e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0416cee4-60be-4523-8582-02316b29e0de",
        "cursor": {
          "ref": "8dd7b4df-7f17-48b6-974c-6ca780dea5d7",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7669ee45-e739-4294-ac97-674fddb1d30a"
        },
        "item": {
          "id": "0416cee4-60be-4523-8582-02316b29e0de",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "9fde4dfb-c147-44d5-8c63-9048459bfb22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e474e218-a84a-4fc0-affd-f88943b1b5d6",
        "cursor": {
          "ref": "f98eda2b-2ea2-4641-acfb-30bc230ce04d",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9a374124-81a4-4c45-842a-b6d35bc631d5"
        },
        "item": {
          "id": "e474e218-a84a-4fc0-affd-f88943b1b5d6",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "567c06fe-0fa9-4ae0-b546-60030b4547ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb1b5ef-7bb3-43d9-822b-b2d82256da23",
        "cursor": {
          "ref": "872037ba-25aa-4911-8f36-6dcee7843392",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "450f2051-871b-4892-a64c-286ed992016c"
        },
        "item": {
          "id": "beb1b5ef-7bb3-43d9-822b-b2d82256da23",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5f6bf2d3-59cd-49fe-9798-55379f4a7492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48779fbc-097e-415b-885e-dda419c9eb7a",
        "cursor": {
          "ref": "aa631f5b-21a1-4ab6-9e53-63726574adc5",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f35f6a1d-588d-4e85-9a3d-3a336075c281"
        },
        "item": {
          "id": "48779fbc-097e-415b-885e-dda419c9eb7a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "be7a315d-08bd-49c1-8ef1-2e94f479db4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd513dac-983d-4074-b74b-3494a4ebb18f",
        "cursor": {
          "ref": "044aa38f-73b3-4db3-8045-4db54c4750d9",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e374e33f-d220-4ed8-9d65-0f40179cc8bc"
        },
        "item": {
          "id": "dd513dac-983d-4074-b74b-3494a4ebb18f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e04bc2aa-cb43-4b05-b8b0-5e7c1620e70b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2eb93d3-03ae-43cc-a131-53bcbc3a401f",
        "cursor": {
          "ref": "37b0bbed-91dd-4d76-aaf5-1c4983392db7",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "fda18af6-430d-4daf-94e9-ee7c746d718d"
        },
        "item": {
          "id": "d2eb93d3-03ae-43cc-a131-53bcbc3a401f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c170ac85-5d19-4ff9-bf1c-ba3f582c8e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "191ee97e-f27a-414e-aab8-d9a9bff7edcc",
        "cursor": {
          "ref": "467a2eea-f9c8-47cd-a63e-d8c941d67a3d",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "9bebd8cb-28b0-4603-be06-4f450379c65f"
        },
        "item": {
          "id": "191ee97e-f27a-414e-aab8-d9a9bff7edcc",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "87a1a690-3bb1-4b6b-9d78-db7957898f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d1a221-c666-4675-9da2-368d17c332da",
        "cursor": {
          "ref": "7a78ad5c-4176-47cb-96e4-71355c239eb1",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c4c576ee-e7dd-4784-8d20-20f391fa84fb"
        },
        "item": {
          "id": "f6d1a221-c666-4675-9da2-368d17c332da",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6d0fe8cb-0c12-4d61-8fea-7198ef4b4e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2395bd49-8661-4c64-a44e-5afcc8b1766d",
        "cursor": {
          "ref": "500a0e27-ea21-4e81-9847-027e65736146",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "55a27b62-0e03-4b3e-81a0-576027ee15f3"
        },
        "item": {
          "id": "2395bd49-8661-4c64-a44e-5afcc8b1766d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d2457747-4385-4252-9f1f-379080cef575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b321198-0009-4c90-9097-d579524c57bd",
        "cursor": {
          "ref": "ccacc59f-4139-40cb-b913-d3e3b20d59f0",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c2570acd-5c51-42f5-99af-cc80dad92778"
        },
        "item": {
          "id": "5b321198-0009-4c90-9097-d579524c57bd",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "36bda5f4-ebe5-410b-a189-68ed5eac3b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f18c76-50be-4195-9dfe-254a81be743f",
        "cursor": {
          "ref": "00216e76-48a1-4634-8734-6d4cc947f91a",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "3b6dafa3-d058-48dd-ba6a-da47c1a27d09"
        },
        "item": {
          "id": "73f18c76-50be-4195-9dfe-254a81be743f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "54c00917-3387-4e34-8128-a5a3f04fe502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b9b198-17ca-4465-acba-1de088d42a91",
        "cursor": {
          "ref": "c4b5575d-e78d-4418-aa03-3b52daecc468",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "085571d7-2b02-4fdd-9d79-6002fe464028"
        },
        "item": {
          "id": "d0b9b198-17ca-4465-acba-1de088d42a91",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "7c2232f8-2e02-4356-b1e7-35d694e1cd3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72b22e5-9df2-4264-b987-efeb93f1d3f1",
        "cursor": {
          "ref": "a55e921a-5899-4d9a-8945-381774387916",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3f2aea14-4f58-44df-a56b-fa788dc41fa6"
        },
        "item": {
          "id": "b72b22e5-9df2-4264-b987-efeb93f1d3f1",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f8305771-6640-42d3-a620-78cdd4deb0cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea486543-001c-41e2-9d0f-f1d95613a400",
        "cursor": {
          "ref": "d97ce70a-d123-4b99-8045-501169f5c7f9",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "adb017f9-88ef-48c4-ba32-745476c2cec4"
        },
        "item": {
          "id": "ea486543-001c-41e2-9d0f-f1d95613a400",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "7337d8e5-acc3-4751-8016-ecb547aa070e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "105542b9-772d-4612-b377-12b2273ada78",
        "cursor": {
          "ref": "60828cfa-b188-4509-b3c5-8235aa187dd7",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "cccdd581-be73-4296-af07-8b0e711a489f"
        },
        "item": {
          "id": "105542b9-772d-4612-b377-12b2273ada78",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "7d6efb42-b017-4bb2-b7b8-ac0ec9d337ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a64771-5a5c-4c3b-be3c-366cc30aa780",
        "cursor": {
          "ref": "4e19fb97-1db9-4c2c-9331-97da79be4d4b",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "16448df2-be88-4949-9c1c-eddf4dc13fe7"
        },
        "item": {
          "id": "d7a64771-5a5c-4c3b-be3c-366cc30aa780",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "2138329a-8817-4928-b8a0-a30edd832530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9803fa18-fbee-4945-9664-c5dd8db22116",
        "cursor": {
          "ref": "71c74785-f63a-4ade-becc-9422cf8910ae",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "339bf717-a1fa-42a3-8eb9-55738da10197"
        },
        "item": {
          "id": "9803fa18-fbee-4945-9664-c5dd8db22116",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "2b5eaaf6-ba39-4fae-8051-3db20ffcaa23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f176da-8f31-4a42-a78e-bcbf8924a2c9",
        "cursor": {
          "ref": "ba8babc0-077c-47aa-9141-551678bef587",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e40b750c-d088-4377-9d17-da0c8bbb4dd8"
        },
        "item": {
          "id": "20f176da-8f31-4a42-a78e-bcbf8924a2c9",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0a727db9-a488-43ea-851a-abcb4185a4d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e177e8-2a96-417b-8bdb-aaf0ed145f51",
        "cursor": {
          "ref": "27f87168-e02b-46d3-bbb6-2a4a2ccab220",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "5a28cb1a-bf5d-42fa-9b38-6b5bb454e94c"
        },
        "item": {
          "id": "88e177e8-2a96-417b-8bdb-aaf0ed145f51",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "4346605c-be89-462f-b9fb-dbc381dc3ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e0516cf-0494-4ed9-9a8d-a45da8f38929",
        "cursor": {
          "ref": "c975e768-ec51-47dc-9585-ad1a12f0dc1b",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "94b38abe-982e-440f-8035-37d2eea8242a"
        },
        "item": {
          "id": "0e0516cf-0494-4ed9-9a8d-a45da8f38929",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "4191adf1-a452-4401-bf2c-1719a2fcfc6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b97d98d-a256-455e-a673-589a3ba8f6f8",
        "cursor": {
          "ref": "84e32f0b-b078-4a36-9a34-0f223200b14d",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "bdf2b0a3-afa2-4cdb-b5da-5cd8b51bde74"
        },
        "item": {
          "id": "9b97d98d-a256-455e-a673-589a3ba8f6f8",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "47d4e01a-f510-4e19-b6b7-a7e0cbf023cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96dbc18-c035-43c3-a802-379fd803b6a1",
        "cursor": {
          "ref": "98bc0d72-92c0-4041-a09b-31f555d18dc9",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "8265d87e-b16c-4cc7-a99a-21e328059c8c"
        },
        "item": {
          "id": "f96dbc18-c035-43c3-a802-379fd803b6a1",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0d1d966f-9336-4363-84a9-5c75f15cfef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402bd0c3-b4ab-4ddc-8eaf-2336cb0b14e6",
        "cursor": {
          "ref": "f89af6bf-467e-449f-b14d-fcd6baed4688",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d12c3f77-eb7f-47b3-b71c-87c79ebbde90"
        },
        "item": {
          "id": "402bd0c3-b4ab-4ddc-8eaf-2336cb0b14e6",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9089b1aa-894d-47f2-b7b5-e91777ff4244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8bf180b-a8ce-46e2-8958-e75a22e820a0",
        "cursor": {
          "ref": "7a6e8a19-e14d-4f6e-84ce-54c1ae478c07",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0026ae60-1518-4f15-a485-119f3d4a3ac0"
        },
        "item": {
          "id": "f8bf180b-a8ce-46e2-8958-e75a22e820a0",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7132c2c7-043c-4839-8245-3403a2c968d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "376ec5e6-b4f0-4c3a-99bb-b752ec4fbc92",
        "cursor": {
          "ref": "3a8a9e0e-4fbb-48f7-a10a-ab6f1158ad0e",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "9d19e233-f8ae-4738-ba73-86cea479288d"
        },
        "item": {
          "id": "376ec5e6-b4f0-4c3a-99bb-b752ec4fbc92",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1a954499-82cb-4527-8e91-12bd22600cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa06b1f-8eea-41d9-a623-065afd347147",
        "cursor": {
          "ref": "48fa08e6-432c-47c7-be82-db8f9f0add5e",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "6926bdb7-0605-45e8-afda-886c647e61db"
        },
        "item": {
          "id": "1aa06b1f-8eea-41d9-a623-065afd347147",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "1cda8ccd-834e-408c-b0e6-7608af0a4a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65dc2e9d-9e0a-4fa6-a69f-4502dcc18a55",
        "cursor": {
          "ref": "371f8118-d436-4ba7-a073-61c78d34fb81",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "101002a0-a7e8-4b02-b9ad-de67e6d2aee7"
        },
        "item": {
          "id": "65dc2e9d-9e0a-4fa6-a69f-4502dcc18a55",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f8eeeab4-9a51-45b6-b2e3-a8cea1b51901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9cffcf1-b181-42b2-99b9-003fca1c902c",
        "cursor": {
          "ref": "c56ba6bc-32be-4ba7-8a3f-fdde9f758f82",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "20c3733c-c0a2-466b-8322-f407c7461ae8"
        },
        "item": {
          "id": "e9cffcf1-b181-42b2-99b9-003fca1c902c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "212221a9-1fed-4e1e-8941-429c06205656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "676c17b1-fdac-4b34-8350-d58a73cc362d",
        "cursor": {
          "ref": "953f1b8d-6962-4a08-b9b6-5dc205ad27df",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1e2adc71-5e36-4591-b470-08121f3e7d5f"
        },
        "item": {
          "id": "676c17b1-fdac-4b34-8350-d58a73cc362d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "85b6d7bb-4bc0-4020-845a-c54b670aa0e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765db581-b377-4692-bc8d-fab9e3eb16c6",
        "cursor": {
          "ref": "0268e695-d927-4471-acec-ee080ecdf07c",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "41491916-77db-4111-a114-495d58920235"
        },
        "item": {
          "id": "765db581-b377-4692-bc8d-fab9e3eb16c6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "694447cd-df92-44cd-b4fd-d8a8e1126bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ac917d-bf08-4a30-bef5-1b8ba2584c7f",
        "cursor": {
          "ref": "ee2a52d5-276e-43e1-a743-0f5f2cac5a77",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a4caaa71-0d7a-40eb-a408-93a6e6c419aa"
        },
        "item": {
          "id": "52ac917d-bf08-4a30-bef5-1b8ba2584c7f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "739318b5-12fc-42b2-837a-38c953a165bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d99769-8a1a-40a3-addd-646f401d2362",
        "cursor": {
          "ref": "37f51514-f02f-4a04-a1eb-2bb102d41f9a",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6307c32d-3e59-4fa1-bd96-c191b59ec4e4"
        },
        "item": {
          "id": "72d99769-8a1a-40a3-addd-646f401d2362",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d8d88642-c66d-4894-973e-a27c8d90f649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71de6e1f-87eb-4fa0-9c4b-fbd8d1bf3c40",
        "cursor": {
          "ref": "c2fd99b7-9249-4d29-8016-b19f74645a1c",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "16016873-4b5c-4362-8547-267d898f1b73"
        },
        "item": {
          "id": "71de6e1f-87eb-4fa0-9c4b-fbd8d1bf3c40",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "add442f9-e34f-4534-84bb-bbaff58df741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b79b6be-e3af-483c-950a-d287061d54bc",
        "cursor": {
          "ref": "30cf593c-6254-44d9-9b13-28f266cc69ce",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "1841f4bf-0ceb-402b-bfd7-5ef459b340b6"
        },
        "item": {
          "id": "3b79b6be-e3af-483c-950a-d287061d54bc",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "3187ab14-d44a-4767-92bb-c2cfd37bfe3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca47c432-9d43-47c0-af5c-45351eda566a",
        "cursor": {
          "ref": "a04bcf4a-e5d6-4e81-be6f-521fa0f6ce63",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "fb215966-41c3-4100-8140-14002b50b99b"
        },
        "item": {
          "id": "ca47c432-9d43-47c0-af5c-45351eda566a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e47e95ae-3902-450a-84fd-63fd29c7ec1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96736823-bac3-44f1-9ef7-e62ac4e4ba40",
        "cursor": {
          "ref": "aba68e31-f74c-4f9c-9ed6-58d414b65b62",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "a82d372d-1dca-48aa-a33c-7a1e8c7f11fe"
        },
        "item": {
          "id": "96736823-bac3-44f1-9ef7-e62ac4e4ba40",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "1522ab58-6d39-4cba-a189-11c93212c4ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cfaf965-e076-4448-98d5-a44049425873",
        "cursor": {
          "ref": "8c9cff57-a0ac-4a15-9029-5949d23f3ab7",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "5b809736-e13d-43c7-8b21-d208b229ed4f"
        },
        "item": {
          "id": "9cfaf965-e076-4448-98d5-a44049425873",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d499ecc8-b6bf-438b-a379-3d413b450f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af2427e2-8bbc-43c6-a307-1043d525aa3c",
        "cursor": {
          "ref": "c48171d6-d1ce-495a-8370-633627d8b024",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "eb4886be-f117-4b91-96ff-047fdc54eeaa"
        },
        "item": {
          "id": "af2427e2-8bbc-43c6-a307-1043d525aa3c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "81f21c21-6fa1-4fcc-8b76-962ab9b36b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea97522f-cee0-4b4c-824e-434f08751910",
        "cursor": {
          "ref": "a0da10b1-ffed-468a-85ff-f1d5d80b0011",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "e7ba2232-6a34-4445-8dfb-1dd09810b407"
        },
        "item": {
          "id": "ea97522f-cee0-4b4c-824e-434f08751910",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e69e7e13-4afe-48f7-ad9e-6ebf18ec344a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d6ecff-3913-4c3e-81df-b2a943e6c9ec",
        "cursor": {
          "ref": "de9afa49-77ae-44f3-ae25-0049b93829c2",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "d7475065-b06e-4ce7-845a-201c1defb1b3"
        },
        "item": {
          "id": "94d6ecff-3913-4c3e-81df-b2a943e6c9ec",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "7f5e3c6d-31e4-482b-b396-92d20cc4e281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "160cdf6a-2afd-4fcb-9a7f-ab0026ef7111",
        "cursor": {
          "ref": "f8a41925-46b7-47b2-a06a-6e7859744fab",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "bfa668ac-d8d5-4e98-b1f3-5d58dea444c6"
        },
        "item": {
          "id": "160cdf6a-2afd-4fcb-9a7f-ab0026ef7111",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "69c2b043-8e9e-4700-aad3-879a0ab0975f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "354edfa7-cc75-48e1-8c29-879f9389c35b",
        "cursor": {
          "ref": "b27a45a6-82ea-4123-bf1b-a3746aaf43f4",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "7437e87d-398e-4e90-b560-4a7351ad3657"
        },
        "item": {
          "id": "354edfa7-cc75-48e1-8c29-879f9389c35b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e82d2855-fad1-4e10-a1f6-58336e1ed71b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f0bd2b1-8e8e-4f61-88c8-f637e0dd2c13",
        "cursor": {
          "ref": "c69bd6d4-b57a-4206-9862-5df0741abb13",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "a37cb8f7-1599-4c99-b6f3-617c6fd27803"
        },
        "item": {
          "id": "2f0bd2b1-8e8e-4f61-88c8-f637e0dd2c13",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ea9786b6-97ec-494f-b1c0-019c41831fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e5d03f-9b47-42b8-a9fa-2aec4278bfbc",
        "cursor": {
          "ref": "c9fcd4bf-3533-439a-b2c6-fc4245f46663",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "e0aaa68c-6acc-488c-87f6-032a1467dbb5"
        },
        "item": {
          "id": "48e5d03f-9b47-42b8-a9fa-2aec4278bfbc",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "6064b1f9-d6e7-468b-a3b4-b0ac10e037cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 844,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad441845-9fb6-4954-bfb1-b32bbd69a4c4",
        "cursor": {
          "ref": "5630c646-e5a3-42bd-b06f-421cc55d2d02",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "21945640-bfd9-4181-be91-f3b14ea4be52"
        },
        "item": {
          "id": "ad441845-9fb6-4954-bfb1-b32bbd69a4c4",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f4ce2628-798b-4938-8809-82760c716605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70cbd7d4-5c45-484f-afb2-254c4db44f9e",
        "cursor": {
          "ref": "43e96397-ca7d-4595-8e69-1d261c7d6658",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "cdbef54c-5fec-4165-a554-6d4d2fdf8ea3"
        },
        "item": {
          "id": "70cbd7d4-5c45-484f-afb2-254c4db44f9e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f599b599-b8d8-4abe-86e7-bb867beab9d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca4ffc59-5a4a-41de-b837-b27b4d246b77",
        "cursor": {
          "ref": "83b065ce-c9de-42cc-8f01-c7109a3bb950",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "4f79768f-c43b-4567-89a0-d8476afd8fa4"
        },
        "item": {
          "id": "ca4ffc59-5a4a-41de-b837-b27b4d246b77",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "0bb75b75-eb63-4055-9276-65941162dc8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f388fb7-9a68-4397-82c7-888b5b29eaed",
        "cursor": {
          "ref": "ea0314f7-b6bc-4295-9cf5-2d8f75a000ae",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "3616dc1d-a4de-4295-8231-70a213c4c80d"
        },
        "item": {
          "id": "8f388fb7-9a68-4397-82c7-888b5b29eaed",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "3bbb6e1b-b2e7-45e0-9252-6e116dafa123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90478413-d7b9-40d8-9e5e-154534138a4f",
        "cursor": {
          "ref": "21c2e112-873d-496d-b8a4-2c037b088ca7",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "e9ee53df-299b-4070-b06c-2377942af865"
        },
        "item": {
          "id": "90478413-d7b9-40d8-9e5e-154534138a4f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "894fc75a-0300-47db-b13e-a2428eb9f8dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0307aff-5de9-4400-b7fb-47901bdbb287",
        "cursor": {
          "ref": "26586303-c79d-49a2-83ca-08db0818cfc9",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "6c3fda9f-dcb4-461d-a02f-d60813d8ea44"
        },
        "item": {
          "id": "a0307aff-5de9-4400-b7fb-47901bdbb287",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "403190f4-3349-4ad0-bbda-0264cd0992f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc492cef-dd10-4a0c-a496-7c803b94ab52",
        "cursor": {
          "ref": "3614ac6d-845c-43b1-ad51-05f54d90e8fd",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "71c70505-78a8-452b-95b7-26e64bfbc783"
        },
        "item": {
          "id": "dc492cef-dd10-4a0c-a496-7c803b94ab52",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "8147e25d-6a9e-4daf-ab04-a6dd8bb3af42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "637dfd7d-fdd9-4c38-8ffe-bc74c9aca1a9",
        "cursor": {
          "ref": "99f8fdac-d92f-4670-9e37-5a6178735129",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "b650d688-272e-4083-bbf3-6bad7fb025dd"
        },
        "item": {
          "id": "637dfd7d-fdd9-4c38-8ffe-bc74c9aca1a9",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "750857fc-d02f-47ec-9f53-958e27f65e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc076a31-5988-42e3-9401-142aff138d48",
        "cursor": {
          "ref": "427fc39e-6341-4bc4-92aa-513df2a7585f",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "aacd72ef-06ac-4cff-8184-d7b5e2da7192"
        },
        "item": {
          "id": "bc076a31-5988-42e3-9401-142aff138d48",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "69e04f9f-3fcf-482d-a449-cdc86ca518ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f033aeb3-ad82-4516-8db1-56a52dc286c6",
        "cursor": {
          "ref": "cebd5587-a224-4cb9-9961-7df4db2384c7",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "06cac69b-ded9-44d4-8598-f927d97ed9a6"
        },
        "item": {
          "id": "f033aeb3-ad82-4516-8db1-56a52dc286c6",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ca621e0c-d7c3-4e36-8376-88df047fdce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5983f69e-2d8e-4335-9014-bbfd8521862a",
        "cursor": {
          "ref": "303041ba-31fc-45dd-a1a1-efef1b5c462e",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "e6ae56ea-968f-46db-8dc6-1c72d8924d11"
        },
        "item": {
          "id": "5983f69e-2d8e-4335-9014-bbfd8521862a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "62289538-883a-44ad-84b4-fa906841bb9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f044d92b-1021-4310-8f14-cc4f39da3944",
        "cursor": {
          "ref": "83febe78-f200-4d16-bb03-576dc7e80477",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "43a279cf-148f-46e8-8cb3-57eabec1dff3"
        },
        "item": {
          "id": "f044d92b-1021-4310-8f14-cc4f39da3944",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "2b62c56e-fde3-4614-8701-c8feba52a78c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec3a5c3-3596-41b3-aac7-8c7b85161b97",
        "cursor": {
          "ref": "a51926da-bdf6-41f4-a1f9-222fda543b18",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "3aec9274-bc95-40f4-8b5c-2ce82ab0458f"
        },
        "item": {
          "id": "6ec3a5c3-3596-41b3-aac7-8c7b85161b97",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "3f0edfae-3fa1-4862-89fd-61d027abdd00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df79e5ee-041a-44e7-8a01-0d20bc752d39",
        "cursor": {
          "ref": "09c989d4-7a55-461f-8b1f-2c45fca47b83",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "231fff2a-757c-496e-b751-6d248ee96c00"
        },
        "item": {
          "id": "df79e5ee-041a-44e7-8a01-0d20bc752d39",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b2509150-29a5-42cd-bb7f-aa9e8336a01e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4465af6-9ed2-4003-93a9-da8909db900e",
        "cursor": {
          "ref": "0b807df2-0a38-4f36-8975-c57411242924",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "d1dae43a-bd43-483f-9757-747d7d5f983f"
        },
        "item": {
          "id": "e4465af6-9ed2-4003-93a9-da8909db900e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "18211cfa-04d4-461e-be27-9e9608c47831",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "66223ec9-8b73-4e1f-88aa-cf91e56924bc",
        "cursor": {
          "ref": "30292bad-0287-4154-a91d-a10e852017a1",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "d20f9144-0fed-4a74-a2de-fa7d2f967479"
        },
        "item": {
          "id": "66223ec9-8b73-4e1f-88aa-cf91e56924bc",
          "name": "credentials_verify"
        },
        "response": {
          "id": "83478c1c-b4ba-447c-b8bf-2138e61ca1db",
          "status": "OK",
          "code": 200,
          "responseTime": 3324,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d30c31-4060-4888-a2e8-0676c42e62db",
        "cursor": {
          "ref": "f74ec7e1-b7a6-4c41-9be7-96c924451493",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "51ef78e0-8e4e-43c8-b960-0de192c93dc3"
        },
        "item": {
          "id": "00d30c31-4060-4888-a2e8-0676c42e62db",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "108edb70-96aa-4034-a9e2-482f918b94fc",
          "status": "OK",
          "code": 200,
          "responseTime": 2543,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "31469e8d-928b-4344-8e3e-bf6b93678558",
        "cursor": {
          "ref": "bc3d782f-4f51-4c33-9aec-fac15df5ed1f",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "82f3998a-cfcb-4d53-bdde-e71701728106"
        },
        "item": {
          "id": "31469e8d-928b-4344-8e3e-bf6b93678558",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8e2b09cf-0bae-4fd0-bfad-5bdfb9525284",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31469e8d-928b-4344-8e3e-bf6b93678558",
        "cursor": {
          "ref": "bc3d782f-4f51-4c33-9aec-fac15df5ed1f",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "82f3998a-cfcb-4d53-bdde-e71701728106"
        },
        "item": {
          "id": "31469e8d-928b-4344-8e3e-bf6b93678558",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8e2b09cf-0bae-4fd0-bfad-5bdfb9525284",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "194215c3-702b-4b03-b3a0-599a3f90c30d",
        "cursor": {
          "ref": "b25e98fb-bd52-477b-afc2-2de33339dcb6",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "4bcfe645-3910-40d4-9486-718e053f699b"
        },
        "item": {
          "id": "194215c3-702b-4b03-b3a0-599a3f90c30d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "38caf220-a845-41bb-aaf5-9b14c0c7d815",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f0b240-a7e9-47d5-ba28-a39e32d1700b",
        "cursor": {
          "ref": "4e190265-230f-45d9-990d-eccec7c8dcbc",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "7b673338-4c08-443b-8b30-1566ab0d74e7"
        },
        "item": {
          "id": "85f0b240-a7e9-47d5-ba28-a39e32d1700b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d28bf821-2501-4e3a-bc9d-380340dc9a8c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}