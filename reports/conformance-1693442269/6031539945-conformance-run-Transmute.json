{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "10642115-a5c2-4f1e-8b30-8ce9fdb7376e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c42d7784-2a1e-4069-b61d-2743bfd2f16a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "faed9942-cc07-4f1e-8820-c0c5979a67d3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a6c5bd18-cbbe-4f21-9d1a-7b82c57185ff"
                }
              }
            ]
          },
          {
            "id": "93b833d7-cc1c-47cf-9626-7443507baba2",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6e645631-e51e-41a9-8c6f-15ce29db5e5f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "523709fb-1466-4dc2-aedd-6535ac5d9d2e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9440e1f8-23d8-4458-b365-4d446d9e4080",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "aa7a0f3e-6f9f-4482-b64f-f988093fa606",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6b005246-64f1-4b1f-8e3d-60c035256142",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "df056cbb-f234-48fa-a5e9-12f28aa0d906",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5767f136-399c-447f-a910-aaeadd895fd7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4369d355-c897-4899-8030-6bff50597c4f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ce60601f-6e27-4886-a6e9-ff3f182fcb13"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4ffee29e-0c1d-4fac-9fa3-f7984c5c7ec1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "121f1fa4-1448-4b9e-a825-4a13f3a10958"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "29ff197f-7c7b-454d-9f18-452b74d6ccb9",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d817f941-50d4-4f69-9523-c117959f7b63"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2540d6d7-c30f-4c1f-8d38-452a4a9b324d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b27eb803-f96a-40ad-b23a-2ddcc8859227"
            }
          }
        ]
      },
      {
        "id": "a50812c8-3bd0-4e34-9189-224466797fd7",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6c17f035-1412-40f1-8e9c-01ac0b977513",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e5035996-cd5a-40f6-9980-1ce358d59416",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1ae9ccde-0c2c-4853-aea3-ef62620d702b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "790f8b9d-b407-485a-b2e6-317c860a00be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2adebe77-fe2b-4ae5-9d53-055a20e10390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bcf0eb3-d693-4f8f-bb5c-2afcd8101995",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e31c77a7-3698-4984-98ab-7e18f85de244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4cb8b754-3f5c-4a9e-93bf-3443d634ae22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a7c9dd-2b76-4622-a20c-6917f2be6ac2",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f962c67e-d016-4ff4-811b-56bfb321bdf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "40fb5040-960d-4948-bc59-da933b40ade5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bc83c264-2464-4fde-886f-6dcc19c3c5f9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "095671f6-2ce1-4dee-a936-9ace33556b69",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "524d531f-01d8-46d6-a30d-af40f4f35ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4df54c4c-7556-4a5e-8913-ed585659d0b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08eb63bb-a576-4e14-8d4c-6fc3731cde6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ba7ff9d-7488-42b8-b305-0bb0dc0c9e89"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b5d05498-534a-48c3-90cb-406c817f5a72",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e1ae5ed0-84e4-47a6-8b88-b0c97844b8aa",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2b0b444-ec69-4f75-be10-4d871a6efad2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "09155642-b271-4c6e-8f22-8cd84bc4e605"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7452f703-96d1-4cc7-bdce-a801f84bd411",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "4772718c-f89f-40f0-9a9c-939bd50db9dd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f2b7a887-d559-46e3-99a1-0eaf86c4f15d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "48881171-d06c-40c9-9981-e1792f029b3d"
            }
          }
        ]
      },
      {
        "id": "a616313e-ea63-4bc1-9b2d-82bb099bf0cf",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3753b89f-5676-485c-bcd4-3f0a2ba61ca9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "203d993d-7217-4319-8eb0-093b4d057500",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c1a6aeca-2a44-474f-ad13-663862ae8aaa",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee6b0a1-3bbf-4319-aef8-26debea5e1d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b35ce35d-c921-4717-9fe3-777181f93a8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8293be35-ad01-4012-8497-f80790695ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f25369d6-58be-4dee-bed8-bb09745817fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b321d1-33e0-4568-ab11-582fd429a799",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b95f58-9a4b-498d-a008-3401d1a594ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58cb54e6-856e-4772-94d6-94760b20799f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db609e54-ce28-4e0e-bac6-c0af12963544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9a64242-db08-4575-a4d2-4a4c66748597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62260e12-2e16-4149-860d-1d05277b3810",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e385a18-9f09-49de-8a70-03e98636ed8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db7823af-bbd9-42d5-9663-e8d59eefda02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412468c4-ce41-40be-bd2e-4709fcef58b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "546e0a3b-90de-4495-98bc-fbe777eb0838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e604182f-6169-4486-99e1-9168669cb8e0",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c41d02-c9b7-46a0-abd5-9e9baee8a43a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96167432-ca39-41e3-9d74-1430f1eea113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8591cb88-9cb1-447a-b9e3-8d48bfaf88a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d18ca2cb-3525-4b09-b91a-3ee19921b1de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f6953a-92e9-42ba-ad9b-30d911695ed6",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f0b6c0-8a78-416b-abac-0b9dd8aaa6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0de78116-4fd1-4ffb-a1b9-032fa28b366f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc44069-966a-4de5-8d20-9b60190550cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6913110-d680-4c65-8336-2d70ecb4dcfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317946ed-efd0-40c7-b91a-bd4700f042cd",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c8ca81-1418-4929-90b4-7c9fd9e75278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed721786-c2e5-49a7-bb37-0a07005f3808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30fed0c5-1ff7-43d1-8f26-0b120d75f02d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8bdb38dc-7d42-4ea2-b46e-ef3ac360531b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e462d9-1a7f-414e-8edd-9cc0c23ae6ff",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c105afd-e00e-4a28-a4cb-d651350c1c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb9e9233-ad68-48d9-a6fa-6f1232b3b6ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb657d4b-c71d-46d2-9546-a24297058cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1059691-f6b3-48a3-a854-a03ac77d901c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69fa6e0e-a3df-4cda-9a85-b6301b0f23e6",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0087c80c-c213-4db0-ba31-f477c0713dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0406d13d-d154-465d-8d58-ad422e269870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d47b46c-c7fb-4778-8e0b-ebac4069ed13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bba27a85-ae95-40a5-97b4-4cdc85a8e926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5530c48f-e4b5-4ac5-85b7-64e404db0ef8",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8c2506-4b76-483d-96a9-3a8b48042673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a98cf0ce-d3fb-48b4-81fc-ad3977367337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1ddea8e-47d1-46a3-94c5-c7313c7b1213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65dbacf4-9277-4f90-ad3d-51c9c43f4238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5321adb7-0193-4388-b2ce-adde768821dd",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a48c33-c4de-4d76-8c17-c360c7567b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2693d455-c074-4c1b-ab3f-8333fc0d566a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a04a634-c788-459a-b850-856b7011a0ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74a1f821-cdc8-4e28-bb64-d2144513a4eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ccb7cb6-d9cb-45ab-8c44-dc21eda9c9e6",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79b234d-79b3-4ece-a05c-e5982a7f4149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d004cc2c-e798-4cf6-b98c-ec410036b248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2541c91-caeb-4cc7-84a5-bb95c4930a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bda4a0ba-c091-4624-8283-79f22a5f7f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e771c61d-e282-4084-859f-217da3cfea63",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd694fa4-d878-4731-9ee9-9d1a173ff4d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92ee3ace-68ca-4da4-b976-203eb835d92b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64054d8e-f221-4cce-acfd-21e061e858f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38d64b97-a4ae-4495-8b93-b714b578781d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9e58eea-5110-4d4a-9f63-79e7e8e863e8",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a18e7438-257b-401e-9206-1d29c344462a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02364537-7d56-4eb5-8a48-d5a890b343fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e87e2d4-4e57-475b-8a6b-0d595decfda6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "569694e6-54d1-4238-a557-b04d99d08efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "273f71c9-d658-430b-af82-6eccb7235d45",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acdc0369-c36a-4c06-8762-60566ad6d4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2896350-d6a2-41fb-8d6d-95fcc043a782"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e50dfb-5504-47b0-b8a3-e2f87cbbe2ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f174850-da06-4583-b792-30ce69160336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ddcc55b-b71c-45ec-b187-bb3dd2471096",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c32829-2ea5-4cf1-9bec-94e2343912aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2337cfe8-5d2a-483e-ae59-949f73ed40ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6cc8ab-394e-46c4-a095-515acb16b339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e337d217-9f1c-4a44-9886-6026117b4887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0db22f2-cef2-4d41-b880-4a7aa6416699",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52725106-3a46-49a0-969d-27e9f8420322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "496af963-cecf-4202-a210-ca2cfcecd82f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee10b48-d3d2-4867-9f4f-bb128c714e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d21b1772-ef56-4257-980f-816a165f09db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae7c20c4-01d8-47c1-9572-2c97db39ea25",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17cfdd4e-b4f4-4329-a878-0532535c6c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "967b8293-54e7-4d91-9ef0-effb2c4c1e04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595c7b11-753e-4752-8791-d6e007c5ef5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "745ae8aa-06b8-4900-84cf-066e1a04edc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e93528-dac2-4363-b358-2668b35eac4c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ca97a9-ef4f-421d-a4a2-49f1c824d741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f45eada4-7874-4ec1-87f9-d626276967a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cbde658-2095-4435-a0f5-13a3c107a444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c891d55-3ad3-410c-b1d1-3cfbccafb7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc3da8f-234d-4817-822c-06caaad4fc12",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a8e3a8-b62d-4815-88f5-fe69512ef10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5de65fa-4589-423f-b551-e258ce25c493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c86b9e-8965-4fd9-bc99-924a6c90582d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "243d3140-6022-4f82-86f1-746b4090833c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491500bc-d2ad-46ad-94c7-19b98cbd0c25",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "152def84-42f7-4fa8-ac42-0c69c8fa39a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73aa2d74-c183-45bb-b4f1-13567e9e3c41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3cea8a-bbe5-49f9-b093-09ac038c1b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eba45462-3447-4ea3-9676-888b9bafdb8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1835824e-d10e-4b74-8294-41dc2c035359",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b87447e1-f898-49b3-be78-5fa8b619ed41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d05cbbe3-d272-48e1-b14e-2fb2f6f7d673"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9424c163-8dac-4c2c-9f35-30b3e9ab4ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcf1cb36-4fe8-449e-8b52-bcf645593be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4608bf8b-0c32-4bdf-9785-cbfc68883f3b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aefd32a6-10fe-4a9d-bc6b-587f7844339f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1032cc0-2465-4f68-b146-ce37d523e716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d22e2f-fb1c-4883-ab2f-ad05bba33e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "64169754-2bcf-499e-81a5-203da8423291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84fc23e2-3336-4a7b-896f-35230f8d29cc",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "084fed28-4714-4b74-8ad4-dc8d8cbfafac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "915b983b-f9d2-49c2-ac89-7ffbf540a8ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f69e1a69-b1de-426a-b620-5bd8d2148e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3eee709c-44db-4e09-92a0-8f439e7f24ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1401afec-657a-495f-bdef-c4dc682d8ff0",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b33b7870-4332-472f-aa5a-185b6fb8a0b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdd6eb25-9939-475f-ae48-137f70fc9111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c1b520-cea8-4890-9b3f-3679a2ead1ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "534f575d-0c02-4717-ae90-f7dc550da4b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b859e25-29c0-44b8-9453-c53b7af9af7d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf6c31d-389a-41ed-b7c0-4df9776eae75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dda2ae6-0ba6-4015-ae3d-fc524cee56af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "151587f9-b0e5-46a2-8d78-0168703df144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a4eaaa9-63a8-4415-a24a-d7042bed7fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e167295d-7fc4-424f-8b77-1642b5cd58fb",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67a6828-d0ef-4c64-9a8e-7ac279b11b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ab1a67e-b186-44c5-9e18-fdf0a2434e2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e4ee1c-114b-4b35-b7b2-9bdb64a0683a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c189b375-8fee-4abd-ae8d-1e69d6c96b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f072b3e4-f0af-4dc1-99df-44e8631b2d38",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e93a67-94ae-44d0-81a5-b1fb0858d1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5add106e-9b7d-41a0-9cc9-559d03567b11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d97068be-3d38-41d1-8299-d26e5c62dd54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "590124ae-ba4c-48b9-bc0d-a9d0096f335f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec5ea69-c446-4683-b3c5-849a678657e8",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04765ba4-cf42-4dd3-ab85-ab61560196cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06c9f90c-ab1a-478e-803e-b840b1487821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "143c0255-e468-4a8a-813d-ac706e0def39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea2cf1ce-dbb2-4268-a237-1425d1234c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa8cbc49-47a6-499e-8de8-b4b9d72be492",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd78820-0b2a-40a3-a4b7-3b9582de694e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7873c621-f7c1-4e9a-bbd8-7e7e90aefc0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03ab229-5e8e-47c1-a9d3-abfed0b2a003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7999c3ed-432b-41e1-84ce-f74f16c9c3fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5308abea-1f0d-473a-8a1f-ae474ef3567c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aea0f15-677c-4a5e-946c-bc481dd27224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41760472-d184-4255-a30c-4e5dd9c74c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa0527f-8597-4c05-99b9-a9d25ecb8d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c5b771a-1857-4423-9a2c-40d17696f33c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c46746b2-ae67-46fb-af9f-9e2dd1cab7bf",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c9a33a-8f69-4150-a5a3-f85375ccc1f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59085c5e-386b-4cc9-9bec-201282dafe55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f8b402e-a925-4c63-9b28-73e1901f0edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf91a05b-04a4-4269-a9dd-7701a82eb185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a041b44-57a6-4ddb-9291-db99cac42a12",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0115f0-0bc3-4ca0-90e1-8d4bded931ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "296173a4-c30a-4a6a-a2ad-c889b4073aa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c1a8a0-4d3e-4faf-b3bd-7f6cae1973e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ad19667-2721-4499-a3b5-06f3eea3c99f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffbea83f-77d0-449e-b7cf-80db7a026b7f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8134ca-636a-4750-aaa9-b26f6577e5c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e97d654-751a-478f-a159-73fe33262066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197fe1c7-7dfe-4646-a38e-b0e0af137b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "40f9e167-853c-47e9-bb7b-e00176a6db28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f82602a3-15c6-42b5-b2a9-a4e889f9fb36",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94d353b-284c-40d1-bf82-bb8f1e425c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "753ecead-6b69-4d3c-b7ee-5c2446d8b883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa0a46c-628d-48bc-b449-84f12c56290e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "de3475c6-4b6e-4103-babe-76236b2eaefe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d7a8869-43b9-4e5a-97b2-06e2d287f4e2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aefc437-2ade-4138-b63f-e16028533ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33aaf501-c7bf-4229-829e-910e1f952a91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a373f623-5f6f-48bd-8912-c2deb13002e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ac820494-16c3-4dcf-8ff7-679ce8a586f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe8951a-33e0-406a-b26e-10230fdf9ad0",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a7242d8-103c-4176-bc2b-1b7bf150c454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2ec716ba-8d7f-424d-8f61-9c684aec4885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "325e105d-b412-405e-b479-1472e1c854dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1c60b93e-cbd5-454e-b44a-7924e335453d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76060760-4880-4628-a919-5a85d0ebc0cf",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9064c7e-486b-4de3-b8b8-dbea22bf93e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eee588e-1219-4870-9ffc-92b2b1b4ba24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2038a013-a527-4ce3-80ac-66ba06f4b266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7f5cb3e-3786-4dfb-9f69-663a63840721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f37455-0db7-4748-abb2-0918ec999d7c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f77e643-1627-4af8-88c0-beb6862fd0fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e1741f3-26c5-4ae7-a6cc-b703a429c724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b10ef3-b0d2-4813-8e75-76dd51d0d7b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa1121df-d923-44c9-b3af-a332bb2a821c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a05f364a-67b1-493a-b149-cdeca77a5ba0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c6093a-0b88-464c-8f50-2d60c4a4da1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7af65fdc-fede-4e0c-be7f-9c64c539ab94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f653fff-4c25-431a-bd1a-e317b8d1f267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "78b47075-5b6a-4cd3-8f0d-c2fecfab2220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "815287fb-4238-4f28-9993-f457bcac1f5c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef48ec4f-383a-4353-b90f-a54eb18e576a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aad08603-e9b1-4525-8e64-9ee9e92f4981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c56e6b2e-05ca-43f0-9424-0ff4625a548b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1b6bb40-f1a5-4c8e-bfe7-03bce2d697e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9679d8f2-ddbb-41e4-9c2b-9c6c81417c63",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73235598-6732-4d2e-bad7-6c72a7b553ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14a6bc59-014d-4289-a9a0-beba1d8187fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebcb23fd-83c4-41c3-a837-ee7e56d8d0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "55f7f718-44ac-410d-930d-f56a5857423b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acadbb1b-ae22-4e60-914d-3eb69f16eb7f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab81af67-1c7e-4f8e-87a2-c3c2be66a05a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f97de43f-2a4f-4579-817b-a58605541f94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba2463c-f450-436a-80f1-0ae55f1fb80f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "2f883910-a5a0-4a15-9a10-45176b059b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a62450e3-55ad-4cc0-b08b-534042ec7317",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a26cad-4347-451d-8dec-9ec2034b4c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34b38fc0-3f14-41fd-b197-83c2c431e9a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87301e6d-398e-44d2-8319-a45be6dd2297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "739248a4-6e08-4e70-abe1-b7c8c2ba212d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e949c2-1572-442c-9e52-b64ccec7ca09",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c9c16e-6212-4f10-8dec-499d39ca5628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dec079b-b6bf-4aa8-a14f-eee000ea7ade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae56dc2c-dc2c-47be-a036-98202eee9a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f058116-8078-4294-943e-dcc39806a5eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bda2618-0e97-498b-af69-93b65db090e4",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3402415-2ceb-46c7-bce9-2fcd49efb313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aae8e42-2593-427c-882e-813f4828ea2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993b3a49-7fef-43aa-88d6-7dd7af2a6d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebe6c4aa-a93f-4846-815f-e3b726123972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da1f454e-1de0-448a-9690-576ea0c4e82d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b112bf0-322b-41d2-a287-84cb2dca4a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f075c6a-55cb-4288-8273-206b38064a13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f05e858-40b7-41dc-a711-9c3164ad6f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfedf6e6-6ff4-4513-bd0a-904339048fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c2bf75-8335-4499-92b5-eef482ee973c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b4b60c-cb78-4c86-b380-f0343ab31216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8800b702-af04-4168-a170-c31dce8afbd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "614fd970-e85b-423e-a005-681ac501b375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c2c35e3-efb5-4cb4-aa38-18f8d131b651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73143e40-b450-41b0-8262-e68df75edb67",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "011e867e-003d-4422-b21b-99e33efdae35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "543bfec1-14a0-443d-b767-ddbd1e7b71a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c1be01b-6902-4d86-9e25-c98d2a232328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "46fb8d5d-87de-4393-b2c7-3b8bc3e40bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8d1e7e1-31d6-42eb-8cc7-b7a1c61b1aec",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "903cbe74-50f5-45fc-9840-a9e7e48d4227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66910573-b42d-436f-aa7f-4fc6aaae3647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b52383e-8dae-4171-8fac-16589cda556a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d43f4dcc-16c8-464a-b5c3-31fffd662229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1aa4c9-b5a9-4d06-b98e-aa77b77e26e7",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf5ee33-3291-47db-b996-13f9c28731da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2dfdeeb-dbd1-4604-a05e-192cb675abd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d26e221-d111-48af-8838-f924a1c6c172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9e7503b4-c53b-4767-8612-cff50760b1c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c66caf4-b2a5-4ee6-9e39-f6a1a7785a67",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fed49e17-7614-40c0-8211-5f3926a1e19e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "386fa921-3da6-40cf-a387-3a37dc8dc617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "719aa92e-61b1-4625-8314-fa1ee5760d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "9312b8b2-fa4e-4513-976e-bd15cde2f909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c985a166-9996-4c01-baaf-1c48451c4a07",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb566ef-5610-4f53-80eb-6d25f90cc06a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d15071f5-1e04-421d-870c-d77603ff9ce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1762e06-e807-4168-9bfd-ba6aa5e2e5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a32c25a-1551-4f16-8139-1ff653ff40d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1cdb5fa-789d-4a7f-ba3a-19ab08594b99",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09eda1a3-595c-4bfa-a371-43fe3dd69048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fada0d19-0481-4a2b-9db3-f8db8f408e4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd37d81d-4a21-42cb-b9a7-36fa6e2bd4d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc7d0c8e-b318-4c68-8546-b64d5be34c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f130a2-e87a-4005-a914-5a886f4dac98",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde87ee3-b29f-42e8-b2ea-c5923b197e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46cd45d4-5d9a-44e4-bc6a-470355557abf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "268288ad-cdc8-4d4c-9cd3-08f73cd7aaa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d74112f2-5a55-439d-87c3-d778711ec20f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807da364-66e6-412c-92a3-df020b1fdb2f",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfaebc2f-3ecf-41b4-9261-fc91bfb02c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36f03b88-1a27-4c4f-ada7-6ffdaa250215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eca4671-09be-4df4-8ed3-960c5d09b73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4aec9503-3165-4637-b226-1362fa3110b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b39b654-477d-487c-b94b-996640f72eaa",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9fe3902-b1d0-4113-8798-6e09bc9e5729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f7d9885-5fdc-4762-bf09-e2f30e5dc638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ec2b7c-07ed-4904-9b4e-8b01498026a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "48bbe816-a0b3-4eed-9768-2659d486a168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb6a9cf-c504-412b-bf1b-dff5ab7ceea9",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f67044c-7b2c-4e2f-ba7c-bdba437b9a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b782a625-d70d-45ea-a517-2dcea0e0b47f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb2828bb-bbb6-4c45-b06d-1a10728f61d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a2dcd38-42ad-4d11-b5fd-3808c9df2a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0050607-4766-45e7-81e5-2d16232be22a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a8e5605-e83b-4cb7-891a-27eeec53f218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73003406-b31d-4e42-9081-f6699f09b6f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5ea68b-d44c-488a-94e6-f6e08c0efbf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f8c8e75-b0e9-4516-b8e5-b80864f4c4d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb44e0f-d063-4113-9045-cf750b4db339",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e20585f-d530-4b87-8de1-c53de431fee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bdd1cae-aea4-4df7-a70a-c08536f43531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f21e3b40-6a6f-4765-9609-d94a3690ca66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a92743f1-e971-4861-b37d-d0518ec96939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d0acf0-a165-4893-9a36-189e324ceb80",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8045152e-5a6f-49fe-9afa-1e6695b98136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0799689c-2773-42db-99e1-561db598205c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "870edaa6-6e10-485e-b929-05a58555b8ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "15dab15e-2f44-4898-aa9c-b4159119ba00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3cfa46e-5208-4c78-b372-2b03fc7a42be",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42af6238-ca9c-41b6-85cf-f2ccb0662322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "247a37e3-29dd-4178-9615-a7bc83505f28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c5281f7-3c57-41fe-8e5b-1673d369833a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c20f554-08c6-4684-94cc-42076f8aabed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e52da76-f976-47e4-a807-dbde7caca71d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ceaf48-df56-4b10-bc74-0c28355ef6b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "102fae7c-9e74-4f35-a012-2ef3fd311e66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5047af57-4d12-4997-80d9-94719772ece1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f292ce60-0cbe-4e05-b7bd-043be7efe55c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d0055c3-7a79-40c8-90b0-b4c72864716c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f934db8b-2e7b-4baf-9257-dbb7655e1304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7a85f01-5e4f-475e-ab48-abe78cf108cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ac0365-8d9d-49e5-b18e-2825dea25e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cdd6696-d8b8-47a2-bf15-1bc52fc8b957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3913e52-82a3-4ee0-84d0-016d80ae06e8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f03f1eee-af95-4416-b107-07eafc700094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "544cca1f-392a-4772-a4df-33f2e73292cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d52fb16-4d20-468e-b58a-14ad0741950a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5d308f5-62b5-4212-8908-effeedb4515e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "755e1727-e3b4-4d39-b1ff-0b1e06310946",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "555a4500-41cc-4acf-90f2-a58f981d7d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8332a571-561a-4208-8c92-d5c6eca0c210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5660277-c2d9-4122-85e8-be9f126c89a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "42084b8f-eb6e-4a8a-8bae-354cc8afb641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd7d21d-0577-40d8-bb3b-6f228d7d3307",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2733b5c-6c4c-4e69-9ec5-13b6fc5c5958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1db8e58a-ebef-4a9f-b8cc-20467cd5ad4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2250118-f9b7-4b5c-8fbb-e203a08914e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f48bb83d-1ef1-406d-8754-40004b61cbc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c0acbbf-2950-40a9-b167-44925def43fd",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9953c4c-d5e9-4e06-952e-b130f5e8b1cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01262412-c942-4b95-85d1-129bc45a1170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f72df0f-f0c3-4bd8-ad12-ac4362a1ef1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d7f34f95-146e-46b8-8706-d55de8720c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc35dd9-a3a0-4582-b85b-1612c13c9a5b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca8557f-50a5-4eba-a281-c5d913519904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f35e4c59-54ab-4021-9e93-d6f902649013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe43917-daa4-4aeb-8e2a-a144e92ea798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a519727-4ead-4382-85b1-7b5e5e38f4a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d55aad5-15f1-43fa-abae-322e57c4c9bc",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa23dcd4-6173-437b-94f4-571722f26337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4f0335a-8215-49cb-98f2-e4b10da85e9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db130f24-ac5b-4d57-bb34-9c7e4b9213b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "329592bb-4cdd-4c13-9873-e225bd6ddfa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a31318b3-d888-4de6-8749-76934c27b9dd",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea516992-f5e9-4c24-885c-1c100d81d8e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84e0bb13-5673-4b96-86a2-d427f06f6ada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d22524f-7008-43de-9d5f-3dd204dada2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd8d7618-0ab3-4026-8456-0af8dd033af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d41d6c7-874d-40c5-b507-e775c2c6bd61",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ccccef-0d84-46d3-8dc7-7f1447fb35e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98b27eef-3175-4f98-9014-6f289ccdf3ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2435bf6d-e404-4333-98a7-ae33c3e6707b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "066e096d-8c9a-40c1-8999-f5cb48b8794e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5807dd9-afed-4df7-9276-94c14aa23cde",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df44115-337d-4d2c-a69c-a7a667b8efb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac1bc6e9-cd0e-4993-83a1-26ff00c39f69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29244b27-62f4-4192-b1b7-66d0d562241a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c08c37c-5f73-4c4c-a61b-aeb0653b3912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f27e8368-cf2d-469f-8f7f-89a8f3217f28",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51154fb9-2399-4bf2-b8eb-31be31f0475d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d91e06f7-f83a-4c92-803c-8842670926cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ee1b37-f2d3-48a8-b323-534ec75c64ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "03f2eaa0-97de-45ef-bd12-eb8130ee5d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c3d487-0d47-465c-8882-169099991c85",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67081a39-ac51-4f65-8a48-9fd0d4a20aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb3075f6-7d7f-4419-bcc1-351d35dac096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ec2c02-6568-4966-9e75-59a8e6bc96fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3ba46034-319a-4313-9863-11f05497e3b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2be916e9-a9a4-4473-a0fc-ce98280aa4a1",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "599f2d28-d07e-4df1-a09c-2bc3acb9784c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3cec7e5-6276-482e-ac10-29b63b9b53b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f4e5eb-d07f-4073-b297-c31f08e1e054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fcd13c5-aadc-4099-a25d-2f8e6a03e51a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea92b9be-1ca9-4550-828a-c2cf2739958b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa3b18e1-eb59-45f0-b29d-a1083e573d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efe5d533-0e56-4029-96f4-dd4e963a1bca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b7c255-2942-4088-82cb-faaf05fa521e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "abbe4b74-b940-47b2-9da4-134b5e238dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3fa9a0e-268e-4119-bced-6ade13b64f59",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e635e06-4b99-417f-b322-543e58bbede0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f261bc4-f32b-4340-800e-bcc17bd8b92c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60bb955b-8b04-4bbf-bb37-286d0846bb60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2fb8586-29ca-4c16-b4ad-590eedeb556a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcf52d03-5810-4e4c-afb7-c36454f233fe",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25665f38-114b-4ec3-9fbc-dd3a7254e77d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83decea7-7ca1-4f9f-9ce7-75a59a2cc7bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5da0aac-d792-4b4d-a0ef-6b89d5b1fe3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea144a30-21e5-4e79-9b84-517c48738d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b309aea8-fb49-4d0f-bd30-36dbf8445c6f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb2f0bf-1bf3-4246-ae43-3dd1a623f3c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3d191cf-6105-4a7e-a051-c392d997bdfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79fc0466-1598-42c4-84b0-c21db74b858f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "af0e0129-37c8-473b-93a6-b69f06e74fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c00ffa-a21a-47f1-9f30-0ea4d3bb6e40",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f19005c-06c4-4269-b670-d745dada3bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3fa89c3-b96d-49dd-ab32-7a5a864a538d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9351d143-fa2f-4c81-b260-a0b23c977240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0ba13580-ac3d-4755-8027-e39673c59e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde698bc-41d1-4c14-aadb-bef6aea99ab8",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a3a2ac-a89b-40e2-8c81-11618f0f57e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "109ea33b-56c7-4cb1-a932-f321c0c3139d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "977d606a-81d4-4e99-b024-92e719b935da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd78df3e-8eb8-445d-bf26-f460db91016e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f66f81d-a53b-4944-bce4-09ab3a0a5b92",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "335ffbee-c6c8-4e17-b0c8-27abe4513658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f8a1c6b-9743-4276-a7ae-37128662d2b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7654a323-04c4-4986-894d-8956ef9df2eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2d1a752-1bad-4046-9f58-085340fed3bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "949b3ad7-d203-4d5e-836a-0e4431830b08",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff123ac3-02bd-4018-af94-bd91d70147bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "febb6922-335c-475c-bed9-b8e6889685d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6070e372-1e32-4f10-bf37-579be2a1be52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4d2ec9c-223d-4184-92ac-bc5948c3f3f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5288bad5-c81e-465f-b22a-d0bb4d8c593e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a9168e-c298-47fa-9c1e-32483a1b57e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57740ea2-e6c4-4a32-ab9f-c6c26d9674b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d03f543e-9a1a-4ba6-86c7-6254c087fed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7be442df-c1ed-4d92-87a7-e6764414f260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd7a07da-a5e6-4076-bcef-38035eb46814",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece04153-ed6b-407e-81d6-5e55ca090d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20822d4e-ef0a-425f-a52e-1431202e866e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc7dbd3-bdd6-4a4f-9b35-f076e9a959fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ef4bc547-74d7-4900-ba05-bea1408c1282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc6a710-4096-4cca-92b4-6941fd27c777",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "febaca1e-ee2f-44c9-995e-6d9627257d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63856951-3ccc-4eda-8f5d-3ae9e3f46f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c382fcd-9e30-4670-969c-0c55b5a9508f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "28d2da73-5d1a-4367-9b12-eae3c5ed6bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a56ee293-7513-4a56-a07f-736daf193b29",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63190bc5-f6e7-4035-b454-41faf0bd5564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c75a2ea2-6435-4f41-ae70-96a1a467880e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de1a66ae-b918-4a2e-8f31-2f7097153878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3725aaa-1b0e-4d71-915b-9784d0d4cd51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf121c6-03d1-486f-a009-e49cdf37a8aa",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "952919be-956a-4775-af6d-db7978c759ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62b0529a-9ab7-4365-8d8b-a69c65492a99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c810bf2-ba25-4482-8cd6-4a478360a32b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0fbcd54a-b07a-43bc-a8fd-b53be5052b07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e501a62d-3819-43a6-85d1-3c3edee360ed",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf1bfa7-fa8e-4d7d-98d6-7d08d28dbd6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9d88058-b0fa-4379-869e-3ec69112808c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7a4447-4c9c-4098-820e-c6ddad6be8ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "43fc20ab-834f-4336-873b-6b4d4076d8f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d83dac89-9604-422a-9819-a590582433f3",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "957612ed-7944-4d56-a338-6250f14776e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5f8365f-ab17-4965-8c39-bf36126dd367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5de4f03-0336-4f39-80f5-f73ded9d0ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "acc48fa3-b7d5-4818-9123-b82e05787bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edddd6be-537e-459d-b657-551e8025c928",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66005cb0-d423-4827-8437-e710f8979c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b77ccee0-d2c7-49fb-bfaf-eee4d39cbf24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee55a74-d1ac-464a-82b9-f6809c6cc311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "40ef3499-ebf8-4028-a9ee-35248b79fade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad54ad09-cd20-4815-a5ce-0b7bed8e972f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d3d97d-db4f-442f-b564-f852487070d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f15ac86b-9db7-4eb8-bcd2-c9740b36c692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a09c6be4-6ff3-40d9-9d9f-15c51678d0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3debde03-05cd-4ac0-9979-ceef91c7f199"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "aab48eac-2b30-4e8a-9c63-c46faccacf99",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "950d7b91-9cc7-4bf8-aad9-6b9547539d36",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d31db54-a897-47ce-a626-e627e59a21e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e027a45f-c192-4d20-92a4-2bd9f670708e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8c9789-d049-49cd-952c-d10a19b9761b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "171c08c5-1f8a-441f-bd12-aaf6e45ae710"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a4a3621-3d43-4299-8212-d56eafacfc19",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff2d266c-ede0-4cc4-b9ec-fd16601b6b42"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "70d1352a-65c5-4483-ac89-fdaa8304a2d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "03aeae13-b177-4a6a-b046-0db106e37ee5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e0a094ab-addd-4155-9b96-2eda71633e76",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "79a4dced-0073-4533-9138-3fc29bae53a5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2b453046-be2a-40fd-aeeb-ebfb6985c147",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c0953f3f-7925-48c0-9c3a-2d06da5c15f2"
                }
              }
            ]
          },
          {
            "id": "0a0584da-2a21-4358-ab5e-0f64299ee87a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3d6f9469-a715-4085-82a8-624abfa13a5c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae0af866-018e-4672-89d9-1f5e012bed8e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d5566213-96b3-4302-8162-6b967762958b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "99938a2e-0773-4d97-a213-425f68875ba0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "79061053-9528-42eb-95a6-1a7034973a3a"
                    }
                  }
                ]
              },
              {
                "id": "90c4148a-c904-45cb-8210-faecff87c7f7",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb8495d3-f918-4182-a6fb-0fef50276623",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2896138e-3f04-473a-a8ee-010b48b83609"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1c04574-4c00-4ac9-9337-0e5af4b88145",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "84cf99c5-a24c-42e4-b71d-e0fae176ade3"
                    }
                  }
                ]
              },
              {
                "id": "125cfc89-3dfa-4a7b-8795-2fbc708008ca",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bda1909d-fa88-45c1-9270-245bb19f0960",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f49bb761-fa4d-4c9e-90be-ae93ce37a963"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a674f269-26f3-485c-97e0-173efd584093",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "46994e6e-ee89-4d61-9e2b-a438cac08468"
                    }
                  }
                ]
              },
              {
                "id": "544216ea-ced0-4b5c-aba3-28f1d03f11df",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "131275e2-70c2-47b8-8c6d-48ba4a8dfd42",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "576880ef-3d52-4c33-b51f-863dc89f40d6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bec70ece-7f55-408e-936f-7e601ecf668f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "8dd54d72-de9a-4e7a-8053-79f5b47a5285"
                    }
                  }
                ]
              },
              {
                "id": "6a15e727-bfc7-4be4-9fce-055a65f3fdb3",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "93125cb2-9458-4463-8e3d-f71173f365e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4e488409-3e3e-442f-840d-b7cf905d56a5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5ea8d7f-19e9-4ba1-98f2-494b21d8be36",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "bd36d995-8003-45da-9fb8-fc937a106b15"
                    }
                  }
                ]
              },
              {
                "id": "099b330e-5470-47e7-b5ab-fad517d42275",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f2cc95d-d642-43fc-9803-33ff1547bfe7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9bc5d9b6-cca8-4c70-88f8-ba44cefccb3d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47bb89cf-b1cf-48b3-a159-45269da85570",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cff5bc91-9d53-49a7-a652-38f57e3edc0e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "339060ad-e122-4d34-8d66-99551140899a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "759a842e-84aa-4cb0-8542-32c0ca588936"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "694cc5fa-b745-4148-a608-1f4cb066f4c9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "db14e075-3cb2-4412-b4b0-cb498cd802a3"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4be4b7c8-b1b2-4aca-963c-0df75994fcea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "96b97b62-4e49-4e09-b61d-5d1354b3c72e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ea8ebb1c-1838-48fc-ba13-5a75901b943a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b88ec63b-5870-4fa8-b08f-1669fa6a4143"
            }
          }
        ]
      },
      {
        "id": "0dc99fce-334a-4c66-80f5-9dd904ffc3bd",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "bfc591b8-5a29-4d15-ab9c-6293cafe46dc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5c8763a0-f6a3-4682-b1d7-69bc181005d4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4c8dfb35-6394-48c5-82b7-8f31ba1c14a3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2353fede-1e89-4e1a-8cce-fdf9e8769aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "626d13f5-28e4-4562-9ed4-f86a29f86902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1010fe13-5262-4c02-b80d-c74fdf8c909f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "af63e315-0bfa-4dd2-beb7-b4fc7a870ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71487993-e15c-4dce-8e39-b1675bc8cfb2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1078dca8-7b95-42a9-835c-945668c42530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94296014-2b6e-4229-bb01-aca943ee3074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620b77a5-35cb-4b8e-8974-b07d1d4f0c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "24b1a640-4b03-4b8f-ae96-ff44aa6fcb2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df3817a2-f31e-4f63-b26a-3512b585dba3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb3e64ee-57e1-42e4-a7dd-4eeef50855b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9689210-2440-4039-a0cf-5aa469e8a5cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5504d7e-7356-4f74-b869-781b7c26eb23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "07b8010b-d2cf-4538-a576-e83e6a8088a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409da625-15de-4190-b0d2-4c939659c9d8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "417b843f-8c45-4c7d-b8c6-4ca81e13d6bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86d29bff-fbde-4fe0-8166-12731c47838c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8963c3e-15b5-4b3a-bbba-4325299aeade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d759aeb-8cc7-41ce-81f7-3266ab9b67cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c767a06-3f7f-46f7-abb8-daf474221978",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29562635-8359-45aa-9f5a-f93496590061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5088e6d4-47fc-4a4a-acda-c335eaba5010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e4e7ec7-0f45-4cdb-9034-bb23eda72697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cbd1d9c-d52a-439b-8260-ecc32c982853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e172e59-b4e6-48b1-9845-c4c5886216bc",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51379453-092a-434e-8813-1602571d5ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ecb5c69-ca5c-423f-ad79-35eeb5b79ccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15212267-5c30-4f86-8032-4dd51189d5f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c94a91c-0da1-4584-bf45-8aee7b8f5132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a96e99-46ab-48a7-838f-cece5c83a6c0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4afc305-8f7a-4be7-a932-fcb8a8a898cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14dd2e98-0f24-4096-bdad-d6ab835c862b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b1fc69-31ea-4ed0-90c9-81d613ba91c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "74125249-2e6a-4f87-a103-1671052f8371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ffa6179-fafd-4b17-bc70-422006430215",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "698299b7-13df-43cb-85fd-468d1cf49e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bec4b172-1d86-4d98-976c-d27ba3fce525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a312b86-525e-4b21-9c41-846764d0ff96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "04fbb9f4-b63a-4074-bfa6-c5a1c0f34355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb8336d9-470e-4011-bb69-57b18d8f9b4c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2138d1e0-d6e2-481c-94c6-743688152779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b99676a-a9bf-4d93-b874-d3a6e6d3eae4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e14c3a20-e122-4d6a-a414-0531a84ae996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "72fa5cb8-4004-419f-8737-f8b3d6510bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5d6027-5e72-41c8-ae4a-4a0b65b83a9d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a2fa1e-42fd-4113-886d-aa739cb63421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee78bfac-e307-4fe9-8d00-5e640c94a978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a14a1f-19b3-420d-96a1-76bb8248697e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1db7d153-72aa-4e7e-a9d5-2c40d79830fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2739bbda-d4b4-4379-bdb7-622b8578516b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f562eea9-e186-493b-be86-b2a2b5145cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73a38c90-1c74-4c5f-8ebf-fb3721bd7b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c91dcb-2012-4ae2-8c06-0fa9fb4f0e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a4cb9f30-dda9-4eb9-ba44-2d4f7c4604c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e066383-6535-4bbd-b3ba-1fa3de35e3e0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca02075-be5f-4232-b48d-096f87541866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79b8da13-b00a-4166-9333-5bde775dc101"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1681b2f3-2b63-4181-ac4a-9f2e0a00549a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "284d73e1-91c8-421b-8bc9-b6bbbf2c50ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22790629-c0c6-42c6-a3f4-d95e4b979ac3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b96282b7-c54c-4da5-aac4-77a418ce78c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "877229e0-6505-42bb-8160-7cc179231fed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eeb095b-d906-417b-a19f-044d85a42d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "93541988-f3df-4cd7-9a1f-c73728a3600d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf0c746-50de-4f17-9f3f-e5523fb4278b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68de4e12-09bb-4f60-bae5-1c27daaf5c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b84e12aa-8e4b-484d-b98b-f9f6c2f861e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c777e42d-4147-460c-9a12-40f411f8ff09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcf3a8d8-e186-450c-b546-4c42ce975f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fbee2dc-fa57-4a9e-a652-a05245e44fca",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba11aa3-b478-4188-85b5-3d191d36f563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d52d624a-92a5-4bf7-9868-30b0e4e56551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f2097c-8fbd-4667-9a87-ef168881cff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d71e5b3-53be-4f35-960e-4441bb8f30cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c130589-bc0e-4347-ad82-9b552b49acd9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "684171b8-e182-48d3-a34e-fcb70f2023a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "004d1de8-c5d5-4067-8a2f-f5ca87e4618b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d376f9d1-6e55-4bd8-834c-6771a84d93eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f072075-b41e-4217-bc09-c16e42a6d240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19788395-fcad-4cc0-a711-545e463ef037",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a6f3c3-f0a0-4e3d-a05f-775cfcf57381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddaed305-aae8-4260-9f85-ca6d76cc1b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "156026c8-91b3-439a-83dd-a0bd6185440e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "76f74f04-6ae2-4cb4-8be4-215ff43cf0d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef5ac3a0-b93d-4749-81b2-845b28899ef3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6327344-335a-45ef-9564-632f302c51cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef3c5d2c-964b-4c98-9e18-01f66f8604d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "482ba9e7-1ff2-43f8-a065-50913883d09c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ef3e1fe-0fb5-4b2d-93bb-447d77ff9270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0076b1af-2b65-4393-9f93-f811f0b90d76",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d095cb-ef2c-4b7f-b5fb-d7d88ca38e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1553648a-4016-4bbc-8e05-d1c51778e682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c5e6875-2387-43ac-b29d-4deec98f037d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15fe7c88-00fa-4c0c-a38a-ef0dd87614ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59192e67-9a6c-476e-83f8-a4b513ddba89",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc605e52-686f-4c91-a44e-c32d47544a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7c2b622-bc42-472f-bdd7-b765cf9b4b96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c22cf69-e6a8-45a4-b4f4-36ef48d2a0b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4266e907-da9b-4adf-b5bc-9e1ecc9217b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "729a9bed-9cd7-4562-8343-1f74a618aaf0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df0c20de-6a03-4bd3-80a7-69b0ca1caeb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bc89aed-f80d-40cf-858c-14d9e4b870c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c9f5cb-af77-49ee-8284-ae301692eaf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2db6ca3-c89f-49c8-a8a7-2e3c18952df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9075862e-36bc-4f01-80fc-c938d941e129",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c9d93f-9fa5-40c4-94ee-908b1ee2c46c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d9e158a-3f0f-49e9-a674-b97b0ced0c70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d9aab1e-2e72-431d-8c7f-fd1cbbcccd01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce377df6-70b4-4b15-8a3d-db72b742f005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc9107b-ff34-4b94-b989-a85b7557e6e6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee8eb37-4925-4f85-90f9-4936695cf856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "263e304d-3146-411f-b0d8-91f4ae44a807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b159b157-d72e-4aae-a97a-e48423bde690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f0cd1ed-2184-4d1d-89e7-b93dd1ecccdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b73b516-ea7a-4aff-95f6-8721615ba614",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d1cdfd-ec14-489a-a2ac-49461d9590ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3064d50d-c09c-4d54-89e4-12fd8db478e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21d29b5-9a08-4009-a8ef-43bef0114d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6c97d5d-69e3-4926-8737-259f23faa2ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da16113d-beaa-4828-839f-d4c33b3c08f4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b9b0a08-d592-4d3c-8194-bf81021f9d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13368fe9-3ec4-41e3-be31-7ed1210d39f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2f1c45-e255-49c6-a309-db36f4c4203a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "417c5054-7971-469c-8637-211e6299572b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cfdc4d0-9d86-49ca-a931-4442dee9be2b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d94cf4b-2042-41df-a8f9-10f28afa7d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7602150f-d212-4662-9cf7-9a5dcf0dbd97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3da64ea-dd57-46e4-a207-82a5c7e05700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a283531e-2932-449d-8640-1620e1f1ead4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d07b87-e8f2-46e1-bb43-dd50cfed3a8d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e36af4ef-a031-441c-8981-cd8a038b0f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1ee3e05-c636-45be-98b2-58255fb5a4f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c622778-57d2-4c33-88fb-3708276e5e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6e22f3f-f73e-4fef-b6cb-86f673658f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c2eab3-50ae-4087-9684-22e9be39c898",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "175952d1-a2cf-4cc7-833e-aae7088b5ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c43494e2-cbea-4f43-9fb6-3a10caf8bad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bf21e9e-1215-46e3-b3f3-92c6ab7adea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d531d7e6-6c88-47ff-9d0b-760979461f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34e2bac3-8561-430e-a876-713469abac74",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2ed0c7b-0baf-40e5-964f-52c488dcffdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a080fad6-6f2a-4d6e-b976-cf69bf907a40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4403323c-8c9d-45cc-914d-38cd61fd9bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "625f5cdf-f4dc-4046-a6a0-48f63b891569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20937993-c276-4d5f-aa6f-9beb2ead084c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0013f2db-a54b-4fea-9fc0-ac21c4009013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6daa6eb-c0f0-43f8-bb0a-688ee48b5c98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e626ecd7-6a26-41ec-98ab-82eab5d9a392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bd2dae3-77ba-411c-ad83-4d7e499d75d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5635b6-5b91-418e-9a17-494f42eaa476",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d82d4e5f-8681-4fac-9c0a-2e1280b128d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82343f0c-841a-4c54-b2d0-3c3dd438e4d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6fe17fe-cac3-46d7-9d52-e2886d571087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5e9d9bb-59ed-4fa8-a19f-dc3cfca7cc5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab8ac94d-9858-4494-a526-b47f2f4340c5",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7942d86-3d64-43e1-86f5-155501dabe9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cddfdc22-ad97-44be-8fa8-f482342393a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4788e3-32ad-4587-9385-1b5dfe4c7688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f13f4be1-598f-471f-a0ce-f8bb698e3c18"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b248071c-f03f-42f1-bea5-0a9ee60210bb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "515dbb17-a344-4720-9f4a-775c1bf991d6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a79826-08be-403e-9949-47e363c4b4d1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "28fe95be-0ee6-43c8-a90b-20834a41f8dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f564e3c-e7f7-4212-ade9-b21c22ac678d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b6c3273c-875f-4246-8780-3e940a8c6088"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0afdafc0-db78-4d26-a6d5-ab0f56b57442",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1b583e1-40c7-4c4e-961c-bc8027793567"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2af1f21-ed23-4d4a-9a94-46d52dc8a3df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07e35bf8-490e-4a4e-9bfa-e2ab48190d64"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bb6d4aa7-a07c-4b58-a930-b292c7b7099e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "eb369dd3-08e0-4fc6-be06-39b08f25c00c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7408b0f8-25ab-4c52-ae2c-a7a4548cbccb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eb191746-c578-4e52-bc5d-39bd99127af8"
            }
          }
        ]
      },
      {
        "id": "40b7ae90-2cfd-41ee-aea2-a6d3a3cb27ed",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "05d040d1-2aa6-48c8-8c82-ec39b62a7835",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2dda0517-8657-4248-a60a-73079da0fc9c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "963ed945-9add-4e63-83f8-1ed60298b9a2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2541c6e4-de13-4f88-8a4e-d9f24b3ff3e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "571f7850-d7f1-4653-a128-9c11f45b1135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69a983c-19b9-4d46-9edb-88c11d9f4d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b6e52c0-480e-4c7c-9653-74a24cc98c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1880bbf-0c9e-4abc-a264-601c3bce8e08",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9305290-2b0f-4b6e-bc7b-e7c8f1270189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4856b17c-99bb-4c4b-93ce-76a3dbce0ef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfbc9d80-3dc6-4b6a-bcaf-386740ffc9a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "238d4c0a-5bdf-4608-8a77-ebacf1b323ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7cd313-a87c-4529-87f5-e4835cac870c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43eb4a9e-a50e-4854-8b5f-f6d5deaed615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96a26822-cd65-4c71-9114-532abb42adf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4abf5434-b0b8-4f3f-af72-c66b227c0e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "58a4bffe-3435-4695-beec-9af76a38db9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bcbca17-2013-41e6-8584-ffd22ad0e8f7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf84a81-82c8-4f68-9c04-cb0e3eecf613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "649218bd-8d9d-43ae-b968-afe7faf1deef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59206da4-d672-4b41-bc0f-2c32aa6a03d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f730963-8483-438f-b395-eafa0edf31ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef42cd81-590d-4813-853d-78bc68bee49a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0461eb9c-7efc-4572-b32e-a19df59749a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44ae6b8e-be9b-4095-9ec1-96a9f5585c47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cafbf9c-7e86-40f0-b8f7-cd343de369f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa89506c-c802-43b2-b4d5-2e3947ae6dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9bdc456-6f07-4c65-9a34-d6b770a4c5be",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7285a226-7d2f-4fb6-9620-760400ec4b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1116dd92-0d68-4997-a1d7-5dfe879e99e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b1e6d2c-040b-4b27-b53a-b9ee8a155357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b40c5f86-b4b7-4d88-955d-451e5eb998c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef5b6af-1b7d-4fbc-92fc-a2a4429b98cc",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ccc2ec-13de-43b3-a74f-59c95bd0beb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06673af9-1bf8-4fc0-af50-4f1bb6698d38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e32b3c36-c7ab-49c2-973e-702c97a72a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "674142a5-560d-4ad8-b0cd-241cab25f507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee820c44-0974-482f-a9f9-73451a2a7932",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a617bd-01c8-4a70-859c-71115a44038d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "037eff1f-9cee-4c74-a0a3-96b0aee4b1fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e128eb1d-233c-4544-85ea-d1a9494f72d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "61017b68-20f4-4c5c-883c-012cefa9df4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb062b4-a757-4a02-a194-17e904415e24",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcefe920-7838-4917-9002-98a8534bd271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9befd77d-6e75-45ae-9ec5-2900d23841a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "352a2740-3c30-4610-ae0d-59120748fab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "08758720-a37b-4b34-a8ee-ce95cffd0a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a183a8-9288-4cd1-ada7-fe98201dc301",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0922391d-4ab1-429c-afbb-5634f243b632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "933c7af3-f8ed-4668-8401-b496f19d31ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e77f08fc-57b5-47af-90d2-dc67c81f3812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d4dd59f-376b-4135-a8cc-b63f24212b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ffd531-924a-470f-a980-170e37013d54",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1ad4c55-1518-4ba2-83fd-dd2cb6cd2433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "439c2c97-1097-416e-b730-dff5e8b537e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7f8e23-901b-405b-bcbb-7dbe56f4b7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "03c2b276-cfc4-4721-bd88-b70b3cb3fbcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c2003a7-4a67-45a6-8454-c0b5d23c0812",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c878066-530e-4c59-b65a-a1ab68c11cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbefafce-48a2-4d8a-adb8-4488bd8d6963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26959431-f0cd-4516-bdd2-8a0bead0e7cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6f819eb1-bd80-41d1-82c1-61f27fe64ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d0e850-61bb-402c-beb0-995b3e715520",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6382352b-d632-444f-a9db-f2106350c521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5959e0d8-e59b-4cc4-810b-e5896a748be5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db13433-9778-4ce6-b8bf-832670c9f2ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc1d9e30-a9f1-4a44-a87c-2fb9a4a56101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff2d8e7-6d8e-4e31-a62c-58f29f5c22ec",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e8d8d26-f8f2-4f1a-91ec-1c150cb99de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ef911e6-0d25-48dd-893d-cac70e90c842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba7bd29-f76f-4a87-a9b5-d6248d9ab8a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd3ffe5e-363b-4b38-89b5-515bf057c5ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d07e9f-d6dd-4df7-ad52-5cd4e53b18c3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b265863d-f173-4f12-b0f6-1052d36496e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a650f528-49d7-44ab-8e9a-76e0c8d59319"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc0cf70-ea0c-4c71-8817-fbd293feda6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "88a62dcc-b0fc-41ae-9b0c-098166d73486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b0d9a4-0f12-45d0-b3ec-9bd972e28f4b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad5aea47-899b-449c-a21a-c094d7f9bfd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "712e1fff-5291-4803-b7f0-13875c391e4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf79599-de84-496b-9031-047819e2d468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5de1d198-e4b6-4808-8850-779ec376cc84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b82837b8-ce8b-4802-84fd-5bb1f5aea0e8",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5368092-b13f-4b1d-aa35-bb5b4ecf8ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ca19b10-acb6-4053-b13d-2fc3212d5ea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9154c5d-af91-4061-a168-adad37dd94e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "13a02a4f-15f9-4426-b8ae-c02ed710a568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "657ab912-64ac-4e85-9c2d-311915a17760",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba27b014-9cc9-48de-8c16-9b283cf2a7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f75fa1b7-f785-4252-900f-bc996e888e57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a58e2600-b83c-404e-bd1b-c6181bbda25e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1790e84-2612-43e2-bcba-83a7607c556d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f68f10e5-72b5-4ca3-b93a-daee8c34a3d9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c4a1ff1-2087-4482-bacb-f1fbb6b135af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e45e8e8e-00b6-4c7c-907d-29b498c4b0e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4401c7-6c03-4225-b1d0-b6b52d2214e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff57af1a-afe0-4318-8e8c-c28f2066a507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f72abf06-d929-4c2d-a217-4250842c627e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b9e277-79e0-46d3-9239-667b26e88e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "362136d5-0582-4e71-9c4e-4e8a82f2cc3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529ebf2a-9ff4-4be5-8529-8c021d4b2e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b57157c-ed67-4ef0-b4da-fd903f3da523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a5708ad-17a6-4ad9-b8bc-10ba49320655",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd69678-cd63-4d5e-97dc-0a3e07dbfbbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "700342b8-4584-44a7-9c44-7a6f95acbfe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5546edba-1fae-4df3-a7cf-de23c65fe6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "668eaf21-2f09-4ffa-8628-ef46a09a647d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58fef7f2-ff14-45f8-ba99-f807f350a82b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d8ceaf8-fcd7-4683-8537-e4a5123984a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f48bcf89-0e27-46e9-b8f9-be31b2a0ee1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07446518-9aff-4b01-90cf-bf10b6282fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3c6f2aa-b04b-479f-b4d1-e145500aebdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33f31a5-dbae-4010-b8d4-fddb0a5139ca",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2b4dd2-1328-4e1e-9181-b8eea0d1e2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8728ce29-241f-4795-abf3-1a71b2a495ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ffe9139-c86e-4515-9fce-e0eacea4c354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a85ef083-ad7b-403d-a82f-5875ed02c092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07a87831-a777-41b0-9683-a963ef3b4b52",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b712fead-541f-4d3f-aee6-f9161ec57640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9f18f3d-7431-428a-ab09-da8d42777d9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0061d7f2-2e8e-4583-8990-8db728a0953b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffe893f9-b4c0-4126-88fc-0c88b596ab6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5edf0c-ac81-4483-ad53-3b0ec4ea70df",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "642cc613-c25c-4f17-8500-ef370d06efe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc85a0c1-7ff6-4ddb-bf6f-2d0abf762b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9bdca40-e59e-413a-9229-b785400297ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dab13be-0e3c-4d50-975e-199a39c19b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c987d64f-5fea-4e3c-b61a-6fe6910833d9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be48cf00-1043-4bd8-90ff-f29e24a6d647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fac0061-e68f-4e9c-bef7-bdaefbcfdc82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30db17ff-8643-41af-8286-d8f529cc54ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3015584e-2852-4401-bb97-514939d348f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95720fd6-916f-4642-956f-ee93d6702748",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a8c1da-5155-417b-ad8b-b68eeaad0c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1de3a0b9-91be-4a8a-bf3d-8cbabd1a6db9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64902264-5774-408b-a9d9-6ff1d4f26fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d661269f-c363-4fb8-99e8-d32517329997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e33b4d6-10f4-4f54-a9ec-ac27a4f25bc7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc16014-3b15-47d3-a196-529d0fdb002b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe1c3fb5-ebcf-4219-8fa0-205711207f43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe95b637-fbba-469e-88a9-755125a60e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8972185-34f9-4395-8185-69c0640438df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d360603-ff08-4653-933f-f4cabdef5d7a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be490e18-307c-4282-a734-05fcc7231730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16b0318e-a978-4d42-b64d-4ae2ee7c21fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac36792d-d957-48c4-8abd-ffba0b826a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c0ed624-66f8-4d5f-aff4-4ce36fb354d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff01d91-4e3b-4e96-9b2c-7dbaac4c15fe",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64a4bb9-8044-4cd7-83d3-422df222a3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23937d04-b5a0-4b1a-aede-15945c2516f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014b28a2-b643-4423-998c-541a26c3e485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b8b897c-536d-4a43-b2cc-fdebbcda9880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47babf84-49c4-4bf2-a89f-090e99e8f852",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "522c0ccb-f6a7-4a20-b9e0-e377f4d45dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04ba91f5-5a50-46bf-be44-67f2d6b034a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f00a09c8-e6aa-42d3-a3a1-cdd19fafda7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea2a8f96-e311-47d2-8a16-c07b551e4da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "959d6a1c-f5b6-467f-80a0-dae93fd9b3a5",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68419d2e-c324-46ef-979f-9e0c2ddf36eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a27402-115a-42cb-9fe5-3138cda2ebdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b6f0dd-1b8a-463d-9ce4-c4e4b2933916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aca4d1a4-269b-42c1-83fd-bdf563f1b453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a42958-a86d-4670-8f0d-3f96eac478cb",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f28f9f7-ac8a-44ed-8c36-1c5f5ebc465e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10de24fb-67cb-41b1-82db-a86c9ac665ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f76caf4-3f9c-40eb-b113-1d99405fc11d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae8bc4f3-822d-4b27-b557-cf2a566b7455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8324de8-2b34-40eb-8795-8804d82b35dc",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c543f05-7d23-4ceb-a6b5-d176f67befcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f733d96-6106-419b-b3d4-6bb450323606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7242d65-254d-4d97-a5b0-5a9a4db07dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "436073df-d344-44b6-a5bf-02b5c7cf06ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c57140-cf24-42ac-b215-ebe3b648f509",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2acfdf6b-822f-4098-979f-cb5694bf5ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96bcfb77-1d7b-4918-97c2-4e35c699481f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed64b549-df82-40ab-a28a-acaad256b265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1bb01b1-f46d-4e93-b6c3-25bc2ed7c37c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4983cb8c-9e9f-41b7-8690-bcddec062c3d",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8729d264-260a-4f59-ab33-f4481c5f7e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05cf015d-2867-48ec-94a1-1742821f33f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc7d72ae-8f10-4184-b7ae-c9019459b148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f2e390b-6350-4203-ad1d-4cbbb73ce5d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ad1ff5-88f1-4d29-a4e8-48ffc4858143",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e4d39a-5c11-4489-acaf-71c4d5413325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "745c8518-e62c-40e4-9581-3538f09041b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeb1090f-9f3f-4961-af7e-758222ac0078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6d1afb3-081f-4e3e-ab89-8fc1d90fe5c0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a38e182f-3c7f-4fb5-bb6f-ca558a9c1fdd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ebab3c79-9c31-4247-8290-c38ed47ce596",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4461e953-0a28-43a9-8879-c6f0b5f437d7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "28b75f0d-55c2-4977-8fd0-beecba19bfa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "394f0596-1bb6-49bd-bfd6-6afc2ae1545c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c8f35fdc-8ef0-411c-a773-75dd8c60cb5b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c43a0935-76c7-4f37-8612-f24d540b3b08",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "292be6b3-e37a-49a5-8326-c7122037fc38"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec66b941-42af-488e-9771-93961addec96",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "881de626-ec57-4efa-8537-77982e1c4319"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "628e7961-28bd-4994-bc18-8509e505c297",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8acdb1d6-7f8f-4700-9593-8fe78f98ae9b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a12f7bf2-520c-411c-b0f6-266fe9460a65",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6382cef2-b2f8-460b-8be9-9f24a4051f5a"
            }
          }
        ]
      },
      {
        "id": "fd58f20e-d555-4aea-932c-b7b188f1498a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6724d376-c5cd-4b74-8b7c-2d5aa5b1f1df",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8ca47d40-0462-425d-ba6e-4d0f3b388155",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b405d79e-5a74-461a-b337-2df7f5c1ebb4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c6809e-b338-4bbd-bf83-4dd57a386d2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1398c89e-f0bb-4950-bffa-d52fd240d4b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6938965-e822-4f3b-8e0b-4f87376c959c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da06ec2-f736-4f53-9382-95b31889c9fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "957e3d22-d4b1-4bb2-abc9-cc26cbea2dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20627f74-dac7-4d04-bb5c-40563f9c50be",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d1e42b-fdaf-49a0-8b4c-a94ba541516b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7352572c-b635-4ba2-9493-c3ed195cd0cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8020ed49-f039-4d76-b483-330e790909ec",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0529c564-00c9-4167-b565-97acabc9c114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6291489-7faa-4086-b7ab-85fd8a4baf14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde72de3-c493-4ec0-833f-78bc2b3afdbe",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90bb87cb-6dda-4b38-b7db-7c85e04e6112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c855277-c69b-4b17-b211-88bd7e26f570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d65364-0464-4ecd-bc2c-14ffa056f5e8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8465da82-eba1-4bc8-9c2d-05a2ee1457e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df84bd70-6b4b-486a-b3c5-a9f64a61d2d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc015d1-4051-4050-9ab2-eb3c27f14a52",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae7d19e2-ce4a-4d57-88b5-d2c319d0ab1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45bb30ff-1009-4ea1-8d7c-322d4446d2c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ded451-b020-4b53-8b6e-1d48ef939cf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa710cab-0d50-41eb-be6a-6d9e1ae6ba0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a36e859-2f0f-4605-8ea7-1645ef98f803",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e31d808-25d2-4510-b657-6df53bde0d31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ddbb2a4-d381-48ec-acee-7fc8da1d1580"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f23a280-f59c-4bc3-ba57-e8b929b7665f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db142719-2491-4fc6-8db5-ead26ae6afc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b65944cc-c7b5-463f-b564-6a57432cc7ff",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e9242e7-c5d0-4f95-96f4-4ffd3c72db41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c887fc8-e355-4bbf-a75b-ed82e4ea668b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac17c57-f83a-48bc-be16-1857ebc2d32e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c3db72f-a2d1-4ac1-bdc5-4f24996123a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ed0b5b-bae8-4007-96c9-3d6a3c6057ad",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03e0dd8-ce45-4c32-b169-4b37a3889285",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7f201fb-d7ee-4769-b38b-cd07062842e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22562e6-ed1a-43be-8a8f-8300a00b6134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfb993eb-bfdc-400d-bd77-9c2c167d5c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16afa000-3ef8-4f57-9c80-0a08146512b5",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "154a6aaa-eb9a-49f8-a4cb-4b48d7af7f5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9586aaf7-b9d9-4192-be9a-9464c95539dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1fc4854-665f-46dd-9b88-da81f92e4f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d39ca24d-c880-4d3f-a57c-6d3025961e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea1d8126-f48d-4554-add4-a9654cd6383b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063c2238-979d-4f16-9311-b58dd91ffb85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7ba2217-6a3d-4af8-a911-39d45fe9f6a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "794ce688-e592-481f-82b5-0d7d00ffa56b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5853f281-2d10-49c9-8867-debfb0b0a4f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d939dc59-1994-40e6-a824-d4f313ae1792",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a67eb1-7cc5-4fe3-8054-1a73ee852b9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5181ba21-49b6-4ec6-8a10-8a75559cd699"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac7b29ce-87f9-478e-b008-8d10a35d4dfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89618dae-d167-4a08-a25b-ed592ff3dbe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f7ca3c5-d30b-4247-89a5-a4d039dab230",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "398bd99a-98a8-40f5-b6fa-e38f004a2edf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3c655d9-61e0-4d97-8162-70bc9ec438cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7863b692-98ad-4d42-ad8c-6a6f3bce66df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df09876f-a98b-4136-9d01-f152f3e2eac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce6af2ca-2530-4862-8f98-ee07e500442f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e18af31b-5468-4e93-957f-6cd5ac4a13a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d887d8c2-294d-463d-b4d7-35fdd6792d82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "362f181a-46ec-49af-8405-668fc106d899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac0c84cf-9258-49fa-b8a9-d8db8d9df945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175907a5-f550-43e0-b5ec-39b13bd3e585",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5cf608-a03e-43a0-8cd5-1611125fe79f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb2927a4-9e48-4a52-8177-c9822b7d81c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "520735b8-4e47-4519-ac89-8840b29be721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73d14968-758c-42db-9a6e-c7a017f065af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec6a742b-536d-4ceb-a1b5-df1bab207365",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4edf666-c8a3-4628-a024-b69a9a5cfba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4134c216-8b8f-4322-9b07-b3021e398891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d7007d-b9ce-4cf9-ae70-7cd43421e992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b85e3d41-c1bc-4ba6-addc-083581e003be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b1353a0-ca68-4870-ac53-2d5a6db0efba",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c3e8ed1-35c3-46e5-bfcc-17352f682785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccb3fcc1-55cd-48a8-b156-7d3c77654ab0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd4b7b58-35a1-450e-a462-be4176281b4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fac19bc6-dd77-4f4b-b813-93f5d5dcc8ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d5c2e7d-6c45-4b10-8592-7c49b7b05131",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dba45bd-cabe-40ce-aaa9-526566069271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63057c13-5f6b-49ac-949c-11264d789472"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb2f4e76-8ae8-4305-bfcf-632f6766fe19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7a23e68-ebfe-4fa8-85e0-2f9eb0ae5efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c1e7a4-ec24-407b-a342-b8048bd17a07",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a819d48-da85-4853-aebf-4f5d477f484c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2206e20e-e417-497d-912a-6498720c189a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7664871e-1a6b-4be7-8ba8-72683aaee848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bd0c927-bbae-422b-ba69-f604bc54e023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9cee69-9bf8-469e-ac9f-49b0b1fc994d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90109814-dc60-473c-87a7-da4f0b16a226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c304dc21-7378-448d-ad65-9cb0e1b0b590"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac581be-374d-42e9-b9f1-8fe4b9048917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "680f0f96-c402-4776-bb4e-c1ab87ba6bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a26c1ce-a465-4807-af9b-a8910479603f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eead17b-eec3-4808-ae63-be3f90e55716",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bba54fd4-a1a1-4fa5-acb0-7c73fc6bc56f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5061b95-f5ab-46c1-bf14-bfff6bdd30f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fd7fa21-8036-482d-9d34-b78fefe08d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00b2baa-da15-4ebd-80ed-9f5f8ba10ee2",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a73c8352-5372-4b29-995f-470cc5d7f43b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3e258e1-a9d2-453d-b559-89a2ea016ca0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc274ed2-260e-45a2-af61-dead8c12179a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03c5f5ef-00cc-47cb-99c4-c455c72801a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db8106c1-4087-498f-abeb-05d8aab2d604",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54010516-3c9e-4293-a247-9edbfc89aee6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5763d6a8-1e33-407f-bdcd-18071d5a1417"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0efb494-37c3-4015-a9cf-104682c11817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc67f724-f8ca-42a4-839b-8e28ced1b1c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e8b665c-26f5-4a0f-9507-7a8037d88d01",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ebeb3a9-3397-4f94-9a00-5874e8c93f80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d762638-8fa8-4d42-ae2b-c1e5ca1beccb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2edc10-8e62-4201-ab1a-00b7b386dc63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "859f37d8-634f-4b7e-a0b8-a1e5cc6f9abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b780261-4d6d-48e2-952f-d39a0b36def5",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69168d41-0010-4783-ab37-8fc0cb7e6610",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb97f327-0823-4759-a1e3-85a34ee3fb02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "477fbff8-2d59-46ed-8836-4a8e687d713d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "263a53bd-bc5f-4f12-bcd4-86ccf633b279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc373c6b-67a1-4515-8655-4e3c7a089861",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4382103-80ac-4e2b-b353-47c11ff9128a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e6baf70-20e1-4629-92b1-8bbd588e55c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77918888-5e15-40ad-950a-efe5b6a637ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f7ba5e8-a607-4cd7-89f7-0957e6fc0359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03662f98-5152-4a02-a2c8-6434355f6a20",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62eb0ada-db80-47f2-932b-b18926687155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15ee6740-d215-4cde-b083-4d8aa775127d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d06261-bf0b-44e5-acac-81d115f11e2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f820e017-64b0-44ec-8ad2-fdc9ab03cc33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2de9794-aae0-4e8d-a265-782e930dad86",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ace68f6-c68d-496a-acf0-379904be40ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "287267d4-4236-4a57-9739-6ec93eacc27f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09734dd2-45c6-492d-b94d-893ebea40b2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b779f2fe-2121-4506-830c-3182b83aaabe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ec983b-f852-4458-842f-24a54aa91a3a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5cd5cb-a9b3-4201-b3d4-853dfa212711",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe8e57cc-89e2-426f-b12c-86d131209645"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f9b5f33-8729-4691-83f8-a500b0df457c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fcac19e-79ae-4920-b269-ce3ee4add1d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27541a02-6a29-4867-81fe-7c9bb9d9141a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c1d0df-45d3-4f25-88e5-2f6047d0a65c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58dc3867-4fec-4430-83c8-57406149bae8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c292f954-5feb-4bd1-8613-176c2e1c1825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f72ce63-7396-4237-97a5-0c1db85b0ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c771da-e792-43bf-a09e-13685b94ee91",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e7652a-5e18-4fab-bb67-a294b194500f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5d66eaa-e0c1-474f-96d6-1b9e4ab50b22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0605a583-0602-49c2-8f70-1617afe3d1b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2a9c28e-cc0b-4289-8e33-ae518e4e0807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba479f1-b54c-431a-a4cc-74906bf2f063",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b3f2db6-4eb9-4f81-b196-18db1a9bdc6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73e3d89a-afac-4d26-a4cc-a2ce5b1fd1d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6fb67cf-cd05-4987-8b81-13d1bbc72623",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa671de1-da38-4f9a-9cde-f27d8af0ef85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61091498-ce41-459c-9a44-8c8b084957cd",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b30e85b7-e5e0-4cf1-96c0-af4486836540",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8de21ea6-445b-4ffc-b873-c680e5d6f3ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3da326e-d033-4477-bd55-9b65b8985147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29acd299-4b95-4299-8e81-a2a74d315c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "379eddd7-af79-4e1d-a668-77eb8ad8b49b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d892821-2802-478d-a0d9-822733cb0684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e8e2d59-ec73-4538-b99a-1151a58ede0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af5261cf-0f80-4db5-a9fc-e5ddb5d32d6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b49984f-cc5d-4f57-8d59-0e36a8cc1697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0954cb70-4121-4414-89fb-d37d896e501b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e18f23-d9f4-4fc1-8f88-f5ab7cd231b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb53891f-994d-4019-be6a-bda77a5ac885"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "406094c9-6836-4616-b16c-4b71dd7ecbba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4fd6793-97f8-409e-a71d-fc85243e3971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3868ffce-4828-430a-b565-67b46b36433b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "581864b3-fe0e-47d3-94b8-273b0a8a9569",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b08f32aa-4a9d-43bb-b293-223ab9ddeaac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "635167dc-74a3-4ea7-bfa5-c5c1d6631f7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73f0f6c8-d9d9-42fd-b34f-02a7c5ed1a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b5ce4da-6243-4e45-aaea-52f87f6985d6",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b15e7d1-7f3c-4d8f-8ed8-00522c542400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c89d3921-c20e-44f7-9291-581178a2b368"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1729abe7-8d4d-49d8-92bb-115416214169",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81c802d7-2b95-46e8-bcf1-b754ae40c85c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39a40b8-5008-4731-88a5-a41c08893b36",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "609aeef2-f32f-408b-b3be-4455cce89acf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0ff73f6-05f7-4cdf-9c4c-fed02c19c9de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11665d72-49d1-476a-b4e4-e2fe3ecd1abe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2180456e-47b4-4717-b34f-08f0e813bb0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c4dd30-7ecc-48c5-b61d-4de3ee2619be",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2721672b-5372-4d80-be78-c69bb48f59a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a4d9378-1e94-4725-b9fd-5eceefe52b9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a7aae1-ccd8-483a-b2ce-802ca93ea385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "073b81b8-188a-4492-824c-e86adbaece41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7446534f-393f-4dbe-9c7c-e9b3da4eada7",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a80dd1-4109-4f0f-9b42-aff02f565cac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a5dd9f7-daa7-43ef-9235-6a411ab78526"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2abdb48f-af73-4f5c-ae89-96b406effb86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "773c5178-50d3-4275-89e2-f06fee33e538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee046cb-8d2e-4bce-97f9-a34b169e960e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae341ba-aa0f-4b8b-8dc4-7b3ed215bc01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fdf2779-5310-4822-9226-d62ae54955ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14973684-4595-4eb1-b0b7-4592136f354c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58178087-4bae-44cd-8f24-afb36ec7991e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "671fd4dc-648f-4ad2-8169-3ac2bc7a1bf3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09287553-2d00-46c2-9e54-1a0220e1a823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e52a793-e1bd-4548-b645-df3927c5ad1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e04953b6-c335-4e53-8fc9-8f1feebcd845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a560a368-b0c8-426f-ac48-6792e7cb588a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45abc048-2ed8-4729-b028-a058dd6f6574",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f4f94da-b1f8-43df-b104-8301919b31ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "126bd8eb-2c75-4669-9d3e-9c78007af6aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3754b46-8ef2-430f-9388-4d0124e39b30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e13cd1a-de25-45e2-b8bd-78ca976fd650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f70a4b7b-75f9-4a4d-ae40-74e6bd577bd3",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0a530b-78cf-4c9c-816d-54d9fee9d2e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35cd20be-c8e7-4d58-87c4-aee4c10bc32e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5505e86e-07fd-4c57-b437-27dfd5b363ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e5ac388-57ff-4302-a06a-9ea78a8b81db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52677713-3d92-4153-ba05-2a6d4afdad95",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e646d005-a21d-49d2-ac1c-db7ab278aba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c8a522f-c3eb-4a4d-b91e-75f27b0cc1cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff68ffd-27aa-454a-94cf-900ad6b6d1c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "393963c7-d790-4205-8210-cc65b833d633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11bc4f93-492a-44b1-8128-b176c49a8f07",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b9dd1d3-c6c9-4ff0-ad9f-d95b9a16cfbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5406f9e8-91de-4229-9ba2-1b3fc94de1b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a591cad5-5804-4127-8640-d3f7d4f648c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39c1f2a7-084a-4285-9209-59658b8b0ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "408fe373-393a-4731-92cf-e269bcf53106",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "346c4022-1612-4eca-a460-40601a33f64a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "982fdca7-df11-4765-adb8-63fd56a22d06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc7299d-1119-4740-aa0b-02d04f3f2f67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e0117c8-d16e-4543-b6a5-705e4bb20361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b61eb0c2-6555-4af8-bf7c-44f9c193a83f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d2f7f6-095b-42b2-818f-bcba5a9436d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "282ac978-4ed9-4388-b70a-f693d8ea5ed2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1225b686-a95c-45f5-a951-1a0f2a7528aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdc323a4-5067-41e1-9413-0125cd42df60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca01039-e3b9-41f1-8416-179432aa1892",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef6ca80-2f96-4bfc-ba23-43068b894fd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d8f7f6c-81fa-494e-b935-ae580ccd7407"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6b6bf2-5d7f-47e9-a6a6-1f9c260cf5aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ded7b5b4-869c-4574-9e85-41ab8c925dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a6a67f-c31e-429d-be03-e1c55d7b743a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e097001f-38f1-40a2-b63d-053860c7d3b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8a9ca50-1481-4628-8657-1c00e8de3c6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b45f2904-f362-44c7-84de-7999a86ad402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05c6aa18-3166-4717-a8d2-9af181105e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c69fceb-fb22-4fd3-9395-d64edc855b1f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c643320a-5c4c-43aa-8895-0cb68723f72f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8314070-841f-4053-a295-dc6b9134f3f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c21ff6d-4251-4bbb-a769-53fd1056f96d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b83404b-1bd5-43e6-bfa3-151d7e4f3c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b15aad52-d95f-462d-80d7-3381b7516451",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "067029b1-9a00-43c9-846b-4d5b4e737f30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fde825a-4b41-4b9a-9b38-898fa42b9c80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "601bc194-0059-4c0e-aa33-0530326cd40e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a9f2384-bda0-4c86-a2b3-65c05ebfd505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28caf134-371c-4b41-9272-c65525e7f790",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14051d69-4e3a-404a-9147-22f336d92316",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbbd7983-d854-4f8e-aded-1790d64019a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9808540-e455-488f-9116-38a8bdf1dce4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6c73336-f90a-4071-aade-2ec989443bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6c58b58-64eb-4e07-b668-183e1b4a56d4",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ecb9c41-1867-465b-a7f6-19949350b44d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "066fe27f-18ff-4b27-877f-db9506aba122"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a50fa768-89ef-490d-8083-38922499e9b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c3ffbf3-c33c-411d-966d-7227df554076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e97f25d-04db-425a-b960-2facc973dec3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed515c06-3ec9-4e69-8410-17f5fc2ca945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a329b2fe-1da0-4d15-9a69-025a2bd11dae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9fe8ccb-fd00-41f9-abc4-9aec9caa4199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fb55c57-df45-4542-8799-a6ed6fae39cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a91460-1af7-4519-8796-b136cec7da78",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5740070-41aa-49e9-ac09-c458f0451503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcbdbaaa-fcbe-45f6-bb2b-afdcb961f56b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbcc856e-dbed-404f-aa60-2c6a0da30d7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6594a95-ebb2-4340-8a0c-c2dedfc6fd62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "818967ac-5efa-4116-8018-fbdf127e4262",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d24327-5737-43ea-b4fa-55f02c986fe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab6e9d05-f432-4271-8daa-d463fec4515a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2705a5b3-c747-4b97-9fbf-8a2d8fd9fb44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f9f4819-d19e-4969-94e8-4d1228d461aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed5e35a4-df36-44e0-8a2e-26e7b67a124b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "532b1b55-1f93-487c-80a4-c193eb480ba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54337806-dd95-499f-a9a4-fe9cab78b2dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5afd3d5b-6fb5-4b4a-a583-fd256c8db9ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a639bec6-86b8-4b73-a5e9-676da7ddae1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd56512-c683-443c-a552-8fd5143578d1",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d569f07-1932-46c2-b63d-53b30ef2d72e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac3ac269-70ce-43a0-a80c-4a5ee42afbda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f23b2551-2a79-4c93-871d-cc78b526b61e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d9d83a-b007-47f0-a87f-64180d366359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fdce53a-91fa-4ac9-ac15-109d978e5e23",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8198bb95-44e4-46a2-9dd7-b365148e17b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22d17dfa-8479-4907-875f-e18e7bfce323"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca4ee40-2397-414c-a4c2-d6f2712fd027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c081644-e2ad-4a13-bbe4-93eb56a20b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e2d76a0-1722-492e-beee-34bb63309980",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e99cd549-c907-4538-90bc-98c102b68e29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff3ec033-87af-4220-b8bd-477c3c00b603"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d8f8e8-82db-4087-9e56-2b16e49336b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6064f98-ad01-4c39-8141-fbee27f2fe90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76605d5d-959a-465d-81f7-3fef3cebac1d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17dc2c82-fc2d-468d-9c30-abf670665138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dd61453-f52c-4d7e-9c3b-132764821d69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58446b90-05af-4e74-8338-0e01d62c3e8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33106c25-75fa-4aaa-96ab-5746edb67b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b9782a-fa36-4a4b-948f-924943d203ac",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc0a3911-d962-4d5b-9fa7-a6b0020dc764",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "638d05d2-1ae6-4524-914c-4ec96323c5d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8d4633-401f-49f8-a13a-56f7bb9f47a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf8a88d0-1da0-425d-bd7e-b7b4ee4e45e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f5089cd-eb56-4020-ac40-77440d3261e5",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "171cd641-470f-45a5-b2a6-c7d5432f81b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f1c4176-486c-400b-83c3-102dc191ccbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c1c8367-d4f1-4e58-a1bc-8a4e33854a58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7000864-44fe-4c77-9e91-a21f14cfbc55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8fd386-dfea-4a40-be5c-cdf9e19b9ada",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad2c5c1-30a9-42ca-9e87-084adc8196f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a7de61f-229b-4fb5-872f-6ac7693c9fc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c52300-95f6-4d5f-980e-1e9bc88d5bc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a87e5bc6-859e-421e-b8fc-da4bcaffdf14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e47520-cd2e-4c90-99c6-ab96bdfde116",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9811f0cf-4ee6-4675-84ad-625e50dc92c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ec53434-5689-4b61-aceb-e55944721c56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8458347-47b0-4604-9845-db50b678e844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24731d99-49ec-4741-a92d-ed732af25b7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a0f43b5-b51e-421d-91c1-d5d40c9620de",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a7527a5-d6ba-4cf2-ae03-6e1543fedabe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06389b83-73b6-4542-913a-14170d482e1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "706d6d84-81b9-4826-8f08-afacf01cc9f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a4d8365-4da0-402a-813c-866a2d2025fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3b4c53-18da-4561-85ab-402d95889007",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4127086b-0047-486c-8f15-62c7c333b13b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f82be832-ac22-45e6-ac4a-6be5fddca02a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f2b2f3-8519-42dd-87cd-39d2b50e8922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94ad14ac-9fc1-44c5-8e80-8192c342bcd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b59625-f0e4-4b0c-b5c6-e8a5ccc6e52e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9d419c-a8e2-4024-ae7f-c47f6c111a3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "984432be-651c-4aca-b022-78a89941f3fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9546082-cbcc-48fe-9575-0eb14ce2669d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "419ff04e-364a-46dd-8b1b-2903aafe4704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61615b14-94c3-4e76-bb5d-0456e474e79e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ec2186-c285-4d0b-85ad-14c4bbc47590",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7206a1bb-1031-432b-8a7d-8ba99584c334"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a76219-7bb2-4c85-997d-b24d3f84cc02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3e9aa95-c4af-439c-b90c-9fa6cd10a8ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be4b9f92-0c87-423c-88d7-052f91767460",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac55903-6283-4f6a-bbd1-0a77ee49d7e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2cfe059-3d00-433d-ba1e-5d4e998a7683"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1807307-c37c-4836-bab2-450f2745cc46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "156a1650-1f00-47e8-b029-bbf088e0dad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcd2b7b0-e904-4509-973d-a594f1598627",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1157c30d-9dfb-407f-ab2b-cc7f8c546c85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1dea0299-cb2c-441a-b789-f83746c32d81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "288852b1-2353-4b48-9a78-fe1b14ee10dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7362356-ce3a-4103-91a8-8c0e680b5337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f64fdb4-ede1-4062-a65d-b4762e6751d4",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3405f1b-b945-4545-a1c0-349a1a3fe853",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c51dd85-f680-4c7a-8ad1-78830cbbaf08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d405a97-f1dc-406d-9c27-f942c34ab552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84805ea5-9794-4e60-a312-df868883aea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a3ca78-21a8-4408-8541-abb001aa325a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f5caf10-9787-405b-83a5-5c066f610e6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98ecb951-8308-4252-a758-5c7a5a1e09a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d659535-94ff-4221-9302-723da9b82a5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8933b049-ed6b-46bc-a5f2-b6355b2012c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90010b7b-b52c-434a-81a5-4ebea97b9000",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe674d1-0642-4db2-b429-754f7d8ed031",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c37ad478-d07a-41d5-be35-e8c04adfa2ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d5a468-cc1d-45a3-9d3f-344468886ba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78dc7132-8d56-4a17-8e54-aed43c9139db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd5d4b3-ad68-4ea9-8fdc-58bdf6af85be",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86077053-c050-4644-b5a4-3f8dc4dfbf08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c00573d8-efb3-40ea-ba69-4efa649c235d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "387e5993-ffd2-4576-8fde-8d5bc4721f11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ccce75e-89fb-40d1-9839-2098b1c1855a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c654f6-ea01-4d34-be89-2675f79e9419",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20358955-5129-4a36-93e8-b0b6b27cce0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c61b916d-70e6-4c9c-b4ee-473f157cfbb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a6dcf2d-39be-45f9-993e-dc848154371e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3049c801-863c-42bd-9452-44a047ffcbb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e98e3b2-1747-42d9-83f5-ba24f28bc4d4",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69a4f19d-bce2-4bce-be11-83fc7bbacf3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33cf917b-785f-4d08-8dca-9711c4480e02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc70c65-7403-4e97-9084-5fcedcf6ddad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b70d7b5-a736-4341-ab4c-f43fd58b6657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf4d6997-e28f-4cb5-8f14-a9f0b8a9013e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce1f186-7503-451a-970f-a27b63501969",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b790b8e8-c5dc-473e-9f5e-64e12766e112"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa25e05-ddb9-44ee-866c-1c0e05e5d0b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebca0c04-7539-4b01-9c43-df278c2a31a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73516a5a-557a-4a51-984b-256147a86c57",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e7da62c-df8c-425d-a91a-71af68188b3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a7ca789-ea68-42ae-b6a7-5a69ca16b829"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff5e65a-86ab-4bd3-ae7d-b558964a2895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0036b597-1088-40c8-a8ba-296607810200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e1d106-a83c-4f6e-bc04-3816637cba5c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc177c26-e383-49dc-9b79-40e097d371bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbbe1719-b06b-4160-808b-1a03ac76b53e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf0245a-370b-43fd-b30f-a82123359a1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eee7fb6-0c14-4787-abd8-be7d333d3e0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf94e25b-9452-4a7b-8f44-ed76c007a4c9",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db610055-bbd7-4b0d-9c29-815f307117e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7af4f9aa-1eed-441a-855b-55b4ed1a271e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b975a8b-c83c-427c-9835-63af606890b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6b0b782-549d-497d-b311-7c44d259750d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce62b32d-d6ca-4e0c-a323-9d340dd9697b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b00055-335b-4bd4-8278-17a136985caa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c08c119-669f-4059-bdcc-b0fe0d930753"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23604b9f-7920-44f1-9781-ca7ddba14b0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "808ebe2b-23b3-4449-a953-301515791f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fea1a50-b0d8-4561-9246-e19512e4cf8d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d97a68b2-746c-4df2-a357-8ebceef842bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b42d311e-0566-4376-80d8-a7bab9e60f9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b95d5f36-e67a-45bc-ba08-db6567b0ea3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43ead884-7432-45b9-97fc-53ca0b0f4895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c87545-4b41-4180-ba64-8e48e8c4eb6d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab42dda1-bb3f-4218-8678-d9af17946736",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cf27bb7-d860-4ee6-a3f1-795168f26aab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd36fda-22c1-40c0-a5e6-6942343f2f29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cb52de6-d25d-431b-91da-31880c520fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b745927e-00d2-4975-b85d-0cf452cd10fe",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6604e4-b23f-4678-83c8-69ff3bbd58b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c20221ec-4810-49f9-9ddb-ea603db85805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ab5370-ac31-4034-956a-325b65563432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef5ac91e-3ee8-40f0-880f-9818b642b7a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de23071a-787b-4679-b192-013fd940491d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621e7ecc-4e89-444a-b99b-86fe82365053",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "074fa28f-0c8c-436b-87ac-88f6ed50d15b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b53a263-bedb-483f-81ba-1872b4b5c8e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9b14098-e565-4aef-84f3-c7638e1974f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3100d46c-6ac7-443d-b18a-8c62bd256d90",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce73892a-a473-4120-8a2c-a27a216a9d75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82e798b6-e93b-4c5a-9525-85cad82ac92d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c4a398-6928-4aed-b352-d2c23efb1581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aea2f52-47b7-4303-ac92-80f39b323a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9917ea47-5e46-43cf-9f86-76348eb20f18",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "999cc396-c582-4b4d-b77e-3ffab66712e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8ae4e32-0133-477d-9b0f-f5b64c0dd634"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c492da7-4fa2-4578-ab5e-57d1a039296f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e3d8658-539f-4c75-8e8a-301e5d60f70d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "188aad80-2a85-457b-9719-e337b9d5ba85",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc490f3e-8643-4f6e-a3d0-df5819ac5d79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06cf5b3c-7a1f-40a0-96f6-7284846cb796"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c120e2-79d4-45b1-81f7-0e06d7a6a42c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3590e89f-6586-4522-a3fc-f294c2be4a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855c83af-2bc8-4b1a-bb1f-9460e76f1374",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecee8dc9-0f58-4267-8808-ecf25a88db69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2f18a78-e7a9-4441-b529-22c8e7e5b22a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a4cb30-db44-4c1b-a39a-0dd096c3319c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3823fa2-b9e9-46af-823c-bad7b195e13b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58252955-5e21-453a-96e8-37b4b17daaf6",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953b006d-29f3-4f16-8ff6-a0472a17e5ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fed3452-aa65-4c6b-aa83-b4afc0d8ed9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41de29ba-2b78-4292-85d9-03c7621552e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f68e655-4283-4d7a-8277-a00aa783262a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3edd3b1-e00e-4552-9743-6a8c130f8555",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f37fde8-b18c-4a95-9c6f-9a9f09d32a46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1720faae-bb73-41c4-a572-518e11e03c0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d46a1550-6e89-464a-b8b3-77803adad06f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "591a5177-d068-4122-8b39-727123dae9b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d721eb-0dfe-4dc5-90fb-90a83970f17e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8591ff6-6cd8-4a73-a262-97af669710ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83ee71b6-a20e-4bad-9a07-764fea0b62e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97df1bcb-e3ab-4b85-8fc3-91ffc5f00d01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66d61d47-813c-48f4-b721-a66c05774890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df7e10c8-67c3-4bf0-b7d4-99b093468132",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1518be3a-cf21-45e2-a042-07bbffeff4af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6eece09-6d56-458c-a18c-804e86382120"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0578492f-982b-4a21-ac2f-2516fedf8640",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d88d6d4e-7fa6-4b3c-940a-8c30835382d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce0cc3b-3aa0-4c21-9e85-3fc6b263b958",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2914394b-f0b6-47f8-9d2d-38dd00b344f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65cb1bd0-5a68-4605-8d87-5e86d1b049fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df1ac9e-17cf-41d7-a032-c3aca6e092ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2034c3a-15b5-4bf5-bc79-ae1818095f2c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0585b75-de77-4fe4-8aa2-4e62473ff36d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d4f9dcd-0e1f-46d4-8ce9-e1fe9c2ddd37"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2719f91b-1cdc-46e4-87b5-34b7a501deba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "757154ac-f7af-4275-a058-8b14d17f79b6"
                    }
                  }
                ]
              },
              {
                "id": "10444fcf-9130-4e85-8519-1dad6cab51d3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "98c0c0e8-90d2-496a-8885-e566e47db20b",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf6da46a-3976-4456-b62d-f517439dacb8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7c78bc43-2fe8-45c5-9d14-87c937db98a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd194b13-2367-4129-af1f-42c9eb8f1e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "651a8c13-6bab-4b24-84de-7c1f10be0ea0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c361870d-0eb4-447c-aede-af5477f9f5c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "74c74b1b-184b-4cc0-9dd0-2ab34b95c6f2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1cb2051-eec9-46d0-b780-b1dc3e990d77",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b38f61ea-89e1-4c72-9fd7-2e87f308c3f1"
                    }
                  }
                ]
              },
              {
                "id": "32f06ed0-868a-4eff-b8a1-df9db14e7a0c",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "cbd1cf25-597a-4cb7-a4d2-3cc99d89c37e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c7eb970-2535-4046-a8ff-be2d8e833fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "081fde56-f832-4f17-9586-ff746c4a5e42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a35bc8f1-892b-489f-afff-1584c4c05778",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cc11b13-1436-4baf-8bdd-7fe2603b879b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9a8735e9-3a72-4bc9-b9a5-0b3c68714c1a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "57cdc903-efbf-4b24-b542-b981e86154c3",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a218157b-1145-47f1-b141-85f641082773",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e3efa5b1-1634-4343-9c5b-e34a5c157149"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15234e8b-6295-45bf-9701-8edb737aa724",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6756dae9-a692-42d8-a05f-091f09c19346"
                    }
                  }
                ]
              },
              {
                "id": "4d5073b7-40ae-430d-bf3e-e3ea14055835",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fdf82e23-1ce2-4f4f-8b78-f38abffd6dc6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "18392e15-f151-4613-8332-9ca768371406"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f9ee819b-b6c7-4c7c-a7da-35ef7a36e1a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b7f6f35-f15e-4100-ab69-75ccd56d455e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b7e1f969-bf74-4dee-9f3d-11c167476fd6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "fc61da4d-b1df-4ff0-9bc3-4550566dd830"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0a6f4526-27d6-4cb6-b6fe-6d9978208c4d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6ff3a35a-5007-43af-8b6b-b0b056ee03a5"
            }
          }
        ]
      },
      {
        "id": "c1004d36-6ae7-469c-95bf-ca087d490809",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "bdcffe2d-cb72-4e5a-955b-f5612edaabef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "02fe82bc-bbe2-4931-8272-2afdc9b26811",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "13cba120-3fd2-49e9-9083-7c2c5931cd60",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd105c02-4bdd-4811-9e11-fe81dc120e80",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e04bca22-196a-4ef3-922b-3df5f832708d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "994b393b-8cb4-4fbe-84ea-379c38a75d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3903968-2b03-4733-9e34-8031e553ec8f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e058f46-1d77-4868-8c16-64d24692b433",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc748ca3-7fe5-4b0a-a746-172106d081c9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b1b6eb5-cd39-4b61-9a39-068a8ff44fb9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c03d8aa0-1c60-477e-80b0-b207af4a2f06"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "21a25db4-da3d-4991-98b2-02d9d8e011e8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "20665eac-915c-49aa-add9-84907ebc96cd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "588c3edd-0499-4ff0-b7eb-c691a2ee37af",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b1f38ce1-1a90-4ca1-899b-a6a3063ba456"
            }
          }
        ]
      },
      {
        "id": "153efcdc-44d2-4450-a391-578bd5a8d14e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ad25d621-d62e-4456-8456-4b4b613c8e6a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f0f2790e-e10b-497b-9a2d-e9055f36a9fa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c261e3f5-f855-425e-aa3b-602a61ca1016",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2786c49-ce8f-4bcb-8278-06c6d2f4409b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2e07d2d-3403-45d5-98b9-3ebf9873a58b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65bb1553-993f-41f2-9c5d-b939e87488d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0422e091-8e7d-4509-83bd-c0b89905c4d7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "32085833-b3cf-4195-a546-2e2cbbf3655e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4193b712-93b8-4236-b742-d988d9b66490"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe10880c-1535-485d-82b8-1cf537921b50",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "caee8b23-888f-4929-866a-952fa74b2884"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fa1bad3f-2b5d-4912-b1d9-f35869ebbdc3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c04586e1-5287-4524-9338-d81acc5e0cc4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4ce534ee-2d6b-4e7e-8cf0-70787a5f98d3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f4dc03a7-c411-4cad-9e4d-c9d038d81161"
            }
          }
        ]
      },
      {
        "id": "133364b4-43f1-44d7-bf8c-0b24f78a5c28",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ce374df1-9b42-4093-b34b-dcbcb69b1b0e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6221b991-bbb3-42c0-bd70-d97e5e8dcbff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "00e79bb1-db03-44e8-9312-8435ab02915b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f45e0f58-f22b-4d4b-a1ff-eb0614f126ab",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69969d18-fff5-4d05-9c40-e31947f118d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1077cc8-9ae7-4930-a410-55fd3c2ca370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "424afc20-f015-4172-b7a1-eb2f7c94551c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ca9baee-c176-4687-b985-5d794b87250b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6db9f520-80c4-49e5-86f9-621b39c98543"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac58b070-e9d1-43cc-9b21-0e1a52a8f705",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25eca208-527d-4519-b2ee-f98756526ae0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bd80c4ca-7ea1-428d-b0c0-14fa8f482b38",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "df85dcd9-57db-481f-965d-6f9391c54e98"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9baa497a-087d-47ad-b9da-d07962ea7651",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3e416539-2b7f-4a04-90e1-9482f5c911b6"
            }
          }
        ]
      },
      {
        "id": "d9684730-fef5-46d5-8af7-38c17b74f1b9",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fc6d57c4-48b1-4ed4-9e22-f80dab5238ea",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8de176f0-e499-4cb8-b083-2c14518313ae",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e8d52d4c-bb8c-4248-81cf-8feb7da29175",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ba750c7-4059-4c9b-8efb-85ceda827ead",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6a16a48a-6989-4c4b-a2d9-21bfedfb3ea2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 318.5070422535211,
      "responseMin": 10,
      "responseMax": 7063,
      "responseSd": 869.8124190402236,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1693441957639,
      "completed": 1693442060009
    },
    "executions": [
      {
        "id": "c42d7784-2a1e-4069-b61d-2743bfd2f16a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "508ec828-5a03-478d-814e-7260c22e46b1",
          "httpRequestId": "311277f5-b29e-47a8-8e51-dc2e3ab718a0"
        },
        "item": {
          "id": "c42d7784-2a1e-4069-b61d-2743bfd2f16a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c14a8a5c-30b1-4d51-a303-071e422b7a7e",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 0
        }
      },
      {
        "id": "93b833d7-cc1c-47cf-9626-7443507baba2",
        "cursor": {
          "ref": "15b2f8ab-92e7-430c-a464-2b9983e7d2ca",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "64d2ea5e-b72c-40bb-974e-a8a14f7a370e"
        },
        "item": {
          "id": "93b833d7-cc1c-47cf-9626-7443507baba2",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "68631c91-4d5b-4683-ad70-cbacb513dc10",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "6b005246-64f1-4b1f-8e3d-60c035256142",
        "cursor": {
          "ref": "2e6c8e39-04e7-4011-978f-16d162e65c7a",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e1f6bcaa-005f-4f35-90bc-0e05e4cccd6a"
        },
        "item": {
          "id": "6b005246-64f1-4b1f-8e3d-60c035256142",
          "name": "did_json"
        },
        "response": {
          "id": "c4b21fef-815a-4f22-a5a0-b1649d574058",
          "status": "OK",
          "code": 200,
          "responseTime": 1493,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae9ccde-0c2c-4853-aea3-ef62620d702b",
        "cursor": {
          "ref": "4cee3722-446f-4df8-9c70-29a23be4dfcf",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f873c51e-c453-4516-8106-069231f1cc1e"
        },
        "item": {
          "id": "1ae9ccde-0c2c-4853-aea3-ef62620d702b",
          "name": "did:invalid"
        },
        "response": {
          "id": "729e96a7-3683-4b4c-a238-13b0726b18af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae9ccde-0c2c-4853-aea3-ef62620d702b",
        "cursor": {
          "ref": "4cee3722-446f-4df8-9c70-29a23be4dfcf",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f873c51e-c453-4516-8106-069231f1cc1e"
        },
        "item": {
          "id": "1ae9ccde-0c2c-4853-aea3-ef62620d702b",
          "name": "did:invalid"
        },
        "response": {
          "id": "729e96a7-3683-4b4c-a238-13b0726b18af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bcf0eb3-d693-4f8f-bb5c-2afcd8101995",
        "cursor": {
          "ref": "0795e785-18b3-45d7-8991-a93b74f0bee4",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "647d8560-e58f-46bc-9354-06b448754648"
        },
        "item": {
          "id": "0bcf0eb3-d693-4f8f-bb5c-2afcd8101995",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "2bbef478-f846-47f1-9c78-bbedb118bd83",
          "status": "Not Found",
          "code": 404,
          "responseTime": 446,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a7c9dd-2b76-4622-a20c-6917f2be6ac2",
        "cursor": {
          "ref": "058c25fe-e2f5-49de-bfd2-0e312ccfe526",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3add1145-ed76-480a-9280-294f7add838f"
        },
        "item": {
          "id": "f7a7c9dd-2b76-4622-a20c-6917f2be6ac2",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9b0ee175-0f54-428c-8eda-4bfd2d4276c8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 265,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "095671f6-2ce1-4dee-a936-9ace33556b69",
        "cursor": {
          "ref": "6d5e317f-0e36-41db-a4ce-124d3940a98f",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "658ccc8b-6f02-4a63-8799-7bb44085a0d2"
        },
        "item": {
          "id": "095671f6-2ce1-4dee-a936-9ace33556b69",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "724f577e-0145-42de-b889-7b63ac67422d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ae5ed0-84e4-47a6-8b88-b0c97844b8aa",
        "cursor": {
          "ref": "78f1d45e-2afb-4d9d-bd5d-fbed134a9f33",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e7d4e82f-97d3-4e18-9f95-eb93265651f9"
        },
        "item": {
          "id": "e1ae5ed0-84e4-47a6-8b88-b0c97844b8aa",
          "name": "identifiers"
        },
        "response": {
          "id": "e256d773-e0de-4ef6-928a-9689dff48317",
          "status": "OK",
          "code": 200,
          "responseTime": 1508,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a6aeca-2a44-474f-ad13-663862ae8aaa",
        "cursor": {
          "ref": "0c728010-688f-416f-ad84-8601b09a3505",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6e0b7c16-878f-4e79-8174-037c72322eb8"
        },
        "item": {
          "id": "c1a6aeca-2a44-474f-ad13-663862ae8aaa",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e188eeed-d47e-49e0-951f-ad1b3cc25d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b321d1-33e0-4568-ab11-582fd429a799",
        "cursor": {
          "ref": "590f1224-07d9-4458-b354-84e63d06f264",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4c46fd7c-f4fd-433b-917e-b2bcdedb119a"
        },
        "item": {
          "id": "69b321d1-33e0-4568-ab11-582fd429a799",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "1dfdac5a-042c-4911-9573-43b6c14cba32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62260e12-2e16-4149-860d-1d05277b3810",
        "cursor": {
          "ref": "f0732366-c5b4-4551-9e52-efb588d56099",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0c93f15b-a5f3-4da6-8479-24e30fc05a1b"
        },
        "item": {
          "id": "62260e12-2e16-4149-860d-1d05277b3810",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "23449d44-3bf2-42f4-a026-ad4258c9eb4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e604182f-6169-4486-99e1-9168669cb8e0",
        "cursor": {
          "ref": "40728f9e-1c56-4b0e-910e-57256d0e618f",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "24443b39-3f11-4c2c-9e12-339f06f59c87"
        },
        "item": {
          "id": "e604182f-6169-4486-99e1-9168669cb8e0",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "28888c7d-318b-4566-90db-be0403311843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f6953a-92e9-42ba-ad9b-30d911695ed6",
        "cursor": {
          "ref": "d5217e99-fd5e-48d3-b54c-6fbd50e79893",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "eae23809-8a70-48e3-b5d9-00cd99882916"
        },
        "item": {
          "id": "10f6953a-92e9-42ba-ad9b-30d911695ed6",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f647fb82-a337-4152-a7b2-420a54a70d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317946ed-efd0-40c7-b91a-bd4700f042cd",
        "cursor": {
          "ref": "f5b857ae-f6c4-4562-9f19-957e6f65fc63",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "1a0d2248-8cfd-455c-94cb-1e5dd00c2580"
        },
        "item": {
          "id": "317946ed-efd0-40c7-b91a-bd4700f042cd",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7e76936f-a5c6-47f2-aed8-1b05e00135e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e462d9-1a7f-414e-8edd-9cc0c23ae6ff",
        "cursor": {
          "ref": "45da9604-e3a9-4de5-9445-870cd18643b7",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "1e93865d-1fd7-4f05-ab0b-56dfea080bce"
        },
        "item": {
          "id": "c7e462d9-1a7f-414e-8edd-9cc0c23ae6ff",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5d1576cd-e186-43de-a98f-bf7106b43f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69fa6e0e-a3df-4cda-9a85-b6301b0f23e6",
        "cursor": {
          "ref": "72cf46a8-33a5-47ba-814f-0af5da989afd",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "25b5abd2-4c10-4b1e-9670-64703a1713ea"
        },
        "item": {
          "id": "69fa6e0e-a3df-4cda-9a85-b6301b0f23e6",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5ec9fb31-5720-40b9-984f-182da7f2ff29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5530c48f-e4b5-4ac5-85b7-64e404db0ef8",
        "cursor": {
          "ref": "0abc3105-d3a6-4b81-a791-4bc60641a7a6",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "4570b1cc-7437-4ecc-bbad-8e29f46ae478"
        },
        "item": {
          "id": "5530c48f-e4b5-4ac5-85b7-64e404db0ef8",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b7c0623d-aa3e-45a7-9695-da4336aa3158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5321adb7-0193-4388-b2ce-adde768821dd",
        "cursor": {
          "ref": "3431dc6d-9fa0-482b-ad66-116fe8a8e4f6",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "14f70ed8-6354-4f90-ab64-970fa7e80e31"
        },
        "item": {
          "id": "5321adb7-0193-4388-b2ce-adde768821dd",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "666dad91-d807-406d-b215-fbed949c4eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ccb7cb6-d9cb-45ab-8c44-dc21eda9c9e6",
        "cursor": {
          "ref": "c9564f07-1daf-4857-ac2e-c6a59c2cd940",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "53c74d2b-9cda-4ff0-a3c4-a4867e256d99"
        },
        "item": {
          "id": "5ccb7cb6-d9cb-45ab-8c44-dc21eda9c9e6",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "fe53e111-dbec-4603-bf23-351715c6b948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e771c61d-e282-4084-859f-217da3cfea63",
        "cursor": {
          "ref": "8b043cfe-d210-4b28-bb43-8e6a9589ffb1",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5a26d2a7-6a70-4fb8-9986-a434e8fa1a16"
        },
        "item": {
          "id": "e771c61d-e282-4084-859f-217da3cfea63",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2833b123-fed3-4c0f-90c0-b67f5e27c958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e58eea-5110-4d4a-9f63-79e7e8e863e8",
        "cursor": {
          "ref": "67e92426-7739-42f5-a54c-66cbe9cf9f95",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "99f08738-2fe9-44c1-a68e-abe5cca15ece"
        },
        "item": {
          "id": "f9e58eea-5110-4d4a-9f63-79e7e8e863e8",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d25f8589-7e72-4a20-9f6d-65b282fee5b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "273f71c9-d658-430b-af82-6eccb7235d45",
        "cursor": {
          "ref": "6b4d1482-2617-47e6-b778-9b81f890cb92",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "197a840d-8bec-48e0-9521-120cdbbc6955"
        },
        "item": {
          "id": "273f71c9-d658-430b-af82-6eccb7235d45",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "69804745-4976-4175-85ba-90e93f194b01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ddcc55b-b71c-45ec-b187-bb3dd2471096",
        "cursor": {
          "ref": "50f6b803-3dc4-457f-8c81-14967bcabbaf",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e8444d22-c68b-480e-a760-b8f453a24ad8"
        },
        "item": {
          "id": "1ddcc55b-b71c-45ec-b187-bb3dd2471096",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "be6a3f8d-800f-42cc-b141-99570e23a619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0db22f2-cef2-4d41-b880-4a7aa6416699",
        "cursor": {
          "ref": "75aff5ff-8969-4c7d-879d-da5a22913c82",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e34d474d-2341-4c71-a98e-55690c827d07"
        },
        "item": {
          "id": "d0db22f2-cef2-4d41-b880-4a7aa6416699",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "a6b1b60c-223a-4731-bd0e-a9ce0cb4477a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7c20c4-01d8-47c1-9572-2c97db39ea25",
        "cursor": {
          "ref": "7f688d1a-cb69-486c-bf87-812fe8db32ce",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "102522f0-456d-4547-a973-aa1942f6a804"
        },
        "item": {
          "id": "ae7c20c4-01d8-47c1-9572-2c97db39ea25",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4e2567b4-c939-4162-973c-6300f5dee3a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e93528-dac2-4363-b358-2668b35eac4c",
        "cursor": {
          "ref": "1534b92d-7aeb-491b-aea8-133669457b31",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "101379f2-fb77-4a73-b59d-221d46d3c0f5"
        },
        "item": {
          "id": "19e93528-dac2-4363-b358-2668b35eac4c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d9b4a6c1-81c3-40e1-90d7-318e522cd983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc3da8f-234d-4817-822c-06caaad4fc12",
        "cursor": {
          "ref": "45739d7a-8185-4f06-857d-f4c188aa7a32",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d36aae29-b1e2-4a52-836e-69551be94381"
        },
        "item": {
          "id": "ddc3da8f-234d-4817-822c-06caaad4fc12",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "358f0ece-0c78-4765-af5b-9902e0f4f6ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491500bc-d2ad-46ad-94c7-19b98cbd0c25",
        "cursor": {
          "ref": "2854afee-a42a-4e79-bb7d-b05ac637176a",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9f5c0950-59c7-41bf-b9fd-bc58eb7bab78"
        },
        "item": {
          "id": "491500bc-d2ad-46ad-94c7-19b98cbd0c25",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c5c43c4b-0181-4085-b366-66e457bd0b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1835824e-d10e-4b74-8294-41dc2c035359",
        "cursor": {
          "ref": "55cdf586-50da-4650-b35f-dbb5209e1987",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "0aaf5fc5-8cc4-441c-be79-123d171a3041"
        },
        "item": {
          "id": "1835824e-d10e-4b74-8294-41dc2c035359",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "8debbd8d-43a4-4e8c-956b-9bcdaf80c517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4608bf8b-0c32-4bdf-9785-cbfc68883f3b",
        "cursor": {
          "ref": "74f6adbc-ff71-47d2-9112-d7300ef1e377",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5bef2263-14a6-45b4-8703-53f751e8a024"
        },
        "item": {
          "id": "4608bf8b-0c32-4bdf-9785-cbfc68883f3b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c8894894-691d-42f8-8c0c-c0751f4a4431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84fc23e2-3336-4a7b-896f-35230f8d29cc",
        "cursor": {
          "ref": "96836f9b-1452-4918-a054-3909982430d8",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ed73dc4e-89be-46d5-ae9b-1f4659e7d775"
        },
        "item": {
          "id": "84fc23e2-3336-4a7b-896f-35230f8d29cc",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a12d5ceb-24a7-4e27-8b9b-d52845b2cd74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1401afec-657a-495f-bdef-c4dc682d8ff0",
        "cursor": {
          "ref": "26d6c781-7b73-42fd-89d9-12f6bc233840",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c2af5f03-2042-438c-b536-af5418d6dc7a"
        },
        "item": {
          "id": "1401afec-657a-495f-bdef-c4dc682d8ff0",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "213c5588-78a4-49d4-b1ea-ceb06530b8f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b859e25-29c0-44b8-9453-c53b7af9af7d",
        "cursor": {
          "ref": "9ebc58c8-bb4b-4532-8852-8caaf6958422",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7cb11f6d-1752-483c-a572-3eba05b03c72"
        },
        "item": {
          "id": "2b859e25-29c0-44b8-9453-c53b7af9af7d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "878462b2-6307-457e-8396-3980b5275d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e167295d-7fc4-424f-8b77-1642b5cd58fb",
        "cursor": {
          "ref": "794cfa64-fde9-431a-8c6b-0ca67652e1c6",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "06a69eab-b94a-43c0-ae28-47138aaacdb8"
        },
        "item": {
          "id": "e167295d-7fc4-424f-8b77-1642b5cd58fb",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e6853105-9a20-4136-bc9c-33bdf7dce61e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f072b3e4-f0af-4dc1-99df-44e8631b2d38",
        "cursor": {
          "ref": "e0932126-c2c6-4df2-a4e8-5a1a6bc7e675",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ea309b8c-cabb-4e28-925d-565f4e27af75"
        },
        "item": {
          "id": "f072b3e4-f0af-4dc1-99df-44e8631b2d38",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "838afd95-3825-44be-8761-176b305f9ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec5ea69-c446-4683-b3c5-849a678657e8",
        "cursor": {
          "ref": "53e23ed6-ef5f-47b6-a57f-4e6274dab56b",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5d8243d3-be92-4377-b80d-bfdfc53578f4"
        },
        "item": {
          "id": "cec5ea69-c446-4683-b3c5-849a678657e8",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e1cb90bc-0a7d-439f-94df-c9e9b9e3d798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa8cbc49-47a6-499e-8de8-b4b9d72be492",
        "cursor": {
          "ref": "bf4da0a2-46ae-4b25-8cc5-cb6e159ee4c3",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "0b6e7166-c49a-45c8-bb8f-9615a9c993c3"
        },
        "item": {
          "id": "fa8cbc49-47a6-499e-8de8-b4b9d72be492",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "dd43bce8-b6c0-4045-b3dc-ec67657038f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5308abea-1f0d-473a-8a1f-ae474ef3567c",
        "cursor": {
          "ref": "0f2c20c1-7849-41c9-868f-6fa7091def05",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "8b57d362-5edd-40f9-bc89-ac455340a6b5"
        },
        "item": {
          "id": "5308abea-1f0d-473a-8a1f-ae474ef3567c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "862faf90-a3c2-4b93-afb0-1cd32594bc12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c46746b2-ae67-46fb-af9f-9e2dd1cab7bf",
        "cursor": {
          "ref": "b9622352-e5ba-4a55-baad-15cba26c5285",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "2f0275a6-4743-4541-98ba-241b9df0ce95"
        },
        "item": {
          "id": "c46746b2-ae67-46fb-af9f-9e2dd1cab7bf",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "390e7a83-2e23-457e-b95f-082a34cd43b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a041b44-57a6-4ddb-9291-db99cac42a12",
        "cursor": {
          "ref": "15b44e89-1ced-4b82-94e9-a692a8d2044a",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "03ff824e-12cc-4f8e-88ee-f1bc0546bf95"
        },
        "item": {
          "id": "4a041b44-57a6-4ddb-9291-db99cac42a12",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "903fe756-5e6b-466f-8899-c0c0b3645bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffbea83f-77d0-449e-b7cf-80db7a026b7f",
        "cursor": {
          "ref": "45f28cf6-d166-403c-ac3e-add51127b884",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "21918010-7b49-48bf-9091-d179ad520d4f"
        },
        "item": {
          "id": "ffbea83f-77d0-449e-b7cf-80db7a026b7f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "2caf7592-2e7b-4730-812a-2cfde3758aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f82602a3-15c6-42b5-b2a9-a4e889f9fb36",
        "cursor": {
          "ref": "e6209bf7-590d-4108-b5ab-7ab94a24774e",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2c7d3910-02fd-4d31-bf74-421cf8b8a0a5"
        },
        "item": {
          "id": "f82602a3-15c6-42b5-b2a9-a4e889f9fb36",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ae5f1438-4c01-4ee6-9415-f63dcdf9551d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7a8869-43b9-4e5a-97b2-06e2d287f4e2",
        "cursor": {
          "ref": "598c9cad-89f8-4567-b4b2-6b6dc742de37",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "abc55344-45de-41a8-8cd0-55faea0cd988"
        },
        "item": {
          "id": "0d7a8869-43b9-4e5a-97b2-06e2d287f4e2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "72454924-4cfe-4899-90b3-16708fe412f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe8951a-33e0-406a-b26e-10230fdf9ad0",
        "cursor": {
          "ref": "12369715-7821-4a38-b136-fa51f0378fcb",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0a4e6006-fdd9-4a1c-91d9-363194d373fd"
        },
        "item": {
          "id": "6fe8951a-33e0-406a-b26e-10230fdf9ad0",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "7d2e4ad8-b859-4b86-b74b-3c102c71d5c9",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 586,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76060760-4880-4628-a919-5a85d0ebc0cf",
        "cursor": {
          "ref": "3fd53e5e-678a-4197-9a3e-a8182b00db59",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "40832336-e31b-4649-b227-0db40a516328"
        },
        "item": {
          "id": "76060760-4880-4628-a919-5a85d0ebc0cf",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ca0754f1-933d-40d4-b6e1-f85b0b3f9076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f37455-0db7-4748-abb2-0918ec999d7c",
        "cursor": {
          "ref": "38aa265a-3150-42e0-af99-01720f973110",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "31ff9314-c272-46ed-9458-3e4e64bb0267"
        },
        "item": {
          "id": "a2f37455-0db7-4748-abb2-0918ec999d7c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "823e8d24-59c2-48c5-a473-4e987b682354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a05f364a-67b1-493a-b149-cdeca77a5ba0",
        "cursor": {
          "ref": "c55493c7-6175-4d35-98b3-55384c44c09e",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8aa3227f-9d55-41c3-9dbb-81035c0d78eb"
        },
        "item": {
          "id": "a05f364a-67b1-493a-b149-cdeca77a5ba0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "9ed641f5-52a4-4d1e-847a-9cd4fe0f0315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "815287fb-4238-4f28-9993-f457bcac1f5c",
        "cursor": {
          "ref": "f2016de9-15f5-46dd-baec-a76fe244c400",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3ac10ec6-a6ca-4adc-a7d7-68990e8efadd"
        },
        "item": {
          "id": "815287fb-4238-4f28-9993-f457bcac1f5c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c6ecf8aa-b7e7-4bba-9892-3590edad25a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9679d8f2-ddbb-41e4-9c2b-9c6c81417c63",
        "cursor": {
          "ref": "7e7e3a90-3e4c-454b-9f44-e02cefd78b92",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "fd6b81fb-1988-41c8-a2e3-906d3620f87a"
        },
        "item": {
          "id": "9679d8f2-ddbb-41e4-9c2b-9c6c81417c63",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ccbe47e3-4295-4e88-8112-c1a3f884993a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acadbb1b-ae22-4e60-914d-3eb69f16eb7f",
        "cursor": {
          "ref": "62765134-990f-4149-9f75-965e6ea25f7c",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e9481418-8e58-49cc-b64c-8d6657d7d10e"
        },
        "item": {
          "id": "acadbb1b-ae22-4e60-914d-3eb69f16eb7f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "cb5a9212-0bbf-4522-b2d9-b701c98bfbc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a62450e3-55ad-4cc0-b08b-534042ec7317",
        "cursor": {
          "ref": "96208a73-0b7a-4221-a1d8-ecf81e8439b3",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "2585ec21-b939-49ac-8395-ab3685cd5fe8"
        },
        "item": {
          "id": "a62450e3-55ad-4cc0-b08b-534042ec7317",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "15f06b13-4271-4d29-8cb4-5e5debc9731b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 595,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e949c2-1572-442c-9e52-b64ccec7ca09",
        "cursor": {
          "ref": "51ea3a6b-98e2-4424-85c5-8b593bee7561",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "74733e50-a0a5-4e82-9ca5-f655fc97f3cd"
        },
        "item": {
          "id": "00e949c2-1572-442c-9e52-b64ccec7ca09",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "60468b73-276d-4dab-a490-3ae7ab2463c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bda2618-0e97-498b-af69-93b65db090e4",
        "cursor": {
          "ref": "ee6767b2-b39a-40cb-8d2e-435fcaa71655",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "6a0aa6c8-305b-4efd-aeff-8a83dd58a8a3"
        },
        "item": {
          "id": "2bda2618-0e97-498b-af69-93b65db090e4",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "423cfe00-a5f3-4bac-b458-a54dcc2e8745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1f454e-1de0-448a-9690-576ea0c4e82d",
        "cursor": {
          "ref": "a53ca1f4-8a85-4d1e-b5fd-0aabc6fc786f",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d9617815-165e-455c-8786-a43c3cda13c1"
        },
        "item": {
          "id": "da1f454e-1de0-448a-9690-576ea0c4e82d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "69baaa85-ef97-4b32-8ec7-16f0188550a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c2bf75-8335-4499-92b5-eef482ee973c",
        "cursor": {
          "ref": "f82d99b5-53e1-40ac-b1e4-841d6d273dc3",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8084c4ca-631a-4042-8f91-4c495c5dfa52"
        },
        "item": {
          "id": "28c2bf75-8335-4499-92b5-eef482ee973c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ad5997b5-b0cb-47db-bf24-06486e250220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73143e40-b450-41b0-8262-e68df75edb67",
        "cursor": {
          "ref": "e165aa65-c310-4dab-b378-513a1d43fca0",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4a010404-eb73-4d6b-aaaa-d16fd6589b4b"
        },
        "item": {
          "id": "73143e40-b450-41b0-8262-e68df75edb67",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2c6d4dbe-358c-4c3d-abed-bffbe2de7907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d1e7e1-31d6-42eb-8cc7-b7a1c61b1aec",
        "cursor": {
          "ref": "ce017a92-07b4-4fa1-9d14-606b88ef48a4",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f5851318-351f-4a95-bb5a-0634a6f5d81e"
        },
        "item": {
          "id": "a8d1e7e1-31d6-42eb-8cc7-b7a1c61b1aec",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9d7c5ef9-c664-4654-91fe-2736beaa52b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1aa4c9-b5a9-4d06-b98e-aa77b77e26e7",
        "cursor": {
          "ref": "6c537995-8498-412f-932d-610fd572d6dc",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "54bc680a-5200-4cf3-9be9-fd666e58d1d8"
        },
        "item": {
          "id": "ad1aa4c9-b5a9-4d06-b98e-aa77b77e26e7",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "8a8cae3c-b62c-4f8d-9ffc-1c850e10e209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c66caf4-b2a5-4ee6-9e39-f6a1a7785a67",
        "cursor": {
          "ref": "dd575cfc-27c9-4478-a82d-7a1cb6ec33b9",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3575a49d-925a-4889-aab4-fd10872da969"
        },
        "item": {
          "id": "0c66caf4-b2a5-4ee6-9e39-f6a1a7785a67",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "86d81cb7-ce34-42d9-8bdd-e1059e81de25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c985a166-9996-4c01-baaf-1c48451c4a07",
        "cursor": {
          "ref": "f11cbcb1-1126-41dd-bf1b-7258ed41caac",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "78c5538c-571b-41c6-9d4b-16b113f3e934"
        },
        "item": {
          "id": "c985a166-9996-4c01-baaf-1c48451c4a07",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "db20708f-5bdf-4e9b-9767-47a4a3ca7fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1cdb5fa-789d-4a7f-ba3a-19ab08594b99",
        "cursor": {
          "ref": "35dfe1b2-e31d-44b1-bfad-076c00cbda50",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "267c0591-c927-4674-9739-1281e2bdf6f8"
        },
        "item": {
          "id": "e1cdb5fa-789d-4a7f-ba3a-19ab08594b99",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9324d683-0917-4ea7-b092-c24d30c691d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f130a2-e87a-4005-a914-5a886f4dac98",
        "cursor": {
          "ref": "ad6b9f65-f913-4154-bb6a-5cc1192901fb",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "91a6061b-f254-4053-acce-4e5f55aafc7a"
        },
        "item": {
          "id": "24f130a2-e87a-4005-a914-5a886f4dac98",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "3b53feb3-6206-4662-9f9d-c43de4760e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807da364-66e6-412c-92a3-df020b1fdb2f",
        "cursor": {
          "ref": "437d9c22-5b9a-4a33-a153-bfa9aeb70003",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "1b229bd8-0ad8-4516-a721-1fd6b713816c"
        },
        "item": {
          "id": "807da364-66e6-412c-92a3-df020b1fdb2f",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f00e99e4-a074-4815-9d9a-21efd4de8c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b39b654-477d-487c-b94b-996640f72eaa",
        "cursor": {
          "ref": "3f11782f-67e1-4d89-8a7c-6176bde25e4e",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "25872648-f679-4715-953e-6d9faa71135a"
        },
        "item": {
          "id": "8b39b654-477d-487c-b94b-996640f72eaa",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "97038b22-c994-433e-9e4b-ea1b0347bcaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb6a9cf-c504-412b-bf1b-dff5ab7ceea9",
        "cursor": {
          "ref": "a60be3d4-abdc-4fc9-ba9f-221f11e43534",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "19fb45b4-3f9f-4fb7-afd1-5ffcd094fde1"
        },
        "item": {
          "id": "5cb6a9cf-c504-412b-bf1b-dff5ab7ceea9",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "fa0b371f-58e8-4e5a-90b6-6e82e855f482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0050607-4766-45e7-81e5-2d16232be22a",
        "cursor": {
          "ref": "7d9d139f-952a-49d4-b9cc-ad1b459a7ae9",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "956e51d7-b6ec-40bb-91ad-4f5ab68e9ac6"
        },
        "item": {
          "id": "f0050607-4766-45e7-81e5-2d16232be22a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "8e9c37c5-771e-4013-8156-d0afcdfea18f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb44e0f-d063-4113-9045-cf750b4db339",
        "cursor": {
          "ref": "ee94e0c8-8247-4c6f-8099-ce392be54c5f",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "013c3fd9-4208-48a5-8357-0c423747ae58"
        },
        "item": {
          "id": "3bb44e0f-d063-4113-9045-cf750b4db339",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3c2514ce-8217-4448-8520-c61e70172dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d0acf0-a165-4893-9a36-189e324ceb80",
        "cursor": {
          "ref": "44dd54b7-5e26-4623-ac1f-14db67d4c1b2",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b81c294b-cd06-41bf-b49c-712ab0155263"
        },
        "item": {
          "id": "54d0acf0-a165-4893-9a36-189e324ceb80",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a7212a5a-f1fb-485c-a1e9-95cb36360a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3cfa46e-5208-4c78-b372-2b03fc7a42be",
        "cursor": {
          "ref": "6515b816-2891-4bac-b777-e14f4e30e226",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "83e1dbb6-a56d-4521-86ca-07d79d57b865"
        },
        "item": {
          "id": "b3cfa46e-5208-4c78-b372-2b03fc7a42be",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "515c34ea-d075-415e-891e-169765067f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e52da76-f976-47e4-a807-dbde7caca71d",
        "cursor": {
          "ref": "1806b3fe-6fb3-472b-ba88-d2e7eb6e70ad",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2b09fb5a-d5e4-45cf-8821-5bdeaaac0ab8"
        },
        "item": {
          "id": "9e52da76-f976-47e4-a807-dbde7caca71d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "0adce127-9016-4159-97e6-fa0fb64bb1d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d0055c3-7a79-40c8-90b0-b4c72864716c",
        "cursor": {
          "ref": "d9010976-f335-4882-851d-fe06b8bece41",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a0bda156-20a5-4173-b1c6-e6ce755c472f"
        },
        "item": {
          "id": "7d0055c3-7a79-40c8-90b0-b4c72864716c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "dd378acb-090a-4a9d-889f-904ae3a02f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3913e52-82a3-4ee0-84d0-016d80ae06e8",
        "cursor": {
          "ref": "faa381c4-4bc7-4ac0-b574-21a7eff3ef3f",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "425e24a2-7f19-4a30-8d7b-7898cb95bbee"
        },
        "item": {
          "id": "f3913e52-82a3-4ee0-84d0-016d80ae06e8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f7ff873a-6222-432f-b81b-5bc97fa8874d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "755e1727-e3b4-4d39-b1ff-0b1e06310946",
        "cursor": {
          "ref": "2307e9e7-89dc-4990-9556-2f3dc916d4c7",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6dbdaec2-2d0b-46d9-9da5-a1cc1001a910"
        },
        "item": {
          "id": "755e1727-e3b4-4d39-b1ff-0b1e06310946",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ba46fb8f-6076-4f8c-83d2-c95236d57daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd7d21d-0577-40d8-bb3b-6f228d7d3307",
        "cursor": {
          "ref": "2e179d36-816f-4dc6-ba56-5a15da1ace9e",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "fccd33e0-5b9f-43d2-ba5c-176743ae2afc"
        },
        "item": {
          "id": "1cd7d21d-0577-40d8-bb3b-6f228d7d3307",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "bee9be2c-5067-4ae7-9752-046ced59ecdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c0acbbf-2950-40a9-b167-44925def43fd",
        "cursor": {
          "ref": "41070ac1-3cc3-4a2b-a6bd-906f938796ec",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "46622339-defe-424f-b6ad-4a89b41cc287"
        },
        "item": {
          "id": "9c0acbbf-2950-40a9-b167-44925def43fd",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "3cba049f-aa5e-4850-9c51-d477e2aa4699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc35dd9-a3a0-4582-b85b-1612c13c9a5b",
        "cursor": {
          "ref": "893dc190-c96a-43ba-8115-be8e1e3bcb84",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1cdbcd19-6e5a-4a85-96ca-829d5d9d7723"
        },
        "item": {
          "id": "5cc35dd9-a3a0-4582-b85b-1612c13c9a5b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "daed5ea2-1150-46b1-b5b7-ab435161f6e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d55aad5-15f1-43fa-abae-322e57c4c9bc",
        "cursor": {
          "ref": "61308122-1246-479b-8b1a-1e911d59d88a",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3bea6157-5391-4f9d-9b3b-742ba568a1c3"
        },
        "item": {
          "id": "6d55aad5-15f1-43fa-abae-322e57c4c9bc",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "65420e24-59da-468a-981c-b4f5788306ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a31318b3-d888-4de6-8749-76934c27b9dd",
        "cursor": {
          "ref": "e1712284-7bb3-4332-bc6d-b33329fbd0a1",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3a0e5c3d-e1c4-4171-bacc-799b360439e1"
        },
        "item": {
          "id": "a31318b3-d888-4de6-8749-76934c27b9dd",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7b73a061-8806-4796-bc67-0c7a6caf0851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d41d6c7-874d-40c5-b507-e775c2c6bd61",
        "cursor": {
          "ref": "fb30676c-61c5-4f0c-b32c-3b091c3865b2",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "3ec4b9f6-3bac-473d-b511-47fe35928fd6"
        },
        "item": {
          "id": "3d41d6c7-874d-40c5-b507-e775c2c6bd61",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "157cb8eb-40d3-43f1-85e5-bf5313f99bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5807dd9-afed-4df7-9276-94c14aa23cde",
        "cursor": {
          "ref": "958b07df-7d03-4736-974c-79ed897746e9",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "7f0b7454-ec96-4762-96d7-861da9d6292c"
        },
        "item": {
          "id": "c5807dd9-afed-4df7-9276-94c14aa23cde",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "04a2b047-1578-4606-9600-357925772dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f27e8368-cf2d-469f-8f7f-89a8f3217f28",
        "cursor": {
          "ref": "83bfe0fc-2513-4dcf-8e15-00080a748ade",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "fd1bf9ce-e10a-4fb9-b0e4-7c5478588c49"
        },
        "item": {
          "id": "f27e8368-cf2d-469f-8f7f-89a8f3217f28",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "4c8f08a3-0a55-40da-8933-8072ac4ff853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c3d487-0d47-465c-8882-169099991c85",
        "cursor": {
          "ref": "a7a4ab4a-748d-42ae-8343-4c55a5dd0db1",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6ee71dae-696f-4c48-92da-682e75f078c3"
        },
        "item": {
          "id": "62c3d487-0d47-465c-8882-169099991c85",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "81a65818-8eca-4ddd-ba6b-e6838b5e7d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2be916e9-a9a4-4473-a0fc-ce98280aa4a1",
        "cursor": {
          "ref": "b14704c0-18cf-4d15-be03-0a6a963ded5c",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e319f6df-006a-4371-b892-16a7cdcb707f"
        },
        "item": {
          "id": "2be916e9-a9a4-4473-a0fc-ce98280aa4a1",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "b73b02bf-25f8-4721-b9a7-e9cdde8ef91e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea92b9be-1ca9-4550-828a-c2cf2739958b",
        "cursor": {
          "ref": "47564da8-6d57-40dd-9cbc-fd55b3c2cf30",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "72ec0dcf-4ef5-4fc2-9f88-796cf1c356a2"
        },
        "item": {
          "id": "ea92b9be-1ca9-4550-828a-c2cf2739958b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "85536c2b-fa89-4c98-8119-4833fd6f8430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3fa9a0e-268e-4119-bced-6ade13b64f59",
        "cursor": {
          "ref": "89e4f42e-36bf-472b-ae3e-46a33d4c45b8",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "4a2e72cd-a186-4862-9061-cc42f8c01689"
        },
        "item": {
          "id": "a3fa9a0e-268e-4119-bced-6ade13b64f59",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a0c15405-d4a5-49f2-b194-970cca7c9ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf52d03-5810-4e4c-afb7-c36454f233fe",
        "cursor": {
          "ref": "9fcbaca7-9285-4f74-b4b3-4600c9253c54",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c9e1a2ac-39e0-4682-8d11-099933cd95fe"
        },
        "item": {
          "id": "fcf52d03-5810-4e4c-afb7-c36454f233fe",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "28b2809f-be43-40b4-8615-24d62ea32e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b309aea8-fb49-4d0f-bd30-36dbf8445c6f",
        "cursor": {
          "ref": "ae50e4c0-a04e-42de-8a88-2482f60d2fd9",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b15ea5e4-ab50-4435-94d2-ae4a8cffdd9e"
        },
        "item": {
          "id": "b309aea8-fb49-4d0f-bd30-36dbf8445c6f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8f192db8-f817-4760-a9d4-685d4376db01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c00ffa-a21a-47f1-9f30-0ea4d3bb6e40",
        "cursor": {
          "ref": "d75f9cf7-cacb-4ccb-ba9c-dcd5063a5ac3",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "761a9c2e-2558-4fbf-a313-718fa12ed818"
        },
        "item": {
          "id": "68c00ffa-a21a-47f1-9f30-0ea4d3bb6e40",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "292b89e4-67c9-4f85-a3a1-023553f6a69a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde698bc-41d1-4c14-aadb-bef6aea99ab8",
        "cursor": {
          "ref": "907c9796-1c4b-4a9d-b5dc-32e7ea32fa0b",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "88ef42be-858b-4314-8109-c91b785dab09"
        },
        "item": {
          "id": "fde698bc-41d1-4c14-aadb-bef6aea99ab8",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "2fa845e2-fda8-41b0-af94-94330515a1cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f66f81d-a53b-4944-bce4-09ab3a0a5b92",
        "cursor": {
          "ref": "55e93c7a-4422-4d40-aace-97addfe44fa1",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "66c69fab-620f-4079-b329-b09f50ade2ba"
        },
        "item": {
          "id": "4f66f81d-a53b-4944-bce4-09ab3a0a5b92",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1a8669ee-5ae9-4e3c-b96c-b3060372ea6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "949b3ad7-d203-4d5e-836a-0e4431830b08",
        "cursor": {
          "ref": "c0a7d5d7-82c7-432b-9c3d-a4d1374c967f",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5d199768-dc46-478a-abbc-c797565415f2"
        },
        "item": {
          "id": "949b3ad7-d203-4d5e-836a-0e4431830b08",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a596a98f-55ed-489f-bf62-13a41e5a599c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5288bad5-c81e-465f-b22a-d0bb4d8c593e",
        "cursor": {
          "ref": "89ff5b6a-7997-463c-aaf9-edd41a947d8f",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "84a2203d-208d-4415-9d24-84324935a561"
        },
        "item": {
          "id": "5288bad5-c81e-465f-b22a-d0bb4d8c593e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "5f05c1ce-a41a-4256-9bc6-eb132a335de9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd7a07da-a5e6-4076-bcef-38035eb46814",
        "cursor": {
          "ref": "5afc33e4-bf4d-44e7-9693-b14ea9d6f8f7",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "066db034-199f-40de-b2ef-df19ad9eea87"
        },
        "item": {
          "id": "cd7a07da-a5e6-4076-bcef-38035eb46814",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "5c3298ab-31f1-48c0-bdd1-11bf26682e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc6a710-4096-4cca-92b4-6941fd27c777",
        "cursor": {
          "ref": "a2687e9a-9ccd-48dd-8be2-76a48767cc1a",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "803259bd-617a-42aa-bfd4-ec7f24192bec"
        },
        "item": {
          "id": "3bc6a710-4096-4cca-92b4-6941fd27c777",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e5fe56a0-ab24-4347-a849-b26df266d6d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56ee293-7513-4a56-a07f-736daf193b29",
        "cursor": {
          "ref": "83eb4ba8-faa4-431b-b9d2-4fa126b90387",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "8eb9ea7b-5ad5-4cc3-b706-312b7957c6d4"
        },
        "item": {
          "id": "a56ee293-7513-4a56-a07f-736daf193b29",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "60051857-bf81-4883-aa50-045bbf920e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf121c6-03d1-486f-a009-e49cdf37a8aa",
        "cursor": {
          "ref": "5d5a9201-194d-4559-9e3b-24566c6a6789",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "bf81cf9d-308b-4eae-a4af-937ab8f4e3b9"
        },
        "item": {
          "id": "eaf121c6-03d1-486f-a009-e49cdf37a8aa",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6dc403d6-47f4-4c46-a17c-9e5cffdd8ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e501a62d-3819-43a6-85d1-3c3edee360ed",
        "cursor": {
          "ref": "ae7d4ff7-ba3c-47fb-be19-6bd061aa9665",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9c1feef3-6633-4ed7-89e5-f90cd20280c4"
        },
        "item": {
          "id": "e501a62d-3819-43a6-85d1-3c3edee360ed",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "bac68dc9-5d06-41de-b7c9-01404a43b27a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d83dac89-9604-422a-9819-a590582433f3",
        "cursor": {
          "ref": "b503c746-7705-4d9b-b99a-95e76ff41c79",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7cdadb99-1848-4996-a8cb-fa29ae3fae2b"
        },
        "item": {
          "id": "d83dac89-9604-422a-9819-a590582433f3",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e0cfb3d7-5eb2-4c3f-b33e-81e22dbf204c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edddd6be-537e-459d-b657-551e8025c928",
        "cursor": {
          "ref": "0b1a36e4-9df5-48b5-9dd6-fc969dbbbfb1",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c933d56b-51fc-476d-b317-cad9dfce1ccb"
        },
        "item": {
          "id": "edddd6be-537e-459d-b657-551e8025c928",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "15a4399a-33d1-4cf3-b74c-cedf619b1c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad54ad09-cd20-4815-a5ce-0b7bed8e972f",
        "cursor": {
          "ref": "b447c70b-d2ce-4cf1-b22c-fcc17bde15b0",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "2ae81f33-9edd-48ad-ab17-614dd24ea617"
        },
        "item": {
          "id": "ad54ad09-cd20-4815-a5ce-0b7bed8e972f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b82d2f57-9c44-42fc-aee6-23f58b745d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950d7b91-9cc7-4bf8-aad9-6b9547539d36",
        "cursor": {
          "ref": "adc46085-3c8b-4e24-8a94-e54d5caa5874",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6a8b27d7-4918-48db-a1db-ea6a5d1cbbae"
        },
        "item": {
          "id": "950d7b91-9cc7-4bf8-aad9-6b9547539d36",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e4b119df-581f-4ca8-8605-c11b64256393",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6f9469-a715-4085-82a8-624abfa13a5c",
        "cursor": {
          "ref": "d84dc942-4f0e-4112-bc4c-3b75c39453da",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b5ab6c63-64e7-4754-b6a4-d8bacf0e7ede"
        },
        "item": {
          "id": "3d6f9469-a715-4085-82a8-624abfa13a5c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "7e20467a-2e1c-485b-940f-20d084b76e5f",
          "status": "Created",
          "code": 201,
          "responseTime": 7063,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c4148a-c904-45cb-8210-faecff87c7f7",
        "cursor": {
          "ref": "0e81e467-a571-4147-85b0-bd881341c977",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9fbdbe1d-5416-4297-9845-ef982484e4d8"
        },
        "item": {
          "id": "90c4148a-c904-45cb-8210-faecff87c7f7",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "48ee142d-ad08-43f0-9622-ad73b8a47ba2",
          "status": "Created",
          "code": 201,
          "responseTime": 6992,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "125cfc89-3dfa-4a7b-8795-2fbc708008ca",
        "cursor": {
          "ref": "2564da54-36d1-4a7c-99c4-8777a3db6992",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9efed15d-d539-4c15-a2f9-eda127e15292"
        },
        "item": {
          "id": "125cfc89-3dfa-4a7b-8795-2fbc708008ca",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "3d3c9e3c-a517-44bb-99a3-d87d50fcbdd5",
          "status": "Created",
          "code": 201,
          "responseTime": 6027,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "544216ea-ced0-4b5c-aba3-28f1d03f11df",
        "cursor": {
          "ref": "c517a225-4140-4bba-908b-ba641b4b10ab",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "394d88c1-10fa-4664-8eb5-1efa8a5ed490"
        },
        "item": {
          "id": "544216ea-ced0-4b5c-aba3-28f1d03f11df",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1e787ac4-8f19-45bf-b57c-7cd51866bd06",
          "status": "Created",
          "code": 201,
          "responseTime": 6564,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a15e727-bfc7-4be4-9fce-055a65f3fdb3",
        "cursor": {
          "ref": "da6d7cee-4b52-4ccd-a95e-c0c161256f84",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "223d16aa-1ad9-4519-84da-df9760905fab"
        },
        "item": {
          "id": "6a15e727-bfc7-4be4-9fce-055a65f3fdb3",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "59a6fd04-369c-403b-932b-2ab836c0283a",
          "status": "Created",
          "code": 201,
          "responseTime": 6516,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "099b330e-5470-47e7-b5ab-fad517d42275",
        "cursor": {
          "ref": "f52996be-960d-4787-9b20-783aa0ffd739",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "52cc971a-2b26-4a38-946b-1dc00fc5a95b"
        },
        "item": {
          "id": "099b330e-5470-47e7-b5ab-fad517d42275",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b6c1f49a-0aca-4251-af28-2840c7f756b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "4c8dfb35-6394-48c5-82b7-8f31ba1c14a3",
        "cursor": {
          "ref": "ef7b9344-4099-4f28-9c4b-d416800be477",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "fbeb93d5-a76e-4501-9880-dcc73feaad48"
        },
        "item": {
          "id": "4c8dfb35-6394-48c5-82b7-8f31ba1c14a3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a55da260-e764-45c9-bb09-77305f439f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71487993-e15c-4dce-8e39-b1675bc8cfb2",
        "cursor": {
          "ref": "f9f29c84-9d69-4a6d-82d5-97c10cbcdf1c",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d95074f3-e7ac-410e-989a-646d865c4713"
        },
        "item": {
          "id": "71487993-e15c-4dce-8e39-b1675bc8cfb2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d218f7f2-fdeb-4dc8-9203-499234ec6712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df3817a2-f31e-4f63-b26a-3512b585dba3",
        "cursor": {
          "ref": "b6d4d023-debd-486c-9f68-1d48c0daa773",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9914910e-2eb9-4c39-818b-9445b6a6bc1b"
        },
        "item": {
          "id": "df3817a2-f31e-4f63-b26a-3512b585dba3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2a3f5062-62d8-4734-9a03-e9beec1f3429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409da625-15de-4190-b0d2-4c939659c9d8",
        "cursor": {
          "ref": "aad6ff24-f539-48bf-9f91-ee61956c7ae9",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "05d30510-b4e5-440c-bf74-6efbdc471161"
        },
        "item": {
          "id": "409da625-15de-4190-b0d2-4c939659c9d8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "853b73c3-9e37-46d2-99fc-51088a3656cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c767a06-3f7f-46f7-abb8-daf474221978",
        "cursor": {
          "ref": "65acecea-9720-47fe-85ec-1f0ccbc0f2a2",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "4606dcbd-ff8e-455e-840c-2a8790762123"
        },
        "item": {
          "id": "9c767a06-3f7f-46f7-abb8-daf474221978",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "50590295-a7c3-4995-a8f8-f9c4cd09497c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e172e59-b4e6-48b1-9845-c4c5886216bc",
        "cursor": {
          "ref": "932720c2-db37-4f2e-968c-c5b3ba0c4f62",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "da0f2562-7ed6-4532-b755-cd6698f39ae5"
        },
        "item": {
          "id": "5e172e59-b4e6-48b1-9845-c4c5886216bc",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b102c270-b65e-49f8-9a9c-3a2e7d986d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a96e99-46ab-48a7-838f-cece5c83a6c0",
        "cursor": {
          "ref": "6d2a67bb-8e93-4c81-bd40-3d174a39b35d",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "009cac8c-d1f5-4eab-bf0e-71ae3c1af4e2"
        },
        "item": {
          "id": "98a96e99-46ab-48a7-838f-cece5c83a6c0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "bb6ae5f1-b3ec-4413-96fa-62cda696fc21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ffa6179-fafd-4b17-bc70-422006430215",
        "cursor": {
          "ref": "0b2403e1-1627-4bc6-96ce-4eabf56d067f",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f6fa5db3-26fd-4df8-8b99-d8136084e1e3"
        },
        "item": {
          "id": "1ffa6179-fafd-4b17-bc70-422006430215",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "67cc044c-1e8a-4768-8d52-573376db3517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb8336d9-470e-4011-bb69-57b18d8f9b4c",
        "cursor": {
          "ref": "89a1407e-4db5-4ba6-841e-ccf99a9d0fc8",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f67f1700-b6ed-4127-9f75-7c67031798fe"
        },
        "item": {
          "id": "bb8336d9-470e-4011-bb69-57b18d8f9b4c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2fedd21f-9aa7-439f-b5c7-e7915eced860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5d6027-5e72-41c8-ae4a-4a0b65b83a9d",
        "cursor": {
          "ref": "e5127a5c-64e6-4b20-9aad-68627dab1447",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e04ad77a-e997-4a81-987a-82f3674aab37"
        },
        "item": {
          "id": "7f5d6027-5e72-41c8-ae4a-4a0b65b83a9d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f3d05cb1-6d47-4ae1-b993-9cfa6a5555be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2739bbda-d4b4-4379-bdb7-622b8578516b",
        "cursor": {
          "ref": "a7519aab-8783-4b50-96cd-794e9ee7134b",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "64b3e810-627b-4f60-9a92-6c431c689d4c"
        },
        "item": {
          "id": "2739bbda-d4b4-4379-bdb7-622b8578516b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "97c06ea3-d108-433a-a0d8-73bf2c53193c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e066383-6535-4bbd-b3ba-1fa3de35e3e0",
        "cursor": {
          "ref": "c06b51bd-693c-42c0-8346-a63bd35203fb",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "89c636b0-186a-466c-9140-5704c5565e3e"
        },
        "item": {
          "id": "9e066383-6535-4bbd-b3ba-1fa3de35e3e0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "092b582d-d476-4e89-83cc-b27377b38766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22790629-c0c6-42c6-a3f4-d95e4b979ac3",
        "cursor": {
          "ref": "905ace1a-d6b3-4221-885e-3daf481f7544",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "8411ae57-b3b2-42b5-9fcf-2b161072063a"
        },
        "item": {
          "id": "22790629-c0c6-42c6-a3f4-d95e4b979ac3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3bc381b5-bb67-4a36-9b6c-b4fc3c73dbfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf0c746-50de-4f17-9f3f-e5523fb4278b",
        "cursor": {
          "ref": "f9d24be3-f304-4308-8513-737877915e25",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "42c87189-b9db-4d84-aaac-32255857c6f6"
        },
        "item": {
          "id": "5bf0c746-50de-4f17-9f3f-e5523fb4278b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "11dff006-71aa-41d1-acbf-ff76c843fa40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fbee2dc-fa57-4a9e-a652-a05245e44fca",
        "cursor": {
          "ref": "0c322869-5bd6-4833-ba78-8a08596c73d1",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9b299693-df63-40ca-a4d4-4ee75dd24646"
        },
        "item": {
          "id": "2fbee2dc-fa57-4a9e-a652-a05245e44fca",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b035b997-a989-4095-8ed6-7b57ac237673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c130589-bc0e-4347-ad82-9b552b49acd9",
        "cursor": {
          "ref": "1f4bf473-d3a2-4a26-8bac-edb28aa5873d",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "deba1c11-0a58-4c8b-bcd5-7bfc49e9a2cd"
        },
        "item": {
          "id": "0c130589-bc0e-4347-ad82-9b552b49acd9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "76766cbd-dc88-4c01-ae1b-ed2fff9f3e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19788395-fcad-4cc0-a711-545e463ef037",
        "cursor": {
          "ref": "04d389c8-c867-425c-b248-d2e51293466d",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1b85036e-9434-4c3c-bf77-48ccb56cfb08"
        },
        "item": {
          "id": "19788395-fcad-4cc0-a711-545e463ef037",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "eb12f976-1663-430c-a529-a5e6cb536e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef5ac3a0-b93d-4749-81b2-845b28899ef3",
        "cursor": {
          "ref": "99c3afb4-7e6f-42f2-875a-d7f6157b2e11",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ee0c5be0-b36c-4409-bd3b-ae0584615f9d"
        },
        "item": {
          "id": "ef5ac3a0-b93d-4749-81b2-845b28899ef3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7db63a8a-add7-436f-9aeb-511944ec1aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0076b1af-2b65-4393-9f93-f811f0b90d76",
        "cursor": {
          "ref": "94d62a56-9ee6-47e0-a060-d13eaa56f474",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "57465e58-5504-4a80-a4e0-7cbd1a392424"
        },
        "item": {
          "id": "0076b1af-2b65-4393-9f93-f811f0b90d76",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8a10a0cc-198b-41e8-b9b9-041959ee21ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59192e67-9a6c-476e-83f8-a4b513ddba89",
        "cursor": {
          "ref": "2300c078-41da-4c22-9f91-2cd191ecb2f8",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "8f1fe6da-5cf0-4c25-9e7f-3a6da36c0f4d"
        },
        "item": {
          "id": "59192e67-9a6c-476e-83f8-a4b513ddba89",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6000f11f-423e-44a0-87c7-f623db6d6614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729a9bed-9cd7-4562-8343-1f74a618aaf0",
        "cursor": {
          "ref": "22e9e953-f76a-40f3-9655-174232659128",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e53c447c-0cf0-4c5a-a0c0-3ce2940a855a"
        },
        "item": {
          "id": "729a9bed-9cd7-4562-8343-1f74a618aaf0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c5bfe15b-4812-4727-92c9-7157f7aef8b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9075862e-36bc-4f01-80fc-c938d941e129",
        "cursor": {
          "ref": "63a9b30e-0b3c-43be-a8d4-1f42bb89ab55",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5d8789f1-281b-481b-af79-cdf6547d1d1e"
        },
        "item": {
          "id": "9075862e-36bc-4f01-80fc-c938d941e129",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "cc1e995f-c3af-4849-b24c-bd42a2817426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc9107b-ff34-4b94-b989-a85b7557e6e6",
        "cursor": {
          "ref": "b12f2ac9-0511-4b58-9468-f0219fc7e6b8",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "5b945ec8-8070-427f-8c5b-bffa5c95b0de"
        },
        "item": {
          "id": "ecc9107b-ff34-4b94-b989-a85b7557e6e6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0ec6226c-166b-4c3c-8af1-7a9774119798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b73b516-ea7a-4aff-95f6-8721615ba614",
        "cursor": {
          "ref": "640b6f62-16fb-409e-b7af-b19a10586b74",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "36e1ab90-b56c-4047-ab8c-687345151f14"
        },
        "item": {
          "id": "2b73b516-ea7a-4aff-95f6-8721615ba614",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b2d44bda-1caf-45ef-8e47-9f429b5863ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da16113d-beaa-4828-839f-d4c33b3c08f4",
        "cursor": {
          "ref": "f26ef2fe-d948-42ae-86fa-4b4e2f9a76f3",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "92896488-ea75-452f-9c6f-737290a396cd"
        },
        "item": {
          "id": "da16113d-beaa-4828-839f-d4c33b3c08f4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ea2282a9-28e6-42a9-ab30-81f925735845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cfdc4d0-9d86-49ca-a931-4442dee9be2b",
        "cursor": {
          "ref": "bc940b47-bbc0-4d6f-baf0-321f6764aff5",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "be690c20-5465-4031-b0a3-b2139902367c"
        },
        "item": {
          "id": "4cfdc4d0-9d86-49ca-a931-4442dee9be2b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bbf0b9ab-03fa-4607-a2d4-0c515170fe6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d07b87-e8f2-46e1-bb43-dd50cfed3a8d",
        "cursor": {
          "ref": "84b5e8e6-c434-42dd-a613-c0147f694278",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b0130d96-d1a7-4763-bb12-253156a6e613"
        },
        "item": {
          "id": "66d07b87-e8f2-46e1-bb43-dd50cfed3a8d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "cf403d0d-c71e-4554-9a8c-9527f619f352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c2eab3-50ae-4087-9684-22e9be39c898",
        "cursor": {
          "ref": "d50934d2-b221-439a-a50a-c12894928320",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "78e6b12c-748d-4548-a661-b2723b6fdd5c"
        },
        "item": {
          "id": "17c2eab3-50ae-4087-9684-22e9be39c898",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3aa4ac83-516f-43fa-8373-d143bfc9107a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e2bac3-8561-430e-a876-713469abac74",
        "cursor": {
          "ref": "5e9a0ca5-f2e9-4d6c-9b1f-8569079d44d9",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e9247622-2ecb-4b96-b81e-0e5bb44ec11d"
        },
        "item": {
          "id": "34e2bac3-8561-430e-a876-713469abac74",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ac47e397-b32a-49b6-b886-589a0f7e499e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20937993-c276-4d5f-aa6f-9beb2ead084c",
        "cursor": {
          "ref": "17aeb775-306d-42be-97d1-e35057065156",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "005efe3a-ca57-4d31-bc43-12da6170c9b4"
        },
        "item": {
          "id": "20937993-c276-4d5f-aa6f-9beb2ead084c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "15d18ad5-2aad-40c3-ace3-b9aff9e1b424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5635b6-5b91-418e-9a17-494f42eaa476",
        "cursor": {
          "ref": "5dc33f1b-be6d-4d90-8c18-3eb2a21f6c8a",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e663d51d-d963-4658-b45d-34f5d95d62b1"
        },
        "item": {
          "id": "cb5635b6-5b91-418e-9a17-494f42eaa476",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2142788e-25a8-40e3-a0a8-a745779f40ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8ac94d-9858-4494-a526-b47f2f4340c5",
        "cursor": {
          "ref": "dbdffe44-43bb-43a0-b0a3-88d500523ea9",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2436414d-86ee-4476-9db4-b8e95c986adf"
        },
        "item": {
          "id": "ab8ac94d-9858-4494-a526-b47f2f4340c5",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "55d2e636-823a-4faa-af0f-3742afe8ec9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "515dbb17-a344-4720-9f4a-775c1bf991d6",
        "cursor": {
          "ref": "d6b56b0d-6278-47d7-be23-c3721b518497",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3d95b051-1b56-4953-8e47-ae9dc08dffd3"
        },
        "item": {
          "id": "515dbb17-a344-4720-9f4a-775c1bf991d6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "32756468-a31c-4aac-800b-a8be3e41daaf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "963ed945-9add-4e63-83f8-1ed60298b9a2",
        "cursor": {
          "ref": "63edc354-abca-46c8-a1b6-823f89b42547",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "59b2991f-66f4-4a02-841b-a9d9b1d4d6e7"
        },
        "item": {
          "id": "963ed945-9add-4e63-83f8-1ed60298b9a2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4e08e98f-d9f3-44d1-8448-2a3382edce09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1880bbf-0c9e-4abc-a264-601c3bce8e08",
        "cursor": {
          "ref": "5c3b51b5-e77b-488b-b295-30fe18c8305e",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1bc999ad-7c71-479f-88d1-f483791f7a32"
        },
        "item": {
          "id": "e1880bbf-0c9e-4abc-a264-601c3bce8e08",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "20fa721e-1918-4101-8a0d-c529b5eadbfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7cd313-a87c-4529-87f5-e4835cac870c",
        "cursor": {
          "ref": "a57f3dcf-32e4-476f-b060-9bcdb98adc04",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ea81b580-a34d-4b3a-aab7-4f438a574350"
        },
        "item": {
          "id": "1b7cd313-a87c-4529-87f5-e4835cac870c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a5d93ffd-5f8b-48e7-8d4b-a04bbec59395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bcbca17-2013-41e6-8584-ffd22ad0e8f7",
        "cursor": {
          "ref": "1145591f-31a7-4792-8b7d-4a8201d7b31e",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5876ada1-e6fb-43a3-9aca-b0fb325a757c"
        },
        "item": {
          "id": "9bcbca17-2013-41e6-8584-ffd22ad0e8f7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f5ff308d-b21f-4054-951f-83e0f34e2abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef42cd81-590d-4813-853d-78bc68bee49a",
        "cursor": {
          "ref": "13fee2d4-1370-49c6-89d7-f0b659185f14",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b762c33c-ae6c-414f-b89c-d75d9dd8f11d"
        },
        "item": {
          "id": "ef42cd81-590d-4813-853d-78bc68bee49a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1fff0e31-d443-4d69-a63e-090079650797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9bdc456-6f07-4c65-9a34-d6b770a4c5be",
        "cursor": {
          "ref": "c4aab3ad-e398-4f2c-86b8-34f7e990a335",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "085d191f-71cd-44c8-a3a5-64bfac1e0bf4"
        },
        "item": {
          "id": "d9bdc456-6f07-4c65-9a34-d6b770a4c5be",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7078859c-21c0-40e4-a371-44799eb143b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef5b6af-1b7d-4fbc-92fc-a2a4429b98cc",
        "cursor": {
          "ref": "5fe67124-d59a-4f21-91a3-02c07e8f0b63",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "73987f09-5cf0-4765-8e45-24538857f6e4"
        },
        "item": {
          "id": "fef5b6af-1b7d-4fbc-92fc-a2a4429b98cc",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "998ce068-a504-4140-baf5-131c46083183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee820c44-0974-482f-a9f9-73451a2a7932",
        "cursor": {
          "ref": "5324e0d2-ea0a-447e-a052-bfc72ff1c364",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "785c1e5e-3fbf-44b0-b6fe-75aaf5c62437"
        },
        "item": {
          "id": "ee820c44-0974-482f-a9f9-73451a2a7932",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c82442cf-fa1d-49d2-8c27-e3bd90935297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb062b4-a757-4a02-a194-17e904415e24",
        "cursor": {
          "ref": "0815b06f-170e-460d-b3bc-3d8c223ea87f",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "000f56a9-6841-497c-b2ce-4e9c921f78fb"
        },
        "item": {
          "id": "0cb062b4-a757-4a02-a194-17e904415e24",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b775ed1b-102a-4325-86fa-1b0191373fed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a183a8-9288-4cd1-ada7-fe98201dc301",
        "cursor": {
          "ref": "d20a3a26-cbd0-42f5-8533-b33816f7c1f4",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "795ca6bc-10e5-4b40-9135-1f408b921dbd"
        },
        "item": {
          "id": "67a183a8-9288-4cd1-ada7-fe98201dc301",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3c304663-a48b-495d-89c8-17b7aef679e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ffd531-924a-470f-a980-170e37013d54",
        "cursor": {
          "ref": "6d92cb7e-a298-469d-9ed3-c5234111513f",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "8fb9f34d-6271-4290-b673-e84a0b16bc26"
        },
        "item": {
          "id": "b4ffd531-924a-470f-a980-170e37013d54",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2e3f294e-fbbe-4faf-b1aa-70eb74e3763d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2003a7-4a67-45a6-8454-c0b5d23c0812",
        "cursor": {
          "ref": "da4fcf5c-3869-4ae0-a2a2-7e422cbb4745",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ec009d2f-648b-4ea9-97e0-9930a959c170"
        },
        "item": {
          "id": "0c2003a7-4a67-45a6-8454-c0b5d23c0812",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ac9bb0e6-56c3-481a-9362-95322de280d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d0e850-61bb-402c-beb0-995b3e715520",
        "cursor": {
          "ref": "587533dd-521a-498f-be53-f3b04efaae3b",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "fd804a53-7be4-4f56-9912-eb4542d15362"
        },
        "item": {
          "id": "67d0e850-61bb-402c-beb0-995b3e715520",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6c68b4e1-e29c-491c-8393-ed1d5d146aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff2d8e7-6d8e-4e31-a62c-58f29f5c22ec",
        "cursor": {
          "ref": "66c3a124-97a5-45c0-b380-c764a0a82cc9",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f519fe59-46b5-4e8a-9a42-b3167136527f"
        },
        "item": {
          "id": "fff2d8e7-6d8e-4e31-a62c-58f29f5c22ec",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c4066eaf-0482-45a8-9046-4a7be0a6c8b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d07e9f-d6dd-4df7-ad52-5cd4e53b18c3",
        "cursor": {
          "ref": "c3bf72c1-dc68-4fdd-add4-f37380189e1b",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "06ef48b2-3693-4acd-b9bb-0ef81f8cb126"
        },
        "item": {
          "id": "d3d07e9f-d6dd-4df7-ad52-5cd4e53b18c3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1aef4d54-20ab-4631-97d8-fae2a596883b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b0d9a4-0f12-45d0-b3ec-9bd972e28f4b",
        "cursor": {
          "ref": "7fd1246a-d834-4ee3-b959-3466e6bf0017",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "dca57676-1d67-44f2-9fb6-442ab3c87e5c"
        },
        "item": {
          "id": "b7b0d9a4-0f12-45d0-b3ec-9bd972e28f4b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a8140904-7fbd-45f8-90b0-e0a910a51a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b82837b8-ce8b-4802-84fd-5bb1f5aea0e8",
        "cursor": {
          "ref": "e89f958d-67e1-45cc-a162-f23d008702e3",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b223060a-9cdc-4197-a01f-e97d41683f9d"
        },
        "item": {
          "id": "b82837b8-ce8b-4802-84fd-5bb1f5aea0e8",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b186ff14-10b0-4732-a55c-36f967b339c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "657ab912-64ac-4e85-9c2d-311915a17760",
        "cursor": {
          "ref": "3bcc79ad-ee8c-4f57-adc8-2cf35d9fde31",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3515f052-3f00-4440-beb7-2e7dfacffe17"
        },
        "item": {
          "id": "657ab912-64ac-4e85-9c2d-311915a17760",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2fe5a508-c515-4bba-9f06-b3bcad2bfdb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f68f10e5-72b5-4ca3-b93a-daee8c34a3d9",
        "cursor": {
          "ref": "b23b9e2f-b85b-4cdb-adc6-7008e0114d4c",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "86f5e643-4b05-41fe-af01-5fb28a504061"
        },
        "item": {
          "id": "f68f10e5-72b5-4ca3-b93a-daee8c34a3d9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f60db420-ac36-44a6-bc6b-41d86a51bcea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72abf06-d929-4c2d-a217-4250842c627e",
        "cursor": {
          "ref": "2803c0f3-12f6-4339-a465-191703e7d547",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "234ea09e-f84d-4309-92c4-54f432476aa0"
        },
        "item": {
          "id": "f72abf06-d929-4c2d-a217-4250842c627e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c542b3d9-8501-4c0f-808a-1769cec5f698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5708ad-17a6-4ad9-b8bc-10ba49320655",
        "cursor": {
          "ref": "fd9a5c53-24ca-4498-ba27-04701ab2efca",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d7bb0126-dce3-4093-af10-bb525bd4b57b"
        },
        "item": {
          "id": "2a5708ad-17a6-4ad9-b8bc-10ba49320655",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7d8902ea-3de2-4132-b63f-101da1d03ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58fef7f2-ff14-45f8-ba99-f807f350a82b",
        "cursor": {
          "ref": "a647cc07-3482-45be-8304-060b162910f9",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e0c3174a-d2ac-4844-82bd-6d34768dbaa7"
        },
        "item": {
          "id": "58fef7f2-ff14-45f8-ba99-f807f350a82b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d76181b1-ed21-44cc-90f3-da680a60d6ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33f31a5-dbae-4010-b8d4-fddb0a5139ca",
        "cursor": {
          "ref": "d31e0b9c-589f-45b2-81cd-f32f11f0eeee",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "22331226-28bc-4f1a-b45b-b53133dfbeaa"
        },
        "item": {
          "id": "c33f31a5-dbae-4010-b8d4-fddb0a5139ca",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a5f94946-de98-4e19-a60d-46e331dd93bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a87831-a777-41b0-9683-a963ef3b4b52",
        "cursor": {
          "ref": "99c7d8c5-a0fa-4f22-801f-09f6d597e510",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e611ffc4-43db-4d58-912c-d4bdabee1083"
        },
        "item": {
          "id": "07a87831-a777-41b0-9683-a963ef3b4b52",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b04874c2-797a-4be5-b019-642e1ae1d8ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5edf0c-ac81-4483-ad53-3b0ec4ea70df",
        "cursor": {
          "ref": "0ce31e69-50a8-4307-8c48-210b48c8b81f",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "fe858757-9caf-463b-8ffd-7dce834e263b"
        },
        "item": {
          "id": "1a5edf0c-ac81-4483-ad53-3b0ec4ea70df",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ed9f8442-e15e-47a0-8fe0-d735b0336a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c987d64f-5fea-4e3c-b61a-6fe6910833d9",
        "cursor": {
          "ref": "bd7052bc-268e-4f89-a8c5-015d3b1fdaff",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b599b2c6-d3cb-4b66-878c-1c92bbf3b503"
        },
        "item": {
          "id": "c987d64f-5fea-4e3c-b61a-6fe6910833d9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "997e9695-85d0-4ed7-82d5-40c291aeb6d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95720fd6-916f-4642-956f-ee93d6702748",
        "cursor": {
          "ref": "e8ab6a2f-e6b5-400d-bcfb-bc07c1b2d1d4",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a2b8dba8-a15c-4975-9812-45b83222bc1f"
        },
        "item": {
          "id": "95720fd6-916f-4642-956f-ee93d6702748",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d6015a62-0960-41d5-ba30-eddf9a1ffb2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e33b4d6-10f4-4f54-a9ec-ac27a4f25bc7",
        "cursor": {
          "ref": "ffe69102-1a26-4ec1-956a-2c7e0ebc8274",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "bf2246f0-cdc0-4451-bbc6-a07fa811a378"
        },
        "item": {
          "id": "7e33b4d6-10f4-4f54-a9ec-ac27a4f25bc7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0aaf5468-5e10-48ec-b667-32e3471d6926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d360603-ff08-4653-933f-f4cabdef5d7a",
        "cursor": {
          "ref": "7ea8d819-9c7b-44cf-b4e6-6f70a46f668e",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "5b5be136-6f0a-47ec-b113-5b47f5c601c8"
        },
        "item": {
          "id": "8d360603-ff08-4653-933f-f4cabdef5d7a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "12304827-b4ee-4809-9c51-9dc2dee9a86a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff01d91-4e3b-4e96-9b2c-7dbaac4c15fe",
        "cursor": {
          "ref": "13c725cf-ee2c-46d5-a1f0-4302c8818115",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "da2c96fb-a3e5-4978-a021-e709585d8dc1"
        },
        "item": {
          "id": "5ff01d91-4e3b-4e96-9b2c-7dbaac4c15fe",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6d2a6b25-2183-434e-994f-1aaf8c605a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47babf84-49c4-4bf2-a89f-090e99e8f852",
        "cursor": {
          "ref": "5d99b525-493a-463b-a485-d7aa5be51c6d",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "4f6edf06-e305-4e28-93eb-bed9169ebc5f"
        },
        "item": {
          "id": "47babf84-49c4-4bf2-a89f-090e99e8f852",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "45674a14-5c91-497f-9ad7-8e76ac6a7adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "959d6a1c-f5b6-467f-80a0-dae93fd9b3a5",
        "cursor": {
          "ref": "c5fb91d4-88d7-470f-b550-e0364f1cd856",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "80013a2c-1a69-4050-ae14-df0058cdd3df"
        },
        "item": {
          "id": "959d6a1c-f5b6-467f-80a0-dae93fd9b3a5",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "03fcc4b2-a417-45fe-98bf-69573be91855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a42958-a86d-4670-8f0d-3f96eac478cb",
        "cursor": {
          "ref": "290cebff-7a7b-4c24-9645-4d43d9413167",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "deac57a4-b3b6-47d5-bd89-feb72fde7651"
        },
        "item": {
          "id": "18a42958-a86d-4670-8f0d-3f96eac478cb",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "a4e95e50-204e-467f-9eac-ee194e0d94fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8324de8-2b34-40eb-8795-8804d82b35dc",
        "cursor": {
          "ref": "550a3e41-ae1f-4884-b5cf-efc972de2b74",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "90202414-8b31-46a8-bfcf-232dfa9c3783"
        },
        "item": {
          "id": "e8324de8-2b34-40eb-8795-8804d82b35dc",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "e9db5510-0f18-4999-bd34-91b1ef65c4dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c57140-cf24-42ac-b215-ebe3b648f509",
        "cursor": {
          "ref": "f2098e85-16cb-4efd-b70c-d576ec20033b",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ca614c82-91db-4539-8706-370a83607155"
        },
        "item": {
          "id": "14c57140-cf24-42ac-b215-ebe3b648f509",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "05828631-a1d7-4a08-95c6-9deaeb1712fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4983cb8c-9e9f-41b7-8690-bcddec062c3d",
        "cursor": {
          "ref": "ed0bfbc0-cd20-41af-91b8-2fa116367388",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "166fef7f-d7fb-40dc-9403-5209391f07b2"
        },
        "item": {
          "id": "4983cb8c-9e9f-41b7-8690-bcddec062c3d",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "91217fac-b327-4b7b-8de2-88faa69bca62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ad1ff5-88f1-4d29-a4e8-48ffc4858143",
        "cursor": {
          "ref": "140da14c-93ee-44f1-a7b9-02576dac411b",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c1688eb5-efda-4253-a72a-07b9db478daf"
        },
        "item": {
          "id": "d8ad1ff5-88f1-4d29-a4e8-48ffc4858143",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b0a0c713-04a7-4ac4-b910-6045c6d90542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebab3c79-9c31-4247-8290-c38ed47ce596",
        "cursor": {
          "ref": "9b8215f4-5419-4f88-8e7d-4d9028750deb",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e6e26618-ae8d-46b4-84a9-f14e4e0e2976"
        },
        "item": {
          "id": "ebab3c79-9c31-4247-8290-c38ed47ce596",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1f383998-d149-4ebf-9c34-0a35369fa928",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b405d79e-5a74-461a-b337-2df7f5c1ebb4",
        "cursor": {
          "ref": "4f45b56e-e4c3-41e4-9dca-1edff27e1059",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a2dc031a-a5d1-4072-a8ad-63dfb8ec9ded"
        },
        "item": {
          "id": "b405d79e-5a74-461a-b337-2df7f5c1ebb4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d49bc2f2-09a0-4322-a90f-258c867ab236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6938965-e822-4f3b-8e0b-4f87376c959c",
        "cursor": {
          "ref": "e4f174bc-18b9-4f19-a16d-e4e4b2143f61",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "489bc6fd-2746-4952-a049-0ad70e8ce488"
        },
        "item": {
          "id": "c6938965-e822-4f3b-8e0b-4f87376c959c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "30e40e17-794e-4bfe-9519-9182799d6add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20627f74-dac7-4d04-bb5c-40563f9c50be",
        "cursor": {
          "ref": "a937b4f0-fdbf-420d-9003-7e14778a1231",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ceb76793-fd89-49e2-8133-42b4b6c5d580"
        },
        "item": {
          "id": "20627f74-dac7-4d04-bb5c-40563f9c50be",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c50d82b9-da4a-469a-98b1-bd8da95f399c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8020ed49-f039-4d76-b483-330e790909ec",
        "cursor": {
          "ref": "3674dcfa-88e2-46a2-851b-322a5f596525",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a62adaf6-8795-4751-8ebc-d446e73fcb8c"
        },
        "item": {
          "id": "8020ed49-f039-4d76-b483-330e790909ec",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c2c186b3-1a94-4f92-83b3-16d84c499251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde72de3-c493-4ec0-833f-78bc2b3afdbe",
        "cursor": {
          "ref": "ec0d3efc-9c7b-474e-bcfa-dc319780fb17",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "110accb9-6e90-4b99-b23c-7f1941d4138a"
        },
        "item": {
          "id": "bde72de3-c493-4ec0-833f-78bc2b3afdbe",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "201f97e4-32a8-46bc-91cf-b4e17e808dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d65364-0464-4ecd-bc2c-14ffa056f5e8",
        "cursor": {
          "ref": "549c52dd-d8b0-4547-91d7-31f9109341ac",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e3ac7234-0b69-4ae1-9d23-7b77255cbdad"
        },
        "item": {
          "id": "a4d65364-0464-4ecd-bc2c-14ffa056f5e8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c0809975-1ef2-435c-8143-1507fec013d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc015d1-4051-4050-9ab2-eb3c27f14a52",
        "cursor": {
          "ref": "2db5fc28-3435-4f22-bec7-a2647a792b1e",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "6b3c52a1-b67e-4202-b747-7d48dfd2fcfb"
        },
        "item": {
          "id": "5fc015d1-4051-4050-9ab2-eb3c27f14a52",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "51d6440e-ba1a-49f5-a3f0-8e7e745eca1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a36e859-2f0f-4605-8ea7-1645ef98f803",
        "cursor": {
          "ref": "063f032d-08e1-49d1-b884-0cdbf1b360b3",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ec4d3b25-17f4-40e6-895b-e6b91abe8169"
        },
        "item": {
          "id": "1a36e859-2f0f-4605-8ea7-1645ef98f803",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "33adc2c0-6165-4182-b5ee-64736360d47c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b65944cc-c7b5-463f-b564-6a57432cc7ff",
        "cursor": {
          "ref": "d45e6a16-ef29-475c-8150-4ff0a7db3086",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "14f1adbb-0a49-4f0a-ba42-5912c0f8da2d"
        },
        "item": {
          "id": "b65944cc-c7b5-463f-b564-6a57432cc7ff",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1ce09768-3303-4ccc-8f99-0150c727f71b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ed0b5b-bae8-4007-96c9-3d6a3c6057ad",
        "cursor": {
          "ref": "548b0e15-da2b-4823-be45-89b48dd1b8d1",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "dff84994-e27f-4552-b205-2c29672496f4"
        },
        "item": {
          "id": "24ed0b5b-bae8-4007-96c9-3d6a3c6057ad",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "4e973848-d15d-479d-bdf7-5a4b742d8bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16afa000-3ef8-4f57-9c80-0a08146512b5",
        "cursor": {
          "ref": "25d9c4f4-6452-43c8-9d3a-6a5b8c1919ac",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6e7c8292-665f-4b16-be36-b14de2b4a84e"
        },
        "item": {
          "id": "16afa000-3ef8-4f57-9c80-0a08146512b5",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1c4b2572-f4e8-4567-841a-28184120132c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea1d8126-f48d-4554-add4-a9654cd6383b",
        "cursor": {
          "ref": "8a3298bf-5fe1-424f-b978-57a5badd27ac",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1c4583fe-1469-4a6e-ac40-0184983801e9"
        },
        "item": {
          "id": "ea1d8126-f48d-4554-add4-a9654cd6383b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b4200983-8599-4452-ad4c-ca3a5fef8765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d939dc59-1994-40e6-a824-d4f313ae1792",
        "cursor": {
          "ref": "551b326c-1480-4b6f-b100-d2dace68f1f0",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c284a532-36c8-4237-a401-c3522249e801"
        },
        "item": {
          "id": "d939dc59-1994-40e6-a824-d4f313ae1792",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ff5ef534-0543-440e-8936-469733998c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f7ca3c5-d30b-4247-89a5-a4d039dab230",
        "cursor": {
          "ref": "2ce13970-6126-432a-bdbd-9f54de0b81d8",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "7d5f7dcc-4dd1-43d7-b6f3-2ff8810964fb"
        },
        "item": {
          "id": "9f7ca3c5-d30b-4247-89a5-a4d039dab230",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2d0c7fcb-9756-49d9-9b3e-cbf854596aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce6af2ca-2530-4862-8f98-ee07e500442f",
        "cursor": {
          "ref": "1265c88d-86ff-41cc-aae0-0e31792aadba",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "bd4a5264-f7ba-437e-9597-6a90c6949a6b"
        },
        "item": {
          "id": "ce6af2ca-2530-4862-8f98-ee07e500442f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "78484fc7-1c2f-443e-8ddc-8b07652c1785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175907a5-f550-43e0-b5ec-39b13bd3e585",
        "cursor": {
          "ref": "3c248033-74d7-4a86-b8aa-394620cfa43f",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "59846a58-f5f3-40a9-895c-6a13eb3e0ade"
        },
        "item": {
          "id": "175907a5-f550-43e0-b5ec-39b13bd3e585",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "60095c59-072a-4e85-85a5-511c6014c416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec6a742b-536d-4ceb-a1b5-df1bab207365",
        "cursor": {
          "ref": "b721b778-29c1-4d29-b0ee-abb7971f3aef",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a66770c6-8b34-49d7-a197-7b48597e17f7"
        },
        "item": {
          "id": "ec6a742b-536d-4ceb-a1b5-df1bab207365",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "11814c07-ed29-4403-bf78-7c90684cdbab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b1353a0-ca68-4870-ac53-2d5a6db0efba",
        "cursor": {
          "ref": "7766f088-2ca4-4728-a0c5-e1cfb39057ef",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "2fd1bf95-09a0-4a9c-8c51-eb73300d4670"
        },
        "item": {
          "id": "7b1353a0-ca68-4870-ac53-2d5a6db0efba",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "30cb3463-fcf9-4d5d-9a3c-0b0c7018e957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d5c2e7d-6c45-4b10-8592-7c49b7b05131",
        "cursor": {
          "ref": "8974ea99-4b1c-46a7-aa26-d34c4dc864b5",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "05e4e7f7-d0a3-4dcd-abdf-296e929b1dab"
        },
        "item": {
          "id": "4d5c2e7d-6c45-4b10-8592-7c49b7b05131",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "9e2716bd-17c8-4767-81ee-ee1fa5814e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c1e7a4-ec24-407b-a342-b8048bd17a07",
        "cursor": {
          "ref": "7a11d92b-f3eb-4ecf-bdfb-2c1cc8229a46",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c6ff5bd9-d001-490b-9c9f-511a376d9285"
        },
        "item": {
          "id": "55c1e7a4-ec24-407b-a342-b8048bd17a07",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c46fc630-1760-4233-a562-51b5223ff027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9cee69-9bf8-469e-ac9f-49b0b1fc994d",
        "cursor": {
          "ref": "96bcb160-e956-4f34-9c83-a9cc9fcf62c4",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "6c48976b-b9ad-4a33-8934-1ab298cacb72"
        },
        "item": {
          "id": "ed9cee69-9bf8-469e-ac9f-49b0b1fc994d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e95a93b4-24c3-46b9-9ee7-f04374829f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a26c1ce-a465-4807-af9b-a8910479603f",
        "cursor": {
          "ref": "ba45ed3b-8b3e-4992-a3c1-664fbd476125",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b820e9fe-8cac-4409-b63f-612855e3ec77"
        },
        "item": {
          "id": "3a26c1ce-a465-4807-af9b-a8910479603f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "907a4ae1-945e-4b75-806a-e3faa99862c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00b2baa-da15-4ebd-80ed-9f5f8ba10ee2",
        "cursor": {
          "ref": "ed83bb3f-2f7f-4360-a3e6-855bad09dcd2",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c9064ba4-46ac-44cd-8676-0f7176265814"
        },
        "item": {
          "id": "b00b2baa-da15-4ebd-80ed-9f5f8ba10ee2",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "bedba19d-5175-4168-9d4a-7cb27e5172dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db8106c1-4087-498f-abeb-05d8aab2d604",
        "cursor": {
          "ref": "10748977-03f4-4d30-9176-268d47b2a38a",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "815a0120-ca8a-4d1d-88bb-a0a810749ff8"
        },
        "item": {
          "id": "db8106c1-4087-498f-abeb-05d8aab2d604",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "38546cac-05a4-4300-8f48-69ccacdded5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e8b665c-26f5-4a0f-9507-7a8037d88d01",
        "cursor": {
          "ref": "964207b8-dd53-4bf4-932c-755003bc826f",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d6cbcbbe-2c1b-4f56-abd5-9570e9fe92f9"
        },
        "item": {
          "id": "6e8b665c-26f5-4a0f-9507-7a8037d88d01",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "bc1447f0-aade-4e3c-97b2-96f24291577d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b780261-4d6d-48e2-952f-d39a0b36def5",
        "cursor": {
          "ref": "9705b462-a8f7-46d8-ad7d-8317b7d3e1a0",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "940d67ae-4eef-4fa2-ba4f-fea0bbdb5623"
        },
        "item": {
          "id": "2b780261-4d6d-48e2-952f-d39a0b36def5",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "434d3821-518b-4db9-b6f0-e65dde82012d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc373c6b-67a1-4515-8655-4e3c7a089861",
        "cursor": {
          "ref": "4bd99a43-f64a-44f8-b22b-570c554c9731",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a2d1b0c2-d22f-4b4a-8d93-3e20e50bfcf6"
        },
        "item": {
          "id": "fc373c6b-67a1-4515-8655-4e3c7a089861",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "03240f8c-39b3-4e03-b1b9-b049e5785723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03662f98-5152-4a02-a2c8-6434355f6a20",
        "cursor": {
          "ref": "5937c3e5-b1ec-402b-9499-397fea5bc828",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b7152ea0-242d-41ee-8725-a2323531d7e2"
        },
        "item": {
          "id": "03662f98-5152-4a02-a2c8-6434355f6a20",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "eb88010e-3f6d-440c-999c-a54f48cb5da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2de9794-aae0-4e8d-a265-782e930dad86",
        "cursor": {
          "ref": "c4fc2f38-79da-49c9-b28b-6bb5b146ec28",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7715595c-02d9-486d-98d1-c17aa76dbbab"
        },
        "item": {
          "id": "b2de9794-aae0-4e8d-a265-782e930dad86",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "94e087ca-bb84-4906-ba6e-93464fd6a6c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ec983b-f852-4458-842f-24a54aa91a3a",
        "cursor": {
          "ref": "0453bec8-7880-45fa-a706-75a33afef98d",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b5d86c00-1fc1-484d-8c68-9f5b35b05180"
        },
        "item": {
          "id": "79ec983b-f852-4458-842f-24a54aa91a3a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "e203a587-ff67-494d-8ff4-7fa297d9b903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27541a02-6a29-4867-81fe-7c9bb9d9141a",
        "cursor": {
          "ref": "897d46a4-66e8-45f7-9317-8840edf6045e",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d6498c72-48cd-423f-9bcb-ad18715a164b"
        },
        "item": {
          "id": "27541a02-6a29-4867-81fe-7c9bb9d9141a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "95cb466c-7fa6-4ea1-854e-ada1128cc605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c771da-e792-43bf-a09e-13685b94ee91",
        "cursor": {
          "ref": "754d13cc-4deb-46c7-8155-9bf059883418",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "df67bcdf-7bdc-4295-8f7b-1e1fb35773dc"
        },
        "item": {
          "id": "c7c771da-e792-43bf-a09e-13685b94ee91",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "9085205a-2fe2-4c9b-844a-0111cd5aaf2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba479f1-b54c-431a-a4cc-74906bf2f063",
        "cursor": {
          "ref": "df2c3293-4e9b-406d-bcda-1f0c894c77a4",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b98ccd70-35c1-49df-9daa-d4092d956e64"
        },
        "item": {
          "id": "5ba479f1-b54c-431a-a4cc-74906bf2f063",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "3498bb9d-b9c8-49ca-940a-49e095fb2bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61091498-ce41-459c-9a44-8c8b084957cd",
        "cursor": {
          "ref": "e7ebaec4-12df-4db1-8653-9165a1a4ac3e",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9a501d57-5f18-4825-b3ff-15a75bf1517b"
        },
        "item": {
          "id": "61091498-ce41-459c-9a44-8c8b084957cd",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "2db17e6e-1bd1-40c5-8ab5-1c03af35ddb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "379eddd7-af79-4e1d-a668-77eb8ad8b49b",
        "cursor": {
          "ref": "d4c7408e-1c06-400b-8d04-5d8a0b4612da",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "8285244a-8f80-4e70-b017-0214be081baa"
        },
        "item": {
          "id": "379eddd7-af79-4e1d-a668-77eb8ad8b49b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "6f25c187-fbc7-4266-a822-1260e303a405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0954cb70-4121-4414-89fb-d37d896e501b",
        "cursor": {
          "ref": "3e54fed1-c7ff-4356-a435-b2cb393389fb",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "5e29961c-9de0-4ef0-b765-8bfeb48d3493"
        },
        "item": {
          "id": "0954cb70-4121-4414-89fb-d37d896e501b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "45853d6a-f7c3-47c6-a1b5-41ad09944236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3868ffce-4828-430a-b565-67b46b36433b",
        "cursor": {
          "ref": "852a7121-b693-4d87-8ed9-f243af7786f8",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "689af711-c50c-46a0-b552-a7a5f50d6c6f"
        },
        "item": {
          "id": "3868ffce-4828-430a-b565-67b46b36433b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b6bf0da1-0946-418d-9735-21413d3e45be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5ce4da-6243-4e45-aaea-52f87f6985d6",
        "cursor": {
          "ref": "aaf86f41-d421-4072-bcdb-ccd5c4e6629d",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f8150e21-e4c6-41fe-8fe9-5fb288d4c235"
        },
        "item": {
          "id": "1b5ce4da-6243-4e45-aaea-52f87f6985d6",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "eb6cc6e9-d522-49e2-b3e6-18f1ea8fe23f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39a40b8-5008-4731-88a5-a41c08893b36",
        "cursor": {
          "ref": "66501e04-a904-481e-89fe-1cd2e0cd83ef",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "59ba4a42-036a-46df-97e0-97cf462be51c"
        },
        "item": {
          "id": "b39a40b8-5008-4731-88a5-a41c08893b36",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "14fe1899-048c-4624-b01a-ab80186724fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c4dd30-7ecc-48c5-b61d-4de3ee2619be",
        "cursor": {
          "ref": "9c21cb5b-8181-4423-afdf-306b2093739c",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f89cb7d1-1450-4d7c-b20f-68439c585e0a"
        },
        "item": {
          "id": "92c4dd30-7ecc-48c5-b61d-4de3ee2619be",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "71bd37bb-52d7-43ef-8e87-da643c73cf18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7446534f-393f-4dbe-9c7c-e9b3da4eada7",
        "cursor": {
          "ref": "9f4f727c-1d79-46b6-a79b-afcb8b6f41a1",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "2325300e-f258-4385-b382-535e43ef4824"
        },
        "item": {
          "id": "7446534f-393f-4dbe-9c7c-e9b3da4eada7",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "04059cd0-e2b2-4ad9-a418-0c2ac082961f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee046cb-8d2e-4bce-97f9-a34b169e960e",
        "cursor": {
          "ref": "2da0fc93-45c2-444c-a0e1-ba79dcf5ef29",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c18c10ee-00ad-48e4-8cab-795521071485"
        },
        "item": {
          "id": "aee046cb-8d2e-4bce-97f9-a34b169e960e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "81cace2d-f453-4d52-ae95-70fda1c77060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671fd4dc-648f-4ad2-8169-3ac2bc7a1bf3",
        "cursor": {
          "ref": "ca7d0b3c-775c-4845-b488-17b566c8ddad",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "75b56950-ffad-48cd-b99e-d4a098bbeed4"
        },
        "item": {
          "id": "671fd4dc-648f-4ad2-8169-3ac2bc7a1bf3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "37bb9839-e18e-4116-9f60-32216b659e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45abc048-2ed8-4729-b028-a058dd6f6574",
        "cursor": {
          "ref": "020ef930-66c3-49b8-811e-4d3d70c8b93b",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c6d2c79c-8bac-4bda-8d71-38a9e1e9e768"
        },
        "item": {
          "id": "45abc048-2ed8-4729-b028-a058dd6f6574",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a27b70ce-aa15-4752-a9e8-f99a6e93553b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f70a4b7b-75f9-4a4d-ae40-74e6bd577bd3",
        "cursor": {
          "ref": "6e2f6a79-2b4d-4b1d-ba3f-dff1fe703ab5",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "caf8c410-17a3-494e-843a-64f0f69cfc77"
        },
        "item": {
          "id": "f70a4b7b-75f9-4a4d-ae40-74e6bd577bd3",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5a70e5a5-dc93-4a69-962f-db51b6875fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52677713-3d92-4153-ba05-2a6d4afdad95",
        "cursor": {
          "ref": "9bd55cdb-a051-48af-86d1-9cc32f2a4959",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9fcd0e4b-6585-4c62-9dfe-6eba67df16ec"
        },
        "item": {
          "id": "52677713-3d92-4153-ba05-2a6d4afdad95",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "af5c30bf-082d-479b-8fc2-5571350ab0a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11bc4f93-492a-44b1-8128-b176c49a8f07",
        "cursor": {
          "ref": "e82b86dd-0847-4852-b539-1fa747373215",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "7a763473-2f53-4049-889f-86932413502c"
        },
        "item": {
          "id": "11bc4f93-492a-44b1-8128-b176c49a8f07",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "1a0f43cc-915f-4acd-a1cb-bd7fc548603c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "408fe373-393a-4731-92cf-e269bcf53106",
        "cursor": {
          "ref": "73c1d38a-8142-41a1-a607-92216959d05c",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "cbcde065-8ec2-4096-abad-2f43d7674fbf"
        },
        "item": {
          "id": "408fe373-393a-4731-92cf-e269bcf53106",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "7dbe1db1-68b1-459a-8599-a594a071e316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b61eb0c2-6555-4af8-bf7c-44f9c193a83f",
        "cursor": {
          "ref": "c10e1698-b311-46a8-90a0-4c06149e7097",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1b3b1cfc-468c-44d2-aab4-bda37d21fbab"
        },
        "item": {
          "id": "b61eb0c2-6555-4af8-bf7c-44f9c193a83f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "5513df3f-00a4-442c-8f42-3366e4ca1dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca01039-e3b9-41f1-8416-179432aa1892",
        "cursor": {
          "ref": "37e8a377-1ec5-4b69-81bf-06d90f7ab7f8",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "6442b2b8-841d-46d4-b231-f801ba8eedec"
        },
        "item": {
          "id": "bca01039-e3b9-41f1-8416-179432aa1892",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "eec61f92-96b0-464a-9b52-426e87104618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a6a67f-c31e-429d-be03-e1c55d7b743a",
        "cursor": {
          "ref": "752c7c27-1bf1-4899-9f54-1c5241d7c331",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "fb07ef58-7747-48e8-8a27-130820335f82"
        },
        "item": {
          "id": "d2a6a67f-c31e-429d-be03-e1c55d7b743a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3d21ce14-28c1-43ee-89ba-4311890be1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c69fceb-fb22-4fd3-9395-d64edc855b1f",
        "cursor": {
          "ref": "62b0750f-3165-42c9-abc8-2638fd4f64e4",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "7740b1cc-50c1-4470-9c6f-cc014445df73"
        },
        "item": {
          "id": "7c69fceb-fb22-4fd3-9395-d64edc855b1f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "42277c7e-6b89-449a-8716-91f27b4bc981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15aad52-d95f-462d-80d7-3381b7516451",
        "cursor": {
          "ref": "a3b9bac5-2869-4292-aecb-df1e0a47a543",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e85ed4b4-fcbf-4f6c-9475-fe1b9bb870d8"
        },
        "item": {
          "id": "b15aad52-d95f-462d-80d7-3381b7516451",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ffd68517-9de8-4c9f-b78b-ccb7f18bf038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28caf134-371c-4b41-9272-c65525e7f790",
        "cursor": {
          "ref": "49afb20c-aecb-44af-9687-b5aca4fa6ebe",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b849c1f7-c6e3-42c4-b359-373fc22f9236"
        },
        "item": {
          "id": "28caf134-371c-4b41-9272-c65525e7f790",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "da6a63a3-f251-4009-bcaa-fe1ac7934221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c58b58-64eb-4e07-b668-183e1b4a56d4",
        "cursor": {
          "ref": "828de76e-51c5-48f5-b3ec-e993fc4d1f61",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7100d6d8-0354-4789-8be5-3e28f069a446"
        },
        "item": {
          "id": "b6c58b58-64eb-4e07-b668-183e1b4a56d4",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "961be278-90e6-452c-9027-656648aa58e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e97f25d-04db-425a-b960-2facc973dec3",
        "cursor": {
          "ref": "194df57d-0422-4d0e-806a-816eabadbb29",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "3d9b0cf6-1dd8-4eb7-83d2-8da7df740f43"
        },
        "item": {
          "id": "0e97f25d-04db-425a-b960-2facc973dec3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "04b79795-68c9-4c49-b646-293f58433531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a91460-1af7-4519-8796-b136cec7da78",
        "cursor": {
          "ref": "1d2b27b0-eaba-4895-9893-96e22a63ebcb",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "78a11a26-d27f-482b-93e3-4a01b4a44344"
        },
        "item": {
          "id": "92a91460-1af7-4519-8796-b136cec7da78",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "7ccac151-885b-45c2-b650-ad715b88e3c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "818967ac-5efa-4116-8018-fbdf127e4262",
        "cursor": {
          "ref": "c1c56690-19ac-40a0-80a9-5d2e64c64b10",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "79368435-33bf-4987-a0f7-c6f3d030fcc5"
        },
        "item": {
          "id": "818967ac-5efa-4116-8018-fbdf127e4262",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9be0c335-c78a-4879-8bdf-b9bc9992d5a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed5e35a4-df36-44e0-8a2e-26e7b67a124b",
        "cursor": {
          "ref": "b3417ba1-9c77-463f-9361-c4ffde456450",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c4dd2398-3805-4c07-ae55-b297922d9859"
        },
        "item": {
          "id": "ed5e35a4-df36-44e0-8a2e-26e7b67a124b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "258d056f-6325-4ac6-a03b-4b3f77883e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd56512-c683-443c-a552-8fd5143578d1",
        "cursor": {
          "ref": "6c1792eb-ceef-4c34-971d-7020e9f7b78d",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "47b933b5-dceb-4e38-a0d4-47b7aa365a97"
        },
        "item": {
          "id": "5dd56512-c683-443c-a552-8fd5143578d1",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3399aec4-b4af-41f1-9ab0-c83844a114bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fdce53a-91fa-4ac9-ac15-109d978e5e23",
        "cursor": {
          "ref": "7a2e83f3-791f-4fa1-aded-efd7ea22547d",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f3017eac-5e0d-4bb8-a27b-68de9d559d1d"
        },
        "item": {
          "id": "2fdce53a-91fa-4ac9-ac15-109d978e5e23",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "5dfc3607-64f6-47a1-8660-372195bd8fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2d76a0-1722-492e-beee-34bb63309980",
        "cursor": {
          "ref": "3ba56ec7-5cab-4a98-8d1e-2831b2c5087b",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ac6e89a0-fb62-4dc5-b4bc-7fdd01f92d78"
        },
        "item": {
          "id": "0e2d76a0-1722-492e-beee-34bb63309980",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "860d673f-42fa-40a3-b4bc-19e06ddde29c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76605d5d-959a-465d-81f7-3fef3cebac1d",
        "cursor": {
          "ref": "c71b9c72-81b9-4318-a01b-f55187403a5d",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f5432536-fffd-4429-8192-54dee2cfff9a"
        },
        "item": {
          "id": "76605d5d-959a-465d-81f7-3fef3cebac1d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "08067c0e-1d92-42ca-bf6c-9c666f7d3f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b9782a-fa36-4a4b-948f-924943d203ac",
        "cursor": {
          "ref": "ac708eab-88c4-4088-9e3d-d557612f99bd",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "23cf7337-7990-4d88-a31a-3968e240cb8b"
        },
        "item": {
          "id": "70b9782a-fa36-4a4b-948f-924943d203ac",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "29b5447c-f0b4-4bac-bada-0b68a99ed55e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f5089cd-eb56-4020-ac40-77440d3261e5",
        "cursor": {
          "ref": "18cc312d-ef38-4a0a-96b8-c028c844d2ae",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "94e5971c-fd3b-4647-9d8a-380485d7fd18"
        },
        "item": {
          "id": "1f5089cd-eb56-4020-ac40-77440d3261e5",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "cee2b751-54a8-4005-92dd-ad945aa88465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8fd386-dfea-4a40-be5c-cdf9e19b9ada",
        "cursor": {
          "ref": "52d64336-07f4-4fc2-939b-c706df4f6793",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "5105a612-5a11-4334-afe3-51dff7bdb8b8"
        },
        "item": {
          "id": "dd8fd386-dfea-4a40-be5c-cdf9e19b9ada",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "05d4857f-383c-4017-8125-e366b5bf8743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e47520-cd2e-4c90-99c6-ab96bdfde116",
        "cursor": {
          "ref": "4f4886f1-852e-4f24-bffc-2450ae3e2941",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "499057ab-b829-4478-81c6-fd1f953d29c1"
        },
        "item": {
          "id": "f6e47520-cd2e-4c90-99c6-ab96bdfde116",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c274f8e4-db9d-441c-a982-af7941c9c6d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0f43b5-b51e-421d-91c1-d5d40c9620de",
        "cursor": {
          "ref": "29fd1f5f-1634-44e0-a5fc-dec2e87920c2",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c18e0e70-a188-4103-8e93-ec56e278274b"
        },
        "item": {
          "id": "3a0f43b5-b51e-421d-91c1-d5d40c9620de",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "651229f0-f1ec-4d40-87e6-a793738de979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3b4c53-18da-4561-85ab-402d95889007",
        "cursor": {
          "ref": "dc98248c-6f35-47ac-97ba-70efcd651825",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7b1e2217-c7cf-4b4a-868d-efd5db3ced5e"
        },
        "item": {
          "id": "da3b4c53-18da-4561-85ab-402d95889007",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e8d95558-d860-49ff-93ae-6d6b1c08f907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b59625-f0e4-4b0c-b5c6-e8a5ccc6e52e",
        "cursor": {
          "ref": "2f1de92e-2409-4048-a95c-3b97a556ee5e",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "892fb545-add7-4e9a-b28e-36c94cb6545b"
        },
        "item": {
          "id": "11b59625-f0e4-4b0c-b5c6-e8a5ccc6e52e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e7f472d0-7d91-4eb1-a16f-626c7be09baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61615b14-94c3-4e76-bb5d-0456e474e79e",
        "cursor": {
          "ref": "a307add4-8e9a-4d3c-8a2a-91068342a205",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "0a3c4f8e-f8c4-40a4-ba32-1ea2ea376ae9"
        },
        "item": {
          "id": "61615b14-94c3-4e76-bb5d-0456e474e79e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "51a468a3-0e0c-4e6b-88c6-210ff77fdf4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be4b9f92-0c87-423c-88d7-052f91767460",
        "cursor": {
          "ref": "ca6ef706-e8e0-4219-af55-9ff38e66d263",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7fc6f6d9-2712-4f04-94c9-c3831e989e84"
        },
        "item": {
          "id": "be4b9f92-0c87-423c-88d7-052f91767460",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "22a4f362-18a0-41d1-9fcb-a8738f0b4da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd2b7b0-e904-4509-973d-a594f1598627",
        "cursor": {
          "ref": "457050ad-788c-4d83-ad43-f28fb543f776",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f3d7f735-a6e8-41e7-af31-8d84ba766807"
        },
        "item": {
          "id": "bcd2b7b0-e904-4509-973d-a594f1598627",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "cf63e9af-8dac-4742-810c-16329cf61fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f64fdb4-ede1-4062-a65d-b4762e6751d4",
        "cursor": {
          "ref": "f3023b88-b692-4bb3-bb89-cbcf93ed5c35",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "53ee632d-4603-4b65-8725-98717637b611"
        },
        "item": {
          "id": "3f64fdb4-ede1-4062-a65d-b4762e6751d4",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "6ed02eb9-44bd-4056-a0ee-f16b80a455c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a3ca78-21a8-4408-8541-abb001aa325a",
        "cursor": {
          "ref": "f6537d7c-6a14-4000-b13c-f23aec5d2b39",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "5f6a8bc7-abe7-427f-b390-4cf4a203870c"
        },
        "item": {
          "id": "35a3ca78-21a8-4408-8541-abb001aa325a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "16cc5928-9d6a-466f-af7c-b36abd049251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90010b7b-b52c-434a-81a5-4ebea97b9000",
        "cursor": {
          "ref": "4cfd1021-513e-4cd8-8817-cff7ef7dafc0",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "4fb77472-b512-4047-91c6-d2fc227983d0"
        },
        "item": {
          "id": "90010b7b-b52c-434a-81a5-4ebea97b9000",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2a462751-bf88-4ff4-b575-16e2fdc9a4b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd5d4b3-ad68-4ea9-8fdc-58bdf6af85be",
        "cursor": {
          "ref": "69ede0ab-dcda-4a3b-b5f9-a028437bec3c",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "d2a9405f-7f2a-4e70-891f-8549b4a0c4d9"
        },
        "item": {
          "id": "cfd5d4b3-ad68-4ea9-8fdc-58bdf6af85be",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "6b471b2a-7817-46d9-89fa-b5eca54b1806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c654f6-ea01-4d34-be89-2675f79e9419",
        "cursor": {
          "ref": "d18a732e-55e7-419f-bcb2-bcfa6d608170",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "6f3ccd1e-44c9-427a-b9af-432a5aff7eb0"
        },
        "item": {
          "id": "e9c654f6-ea01-4d34-be89-2675f79e9419",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "301debdf-5dcd-4bef-b382-9efaccc1572e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e98e3b2-1747-42d9-83f5-ba24f28bc4d4",
        "cursor": {
          "ref": "ba0011ab-15c4-40b7-bda4-be161f5a6109",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "88e87537-8308-4730-be34-faf615003314"
        },
        "item": {
          "id": "6e98e3b2-1747-42d9-83f5-ba24f28bc4d4",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "0a8086bc-a690-49d7-be58-e38ae408963b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf4d6997-e28f-4cb5-8f14-a9f0b8a9013e",
        "cursor": {
          "ref": "299eb7ca-ef4d-4436-a0a1-62cd5a9b1703",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "11565abc-4226-4058-a9dc-5afdb606497b"
        },
        "item": {
          "id": "cf4d6997-e28f-4cb5-8f14-a9f0b8a9013e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "996dc1f9-6183-4731-ba43-0da14600522f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73516a5a-557a-4a51-984b-256147a86c57",
        "cursor": {
          "ref": "1b42ece7-02eb-418d-8814-d25ef693f1e0",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "3294317d-b236-4397-882e-cf4d15e41f26"
        },
        "item": {
          "id": "73516a5a-557a-4a51-984b-256147a86c57",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a048b7eb-e535-4b1f-b8bc-318c81a3e2bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e1d106-a83c-4f6e-bc04-3816637cba5c",
        "cursor": {
          "ref": "d278507c-4998-41a4-8ad5-a1c918071eee",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "40c7e499-1b32-4b1f-80b3-a676a8dd3ee1"
        },
        "item": {
          "id": "81e1d106-a83c-4f6e-bc04-3816637cba5c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4ea0f88b-e922-47f0-9852-9f20880b541f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf94e25b-9452-4a7b-8f44-ed76c007a4c9",
        "cursor": {
          "ref": "f4836154-b213-4c24-92fe-1d7a7f46c760",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "baa3fa43-9c5e-496e-b687-27fea6c8b2de"
        },
        "item": {
          "id": "cf94e25b-9452-4a7b-8f44-ed76c007a4c9",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b1f872fe-c0dd-47fc-80b9-5584c124b242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce62b32d-d6ca-4e0c-a323-9d340dd9697b",
        "cursor": {
          "ref": "5493d5ae-2f81-4345-b645-22d8c13ca521",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "192d33a8-b083-4326-b40d-f761141ba437"
        },
        "item": {
          "id": "ce62b32d-d6ca-4e0c-a323-9d340dd9697b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "5098849b-6ff2-4a4a-938f-674ab09068f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fea1a50-b0d8-4561-9246-e19512e4cf8d",
        "cursor": {
          "ref": "88d5ae0d-314a-4679-be3c-f9f602f29d5e",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "4e246242-a891-4c0f-b102-3d10d2f1dc97"
        },
        "item": {
          "id": "9fea1a50-b0d8-4561-9246-e19512e4cf8d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "3b042972-f87e-4647-8e16-da67cfbbae70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c87545-4b41-4180-ba64-8e48e8c4eb6d",
        "cursor": {
          "ref": "cb25d1d8-81ce-4d95-ac7c-7ba1d747f530",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "c63d0cb6-7fd2-459c-ad27-0ccdcf844914"
        },
        "item": {
          "id": "e2c87545-4b41-4180-ba64-8e48e8c4eb6d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6c182ae3-29c0-45f7-ad92-03799ad2f0c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b745927e-00d2-4975-b85d-0cf452cd10fe",
        "cursor": {
          "ref": "281488e9-5fe8-4e7a-bb16-860783d66fb7",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "762d0bd9-ce52-498b-883d-81fb54f621ed"
        },
        "item": {
          "id": "b745927e-00d2-4975-b85d-0cf452cd10fe",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ee0e23c8-12bf-4523-9d8b-cd7f0ab60373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de23071a-787b-4679-b192-013fd940491d",
        "cursor": {
          "ref": "7f81c7a7-443f-4748-8fa6-d27403b86828",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "95636f9b-e363-45e7-9bbb-3d9f34a40980"
        },
        "item": {
          "id": "de23071a-787b-4679-b192-013fd940491d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "857faf1a-4272-4d75-8a29-8345e986a421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3100d46c-6ac7-443d-b18a-8c62bd256d90",
        "cursor": {
          "ref": "6ce7387d-0ad9-4275-aeef-c5ed355cff7d",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "65b40ef2-7600-41dc-af51-ecdb0905510e"
        },
        "item": {
          "id": "3100d46c-6ac7-443d-b18a-8c62bd256d90",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "8a087ba2-5972-48c0-ad3e-0182a97ae0c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9917ea47-5e46-43cf-9f86-76348eb20f18",
        "cursor": {
          "ref": "80f5a18b-6dd0-4244-9c99-84ff52a02e20",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "d50e5bd2-7f1f-48a5-9d50-39dad08db42d"
        },
        "item": {
          "id": "9917ea47-5e46-43cf-9f86-76348eb20f18",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d884a6af-303e-402c-afdb-c6aa189c2d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "188aad80-2a85-457b-9719-e337b9d5ba85",
        "cursor": {
          "ref": "ebb32d4e-7d30-4e61-befc-813527a77ab0",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "aa3a4d20-decc-411b-9349-85b6e660c7b7"
        },
        "item": {
          "id": "188aad80-2a85-457b-9719-e337b9d5ba85",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "fe6d237f-d9b0-4b48-963d-70a3266f416c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855c83af-2bc8-4b1a-bb1f-9460e76f1374",
        "cursor": {
          "ref": "c0859a2a-b80d-420c-8688-4b85403ac76e",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "4ef11d2f-7ed9-4d06-bec7-1401b8532491"
        },
        "item": {
          "id": "855c83af-2bc8-4b1a-bb1f-9460e76f1374",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "21cde66d-7bcc-453e-a0f7-b0b8350a097d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58252955-5e21-453a-96e8-37b4b17daaf6",
        "cursor": {
          "ref": "53a8eecb-967b-48d1-a04c-ab60b634587d",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "9010a3ef-32df-45c1-ae03-a4cc17a6d18e"
        },
        "item": {
          "id": "58252955-5e21-453a-96e8-37b4b17daaf6",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "fc703c3d-4b53-42fa-b671-98d929af5102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3edd3b1-e00e-4552-9743-6a8c130f8555",
        "cursor": {
          "ref": "e60bf1d4-2d89-401b-8e2c-dc211b775ad4",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "ef8bb800-6c63-4c0e-a90b-ee2210599a96"
        },
        "item": {
          "id": "f3edd3b1-e00e-4552-9743-6a8c130f8555",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "386d05cc-9309-41c3-8c29-e4195755c121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d721eb-0dfe-4dc5-90fb-90a83970f17e",
        "cursor": {
          "ref": "0ee29c94-c343-4591-b078-874970690793",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "1564b915-2d3b-4202-bb72-0a64e43221b8"
        },
        "item": {
          "id": "64d721eb-0dfe-4dc5-90fb-90a83970f17e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "332a0d70-d94c-472e-ba06-52dee858d562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df7e10c8-67c3-4bf0-b7d4-99b093468132",
        "cursor": {
          "ref": "cce1ff09-ae65-4bde-a67b-354e3a045566",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "50fc0ebb-c09a-45bd-a4bd-1379fd036dc0"
        },
        "item": {
          "id": "df7e10c8-67c3-4bf0-b7d4-99b093468132",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d86711a8-030b-4e58-afe7-bfa67070ecfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce0cc3b-3aa0-4c21-9e85-3fc6b263b958",
        "cursor": {
          "ref": "b01bc7d8-13d7-4bc9-bba4-ab37bdddd156",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "76b6d4ca-7b1f-4d53-8ccb-ff5f060cb42f"
        },
        "item": {
          "id": "9ce0cc3b-3aa0-4c21-9e85-3fc6b263b958",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "916ac987-8dff-4524-a0e8-26f7498154a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c0c0e8-90d2-496a-8885-e566e47db20b",
        "cursor": {
          "ref": "7c7ff714-b762-458d-980b-d0f993cd4617",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "3db39c2e-6615-4d98-b7ae-6c270fd8f97f"
        },
        "item": {
          "id": "98c0c0e8-90d2-496a-8885-e566e47db20b",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f856da8d-a0b4-4cb7-9a36-18ea817f7f73",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd1cf25-597a-4cb7-a4d2-3cc99d89c37e",
        "cursor": {
          "ref": "6b5d1536-4b60-4188-8e2a-264298320c70",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "881b8ac9-adf9-4d78-897a-2790d4be42b9"
        },
        "item": {
          "id": "cbd1cf25-597a-4cb7-a4d2-3cc99d89c37e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4640e1c6-f5ae-4289-8b9f-fb5931963f2f",
          "status": "OK",
          "code": 200,
          "responseTime": 134,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "57cdc903-efbf-4b24-b542-b981e86154c3",
        "cursor": {
          "ref": "50e61829-d8b2-438a-a944-271af72d01e3",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "e7219be1-6072-4f63-87ff-877608e0bf00"
        },
        "item": {
          "id": "57cdc903-efbf-4b24-b542-b981e86154c3",
          "name": "credentials_verify"
        },
        "response": {
          "id": "fd2d5061-85c9-49aa-9138-ea69d4b7c43f",
          "status": "OK",
          "code": 200,
          "responseTime": 1586,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d5073b7-40ae-430d-bf3e-e3ea14055835",
        "cursor": {
          "ref": "6615bfa7-c13a-4cac-9502-e9cf712d4aea",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "e8eb0a26-b50a-490d-abc9-812ec8a3f63b"
        },
        "item": {
          "id": "4d5073b7-40ae-430d-bf3e-e3ea14055835",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7fa5cd41-d37e-4a77-a571-bf42e73e8a5c",
          "status": "OK",
          "code": 200,
          "responseTime": 1594,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "13cba120-3fd2-49e9-9083-7c2c5931cd60",
        "cursor": {
          "ref": "3cd8943d-47a5-4c64-820f-daf3a6410c1a",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "65fa976f-4a5e-4e48-a2a8-8c9012a23cc4"
        },
        "item": {
          "id": "13cba120-3fd2-49e9-9083-7c2c5931cd60",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c4f7f972-c8c9-4e63-9209-398f0106f8d1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13cba120-3fd2-49e9-9083-7c2c5931cd60",
        "cursor": {
          "ref": "3cd8943d-47a5-4c64-820f-daf3a6410c1a",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "65fa976f-4a5e-4e48-a2a8-8c9012a23cc4"
        },
        "item": {
          "id": "13cba120-3fd2-49e9-9083-7c2c5931cd60",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c4f7f972-c8c9-4e63-9209-398f0106f8d1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c261e3f5-f855-425e-aa3b-602a61ca1016",
        "cursor": {
          "ref": "9892b682-c292-419a-839e-8328a6da3684",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "de407148-026e-48a5-9771-9a4e5a2a236b"
        },
        "item": {
          "id": "c261e3f5-f855-425e-aa3b-602a61ca1016",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7497f33f-5c7b-4cf5-80b7-135e58439a11",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e79bb1-db03-44e8-9312-8435ab02915b",
        "cursor": {
          "ref": "e06b284c-23dc-4989-b1aa-eb5e8f8ad95b",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "e871e83c-b057-4a63-8076-e620a14fb773"
        },
        "item": {
          "id": "00e79bb1-db03-44e8-9312-8435ab02915b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e6eb2459-99b4-4a97-909f-84c507ef9812",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}