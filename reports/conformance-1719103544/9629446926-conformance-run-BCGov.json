{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b1e00489-194f-400b-8e93-0b5c765cbd1f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "15376cc2-230b-4547-b76f-bddb1a4e1796",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f609d88c-cd3b-4244-a000-38da6029e028",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ad52866c-e151-4156-bcf3-3267188c318e"
                }
              }
            ]
          },
          {
            "id": "fb4f64b2-6541-4125-b32c-6b66e5bcac20",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c647960f-16bf-4ca7-a42b-e6110df2f001",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9d2e3541-617d-4a3e-9520-15a4f21e020c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3a108f57-eaea-4445-a7dc-a4df35a789fa",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5195e3a3-b751-44cf-9fe4-f4e7d25ef6f3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2f91cf49-4bd2-494a-92c1-5c6777760ae6",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f15ef823-71b5-41a0-87f6-41d987084dcc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ec119b4d-3149-45aa-bb9d-81a4cd24d7ed"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7e621989-663f-42c8-9cee-fd294f9892f1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "582d03dd-d10c-4a1b-bd77-955770df31a7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3fa9d582-ba77-47e2-9786-c5af5738286d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4b98c3b8-511d-4dfc-96ba-025fc0e0cde2"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2798042b-c547-4206-a137-2f3c4b42ae07",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "24bc40e2-db0c-45d2-9336-171f2de24655"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b3973126-7cf5-4f9a-9a16-f67146401b26",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "91c4adc0-cfc7-423b-a302-86c8141e6a8a"
            }
          }
        ]
      },
      {
        "id": "0e567b26-1847-4ce9-a252-e0381212445d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "8b19896b-4d2e-4986-adca-0931694321b7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bc03a919-c4cc-435c-9796-9e080b100608",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4c3dda85-eb70-458a-9b5e-3ef7225e306a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9a771f-7a91-415e-ad62-9c143832a4c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df2c3424-cbf3-4d55-8a42-2b105b0edff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e084e51-6de0-496c-9761-8fcd9607f921",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc21c7e2-d710-4efc-8796-a84573f8ffa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ba9aa94f-e1f1-4258-b824-3625d9cceec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d1560e-3b91-4659-95e2-64b70392a5c6",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "202c2f2d-29c2-48e8-956b-b8fc466633ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "50584c07-9424-4264-b977-60a17b680fac"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b0cb624e-1bf2-48d1-91fa-1df238cb1a2f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3f316464-24e1-49f8-81b5-dfd8864a3d30",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "080d69a3-8317-4823-8c0c-c001b02a709a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8c0e11f3-02cb-425f-a0ce-47796841cae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4ddc38-43f9-4ca9-900c-62f165a43ba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f0b0b45-8df5-407f-a5dd-f9df9fb67210"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5380bd6a-bc21-48a9-b7e1-1164810da5e0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1d0c6490-8dd8-4f09-bdbe-f57177602620",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "75798d19-e2e1-4d02-b81e-fa4fe2bf6fae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "98c923d7-21fc-42be-a772-b7ea8f2ef70c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cd3bcf92-a369-41dd-8fe8-806b74e667a0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d960e78f-9c39-4af2-a6bd-454de1e5b4f9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2d639bd3-8ae9-41ea-a763-8e6224dbdd11",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "79df6839-9d63-4648-9fed-2a864d2e68c8"
            }
          }
        ]
      },
      {
        "id": "f38178b3-6a30-4496-885a-32d6ba6e72f4",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3e574599-509f-428d-8efc-4a3a47ce3754",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f149664e-a59f-4110-8f1d-4039f33282a7",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d1c196a6-5951-48fc-a5f7-26c4dda4bd70",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "718a65c1-c903-4927-803c-9dbd162acd06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7ba832b-2b07-40d3-bc70-aad5c12fd5b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7813264b-1a2b-48ef-b25d-803f9572f5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc09aaec-bb98-4280-aef4-79e6b2ea82d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6c077f-3005-4d19-8f2f-2feb720b40e9",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "900a034d-d81c-4a76-b265-9222afd1800b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bd30ef3-fe3d-4022-a0db-b22870b6b34d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca084577-54bd-47f7-9086-2d9b3848350b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69fcc208-f271-4964-bddf-db5233d826a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e1d3f6-7b28-4b7a-9be2-8cf19ef42093",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb363e5c-fcbc-481c-b4ac-cff0bee99ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4773441b-a6c0-4f3d-9ee0-b3f8df9fd985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0fd46d9-142d-49ec-8cca-5d4919b908b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53ae6db7-98f3-4b24-9b3b-66502438e361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c1b8c2a-8d4c-4ad7-b059-a4ea272543a2",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66412295-e466-4175-b3d4-9760e08f4b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8505bcbd-39b7-4fad-872e-e183da55256c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "180754b9-bb0a-4005-b0bd-9094b1219768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec8a46e8-4460-494d-ae2d-f9fef13ae42d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abdee83b-e4b1-4172-b7be-5a0b24f95e34",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7408731b-1d39-461a-ab70-6b58028c4b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbf199f4-7dd7-4dd1-9e9a-06098090b90d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce8870e-9290-4b04-8046-573e267cd797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "303ba5a3-d900-473f-baf7-3e2511ea1316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf735b1-2470-4902-9df4-ab4d9d8d247d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce5539f9-6e0c-468e-9e4e-4e5dace0324d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3f28f37-829c-4b15-8d4b-095ef104a8c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb82ad6c-a689-41d4-9b92-44f731ba12a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68f59237-022f-4237-bad8-b51786e1a3da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bbf04e5-baf4-4585-96ad-bcdb1c43eb96",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a79f527-0f42-461a-ad46-4ffdd6fd93f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fb51046-93a4-405d-b3f6-12ca4d6ae5b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3babb7-493e-4961-a52f-a070c7495261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6464fbf7-6885-4d99-93c6-53aef5285c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf05db5-f6a0-4f72-af84-6c84ca2214b5",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92528427-6b52-495b-9365-3dbb509f6d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a6e584-1a81-4524-8eb0-f08e885d5ca5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d94a74-feb0-44e7-8a1e-be741229706a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39d616a9-f74a-4acb-a5a2-75bb8853ed00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d344b545-303d-468a-80b4-b7add7b89b54",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ffb0cee-1e21-49ff-ba94-97ea9024b467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ba88617-444f-4098-b8c9-c634c1debfd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c5fba93-3793-495b-8cef-734b7fe80d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c607d98-ff0d-4137-898b-69ecd5fecb52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba66232-4610-4b75-b1c9-8134672b7034",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08df099c-cfde-4933-ad17-80d663d944db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38617e89-4ecc-4d58-bc44-a189e0e3ba09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "794b5f5e-f3ee-4f14-a2dc-cf8222099532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "539702e0-0f17-4824-8001-23fbe5d76f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0529382f-b244-4ffd-bd03-85523b95d01f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66fd8152-1a44-46cc-85e3-0be99efb4738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01d882aa-4802-4b3f-9211-50bc0ef7e590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25d6e46-c01e-4256-a089-8defc21faeb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e842f755-3e46-48cf-8dd7-8f38a7f244c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1273b169-1878-4cc1-80b4-106c2c0b360f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8836b0-c8ae-4dd9-b162-0015bc318fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f05a521c-e619-4ee2-a83d-54528827151f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87fc1ed8-2aae-4de2-b009-a69360478422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18c9804b-5847-4cb4-9f4c-4afbeead0df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19add161-321d-4614-b014-9867b1166edf",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09eb0d1-5649-401b-a54d-c9ccf8d7f3c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a758fc5-05c5-4d82-b24d-ca835f128dcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d192d9-be1c-4ab6-aaf7-2afad5503272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bde228fe-4988-48ca-b9b8-a554a476bd36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89477410-853b-4790-87ce-e6e73cf2e596",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b01414-abff-4c8d-92c2-87ba74a0fa57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "058f690a-799a-4883-8364-8eae30d03959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13053c84-d9d5-471a-a279-618a1de84f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d608fe7-d066-40dd-8429-b4062b30c595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5091dd37-bb5b-4b30-b10a-426a0e1cb902",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24d2e236-b683-4cb6-9d4c-990899d9ea11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0816481-1d53-4ab3-8f68-7ba932185ce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b0f7cca-6a4e-4cfd-9bc7-5d07863dfd48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd06b5bd-676d-4018-bf3b-2747fdc775b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d823b21-6ce5-46b3-9e51-fd1ff8d8bf25",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "673e51f2-af03-4134-a013-db7ea7b6497d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da804245-2d30-4591-b906-bc7715ce9a99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52283ee7-a467-452d-bc03-0b606ec2f009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8999be3d-afcb-4927-91bd-2e9a1dce4c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f559cf-7d54-489c-9d5f-dbf187297116",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76282352-d0cc-4246-9bc9-96d167a12223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c43f5fdb-690f-4bf8-a40e-5cfd05fe43c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e8f6a66-cd5f-4565-b92f-12a8741edeaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b75bd0b9-72a8-429a-a49e-0f16a8c21cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "783f0a53-8dd0-43bc-b086-c17f0312c771",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c29f3ab-3d18-4df4-8b14-b2546a87477c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c6e2c1a-d203-4259-b340-6eb464b65072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8bb6d7-1c21-465a-a48f-e19c9726d36e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9125b043-77ef-44ff-bed0-be97836a383c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd7e4c6-3eea-43a4-b318-49bd6177b8d5",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "727f1d6f-13fc-4207-9932-c63a94644b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c07cedb9-044d-42da-bf20-d08e539f9c55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3bd9248-87a8-4d1e-9369-a2b86f246b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7374f634-efaa-4193-9514-21a3593da792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed571513-cf49-4629-97bf-25ff0d75d180",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce086f9-98fe-40dc-855c-53dae5b7675a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f66a1b45-e9d3-4b35-8379-4028428dac8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ac1d42-b25e-41cf-b440-2c9ceea6b696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bc5bd38-6ca4-4408-9c45-87e393220c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a2e71f0-d1d2-4724-996e-480ff5071e4d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e02c8c-1b8a-4a8d-8775-db088d491a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f0acd8e-9d60-49b0-bdf5-5a2e9024559d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d94645-2cf0-4184-8de6-0e1f8e44300f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3a0386e-b987-4a3f-bd70-8f8b8e0d79c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "874c98aa-b918-45e6-a1ad-5beb77607d20",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40fe5fc2-510d-47dc-8d2e-66200b64a103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e565b79e-4fc2-4629-82cd-36839075ab49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e3b804-e752-41f1-94b2-49c4815a6d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "feaa6d07-e00b-4d47-8568-efde45c62856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c003cd-617a-4798-868a-8231caf0cf55",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdea7665-a7d0-49d0-9be4-638f0a89a2a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f133ed2b-a2cb-4fe8-a8f0-005e52397d00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8e5214-89dc-460e-ba21-4304f022b860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d563f76f-21b7-448a-b816-02a3ba1c7b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca50b07a-4522-4acd-bfc5-e912ad5dc3e2",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff056e6-47f0-44bf-9147-49e303e2a9ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1244ac9d-9714-4c91-88d2-1b3d1af1278d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a203ac10-58f3-444f-b21a-0c10c8e8e0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6d0347d-9080-4e3c-b3c8-58b63d7b3f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ddb2f27-d45c-4665-ba36-c7e7aa42a5fb",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebaaccd7-9e16-4587-9b94-0ca956910b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cda5493-5f63-4df2-b105-b2ecbb84091c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b36e5c1-b7ad-4026-82cc-088a040212e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b889e22a-879e-4a4c-a12e-2ac0752771df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad52bc8a-c890-4627-b52c-249d0275bc92",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "837ae9f7-b7a2-44a1-8100-1705a3fb2ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8337faf7-5273-464b-bcdc-7f12bc9e3377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4c763b-4ebf-4323-ba3d-f425b4e4d20b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e89a2e0-ffb6-4862-8c51-9de26d57ce20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e6ba918-8239-45ea-998a-3fa7d10a433b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75566acb-a830-4638-814a-0a95df7edc4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbeb34ec-6f66-4de5-bd40-658d1cddb3a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1802862-6214-4a14-8d07-7e9087606bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "45f834c0-e13a-45d3-a0c3-fc36c443f7b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b0b339a-c796-41a4-92c9-52c1e944da7c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f7fb66-d596-4136-9f3a-1fca178abb45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24f5d7da-4265-4ea1-b4e6-9a8cecc4f952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5273c011-bb1b-4032-8732-9c981ea6746b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "101b601c-545b-46f1-89d3-dc7b57affcb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56663de2-1683-4331-a6b7-b63a3b02d7cb",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c91295-cf96-4edf-8402-d9760d37979b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab617efc-8af1-4323-a619-bcd1f4f4a892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72dc1809-301d-4e0f-bb39-ce8c7c423d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cd51576-b1a1-41eb-a323-b039816eec49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d511a1-59af-45c6-8b38-0daf87f10aea",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e17574bf-8f1c-4628-8e4e-5f2e87cd9e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e517f109-892a-4aaa-a866-fe0bb329d367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4718475a-2405-48aa-8688-a3a45f185ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c43c02e4-7964-4957-b5bf-9ada044a3913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b15ec1b6-7363-42ac-8c9b-90fe14c28657",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f838683-a58b-4e06-b913-97606178cc0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "341315c8-4a6b-4aa3-a3f0-efa55cdac7b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "354a7f6b-63e9-45f7-a8a3-5ce58757b8ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "843b5766-af4a-4ba8-b697-f86b2bf6f328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "803e0688-3f0e-47f7-beb4-8f770465891e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab4aa67-66a6-4e60-9004-a21b799b93be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de10f732-96cb-40a1-82bc-ac8eaac15c2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "996e44fc-8cce-47f8-a607-a27eed065d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7c52671-f324-4087-a0d0-912efdec85ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8720193d-cbaf-4fcc-8c2f-62f42526636a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "329c1706-da48-4ef9-af8a-3013d3ee32c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e859825-19bf-4ea5-861d-5f6f5afbbc87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4cdcd45-95eb-41dc-9f4a-4fcd7a126fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "153a1c33-b654-436f-9647-0f597b161221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b237ae-04b5-45ac-899f-8216bd5eda35",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86fe4e4e-1333-4df3-bf6d-37c3e133e74e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d14a06fb-c806-4a5a-8c06-562fe6fc2db3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ba3fac-43ff-4062-b441-853b0b2c9902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "59a78e4f-918d-457a-8c68-10037223f7e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87418834-9592-477b-8e0b-481f4658f6d8",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd5f66f-1aa2-48e2-8235-0895939529de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e47dbd3f-9916-4730-85c8-ae16fde8c99e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ce0ad1-b77e-4a6d-95e5-233cf1fb011b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d20bb49a-d1a2-4ed0-8d9d-863897d639dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f6a172-d49e-4cdb-9727-64fad8e3b908",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00a16759-8d68-4b9f-af7f-9713d9e38689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a5d7baf3-92e1-48ce-8a83-3a7eafd7a600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82554c8-cf04-4dd8-91a7-bc0486afcf79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2ab5abf1-0592-4e64-979b-5e81ac2c682d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f8a60b-1c94-4878-b3a9-7c1c103db53e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b22b923-87ac-4fcb-94cb-191e07ad1f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7051acf5-5953-4a9b-8890-1f39e7f4b092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec55e513-5e1d-49df-a586-3e9cb17ecec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "61559687-b76e-40e3-a554-a1725472e322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac69bfd1-5f76-448d-9a15-0890412872ca",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ae016e-4e26-4c6f-8d5b-b810ff8434da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "912e7d0b-cfd6-44af-aa92-e9592ec827ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "672f1a7e-0b8b-4653-b3d9-61f70e4c9d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b28869f7-2f9d-4530-b736-ec4af260cfce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee86fa4-2891-47b0-8203-51ac170eb2e4",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72597e9a-fd5f-4165-a09b-7efd54dd6ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fad91f07-f230-48d2-b2bd-e3022615874e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "143ca6e3-0830-4183-b92d-240a2d544957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c411d5d3-4c78-40e3-abb7-03dade06c552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b557385-4d3a-4241-bc05-8a85146c5202",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a7f62ec-3c6e-40b3-81db-de0fcf412c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad365bd2-245c-4452-939c-3272f9eaa173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48600b92-62da-49af-bc74-18ba5056cf4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a73b8e59-1ae8-4818-8f48-0fc6dd8d16dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf5c9e3-116f-4d96-87e8-1b648bc532c4",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "670a03f6-98c3-4cba-8fb4-cc62dd3a1e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77e90785-6331-458c-948e-9c63839819cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54c5b0d-400d-4533-8dee-988e6c75bc5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe217f37-f763-428c-94ed-5b163f61b354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca6033d-4f43-4669-871c-44752049aee7",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "851d5c5a-b77f-4f61-beed-8068abcc3b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0206429d-15ec-4b01-b30f-5424c97bc920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d2cd18-c94f-4665-a3db-f5223d7775b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "28350c13-94df-4420-94a1-40d537de4647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea36536-b438-4255-8a11-964f04198c25",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96addb55-928e-4e16-b793-8e777e992a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "280754e5-ac12-4dcd-97a5-ae497085a886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ca7fec-f1f6-4143-86bd-62427217eba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "85a05b31-3684-4bf1-b007-844341fa1663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c7d7260-9226-45ca-b55c-fa316c785e87",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07396154-c09b-4fef-8f6d-f906228295a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "978344c9-3219-4cc3-83d8-fce74645bee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f94453db-19ae-4512-9d0c-c059ec40035c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "b545890d-c684-4514-9009-0c4e884ff7c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "111d801e-af55-4f26-9018-01d4ceae8aec",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0495d2c4-c415-4203-817f-459a854d6229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ea2fe2e-53bc-4172-a0c3-f93a6e8f37fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba33b2a-8f9b-4af2-afb6-76ee3ea6aacc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2dfa486-8738-4b1b-92af-387b6cbeeffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775fc1fa-ce82-4955-94cd-bc8bcba26075",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "256e614d-1410-404d-966a-de3b2383131a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab361727-d843-4188-8173-9c6c0f2737a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d79f41a1-96c2-4f16-868d-338e213ec6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e79d3b8c-56d3-424e-8e24-4544537c707a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b06d90-eb83-4726-a522-cab7080a0a7b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff81dfaf-2c8e-41a7-8e17-485459cd87c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83b17a9a-ff6c-4781-9540-34185e789bb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df9865a-2311-494e-82dd-58ecd44eccdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "638c8904-7734-4927-b305-f972b00f9143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "433a10d1-ddfa-41fc-9496-488095d7a63d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8350170-5c9c-4f3e-8dc9-7622c4d686bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16578a1b-6e71-49d0-9c32-420e916b6b2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f0a0774-e9ea-4e47-932d-2f107efec698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe4e93f9-7546-4349-b0da-12469f5d0131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09811559-d700-4e87-ad9d-6b94a7f88da0",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "061236e4-9cf5-457b-91ed-906b2d8453ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a2481cb-526e-40db-a564-74fb9bed59c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ac459c-c73f-4da1-952e-e549d354095e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d701ae5-1eee-4169-bbb7-8aff1941c3a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8a9fb4-577a-4259-a7f7-61ca735e1a6a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0629aba6-aba6-4f60-9db6-6dd3a1f52572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcf6e58d-d985-4294-9d14-2f435446cbea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e673dd62-0f3e-45ec-93c1-0b1e32ed6a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b18d5276-fd5d-4ee6-9670-38865cbc353d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e78cee5-2f1c-452f-b3fb-5c9c2c27d141",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f01d00-88ce-40a7-811b-17b86ea40b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "446855c1-a6a8-4365-a66e-1112e3bf24dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba13130-4e9b-466e-a3fa-cf6569d4f225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b59733c-3b97-4e60-b9a1-7d2639d006ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a0f2f0-c5da-4cdf-b456-a10f4046eec3",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c713036f-2fb4-4389-924a-33ebee39a6de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c68c978c-308e-4cf3-b513-6cf30682dd6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7eff0ab-a9f0-40d7-a878-215310ad07e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "19978b43-d532-4ac2-a73d-d34a3852f37d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17021246-a7d9-4906-9a41-d2e6a01349e7",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a02038-f74e-497c-adb1-0f9469c38b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "485c588d-63bc-4c99-bbb9-03c368a4213d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c41c77-ac51-421d-95b7-3088b9f49e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "060c7cb9-28c1-42dd-83b9-2d1c87095699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934ecb4e-5fcf-4271-8d0c-54e9132e3004",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c70d917f-cfce-4797-9e72-c00b3955a12d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d711970e-7ec3-4a00-84d0-91b32da06e7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d6d8ec-2c26-4b58-a8b1-7e702ab097d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bdb5215-100e-4003-895d-a34c16c9eeea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b083d64-6131-47d7-a8c6-76ff1f004314",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc719bc2-e9f0-424e-bb24-ac140de6b8a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d24da29d-c5b9-4d0e-a6c3-3b39a64212b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec95845b-6afc-43d9-9499-89b00b57a89f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e9d5940-3a95-4aae-9266-514a7bd5949d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea69445-8204-421e-95d4-239be0033be2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e9814e2-19cb-4c4a-9778-b3a08070f932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b3acf37-bcab-4e4c-b781-c2813883c97d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f4490b-a374-4546-898d-a5c8175e5a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d9543418-ed2e-4956-8592-cbe2add7dc64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64c696f2-ecf7-4e59-8b80-1e6e8c942f6e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b180801-db35-43b3-84f9-442a995bfb9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccf30d3d-f127-4584-9ca2-f98100a8585a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe89042f-0a97-4165-aafc-0f96801bed66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3cfe3354-f43b-479a-9234-3d7d08d94ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7884f24d-aadf-4a6d-95e3-6a640e09510a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88237bf5-10bd-4eba-840f-8b0287c0c642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a576c0cf-16fe-4db4-b67f-0f265c43fb12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187498d4-c1d3-4174-8712-2e74d31d6ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1112b566-47e9-41a6-9590-242dba132b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee1270d5-9b9d-4013-8b78-114cd678b0a3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b99f84aa-7ab8-46c2-ac5a-956fcccda076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50b2b337-1d2f-47b4-a218-08e21dd40584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc5d797-2d4f-4c5d-89bd-316c8a3b93d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e81c572-f491-48c8-be2d-5debf265d34c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c471cc-2492-4b73-b3d9-c12da6897a33",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "500897ea-887b-4ba2-b555-d0907d99b828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0a9cb46-25ff-47f5-9898-080fd31321be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb371565-ca97-46f6-bff5-919729fa4b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5d7817c-ab84-4aa9-8711-8ffe77351c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952c353c-6105-48c1-b079-c889a9a611b8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c730c1-9ebd-4265-9c9b-97f435c428f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8b940c9-6872-4af5-ba7b-50cee3470cea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57c937c-4c04-4c9f-a2af-81ed5ee39e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "13babbd6-a4d9-4225-a6ca-7f227a0e60d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25cc63b3-ce63-42ae-9c41-0c844c403115",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cabfa80a-1b72-42df-9f4c-bf15c4c7ff73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a89229a5-15a6-4287-8e59-f06f6b279b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9706dba0-c58f-48b6-9344-11c9103c455c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "43c54c19-39d0-477a-9f28-5fa7ad3a36e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94928657-21cd-4a00-9984-6163056a854c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d812c643-fd84-49b2-aac1-9435b6d3c848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a68ddf0e-2187-4cd8-8a0e-25d0235e087d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6075973a-46e3-4ea1-b5be-316c13553eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c94ba199-cf50-479d-8a7a-01c5ae460f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fae0930-25a4-47ec-8d30-b62f4c187176",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64879aa4-96be-4206-9387-e33430822f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ec48bc6-da25-4223-ad26-97601d975273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4247c02-e3cf-4bb3-9d8d-116851b16f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae96880e-d91e-40ce-a258-66aedce8d53e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2349616-58b2-4209-93ed-376c3e707c1f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf649847-39d8-4ab6-8581-3ec6ea064f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db729895-50eb-4e2a-8e40-b2ff5c0a54c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2296770-fc98-4f33-92f8-f880d26400d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "53daeddc-c68a-42ec-a6ed-de69c6ee8e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25822c08-0304-45ee-9f75-d2c77cd0972c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc52b03b-cf7f-4400-8d51-f6f132ada188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bec75ae-60bb-472e-9edc-d48992c8a01e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90925681-c964-417f-97c3-bf90bfc3a960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a49b809-7885-4194-a27e-92d0be5b0254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de14498-8395-4d1a-ba54-23cd937c1185",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f7951e-9a44-49a5-b271-e53260bc125d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1168d242-f0ad-468f-a370-8f4e13826d44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd14b05d-d94b-4a42-929a-994d991e0018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "884ac632-357b-40f4-be68-c47556d87d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e0e23f-6692-47f2-88dd-cd4d1fdce6f0",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68dee9af-19d9-4947-a944-bfcfa0bb7b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15e46287-cf79-4e46-b519-0daaa81cdfd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e562cf3b-c3b8-4bc7-a007-f7ba1da6146e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d46bfae-4939-4557-baa5-737f97aa720d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa4b77ae-cd0d-4e2d-ae69-6546ced68924",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b6e9fc-9517-4dae-9dc4-149611db428a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7026cde-0298-4185-9bf2-a5a16f7eb8e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc327b7-0257-46e1-96e7-d6dece5aab3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "16a7eb7a-01a6-4944-b819-0026964abcae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7fb4897-4cbe-448d-8e48-f40b7866ca14",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33bd7865-5148-4345-bada-45bfb2002e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53500db6-7bda-42f9-a63d-536c7ef09c6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7614e9-bd44-405d-9152-a16c1763f154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "643a1c4a-7db7-4f3c-bb91-fe8ed7d68557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4ccaa8-784c-4055-8169-fb9f1b804d7e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a490e0c7-0dbd-4ee3-b28f-eface0c9e808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24609ef0-1f97-4aaf-82c1-93539c59da38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc339ef1-becb-4f11-b408-5123d6275bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "04efaf90-fba5-44c6-a93f-89b6b05b46e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b9bb6e-f9e4-48b0-b14f-a2abe7951e8a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85967fdf-f902-40ed-84e5-307be7706964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd095ada-2cbd-4229-91d0-e296130bf1ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848864d1-9859-476e-b084-97dc9e658797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcdca80a-0d87-403a-ab0f-c528c4dfc639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb1ad87-1c9a-4a31-ab6a-3c62fe952820",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5198b9a3-59d2-430a-bff9-ad8a4975bf57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5572608-414e-4c6c-ae8b-14b336072b01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f2cdff-3b7e-4445-9cdf-b331c3a4d42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "93e4c651-3de5-4ad2-a7e7-6cac72a28217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ad0174-67d8-4c9c-9f0d-0938c4f4e01b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a9599fd-4bea-4473-88a6-c82fb3783769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a179ab8-a50e-4766-b4a7-d13f0fbaddc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5469b2-e97f-4b7f-900d-17d07e2de493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1b62346c-f7d3-4e25-a419-a5f53ce0552b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9430d86-d770-415f-8067-090ac85b7f5f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6366d86a-8a53-44d1-86d6-40a6908d4491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "040f86c6-e511-4793-95ad-d8ee6bc97022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e17b49e-b068-4c33-acf5-ca421bb2e22c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "78bc5e1a-1238-4c2f-a06a-fdf515949d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eef634e-4881-4597-944c-ac24f07020d8",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f035450c-1dfa-4f0f-a3d1-03566910381b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "702ff83d-31e5-4323-924e-68a033abf7f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe0a213-365f-460f-b7e2-20b87d444c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7065467-809e-4339-be62-edf44b6ee93c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c4006f6-3293-4139-bc24-dffa358337fd",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc4c78e-a779-4a4c-ab86-93c6cda0a4ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b707b7d-949a-404b-8012-b848a0140419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "704e8bdd-0ffe-48ca-9b2d-318f4f555b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d803b9ac-1a01-47d3-8623-1065dda02e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "021c5bf2-b976-4071-b7de-4f92a6ba4686",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc92c991-6129-419f-8365-398d55193d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "371f8545-9ff8-412f-9f69-a4c74315c4ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e92dcb-c2a0-4483-9606-98d08b81e884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c933ba4f-f203-4887-85f7-92410d6b3dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ef329b-08bf-4c19-a62b-6412b85339c5",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36636032-f72d-43b3-8d72-5dbbba3da56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ca25632-4c24-4524-98c3-1a27500e8376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fffe0f3f-9eb3-4634-a404-5ced6217a429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e95e7953-9931-4acc-b0d3-1069e552cab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15876063-6b90-4608-a591-d4f07c7a0b81",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fedc19f-2e69-41a6-b67f-5a45a7f2b8c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "689823f9-3a76-47dc-8c15-f93673e4cb45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20461bc3-780a-4f05-ae2c-a584738eaaf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c0654bd7-4842-4235-87b3-0892ca982957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73546c5-1d63-4617-bcaa-d823abfe1aee",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b319ea-1f95-40e4-b566-f1340b3c9d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bebfc6ac-300a-4260-836d-d8bc46fd09e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7efdc1db-ead0-4063-8d66-2500d47c8a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8a06e40-acb6-454d-9ea0-900fdc10a2fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d316ba84-ead0-45b8-a0dc-1d7489f69c88",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c79c9f-dc41-4ae4-bce2-ec84e4f33e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "398979d3-991f-441e-bb8e-36fc41cca06c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc9b98d4-f59b-4816-96ac-398515d98259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37671233-92f3-40d3-9791-974adb4d3f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb1db54e-ebd6-43c9-b8f9-d567e0311d1f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45fc0848-a00f-4835-8ddf-8a8191a7b7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff93498e-e67e-448e-b381-e9c249b1d962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e99da2-958b-4a2f-ae22-18c8ef9a83d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae28e025-b052-44cc-a46d-1b734406023b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0903b11-e573-441c-8731-7819e1dd8eb8",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a1d031-bab1-4bde-a303-f381307b7aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58474dc0-aaec-4682-8ed0-eebc04b3bb65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dc4efb4-6abe-4acb-a7c2-547c1f5a117d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "05261f0c-59c8-4e70-b14e-5e3d6dcdf4f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f4665f-b71c-4a52-bd5e-7c538f8fccab",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54499b1d-8c32-4f61-a39b-87704f8bea2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65dcb334-232e-4f15-9ae8-f8018bc8224e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf54b03-77c5-4af5-a5c2-1f2452123ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4d8ad80c-b36b-4765-ad06-8c1a8c73c212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24fc1e4e-109f-4a71-92ca-14577f00f8e4",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbdff29c-d065-40d1-827b-910ab394a82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be2f9fe8-ac79-4da3-affd-69c9fc925468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e4b15a4-f151-43b2-9569-15d508788e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "331bae6f-eae9-4b8d-ab4d-a0e5457be3d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f16e0c-f744-4f86-adbf-68aeb5398b15",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55b427d8-14fc-4401-b20b-076489bffc5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "463993ae-12aa-4a45-91e1-8a1427c41cf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36235341-0ac2-41e8-bae9-b7bafa0409ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2ba1c11-8778-4b17-8c7b-4c7989678385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71a5c189-6118-46f5-8940-c06fec3a6e17",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3706e1eb-6a90-4cfd-bfcd-f668949b2248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a3a7cca-82bc-4076-b9f7-89223adb6af3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f836d162-0cc1-494c-a6bd-3859ce81d0ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "728b4485-8d00-4287-8d06-b64570b56147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec05411-21e5-48fe-bdd0-b82104798a16",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0fe7ea0-3644-4a06-a0f8-956113785612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18905b6d-a633-4649-86f0-df8a0165cbcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9cf9214-a5a0-4383-9c0e-c57f8a766679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "09a9ff5c-0426-4a95-9886-3942f79c3cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "010b23b5-1f71-45b2-8865-b58ca954cce3",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d24b263-006c-428d-9261-3b3512d37601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18c5e8cf-1ba6-44b8-b82a-a0f11e9bfe8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "143648e2-7c55-41d7-835f-17914041c4f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "462b8ab9-8d6d-481c-88d7-a278b3546648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03fadf3e-d3a1-44ad-9330-5dc0e1488917",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13cd6535-80cf-4c38-8678-9cbfe5afab07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb238a20-eca7-4524-bba7-98dbdc54cdac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b7974b-a2bd-4221-90f6-df9930355efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "994379fa-3a4f-49ba-9f2a-a702d74401e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65cd0354-5705-425a-a0e7-340c9ee4bcf4",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b7a2a4b-746a-4d22-9e5f-393cff038b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c217a573-aa77-47c3-8749-ee4b54910446"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b2bde3b-dbf2-4aee-b81c-79f9ab963875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "42c93225-757d-4937-bb8b-a646d15b3945"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "749b6848-15b0-475a-9182-8968daf5581d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5f225426-3033-47bf-b327-8e6368c0e01d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5488b7-4e8f-4110-9bcd-3551e0209075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff0dea9f-2fcb-4df7-9acd-21ec91741cd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72f5ae75-3b07-4998-928c-4104aab81b52",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe53d50e-acc4-4bd4-b112-52b153bfd0aa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d34e61ef-fc14-47ac-b80b-d51552d90e37",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20a7f179-b34e-43b3-82f6-321d1941800d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9c56c8b-1900-454e-8756-ad7348ebc081",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c5e1eb7-620e-4b86-8f17-d82062dd9857"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a9ea379e-88ef-4f67-bdf6-1768da9b68d9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "74babdad-6a3b-46ef-bdc5-f6b773c8600c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1517cc7c-6234-41dc-83b1-e1e87ee047ee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "224fac80-3c2e-4df1-b5c5-b717e0df14dc"
                }
              }
            ]
          },
          {
            "id": "c7fe63b7-031f-4033-aeae-2816877bd874",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c814c39f-c75d-4b23-8c9a-6f3f92880655",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "ce4aa0bf-4986-4ae3-bb87-136ae60d85fe",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb6fa96-2069-4e8c-9ef1-0fa60f8cc6a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7417769d-7d0b-402b-9680-6781388de452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f05ba2-6479-4209-b16a-343aab8223e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3d8ce3e-01f1-452d-825f-25fc091e88e0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bd94d24f-2810-41f1-a3e6-5459a1de0ea6",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2aff7c76-632a-4b3e-9de2-198a287b9c58",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "901cdaaf-82f6-4299-a8da-57a6d4113cbe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "185e43dd-2380-463d-88cf-148019fe45d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1d656ac0-6bce-49fa-b709-c50517c28e82"
                    }
                  }
                ]
              },
              {
                "id": "0d3dae65-61f4-4bf0-b4dc-9cc3094a4499",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc9c436e-4360-456a-ae2c-96acfac3ec5a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bd0c1ef6-8220-4c6d-b319-a39399ad419b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "42f0eef5-9cb0-45ce-a4c0-a45fea7266d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d1e523eb-9cf3-4d13-9c2e-c0af0be201df"
                    }
                  }
                ]
              },
              {
                "id": "37890eda-829e-40ad-a1cb-34e148e1356c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa5e0bd2-ec8c-43a6-926d-58759a7d94a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d2f68017-e812-4264-b1cf-aa319bcfc5f9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb22b665-f5fd-4d85-8911-f03f41d8cd07",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "307b1007-6250-4422-a9a5-eaecb0bbdbb7"
                    }
                  }
                ]
              },
              {
                "id": "dac47c17-674f-4191-91e4-44a2270bf80e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8cd74b7e-b82b-480f-846a-c75ba36aa267",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "29bc9071-2591-4a14-a568-ec943c63c959"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef26763e-35e2-4394-8bad-8209dda0a06e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "bac28f5c-d40f-430e-bc7f-6ade8c9d1557"
                    }
                  }
                ]
              },
              {
                "id": "8c1253b2-0859-419f-b74a-4e99a8c873af",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d7246d76-97e3-41e7-b9b7-b4c2af86a713",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6ff2c845-7e18-4892-b1f5-9f0eebf7c418"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6433e04e-e23a-435e-b923-448d86157aee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a57fc235-28b3-40d2-a398-f135c0f8247d"
                    }
                  }
                ]
              },
              {
                "id": "fc0b2bc0-bf47-4cce-a090-4422139f30d2",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "504144c8-f721-45d0-8556-004ae46e2d55",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5a206760-f92d-442c-97f9-ca1efddbea1b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c0d58ea-f3cb-42e1-9242-403d2257be58",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "447f0cc6-acad-49cc-9aff-3c038274bf54"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "02d13e4d-d15b-4b3a-9a9b-75ad750c820b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d2bb53e4-a460-4a59-b1c0-ed3d26070ebb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5f3eb9b1-54a3-4519-9975-ccf9322bc29e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5173667c-b933-42da-b3c7-d53ae8ef1a37"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "69d88b52-2f07-40ca-a630-b7b02df892c5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "138d0bcb-03dc-4413-9163-2bb453e1b3c0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "12ea7beb-943a-4a64-9f76-fa6f1b862874",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8bfe64f5-e034-4576-b2b9-0601fba294dd"
            }
          }
        ]
      },
      {
        "id": "5fd7d07b-ccd4-49c2-9c5e-938210a90e80",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "384a8d6e-692d-4c1d-89f1-1272ffdbbafa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5f318f9b-c089-45fe-97c4-3319a917790c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ba7924b8-9e9e-4ac4-8283-644e3805a88a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc1bd8f-9d80-4198-ae92-c24fbb3c700a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbf66f0c-bd91-4a7a-a4cb-1c59c22f0bc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce263bed-28e8-466e-a0ff-812382c87478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e1eeaca-c689-46aa-ba2d-049b8debf970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d81d5cc-4d38-4e06-b418-8cdb7dcb678e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f3b938-579d-4f7f-afba-30a06911bb3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f90aaf8-b5ce-47aa-8223-db2cea6dcf0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9196b8c8-7a9a-4b87-bbb8-d973d0eeb7bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b73ef006-44b2-4f08-a2c8-6fe30374208a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "251f7069-d918-41bb-91e1-cf96ff143599",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e98a31a5-c1e2-4817-b146-81a7934b82ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1660c79-455f-4df4-951a-c0eba27604d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a859e127-97bd-4f84-ae92-ce42fe553fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e853936-f4b6-44f7-b93a-8b9a3d307fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f701a53-be30-4c41-9b4d-e467f375352b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd6ebf6-ba14-4d94-9d5d-0cea08f89335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8db1696-492e-4895-8412-b35a084a4637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20cec3d8-a854-4b65-b833-89891a31dc57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9ce317a-c7c2-4a98-a822-2f11047c8602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "347464ae-115e-4cd7-b455-2fea236a438f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75951ce8-2091-4e36-abc2-fcabd48ddb2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "166411b9-a361-4549-adbf-5ea193d1f2ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1724dd5c-70b2-48ae-9d0e-e49b181bf5da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c95b0991-d7f7-4653-a488-b333a54a05ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bdf225a-614c-4720-a40b-d57d24245282",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9644eea-7c59-4dab-a3d5-261eb80163a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50df57a3-db46-41c5-b17a-285b8ece0cd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c81505e0-0b9c-476b-ad67-7ae462ef2cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d441893-7dbd-4888-bfd5-9d3a3e0ab003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc442ffb-1d0a-4914-83f2-53363f8fa182",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "575d11b3-afc0-49fa-a544-0a0732b17598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "584ca97a-778f-4cb8-9570-a33f64f3657e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b86ffd38-b6ae-42a2-b49c-483cb273170d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad8fe80b-85dc-4953-b919-c858138488ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da352515-9ccb-4869-846f-1f789d33fc5c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffbd6a43-3ebb-49bc-8eec-7c252a293e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a2f3715-2d49-4032-a809-af94668b3446"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7aabd15-0c22-44f6-af5e-efccf0dd8afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cacd6d53-03cb-4581-9259-14fae4048d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b56a27-03d4-461a-ba6b-c1081e60c211",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33279893-811b-4d0a-8a72-6bed0e8ac3e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c921eb0-9632-4d8e-a252-0b06a5337d93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "352f12c7-ed21-4eeb-a948-f6bcacfb0950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c30e67a-246b-4bce-b50a-5f98ed1734cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b3eef1-8ad2-44d6-80d8-bbcf7dcf5533",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fdcc3e4-78e2-4f93-98a3-5ca286f92684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd6af5aa-75a9-49fb-8e88-81031e9e61ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e578d9af-752f-44d1-b6a5-9b4f95aab1b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2bb7b82-d98c-404b-8509-5408aeb998c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b608410c-2ef4-4226-824d-088c6c66bfe6",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9059b151-c509-4113-8510-1ee25ac8d892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09a32ee6-9c5f-4f1e-b2ec-96fba8c1755b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "679accf5-9d92-40dd-93ce-c8761290f6fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1f8118ae-2df9-420b-9a94-1e2378a43e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7444db-16d1-426b-878a-54b021179b77",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e0b9f0-6944-41e0-a2a8-8a85c3831971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cafbd39-0df0-4357-b6a3-a8397831c1fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daadd56a-8168-416c-a731-95f4374c3544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "32c1d32c-c6f0-48b6-8a5a-8c9f8eb1d4a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d1158d6-5523-491d-b4b6-e427e487a9eb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ecacb1-d53a-4d46-93c8-1a5c2e567817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07c4db87-d73a-459e-86bc-220d8531b630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9759c8-aa8e-4c8f-adb7-0da4cb3e4c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b0fdf69-6663-45e1-85fb-431128f6b983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566529fc-8d97-4ea3-acf3-f6625732e4e6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da9e9a14-1387-46db-85be-2998ddd4d78d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "729e7c26-6ef7-4176-a4df-a4f92387316e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "833af90a-e9ec-4f57-b276-4ab9a974df59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "da1d8a42-d845-462b-8864-6142fe96223d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec8fdd0a-8083-46e0-a3b5-d9600b0f5441",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e788ef-3650-4b21-ba70-a5e17f42ebf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33ffb0c7-3de5-4bc1-9404-ec4e37c63e2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4abe9954-9072-44a9-b6d2-bd4aa582cf39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbbee8dd-bcac-434b-a40c-9ccd598ce56d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7978f8c1-7b53-467a-a8fc-1946c002ec71",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e759e89d-0b43-4200-bdac-064dc51cd35b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e5690cf-4000-41f3-a78a-cbcb49578a83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389f3669-e67d-4848-a945-3aed10d55695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2aa9984f-a365-4a3e-a389-57cb26fad385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54013e4b-b9be-4955-9c57-c4167df8d96b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e744dff8-d0a0-4927-9e92-e0a50c8f4523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd74d4be-3532-4b0a-9d0b-df6e678b84fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "362635da-2629-4410-a6eb-9bdb530e4cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b983bff2-0663-4fff-afe6-6811976b4443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b77c352-cd64-4d73-a9a0-be59f6c54508",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c97c5456-8d65-4a98-8281-9391e17485ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8073f247-4a5c-4017-acd9-77cf23a919f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "846bb189-1271-4f75-915f-1d563b14bea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c014769-52b9-4174-beee-f547e0be8e3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572cbfbd-6480-44e2-bca3-808eb7329c96",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1affc96-d6d8-4d24-a9c1-23ce844f43ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbf57750-6c35-4c58-a976-bdfafae6b923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e751f1-5c53-42e1-8498-56fc77fd54d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "386b5a2a-187e-44ab-9115-83ff9b1d2b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f44e9fcb-10ce-459d-962d-2cfe3bbc008a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c54d57-43ce-4f13-9710-8df61a53efd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96963b7e-54a5-4bae-b1be-4ee380b29a8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d098449e-0116-4f50-9fe1-ac25362dd67c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c505c75e-c8d4-4ca0-a34b-2a742c24a246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a21f6b-afa6-4e77-b531-dd4f1bcdaccb",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "330d1507-a0b5-4198-b083-125650aa96ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b15c1c35-2578-4d3d-9489-a44a0556b2b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd3b51a-9e31-41ac-a710-02b259a7ccf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "028d4cff-419b-4d2b-a73a-30d16cbc48ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5cad771-e0ad-4303-8848-afe3cb91dbef",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "426ccc90-564f-43da-b3d3-0627bac5da9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "138f22a5-3650-4c89-8be0-e36804ff8548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e22384-42f4-41c1-b44c-1054031c7de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a6c1bdd-2f1d-4bef-8ee4-d1cd8640088e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a142f764-9a5e-451e-8c82-34d504b6da9f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb45331-9ebd-4270-9a50-e4210e80df11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0871ddd-fa64-4b48-87eb-8e3b4837a288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5374fb2-a73c-4a83-8f2c-3ff80a9d6258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a32dd97b-3e0c-46d7-b291-148940f19fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8890aa9c-7052-496c-a4ac-93472de1cb2f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3229f1f3-31a9-49fa-a447-808d109c25db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d551d39-0b96-4ef6-8ca0-c2c52f88cbb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc89c093-8390-4d71-b6b8-fff286da304a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "033e4665-f383-4e71-85b5-fd44cc41c0ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae27e95-3e23-4709-bfaf-83b29895060d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "181bb4e8-e94e-4269-8140-4bb51eede43e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00882dc6-e6ac-4262-9f63-94d5bfd578b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "606b5796-d2a3-407a-8523-48f7bb517326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c8dbd1f-31f0-4f8d-b77b-7b9d5d5f547a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a790da-4d95-4d53-822e-a394b1ed2e6b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa327fd-d41d-4eb2-be91-589f1e25e657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d835cc1b-66d1-49e5-bbda-0adf3cdbc403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f653aee4-37f7-4524-a268-c99cb878da35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fe6f4d2-96e2-47b3-84ea-a2a92562a0d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e4f021-8be0-4612-aeda-3d2b9b1a9f5b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e5a7e9-aa8e-4fa2-9a4c-87271e74657c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1f9a96f-a4cd-4b10-ba07-3ae9d9da7d51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edbaca87-31a8-439e-83a2-45847242ba48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89dd4fb3-158a-449a-b4d3-e1de91dd859a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f49427-53ae-4c91-962b-fb5b65729473",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7a751a-941f-4dee-b0c7-4f9ce01bb501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84350c39-aff6-4894-8808-3d27553e2ed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f31afa2-f647-404e-bfef-67db148650be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f12f7ff6-e6ff-4057-b267-cd613a0dd3ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ef6882-6b3e-4629-a3f1-8eea3856599b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e01708a3-5452-431e-a64b-5332588e08c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a2c1704-4415-4a27-9394-8de00dd02296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95b5d80-3ba1-4c61-93d1-d913be4e52b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce90bde8-514d-48fa-be23-87978dfee145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2fa1318-155d-4d65-a872-5018bcab80ca",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c57af8-7997-4c62-8fc2-5ef512eb76de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2acc684-d648-4d10-92ac-41cd10c31c0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d49c2b-c084-4781-bff3-4407fb1a7f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3295a4b7-7c18-4b20-ab1f-e861833a8a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa58209a-907f-485e-8252-447dda1cfcf8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed95cc7-837e-474f-9b3a-4ea84ac74d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d77a5c0-da4f-427a-830c-a9bc079b500c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b05e4f43-3e28-4a6b-b859-a2b7243c64c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa284869-745c-44f6-8709-82cdcfef0e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79263415-b37f-42fc-bb70-0a8d542577fb",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f8d4a3-9f55-4282-b8dc-d68de7cc3227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45578aa9-96c0-4f2c-8cb6-ba6209d13620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee9d717d-5cd2-4d2d-884f-8e1fd332f8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0904cb9e-a82c-446b-85b5-8ba52727d565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76184c92-ebd7-4ab3-b67a-321c94b2b09d",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24642aa1-e10c-4bd2-af87-e60e657d3e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df83d271-8f0f-48a5-8a09-27334603b311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db4ee07-180e-4ec9-8c0f-c1b97844e147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c60c9bf-6382-46c9-b1ca-90256e71de81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "072a47e9-a394-4765-8613-be65d8860ccd",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ef8c89-af6e-4a38-abe1-6fe1d51ccad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30459992-96f4-441a-aea5-97ac289ddf4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555590c2-176d-4a30-ac90-7fe36515c091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e92e54cb-aeb6-4bca-89a5-8136fc15df60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a0cab2-26b8-4f42-b257-aa3314ad9236",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db32fb88-8627-4408-83e6-21de62847397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76037f7d-dd7f-42a3-9533-f3ad8f5359dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b438ff7e-c3fb-4415-b94a-0fcc121eb12f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccbb50b1-b540-42dd-a4fe-51295205b064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab60a41-dc28-42b1-bc1b-cf9503a9f690",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cac75e1-7815-47e7-a007-680907f6c4f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5a04b01-a972-4d98-ba0e-e886c526a50f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7c25d3-c904-4bf5-bf97-0a0a9b004c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d56b3754-dac8-4b7e-8cc3-370571939744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e7663b4-d1c0-4393-9a80-204b8e63de5b",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9846331-eaf7-472e-9ceb-d056ba2003e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc19d34a-6e60-4614-9371-40cf36d2b1fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d24ee1f-62f2-4df8-ba28-c82a2ee2466d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea699389-d47e-43b5-b79f-417b41727411"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d4cbd3ed-f45d-4c07-bcda-97702d7fcaaf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e6d4c0ba-99f1-4407-8c46-4268646a89fb",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33186a0-0cfd-444b-b713-bd6f7e88ab02",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2492427d-aaed-4c88-9c06-e8eaa4ff9194"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "686b72d9-923b-48d2-9537-435321415b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0cb084dd-76a2-47e1-b4ca-6df7abb4fc1a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0725d5b2-2cfb-4b6a-a085-eb15ee56835d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ebba3ca2-28f6-442d-9787-28dfd291313f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ef72998-c674-4a2a-a390-7d8c780011ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "568267c7-5c81-4dfa-8fb5-9ded099161c9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "247ddd47-51b5-4a40-a0da-cc5cc270a787",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b51c0b05-836c-4b2c-8bd0-955fa283f0b2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "46089a21-aa9f-4c05-b475-4be264f96fea",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "728818b2-583a-435a-87c8-e3e2fd188e3f"
            }
          }
        ]
      },
      {
        "id": "f66b1da6-d395-458d-b49b-d96495102315",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d1b4abc3-6c0a-42ae-8714-1eadc15d3415",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e743937c-d889-4daf-a12f-1ede5581d237",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a0dd11e0-253e-47e6-8a5e-e5a8b1f7fe0d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "204ca368-331c-4782-ab68-4118da1d29de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e73f81f3-06c7-4112-bedc-e26f4b880b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3fc02cc-aeae-40c6-b16f-8e4bad85f0d9",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd67bd1a-bd51-4339-b527-32b02c478927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d107bb95-b403-4b84-b315-4ef77e286eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d91934-91fb-4d82-b839-56beb573b9b9",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16c9209-8c7b-4247-82b9-ec53a43000db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc428722-e0a2-4359-ab6f-a869484df847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452452dc-fb71-4d2d-aa6d-0525a6d0d96a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c825ed-f576-487c-88d7-c74c50f578ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72c707bd-bc42-4bfc-8708-dc8a2f8d88d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338192ba-d79c-4a23-9873-683b9e2ddb1d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd271ae1-c134-4cdb-8dbe-0467a5fe5bac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3754f5e-5a9b-449d-91ef-ddcabb3f9574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c889d24-a9cf-4dbe-b99d-0ab2660a599b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9957fd31-da70-481d-a05d-d52ffdb3b1b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "743f4cda-9906-44e8-80b1-89b12f84cc34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d27177c-7c9f-4e0c-a1fb-e36872fb66ec",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31106be5-9e0e-4ab1-b110-df89fe265f66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e32ca83a-3a6d-4622-9e6a-ffaa9ed62313"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7745472c-77cd-40fb-ab71-ca09f03529ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3789f5f6-3e64-403f-8286-647ae1c027c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fd6852d-2dfd-47f1-ae02-2e11e64a22f0",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e52be2b9-f427-448e-85e3-1b1181da1c2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85266c96-b7fc-4306-90ec-a4b5af808085"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d173d7c1-e277-4140-86e9-c77c33444bc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb80c354-989e-47f1-8036-1c2f884d4660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566da0a0-cbd5-40f0-98eb-9940f4026a51",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "201d7551-8227-4d18-97a1-58e17a6b408c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65c73318-756e-4f84-94d8-7a5b08d277fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1941fe4-deda-454e-9178-54a7e16c21f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f862ef2-1285-4c51-a265-32b3ca714603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a583b4d9-6a01-4e5a-b5ef-48e270dd5c81",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "148c4195-2b9e-4152-8fd5-ff7669c6e49a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca632c87-136d-4e88-ad56-5fb5270a2c90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "786d17fe-242f-45f9-a370-706deefd3e87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12533ebd-1e20-4b9e-900c-886a375512b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dddde38-2a04-46bf-a05f-41b30b533ede",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde562b8-3d96-499c-a694-3424fede1217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7867d909-3023-4f03-930f-00ec35263972"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ef2905-5540-4b59-b378-ca484fe54e3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2f5e03b-fd18-44e4-98ba-9dff948854bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d5d686-edbd-489c-9054-aea5ab7820a1",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2579a5b-84ab-466e-919d-7ef5276d4ffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4161cb1d-ab05-4c5b-a418-82f3b12fcfc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d601c9-3c52-44ad-8168-caa59c9aac86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a5b46d8-304e-4917-b105-b480eb26f63e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1faea24c-1412-4c31-aacb-e3783c757930",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a7118af-78be-4830-b51a-ed014092e18e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d33d52f8-f09d-44d2-a96c-ccffa9fc3f3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "592c05f6-3387-406b-a7d6-6a51d6f1a8cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71be9219-703b-4fe9-a0cd-1d336db0119b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef687af-fa0f-4092-9fc3-7d049dff7941",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac216b9-fdf4-454c-addc-cedc965e15e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af21cf10-c125-40f1-bf9f-7b2549836fd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b35d5d4f-0020-4b36-8ff0-cedf72700827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48293257-fe17-4dd4-b4d4-b5da4fc1b13b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04957cac-4f79-43c1-b859-088f3ea4d665",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3cd600-8922-4563-998e-733abfbf2f59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee9d3102-2f16-4768-9de2-92c1013b6c0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6bdc7f8-8727-4868-8ce1-8d76fd97e9bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a8404a4-f395-4ad6-a5b4-a5e54bf8108a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f0f6fd-fe1d-4d40-9738-65cf115d223a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e73b5a-6c0f-43eb-bb72-ac9a85bdbadc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8230938-c895-481c-8f63-a5d758b6ae2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "489fbd6e-81dd-48c9-8f29-23f77e079286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41c9dc21-035b-4bc3-a55f-c43c680db400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c6b95c-a432-4a31-af82-8afa59f77f64",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2dbb605-da5e-431a-8500-e96edde93f01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea1b5b67-5e41-4720-bd21-932d96423d83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b3f706-d353-43b8-b20b-88c6b65452c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ec8c6f6-c760-4cee-90d0-5933b242da9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efe936de-e5bd-45e9-a3e6-e114ac06c8fe",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d2ec7d1-3711-4dda-8355-f6014fa127d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5399965a-84f5-4ca6-a69b-ee7caed26a2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "891855e3-118b-40b7-8d54-0368f0c6d73d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fb92f60-2a06-4ca4-804a-4fc160ab0e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d417135-6820-47fa-8a89-892f2d7296ea",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e7cf9ee-4e79-476f-8ab5-47acceeb8052",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e50df97-6b8a-4d6c-b56e-d72a357ddaee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09418bd0-4c9c-4e81-8c07-dd742e32a707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86a78443-bf73-42ef-b65a-3eb1bc45a2ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98628e04-b2b7-4378-aed5-8cf09e8c688e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640669a9-ddab-4b21-9a58-81fc2eef5a0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "686c7ed2-720a-489b-9ac7-6b2b7c8737e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec95c8a6-fe72-412e-8f7b-03944d178788",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7625b84d-8cbb-4eb4-8f08-5d8a0379a5c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd489e57-055a-40a9-9987-63781c22f48e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a65019dc-c521-417b-b27f-689b05228607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22c477d5-6619-422e-8a23-5147c636e081"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14286f8a-6298-4e5a-a214-426dde51b0b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94da1074-6d22-4081-8dbb-5cd69a33902b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db33cef8-ea13-45e5-baca-67eaae1c1a6c",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "723dcc9a-7aa0-4d98-b420-1be451c5bce2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8fcee21-4e6f-4692-9b75-141fcff56615"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7182b4-ac6d-41e3-9378-248c57d65454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9df5d298-8fbb-4402-a85a-58e7c35f10eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871c9b78-5ae8-4f43-80a5-18f126be20e0",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a385dc2b-2cee-43cf-8520-2b10ae447660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e0521b5-855a-467f-8e0c-d0a4a2a8a211"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e759a6f3-5b02-4d54-b270-aa099c8f4e99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "484b5419-81d4-48a9-8eab-92662a0dbd60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca585d7-42a5-433f-a7d9-b74f902e09bc",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aafc83cd-a60e-40a7-a95a-720d5a3fab7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ec8ce34-f75d-4075-b6e7-581b2104307e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece33357-447b-4edd-b43d-30d534716fe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58b12b78-b1a9-4752-b4f8-eed47cb887d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1319f95-5af3-4f74-9aee-cb53c462646f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "995f315b-88f5-4eae-9380-6a8211401c32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5559928-5214-4248-89a8-ba65d787758b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "220fecfb-610d-4618-b707-420fa4aabdc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8bf2346-95e6-45ae-980f-c3bac6f2fa79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef66646-42c2-4cb0-a758-33e1be1e2268",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0857e383-698e-4970-a2ad-63cb789c55de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75cf0ee2-6efa-4b11-ba2d-5f3b07a63e9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "891e86a1-ec62-4938-a578-bc1f5f6c037b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4831100-ff47-4443-ae44-f45074a7dcf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867882c1-5276-427b-a4fa-36f96aaca47c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac197e7-a191-478f-b96b-bff1f537060f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18d7ea9d-be03-49e1-b6ac-e172f242fde7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d0ba7d-880a-4f90-8a20-49f3e81872cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ec193b5-815c-45c1-9071-7e355ebd1852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca27948-be17-4d82-9e21-04565deeb480",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d03cf9b5-cf96-4842-9bcf-61cd24390407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fce7f618-418a-4eba-9df6-6606cba915fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14917b2a-98b2-4bec-b334-b97ae630f77f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1387360-445e-4b21-abf0-e84d7281eef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9552f359-5302-45a0-be44-11ff8326d7da",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a458721-36aa-4b86-a110-f5ef3a46f05a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9948423e-5f14-48b8-b775-92d5a863d90c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f57280-c09b-4dac-8bd3-a4b164d0130e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "021d133c-deba-4993-9b1d-29247ba46896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c678d3b-61ee-415f-a45e-3109efe34475",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cbbc752-3396-4c80-b01c-1c071749f56e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "099097b4-82fa-4ac3-a409-54dd1286467b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a51b2e8-1bf2-43cd-bd75-d25f9e9fcbcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6315aa1-af00-49f1-878f-e590cefebb40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e6ef49-1dcf-4b71-acf2-2bdfa7e3c703",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "342d4722-8128-47ff-82da-5ade2eb4cdd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b32afebf-06c2-41c8-9474-8d9760f198b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa25020a-4516-462e-97af-944358d4c9ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "484f063a-4537-4e28-985e-184ccab984ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f63307-d469-4ac9-8e48-f4329d89f89e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd93513-a4f6-4cad-9a3b-49a41b914d5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ac1e235-c5dd-4318-9469-bab293f7f603"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee47f507-e97a-4b83-b70e-3b9c18d44052",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0b5e6f0-1f84-4b2f-8dcf-e0f19ca98820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ea6ce0-68f5-4197-ab14-5c8e9dcb5c8d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b9a5749-cf84-4f70-87b0-ad680666ac4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a702e48e-a903-4e0a-8eb4-22140c0b853d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20135ce1-75c0-4161-8105-63a44e0c77e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b88a426b-4aac-43d3-bde4-3a36d331816f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48082726-fadc-4d74-af79-0710b2f4da53",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67f5df3-b085-4843-a5c2-afab15575126",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "436e8243-a72f-44df-9c39-f53202e5ae50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe00ae9-fd69-4e65-99bf-8f3d3dfbfbe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a46842d0-7f87-4f02-b4ec-b4fb07610665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf4ea4e9-e551-4727-b270-ef76ae6b349f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26db40df-6199-48c7-834f-95eb3e5c3fe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52b8a52d-e9db-43fd-9487-34052cbe7dcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73cd73da-fbe4-47cd-9188-6f93a8209349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e19cd33-9da1-49f3-b79c-2fbce709bbc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b242f2-35d4-4923-a9ac-2f8e68ce02ce",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b67efc79-0e9c-4a82-a225-d3bbc80616d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f02ad8e-185e-4ffc-84ba-061740d48ddf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b990422-8979-49c5-a411-60af016fc484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2330689-8fb2-4edc-8292-72cd3b3f83fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d3b685-b269-44e3-8a4c-14d333aee755",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1702d9d-54cd-4a19-943a-37343121f955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf7987ee-b638-4647-99b2-62fff90ee580"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "951976b1-cc36-4dbc-a902-f1df2ae44f66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d299960d-a7e8-42f8-9462-e400238b5521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b3db432-0e16-48c2-91bd-e4fc9671e07a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc47634-0176-49e0-80c7-8fd32e47a54e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "054c2f39-dc99-4b8e-943a-a9a9da7d91c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3ee10f-9c27-47e0-9e35-5cc4f7d080e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34fcfe4a-080c-4b4c-87d0-1bef71504b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e11a50-8531-4161-b209-5a8dd7c5c7c9",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3612bc-1ffd-4022-b3cc-274b9d640643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfa11dc2-7f92-49a6-be76-ff2a2f16af22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "443144ca-75ed-4f79-bb7c-6b679df7807b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "868b1c0a-f2b5-4255-afb1-d1fd8222c4c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19bac30c-47d6-44c0-8612-0babef01a438",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f79dd5b-33cb-4258-b909-4f14a024a527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae24cddb-c119-4c48-98d0-bea2b7914dfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb36aa07-277a-4518-8426-cc4a80bce014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9291322-74af-4de3-97a9-c809510851a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b68c1fe6-653c-43c9-8eeb-93f6b126a9dd",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73cfee8-563c-4974-967a-202a5cc45b19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2afac9f-149b-434f-93d0-e181e3e5e6ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fad30b83-3af5-4c4a-bd7f-c0604693c6e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6514577c-3c18-4975-a89a-6c01573cbf55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7bf19a-e324-46c8-a120-e45bb4a3ce12",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a49fa2f-b0ac-42e4-bad9-6bd46f60fd04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56b60452-297e-44ed-b07f-188ddac94f08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "099c343f-7630-4113-ba3e-734358026489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f372452-6e33-431a-b108-ffc7abae9e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac186dd1-e5d2-460b-90ac-a164086d5c62",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2efcf010-de80-4161-bb07-4e9453be1ab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c45a534f-e7f6-415f-9012-5879b0cbca55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f9a78b-5107-4a31-9dd2-82f5da643899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8f7ae2f-b34d-490f-8c43-b7857bc76cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b05c2d3-1413-4f36-9abf-aa0d72d0d555",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bcadb24-4922-491f-9ba7-017eadf2c8bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6a19732-38f7-4825-9240-35f8fa07c7e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5fb1768-824e-4f6c-bea9-58215a42198d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb1ca3f0-1e94-4ff5-97bb-5ad09296ad0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b325a9af-8a4f-4497-9010-75621185ad89",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4068550b-8f26-4486-87f5-1badbbb50e6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8710ecf3-7bd3-42cf-ada7-6020ef792b2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b5e6d61-5203-4144-bbec-763d441c8acf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc0eceba-d3df-4d27-a75c-ea8d145d49a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee2085d2-01fe-4ce6-bfd2-8a022052c0ce",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee29261-ea21-4d39-b99d-b9ab2e1116d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "117efeed-d1cd-4d33-ae61-240e3f464854"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1eac71a-587e-43de-b609-40c3f618eee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a96bbf94-95df-45b9-aa5b-ca44ffa81950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d8fd3d-c688-477a-a5c4-c9299d707ff7",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde4955a-d91b-44e9-8ce1-2644ff6c4972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69b3aeeb-d644-4d89-9e7f-9eca607d27c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c004f0d-ebc7-4d9c-9ba4-09463e25cbe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4640c5cf-8664-4d6d-a03a-b668754c883e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c440aa8-9618-4ef9-a215-97d3d69a45b1",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c07154-e99c-4516-bab6-f548e4bf3d2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0351c862-365b-4d06-ac4b-c3232cd2a6b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3418afcd-fc62-4299-b4bc-3810f249cb18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "def908bc-02ec-4c70-9ff1-1f3c122cb2e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f50c6b-ad37-4709-95f4-254b27b57c08",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323276ea-7a13-4a75-b56b-6dd02a9c8044",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b835a9b-519a-410f-aef5-c6227419d90c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ab978e-6230-4314-8730-9455486ac3e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebbea9a7-81fe-4692-9e41-bccc93486f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd35c352-a0e8-4737-8ae6-612621db79cf",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be4955e-2164-4de2-83f7-b53f21e0b17a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f119cbf-dacf-485a-b8c2-603d1b75db41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "146d19b4-3fc4-4aa6-b866-bc1fbe37768a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71a968fa-ce66-4f4a-889d-8a6264ccc86b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fea792c6-6c7f-4515-b368-558b693783d2",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1589f78c-1323-4284-921a-f5461b4b8fbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64ee86fb-9cbd-43ac-973c-5da051653da9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78923049-74cb-4a87-b9f9-61b5d719ce96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15a2ce35-1423-4ed7-a018-87867bc990be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ec31b4-fbb1-4aea-a435-b7ef8c79d18e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "690f2e2f-c97e-411c-99fa-ecc67ce011cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b294b28c-0c6c-4e83-a7ec-9e524c6c7c2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "622b9dd9-1cf7-4eda-8dd3-566460c6a595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07e980de-5dea-49f1-9920-5ffe12966be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fda3da1-4155-45b6-b565-2cd013e98313",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65071388-3c51-43c4-911f-4ffe011fb681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01a3df04-c96f-467c-926a-63fb2a9bc248"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5685b3a0-bb80-4ca0-80f4-bedb4474d67a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f82379b6-7482-4985-b375-def6a65bda51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c29f1d29-657d-4c36-a93d-0949f5294b7b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b1732e-2493-4e72-badc-151f95efd488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0b1a24e-68a5-47bb-aa8d-f7bc914e7fb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02fa2c1-dc43-499e-bf33-f0c09725120f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95e6da5a-9167-4727-ae04-59448b325222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f78d67-0ed3-4078-a0d8-94fd9cca1ab0",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d9327bf-2155-4539-abab-6d13063429e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9456d13b-934c-456e-a614-806e601037bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd3640e6-f86b-4994-ac15-ad9eda8a623f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0946ac8a-e83a-4405-8437-034dcf795b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f2505f-5f97-422a-a963-ddb1063d6f91",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5e892c6-b7d7-459d-9729-31ada3ea00a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0216b29f-2b0c-410f-bd72-98c262bf6f89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68598de9-16c0-48b8-8916-95798207d4be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3ca5fae-072f-4692-8a33-40af1cf1d06c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a647a6-25b7-4499-8bfa-c2926e7551f5",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1bc76f-9184-4cc0-84b4-696d0536d65a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "730a7de3-3d01-426a-b47e-33a06f97a3e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b186d1d8-df09-4378-bf4a-ab04a32ec7fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fefd91d9-47f0-4388-a7a5-319f308d2e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d4cdfff-4635-498a-ad6c-a65a9ac59132",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf89fc2b-25b6-42eb-a32d-92610807df43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60814ed1-eee7-4b14-9d2e-c14c75cf014f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc1b388-2441-4b57-852f-6167a3663f49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baa292eb-0c26-48fc-9294-f85499d4704c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d2bbde7-d93e-44e7-a5dd-4279e9f48cc1",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52a5696-5a69-491c-a1fe-e9281d2db9b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30040336-ed23-422c-bb13-8811167ef859"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86d8fe4-7e49-46f2-8265-e212bee1a54d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2366c8cb-1d8f-4e66-8680-b2f1cedc2b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "228aa9ed-1b42-4b60-84b0-71a2e55d2fbb",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeef3de2-af22-46b2-b628-ca5fe040757e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "635681f0-081d-46d3-a58c-f0cdb3f53988"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd4b104-411a-40f5-bc26-677881cb0480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c04901af-e030-4af6-89d7-09fedfa6e006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b961b8-9052-4d50-a794-9bf11b95e864",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7519ca9-f35b-4ad0-9069-0b78eef36195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84a2f417-8ebd-4c33-831f-ade3b3d96fa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "993e90a2-ff4a-4183-af73-fec128707871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71ae6f0c-16fd-46d7-abca-e6b8ae4013ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a66e51-24ad-4248-997c-11ad029a88b1",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d123024b-9428-443b-94da-3b92ea33f322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9e2e307-a942-43f0-92a1-1be1b2a38116"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9e2fd7-608b-482f-8a44-8f3badde3feb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bb6434f-fb04-4eb4-a242-0a5256e19b95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a0db39c-d20d-40ba-bc52-620bce0f2059",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5448a217-6d2a-462d-843a-a98523ffefcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a617300e-8597-4538-8744-161cf9d790f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "415989d5-2dfa-445a-94bb-edf003ee75e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98886362-b591-46e2-be7d-58f74c0e3a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a20759-6b0f-4a87-9bf7-0e97b92de19f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d04c7c0-a8a6-4d29-8945-20290b31acad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e90db4d-9279-49bb-8511-3df0375bc364"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9dc4aa6-077e-46aa-b503-1d77615a58c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c35a642-9913-40df-8786-5582b49d8fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c49c475-6d85-409f-83dd-6a2ba2cb368e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24c26db-3d41-4ad4-b857-eeb5e86b518b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c18cbef-1ecf-418e-a78d-71df12d40a7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b318f984-2363-4c8e-99a5-8f6b58d72cf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d283876b-ab2e-4a63-ba1e-11e95fd46fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c1c04bb-2f59-4049-9d35-e8e1c86446e8",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d942bd-6240-48c2-a794-5614fffbb087",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82978f03-efd6-4405-bf13-b47d90a4d287"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d524053-4abd-447c-aebf-08d83b74c689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7318bcf0-93af-4c6a-9e91-c8810638688b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ecf296c-a192-4d29-8c14-edd8788abf1d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4a1682-3784-4a60-8488-e518393a703c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "259d245b-5493-4b64-a179-62cd350ceed8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66558a9e-d13f-471e-8c8b-d6b3111a6f7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b42c6a9-5839-45a0-a723-ed8d33a57490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1ac843-7385-4087-99d9-05b47457cadf",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b73205ff-0d0c-4441-b0ee-98d5a6000f4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15f7cbfd-fa13-45d4-b121-97442f433bfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c1f4e35-c984-4211-91c4-1f0bb5fd2e27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b9cac8d-2534-40fa-a997-bbbebcdd3965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b33b75-1124-4e7a-8e9a-0700993f98e5",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd4b2d88-de31-49ed-9811-a4224ccd1fda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96b3b6ad-c163-4457-a0f7-ad2f7be6f414"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac7aed3-b38d-4a41-960e-aba8978d4e87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44075719-769c-41b5-9d81-d365d78f97cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f73622-b046-4897-acff-ecd56c265317",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b00664-cf5d-471d-94d0-d0c268195e90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7d8e697-9f4c-45e9-aa35-519585dd610a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ccccfee-f4e4-4fa4-a38b-ca7788040955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f29a3fe3-4104-4b30-8465-39dcf3517fc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f15575-159c-4037-b0c6-7adb696edc8a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe72037-27a8-4b19-8e41-dd603c591c05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64bbfc74-d2ee-43c4-94f5-dcd39d8ea502"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "538e7b6f-f2d8-4cb4-bc68-73e9d4febcd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5ea8be0-2fe6-447c-9f1b-77c85b22ea9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "624bc3df-7850-417c-968d-30cb61b26a46",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31718d7-e47e-4234-8ec0-6cc9efabd4bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "206853f4-cedc-4681-a545-65091a8ad269"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "942fb266-b45d-44ab-99c5-bb22798eacf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "512faab4-0f71-4474-97dd-758523092021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "707f2020-3466-49d2-8734-3d243a56fcdc",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219f0e3d-01e9-4c0f-8bc3-21fe902606db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52f4d631-c832-4ae5-98ba-73194274026c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc14754-c7a4-4aae-827a-5d81d1a6850e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71afd968-f21b-491a-af48-cdc439bc93e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e234726-94d3-4430-86e7-6227ed2c841c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e75b6e1-a2ee-4661-8a53-312681d7788f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4951344e-a270-4390-b799-aa9946dcff9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a56341f9-5f6a-452a-b9b5-2bcd261205f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc28965e-56a1-4a90-bf76-86d107c8ef84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "781d9f4e-81b8-4d17-a540-ea86f9abedda",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923b1b70-6dc2-4544-bbdf-95140fdaa463",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7607141-16b3-4dd8-b8f4-1eceed455985"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf24e751-097e-4404-822d-1b415881943a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14465fa2-1110-40bb-baa9-52c282d9b631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01e9dd12-85df-4e5f-a59f-e25929ea55ae",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb3edca-1ed5-4dae-a732-98192115cdb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "377e3efa-33cb-419e-98e2-0eec8ad2eb17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1fc6741-01e5-4d86-bca7-5a1f4cd791b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43055aa0-27b0-4756-be5e-9db6b58bbac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7472c216-9c2a-48d2-9299-4b9ae936785c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d7560c-985a-4e5c-9fbf-dba2e3a7a2b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a854260-ebb8-49cb-93e7-b87a674e3460"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2920540a-b0b7-4ae6-84d0-d83f9b2ed2f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22fd2370-8629-4ac4-ae2c-5f2bfcdb1926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "558691ff-6e1f-4ba4-b29b-60817dec0257",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe4f47d-23d9-46c6-bb9a-85bef9979693",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f546fde7-71b0-4817-9e06-83d4dc81a6fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b69081-6c0e-49d7-83c7-401de8ef566e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7258eb8c-4ef0-44bb-a0a7-8edd7b82b4a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd16827c-96cb-4b60-8a45-e7648a0a915b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a10e4c9-b0f7-4592-9530-b677ba99d7bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e91b74ff-7d1f-4f1b-908b-18dec2d77892"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb2b210-fd20-4544-a29e-5c81c2bc407a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9c65ec9-8e68-4692-a581-80d01375eb6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2b615e-06ca-422e-9694-d7aa31b51eff",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "298a8e15-1b8d-4f3d-9154-17338f0704ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54bdf96e-eca3-4864-8db0-61893abd290d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d941be-8870-46ca-8208-e4eb1ad372c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "868a7a56-3cff-4752-9729-d8803ca16827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409c1f5d-a4d6-42ee-ae30-d90d647d6dd8",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e674adca-0f5f-409f-becf-f4ab63bff1be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b56cfabd-3bca-47bd-96f1-b290244401c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d088f06f-1b66-4329-b245-ed29afd6e49b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47624a41-9bd6-4bcc-b900-f22e8c03a38b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e10367ef-22ca-4120-a589-823af4126d89",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "519f49de-ba4f-4e0f-b0c8-87f4a6f45ffa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f34533c5-ea02-401f-af54-0739e2628092"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9dd043-9765-46c4-8b4a-7744d33cb468",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c1ab64d-060e-44e3-9aa2-8de5be7298d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed5528b-e283-4134-aadb-c8f34811cfa9",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eab1757-c0d1-4d28-9457-5323909fef42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f263fd6-e762-4cbd-92b4-e7fd8b4bf200"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08eb347-3b3f-4901-9466-8051586fd315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5244842-ba44-441a-b969-c0553d32d46f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea125fd-3ea0-46e6-8ab6-dff68a9e6355",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf42f49-13f7-4e89-93ca-d19a6d088270",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1268c9c-6535-44dc-bb66-d644e62bf663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9183c67-ebac-4973-b918-f4aee379501b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "098c286b-d5db-4210-8665-757f3dcb31a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c924e60c-33e7-4cb9-ab63-5af5f9a3241a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e920a0a6-11de-4b7a-b55c-905853379386",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25e19c8e-d33e-4a49-a529-715a819531ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1043aa8-55f0-4c36-88c6-7275c35089e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "037ef84a-2084-4c92-975a-434ad8d3bf77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5339da43-0f95-4be6-b48b-e56d7f5f59b1",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebf9dd7-a48d-4b3e-9a6f-9a7d98a4ccdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cda2abf-8560-43ae-b23a-3f43f98cb649"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8210e18-4edd-4d93-a5fa-315d051911ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6669f2b4-dd0b-471e-8619-44fbf12e6712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c6f844-eeb4-493e-ac92-d8448d427184",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f3ef9c-8165-424f-b168-9d4320f79f6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "760f9090-ac9f-4d4e-887c-4d674dcc2b0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ca547b-b577-4359-9f22-e067bc810167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af391349-cafd-43ac-a14d-b0798bf30776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc6bd82-af97-4156-8436-da4e25352b0f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7183ecc0-b353-423d-aadb-bf3a058d5ee8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a92fbe8-b6d8-464d-a9a1-bbd9d5333def"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "957c276c-6dbb-40cc-8fa4-115c2dfd0b88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69e1bc82-481e-4787-afc6-b5f49c45e164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f09970d-41df-435f-b52e-504b9aa624ea",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a31e2c0-3e78-48e5-93f1-e8ff49ceb4c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44c028d0-fbd2-44e1-aa3d-915d30bef953"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "496c93ca-1603-40c2-8bc4-5a49de2af0b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fca6150f-6e2b-4652-b46f-1ad821b8d546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "177db2e5-44d6-47f9-a71a-2ba078f5c882",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "459b62c6-0cf9-441e-988c-fe65c962e65d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "413d1abc-c3c8-440a-8b49-9c173741a073"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b9d12a-2077-4f65-9ebe-2aa6dab30f77",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d064f1d9-d085-4579-b705-836beb13a9c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "601dda37-09c5-4aea-b98b-3ca6d9ab2281",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a2aeecc-ba5a-43d0-aae3-c88b89cefe6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9dcbf1b-76d6-4823-a2d8-d46b3b046e8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61edf327-d753-4e95-bc10-1bc636ffdf8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ee5635d-bab8-4941-baa7-519c373b40a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e117318-c300-44ed-8a32-5eb10ea9acfe",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15dab51-7f92-4861-941f-1c033f5f10fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ccf874f-e7d1-4d14-a0fd-5012c822b713"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40efe942-86ae-4891-9a41-cdab970f46be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f738f97-2e32-4619-80d7-df1b4c8e5206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc881c10-ddca-4059-9077-c073d148cc9b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe59664b-9592-4e97-845e-5edd3a57543f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2df30372-e0a3-4114-9068-d937192cd3ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db1d2e7-704e-461d-a186-9e3128a9b927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3de0a32f-164d-4d89-8d34-414ebde75315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "161e0e25-ff4d-4e1c-9aa0-f7fbc11cd5be",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa05ea23-8aca-4ae8-85cd-58aff1f31e51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "248140f0-26b5-4f20-81fe-64871930393f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d282f9-8a8a-4a6d-87ce-81e72fb2856f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "978275b5-4804-4a3e-8a9a-5de14a55c280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58128b71-c1fd-4aa5-97c7-2b3661e9ea86",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3938cb31-fd40-491e-aef9-b78c874aecfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e0c3a14-5de9-4c9e-84b4-c7154b91d7ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f95882-eb86-4d4e-9ec7-afeeb0b269c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b30c8626-7bb1-48d8-accc-8c809a3d9695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a71efe-9605-4aa1-8803-f1ace687d311",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd523f2-0467-4ca2-845a-70eb12dcf1a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2967920-1ace-453b-b49f-5830a5ef7ae6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20930e3f-7d4b-494c-bbb5-b3e973db9a72",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69f115d2-8cbd-4939-8ed6-ad520b8fc441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c855552-7fff-4dc6-aceb-3f50a9ca69dc",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3da4021-0cc0-473a-b874-e2b3c283381d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "137bda88-cbb0-4d11-be26-72e35a4add77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f5fb8c-5ba5-4849-88b7-1371d10372da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10d883ec-81c9-428d-8fda-0efd9109c5bf"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e61624c8-f596-4ce9-8308-af4f565ff6f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ae55214-e3ca-4c93-a7ba-738dc38fc0ef"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3fedb303-e9fe-466b-94b8-a85826d79709",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dc8f6cd1-8a7a-40c9-9a79-396f6f87abd5"
                    }
                  }
                ]
              },
              {
                "id": "10dfb4e5-f4ae-4330-a071-6a7a284ef2e0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d3945d51-7be9-4157-aff8-4fc477e8baff",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7a81d7-d1eb-438d-aa9d-6ba762d31a7b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "6cb87f21-7590-4cb5-8530-c66a74d767e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8732ea52-9bf2-48cd-9c60-f82765c937f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc243a54-5785-4d82-99d4-60c0f8b1dc42"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eab031d1-0301-4a58-bf4a-4ab2b0091cae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f88191c8-8989-4ce6-84e2-9a891ab7b86e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ef531f3-90ee-4a7a-a39f-5253b61bb030",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65d9f511-f4c6-4817-9b52-2f6a408030d4"
                    }
                  }
                ]
              },
              {
                "id": "74f96a04-a4c9-4c30-a32f-957587c34b94",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "388b9f68-4901-4c8c-bc11-501ba0dea121",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "714defa0-8a2a-45f6-8fe9-8599b0fb3e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "519de4cb-d9ff-40cf-8de7-32e2e2ac4d2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45803865-3bad-4960-86db-0ac0457f0564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3b96d23-d9b0-49fa-9bd3-f0a48eee1ce8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "603c8693-440c-4f56-b0f1-d2287765b8a3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "eccbca23-3390-487c-ad77-a1918c288145",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "37b9d408-17c1-4b75-b5fa-465e8ada108a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1d28fa22-99ea-4a97-bd59-a54574feef6e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c0092899-0022-4131-b21c-ea621f82675e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a888274-b52c-4617-aa05-fb4144e0eaab"
                    }
                  }
                ]
              },
              {
                "id": "2265dd64-9d27-4120-a7bb-156b68d9f600",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "78301ab6-2be3-4c64-acea-573e3c308ef8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b2a93854-9cd9-4a91-be50-4f3263fff194"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e35385fa-08a6-48d0-966d-92a772191d3a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b38db39-0da9-4957-8a2a-7e93e441117f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ab72c471-4df5-4801-a01d-196b839eb608",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d5174963-9657-4fb6-8a5d-f8a5e8078bb2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a138e74-7213-457b-ae4d-dadcc6acfe84",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f40c5ef7-e170-47c8-bd4e-860157a182d8"
            }
          }
        ]
      },
      {
        "id": "2fd8024d-294f-44c0-90fa-5e3973689c57",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1a03ec75-b5c0-4fd5-a731-5fbe792e450f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c470de01-cb3d-4fc0-8ef9-b5f7d096487a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "04d750ac-e742-4429-a0ad-ef435709204d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db0c3a1b-29e0-4a91-b6c2-5721763a1079",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3cc655c7-7dfc-45f7-9979-52ea0720f20f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dea0f67-8b91-4b21-866e-d947df0d2bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b37e4b49-59a4-4941-bfbd-f44f7f26c4df"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a8f02d1-decb-4cc3-8f7e-67254dd8fc3b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f198e785-6da1-4b8d-a09c-4ba356836b63"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6ef925b-1eb4-451e-901f-3675834d8bd9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c37272a-4aef-4cee-bf9a-e0cb38e9bbd9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "61e45472-a668-41a4-ad29-0507686f387c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9582278a-1f2a-430d-a6fc-0ec777e68c56"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a6a26c09-c990-4745-b560-120491a51931",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "355da0fd-7435-47e5-a317-277f04b05345"
            }
          }
        ]
      },
      {
        "id": "31cb9638-eeb5-48f4-8896-2634a3f508bc",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "3a283326-16c4-46c8-812e-82934c36a700",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5bc41c31-8115-4d09-bb98-8a1c85e68778",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "051d8c7b-3e44-45e5-b1eb-c9e39158d988",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b41171-7528-475e-8c54-90ab8eaf9fda",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c55e4eac-ca2a-4bb2-8efa-831e63b83932"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62156a9f-b239-4075-982d-d5eee91e0933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c080421b-151e-4cd8-be88-420cafa18927"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fcdbb829-f669-4919-889a-d1a01ab73528",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4852c957-da92-4ee8-a927-9a03fa917add"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad2610e0-4f90-4118-8d4c-8f1d8f34a4e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5380abf0-80e3-423b-9d32-ae4e7aea4965"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "711dd67a-fa8a-4ada-9c76-90c55224f316",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1d4ee5d7-61d7-4656-82fd-2ae6c3a92d5c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "055e8370-bea9-4d83-8736-1172588831dd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c1cd8c05-1183-4df6-ace2-db91782e2b5b"
            }
          }
        ]
      },
      {
        "id": "40cb6661-690b-40d2-a098-e3f954d898f3",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a4361efa-1983-4994-b3de-8a7616a623db",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1f101fac-e607-4e92-a2d4-333d7368b82b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a662c08e-419d-40c1-be17-fa7b95958d9a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b26ea4-5e1c-49b0-a9d9-725d5089d80b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "467ae194-5275-4061-9bac-3296ec95de96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f819cf-bfb0-4fb1-a7c9-b6aaf9644520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aa9b9fc9-fde9-47cb-be13-63c0d7da580b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f4a4e495-dea8-413f-9512-6f1108ecc005",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db1f906a-4cf0-445a-884f-a7b8aa7bf185"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "32867932-5547-4f48-a90b-884b78f52daf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "47cc2156-e9f9-4370-8122-4fef9c6d8391"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "69d02226-566f-4fa1-87b5-4c272ef8b5b7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1839cf22-a0ad-41b9-9206-e13491ebf2f4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6b65fd7f-80aa-4d12-b7ca-e8f8292c2a6c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d1a16fd6-56d2-405d-b7c1-dcfd28fc7c36"
            }
          }
        ]
      },
      {
        "id": "9cb69b5e-f114-4951-ae44-57056a53fabe",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3c5d1c17-fbbb-447a-bd8d-f6cbbb049ba9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ba635baf-081c-48ce-aa67-649bf35fd80f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "eca4a38c-888a-4434-bf0d-3efa1bf02089",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "60c1b975-d690-4a75-b92f-516112c6d352",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "777ece67-f493-4b22-9667-0a7397857759",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 290.055555555556,
      "responseMin": 6,
      "responseMax": 8814,
      "responseSd": 1264.7388450268816,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1719103276407,
      "completed": 1719103357777
    },
    "executions": [
      {
        "id": "15376cc2-230b-4547-b76f-bddb1a4e1796",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c8516205-6772-4764-ae67-7f7c1b9f4c45",
          "httpRequestId": "f782597a-6681-4862-a8db-d7aca730df09"
        },
        "item": {
          "id": "15376cc2-230b-4547-b76f-bddb1a4e1796",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "2e001fb7-9ad0-4001-90d3-92f488926b70",
          "status": "OK",
          "code": 200,
          "responseTime": 102,
          "responseSize": 0
        }
      },
      {
        "id": "fb4f64b2-6541-4125-b32c-6b66e5bcac20",
        "cursor": {
          "ref": "97b229c3-0dd8-40d1-9ab8-855820be199c",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "47a98959-822b-4389-b522-24c146e0a5f3"
        },
        "item": {
          "id": "fb4f64b2-6541-4125-b32c-6b66e5bcac20",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "92551c51-1971-4cac-ba32-931b40a521c7",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "2f91cf49-4bd2-494a-92c1-5c6777760ae6",
        "cursor": {
          "ref": "f619fb1a-16cf-45e6-a119-dcb6fd63fe10",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "db880160-8aef-4b0c-b359-b5f4da6a19d1"
        },
        "item": {
          "id": "2f91cf49-4bd2-494a-92c1-5c6777760ae6",
          "name": "did_json"
        },
        "response": {
          "id": "7bb002fe-355c-43cc-9f50-5da64a135482",
          "status": "OK",
          "code": 200,
          "responseTime": 176,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3dda85-eb70-458a-9b5e-3ef7225e306a",
        "cursor": {
          "ref": "1f576f0f-e7ec-4b15-ab75-f5d51437caed",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b232605d-5719-46f3-bfcf-bf5d36f4ca73"
        },
        "item": {
          "id": "4c3dda85-eb70-458a-9b5e-3ef7225e306a",
          "name": "did:invalid"
        },
        "response": {
          "id": "f4c1efd0-4081-43b9-bb43-ade5f13ded35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2355,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3dda85-eb70-458a-9b5e-3ef7225e306a",
        "cursor": {
          "ref": "1f576f0f-e7ec-4b15-ab75-f5d51437caed",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b232605d-5719-46f3-bfcf-bf5d36f4ca73"
        },
        "item": {
          "id": "4c3dda85-eb70-458a-9b5e-3ef7225e306a",
          "name": "did:invalid"
        },
        "response": {
          "id": "f4c1efd0-4081-43b9-bb43-ade5f13ded35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2355,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e084e51-6de0-496c-9761-8fcd9607f921",
        "cursor": {
          "ref": "5ce2fbce-1cbb-4e39-9bb7-4b83c8c0d2e9",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2a10c1de-a904-4601-8d47-921a787c8e58"
        },
        "item": {
          "id": "6e084e51-6de0-496c-9761-8fcd9607f921",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "29ae5ae3-7d5d-480f-b156-2853987fdc4e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2585,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d1560e-3b91-4659-95e2-64b70392a5c6",
        "cursor": {
          "ref": "19d07ffb-1964-4ae6-888a-ab1caa9a06e7",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ad8e7d58-ce82-452f-9a81-70af56c85399"
        },
        "item": {
          "id": "d0d1560e-3b91-4659-95e2-64b70392a5c6",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9ac6cfba-a1fd-4546-8243-b3824a45fa38",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2158,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f316464-24e1-49f8-81b5-dfd8864a3d30",
        "cursor": {
          "ref": "f4036272-d9e4-4f69-830f-98d3668d17ff",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "65f8b4de-ef83-4c81-a5f3-7f0a4f0b1916"
        },
        "item": {
          "id": "3f316464-24e1-49f8-81b5-dfd8864a3d30",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "16f7845a-516c-43f8-b6b3-c8c29dcae983",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d0c6490-8dd8-4f09-bdbe-f57177602620",
        "cursor": {
          "ref": "1d539433-a2f4-4669-b347-f8217f57c33f",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "53c576c3-0638-4e8f-b76a-20188105fe13"
        },
        "item": {
          "id": "1d0c6490-8dd8-4f09-bdbe-f57177602620",
          "name": "identifiers"
        },
        "response": {
          "id": "3bb6cbe6-5520-43a4-b4cd-119fc4fa3f5c",
          "status": "OK",
          "code": 200,
          "responseTime": 2372,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c196a6-5951-48fc-a5f7-26c4dda4bd70",
        "cursor": {
          "ref": "819decdb-69b5-4136-8b5e-6eac39346c7a",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "e378484b-a5f1-436b-8e0b-f93ffab8e90b"
        },
        "item": {
          "id": "d1c196a6-5951-48fc-a5f7-26c4dda4bd70",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "60aa6e58-a010-4286-badd-629bf14883aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6c077f-3005-4d19-8f2f-2feb720b40e9",
        "cursor": {
          "ref": "ddd99cc3-c4dc-40f0-87ef-7250949ceb97",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "41d4a0a0-d65f-4f55-9e10-cc72cfe4316e"
        },
        "item": {
          "id": "3d6c077f-3005-4d19-8f2f-2feb720b40e9",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a6e85ac2-5f62-41ed-9c90-d8e34af30aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e1d3f6-7b28-4b7a-9be2-8cf19ef42093",
        "cursor": {
          "ref": "4d8f416b-1f27-4df6-b2fd-b99eb8194a05",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "6538e0b6-5c8a-4d3b-82b6-7c3daba90469"
        },
        "item": {
          "id": "d9e1d3f6-7b28-4b7a-9be2-8cf19ef42093",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7c22c7ed-9dbc-4836-8125-f2a2730a1dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c1b8c2a-8d4c-4ad7-b059-a4ea272543a2",
        "cursor": {
          "ref": "a7b5ee5d-b2bb-47d3-abc6-013badd540b0",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d9e4397d-6c06-42bd-a9d8-bc57a5269ec7"
        },
        "item": {
          "id": "9c1b8c2a-8d4c-4ad7-b059-a4ea272543a2",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0099f284-1806-4a6f-9d99-3173141ae62a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abdee83b-e4b1-4172-b7be-5a0b24f95e34",
        "cursor": {
          "ref": "5cb60d9a-c5a4-4e25-9fdb-34ddc953174e",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "51fc433e-1893-4279-abae-fc34c24bc970"
        },
        "item": {
          "id": "abdee83b-e4b1-4172-b7be-5a0b24f95e34",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ab2e91cb-ba20-4db1-8d05-46378b5aa997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf735b1-2470-4902-9df4-ab4d9d8d247d",
        "cursor": {
          "ref": "d8fa7d69-faa6-4020-b35d-207d55933737",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "bac6c907-7052-4ed4-9d89-54189958e168"
        },
        "item": {
          "id": "abf735b1-2470-4902-9df4-ab4d9d8d247d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "1d362b69-2b1e-413d-ace0-8acc5baff572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bbf04e5-baf4-4585-96ad-bcdb1c43eb96",
        "cursor": {
          "ref": "155401d4-6fcc-4374-969a-fc1c2820aeb2",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8ea65066-63d5-40fa-b415-b6d33fdaf690"
        },
        "item": {
          "id": "1bbf04e5-baf4-4585-96ad-bcdb1c43eb96",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "3687e795-addf-4762-ad1b-2b5841e0511e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf05db5-f6a0-4f72-af84-6c84ca2214b5",
        "cursor": {
          "ref": "1500e141-8a53-4ebe-8064-908d81d8c2cd",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d2e07331-8276-4727-bb84-b121fe9bb872"
        },
        "item": {
          "id": "1cf05db5-f6a0-4f72-af84-6c84ca2214b5",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "cff05efc-91d0-40fb-8731-bdf8f369e6a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d344b545-303d-468a-80b4-b7add7b89b54",
        "cursor": {
          "ref": "f8948672-cab0-4a4a-92f1-f6208c5dce70",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "2d1f1ebe-f353-4804-b627-0515dcc01b8d"
        },
        "item": {
          "id": "d344b545-303d-468a-80b4-b7add7b89b54",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4f00be4b-70f6-46c5-b8af-f30a1848d0a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba66232-4610-4b75-b1c9-8134672b7034",
        "cursor": {
          "ref": "a157d934-d8b2-46aa-a06b-e4456c746ccd",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f0768303-058f-4036-9014-126360e20b5a"
        },
        "item": {
          "id": "8ba66232-4610-4b75-b1c9-8134672b7034",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "786c6dda-8b9a-4cfc-82ec-e14b72a0af08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0529382f-b244-4ffd-bd03-85523b95d01f",
        "cursor": {
          "ref": "9d872d1f-1c1f-4ece-88c9-c980ba21ce86",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "cf40a8d2-3167-4bcd-9cb4-37301706d054"
        },
        "item": {
          "id": "0529382f-b244-4ffd-bd03-85523b95d01f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "3c4e7018-c6af-4d37-ba15-4d29efa679fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1273b169-1878-4cc1-80b4-106c2c0b360f",
        "cursor": {
          "ref": "a3e7fe51-2ca7-43bf-9a88-88260daeed94",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "aa4a7434-8f09-4b71-b913-db5a2a7bf5fe"
        },
        "item": {
          "id": "1273b169-1878-4cc1-80b4-106c2c0b360f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "485b04bd-b94e-4f5e-82e5-5c810be39f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19add161-321d-4614-b014-9867b1166edf",
        "cursor": {
          "ref": "c34a42c1-b1c5-411c-9d4d-1409c4bd53b5",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "2b802216-ba56-4ecf-9b8d-06a0cf5e98a5"
        },
        "item": {
          "id": "19add161-321d-4614-b014-9867b1166edf",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b697ff12-fbf7-4c9d-98ad-f17a0063fbf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89477410-853b-4790-87ce-e6e73cf2e596",
        "cursor": {
          "ref": "ffbf9ecb-77bf-497c-91b6-f8d55f762861",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "2d4ce258-2ad0-4057-b41e-f28755e71054"
        },
        "item": {
          "id": "89477410-853b-4790-87ce-e6e73cf2e596",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "97c5cea4-cff9-443e-8f61-f23694057c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5091dd37-bb5b-4b30-b10a-426a0e1cb902",
        "cursor": {
          "ref": "83a4aec0-afc9-4d05-b0d5-38c88a7240a3",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "433d1b10-4a2b-4e1e-9932-e0580bf8a541"
        },
        "item": {
          "id": "5091dd37-bb5b-4b30-b10a-426a0e1cb902",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "54d3ae2c-e6d4-41b4-9eed-924373d2ebfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d823b21-6ce5-46b3-9e51-fd1ff8d8bf25",
        "cursor": {
          "ref": "78e0a7c2-de98-41b1-bd70-61425c935bfd",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3fc9baeb-4574-48a6-ba90-c789c6fe419a"
        },
        "item": {
          "id": "5d823b21-6ce5-46b3-9e51-fd1ff8d8bf25",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "48624061-bd2b-4318-8884-aff04fb9f038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f559cf-7d54-489c-9d5f-dbf187297116",
        "cursor": {
          "ref": "ba40b5e0-50e7-4ce2-b343-c0e54dd73b70",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "210b49ed-684f-447e-82ea-9c62e1afa472"
        },
        "item": {
          "id": "25f559cf-7d54-489c-9d5f-dbf187297116",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "63d5154c-663f-4acf-85c0-1a54220121a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "783f0a53-8dd0-43bc-b086-c17f0312c771",
        "cursor": {
          "ref": "4681668f-8676-411e-9f18-e7e54dfb33c8",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ffaf4e2f-7390-4652-b209-cc100e33df24"
        },
        "item": {
          "id": "783f0a53-8dd0-43bc-b086-c17f0312c771",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0f60c600-65e6-4b4f-a957-37cee9a88856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd7e4c6-3eea-43a4-b318-49bd6177b8d5",
        "cursor": {
          "ref": "9ed95bec-803a-46fc-a474-3157516879df",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "66966d32-d746-44bc-8ee9-ca8543b3790b"
        },
        "item": {
          "id": "2bd7e4c6-3eea-43a4-b318-49bd6177b8d5",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a83728d5-d057-456c-9065-bbe9f7b3d93f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed571513-cf49-4629-97bf-25ff0d75d180",
        "cursor": {
          "ref": "679a5af5-04d0-4a8b-9b0d-76b0a1229921",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "941af3b4-753c-4a4a-a88d-eca9c44d8285"
        },
        "item": {
          "id": "ed571513-cf49-4629-97bf-25ff0d75d180",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "2340789f-988d-4db1-9abc-bc1e258e5421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a2e71f0-d1d2-4724-996e-480ff5071e4d",
        "cursor": {
          "ref": "1d20eb53-be80-44db-a6ca-c7659fc49c70",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b6f033d4-96ad-45db-a418-a67cf7c6896a"
        },
        "item": {
          "id": "6a2e71f0-d1d2-4724-996e-480ff5071e4d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "863663a0-afce-48a6-a59d-5db66a87a5b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "874c98aa-b918-45e6-a1ad-5beb77607d20",
        "cursor": {
          "ref": "52aaa933-5842-4d10-a899-9f3519959095",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "00d87928-5527-4150-8244-52494547fc56"
        },
        "item": {
          "id": "874c98aa-b918-45e6-a1ad-5beb77607d20",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "cfbb107c-9b35-4634-a94e-5acc0c6dfdb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c003cd-617a-4798-868a-8231caf0cf55",
        "cursor": {
          "ref": "c31a146f-b004-4cb8-8229-ece157791012",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f1eb9dd5-e7b2-478d-881d-4a67d6357bd9"
        },
        "item": {
          "id": "52c003cd-617a-4798-868a-8231caf0cf55",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a8e870ed-b45e-41b3-b1e3-c29ff8ae7498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca50b07a-4522-4acd-bfc5-e912ad5dc3e2",
        "cursor": {
          "ref": "9721821c-88ed-47ac-8abe-d5e832fa4e7f",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e7e62cab-9502-4471-8c6b-419c78e8e7a9"
        },
        "item": {
          "id": "ca50b07a-4522-4acd-bfc5-e912ad5dc3e2",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6cda1862-6744-48d2-91d5-4d08edbbf38b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ddb2f27-d45c-4665-ba36-c7e7aa42a5fb",
        "cursor": {
          "ref": "85e07c5d-f9ae-440a-aec9-3593e7e2fc94",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "38a88411-9d3f-42b2-8203-de78beaff142"
        },
        "item": {
          "id": "5ddb2f27-d45c-4665-ba36-c7e7aa42a5fb",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c4428c74-2f1f-4c73-928b-d2c63179c42b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad52bc8a-c890-4627-b52c-249d0275bc92",
        "cursor": {
          "ref": "bcf4a83b-501c-40cf-9662-46f4cae9dba5",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8bee678f-03f5-4140-b551-f3a8c298c1cf"
        },
        "item": {
          "id": "ad52bc8a-c890-4627-b52c-249d0275bc92",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c2e88427-6f62-46c7-bc34-bd5cb95280b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e6ba918-8239-45ea-998a-3fa7d10a433b",
        "cursor": {
          "ref": "48be4ecc-6e0f-4e44-83fe-0a5e8f14a860",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "7d0eb9c0-5318-4498-a8cb-19f3cf9bbaad"
        },
        "item": {
          "id": "2e6ba918-8239-45ea-998a-3fa7d10a433b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e970d4a8-3241-4648-80d0-055baf2282a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b0b339a-c796-41a4-92c9-52c1e944da7c",
        "cursor": {
          "ref": "64cdc157-d4f3-4f22-bc7d-7466890bdfc7",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "aa328d6c-dab5-4c6a-a900-6e5910957c70"
        },
        "item": {
          "id": "7b0b339a-c796-41a4-92c9-52c1e944da7c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "edc3aa4b-c131-420c-bdd3-526933139bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56663de2-1683-4331-a6b7-b63a3b02d7cb",
        "cursor": {
          "ref": "f2da4958-6ea1-4bf1-a87c-2ef05deed5d5",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7d3eeb4f-81c1-486d-b14c-a7135676c983"
        },
        "item": {
          "id": "56663de2-1683-4331-a6b7-b63a3b02d7cb",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "89bfadc3-ea55-4891-a4f0-e9a5ac82a38d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d511a1-59af-45c6-8b38-0daf87f10aea",
        "cursor": {
          "ref": "20197b45-face-47c3-aa8a-277a38921b83",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "0ad6d4bb-bb8a-4f70-8b36-14e89671f28e"
        },
        "item": {
          "id": "29d511a1-59af-45c6-8b38-0daf87f10aea",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "113209aa-b041-46ec-a561-4739b91b20a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15ec1b6-7363-42ac-8c9b-90fe14c28657",
        "cursor": {
          "ref": "5f4edb8d-b75e-4f78-b22f-cfe945cfa08a",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "233c14fc-19b8-4210-adc0-0b53a8164e4a"
        },
        "item": {
          "id": "b15ec1b6-7363-42ac-8c9b-90fe14c28657",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "e57d8edc-a05c-4111-8ad0-fc06f1806732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "803e0688-3f0e-47f7-beb4-8f770465891e",
        "cursor": {
          "ref": "1e316e60-505b-4a02-932a-ea84903faff2",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c0707abd-caac-4c4c-ae82-552a44351e49"
        },
        "item": {
          "id": "803e0688-3f0e-47f7-beb4-8f770465891e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f0ec0242-ff04-4346-b621-6c4b7b99501c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8720193d-cbaf-4fcc-8c2f-62f42526636a",
        "cursor": {
          "ref": "0fb79f0c-9eb7-43fb-b11c-07b08b9c3aac",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ef7ca007-b907-440e-8f0b-a6c6a3338a3f"
        },
        "item": {
          "id": "8720193d-cbaf-4fcc-8c2f-62f42526636a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9af8a8f9-ee3f-47a6-9f69-6ab2ac0ef99a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b237ae-04b5-45ac-899f-8216bd5eda35",
        "cursor": {
          "ref": "88ec261a-d9ef-400d-9003-d6e43a0a9956",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d2788987-582a-4236-98cb-0afabfbcf6d3"
        },
        "item": {
          "id": "c7b237ae-04b5-45ac-899f-8216bd5eda35",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6a39095b-0574-42f8-b2f7-76267c33fcd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87418834-9592-477b-8e0b-481f4658f6d8",
        "cursor": {
          "ref": "1dd91462-d93d-4dc8-aaf7-1ceefde13fb1",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e44b05da-eba5-4688-b466-35e032f543a8"
        },
        "item": {
          "id": "87418834-9592-477b-8e0b-481f4658f6d8",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "89f4bcaf-b5a0-4096-aa9d-ab6f03a90305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f6a172-d49e-4cdb-9727-64fad8e3b908",
        "cursor": {
          "ref": "75591727-776e-4ee8-a65c-e58a137074a7",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7426f0e0-57ed-4c4c-801a-5880a469639a"
        },
        "item": {
          "id": "40f6a172-d49e-4cdb-9727-64fad8e3b908",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2124a6aa-b7f0-49c6-93a9-81bc94543aad",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 33,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f8a60b-1c94-4878-b3a9-7c1c103db53e",
        "cursor": {
          "ref": "7d99c1bb-4227-424e-a6ba-2456c9f0ccf9",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "40751a11-0925-4d95-a3c1-d4ba87d52032"
        },
        "item": {
          "id": "d1f8a60b-1c94-4878-b3a9-7c1c103db53e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "81ad44d8-556f-472c-96d7-2600a55a9afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac69bfd1-5f76-448d-9a15-0890412872ca",
        "cursor": {
          "ref": "50ea1fa7-e8c8-4f67-95c6-faa3cc56f0e4",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "dc3b75be-edf9-4164-892b-98aa18d74ef5"
        },
        "item": {
          "id": "ac69bfd1-5f76-448d-9a15-0890412872ca",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d931ed51-92a0-4cc7-a0e0-54f228cf55fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee86fa4-2891-47b0-8203-51ac170eb2e4",
        "cursor": {
          "ref": "bac75329-65f0-4944-ace0-a54d03caa30f",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "fd21809b-998d-449f-8aad-49ec2a4b42de"
        },
        "item": {
          "id": "0ee86fa4-2891-47b0-8203-51ac170eb2e4",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a7364f53-cc01-4838-a2be-3bcd240ac6d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b557385-4d3a-4241-bc05-8a85146c5202",
        "cursor": {
          "ref": "e7299c9f-553d-465c-84e3-ddab0a2c7aeb",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "eb5e07c0-ae54-4615-bfa7-c4bb029ea24b"
        },
        "item": {
          "id": "3b557385-4d3a-4241-bc05-8a85146c5202",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9eadbcdb-01a8-46d2-ad3c-291332781c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf5c9e3-116f-4d96-87e8-1b648bc532c4",
        "cursor": {
          "ref": "66c0c999-7f8e-41b8-9d99-a545e3786109",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5f1b504e-a415-47dd-a7e6-dd89ce1dd8c6"
        },
        "item": {
          "id": "acf5c9e3-116f-4d96-87e8-1b648bc532c4",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2e94485d-1391-4bd4-9a68-a82d225f0718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca6033d-4f43-4669-871c-44752049aee7",
        "cursor": {
          "ref": "e9613898-0ce0-4a11-9c77-329c137efae0",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6f4c2ce4-8a46-4d6a-ab11-038257c98624"
        },
        "item": {
          "id": "3ca6033d-4f43-4669-871c-44752049aee7",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "95e25e62-221e-4c22-ae34-11c30879dc68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea36536-b438-4255-8a11-964f04198c25",
        "cursor": {
          "ref": "e9919953-f607-46b5-8907-e53f001d75b1",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "11e4b57b-8724-4b9a-9b2a-8feb7930dd7c"
        },
        "item": {
          "id": "8ea36536-b438-4255-8a11-964f04198c25",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d33ebe73-3326-4cef-99e3-a1ff8e17c69f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 33,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7d7260-9226-45ca-b55c-fa316c785e87",
        "cursor": {
          "ref": "b98200c4-9689-4daa-8b00-9fc15a95a663",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "94af6c57-c17a-41dd-b64e-77f530f72317"
        },
        "item": {
          "id": "1c7d7260-9226-45ca-b55c-fa316c785e87",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b2c17816-4975-49ec-b7b7-7957bc43a6b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "111d801e-af55-4f26-9018-01d4ceae8aec",
        "cursor": {
          "ref": "7ac68b06-752b-459a-8374-11263aad1887",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "4e938069-fef3-4343-b374-1c3ff5b97824"
        },
        "item": {
          "id": "111d801e-af55-4f26-9018-01d4ceae8aec",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "25d6a809-6d52-42c5-ae9b-658a51265fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775fc1fa-ce82-4955-94cd-bc8bcba26075",
        "cursor": {
          "ref": "8673296e-4d37-40d5-89f4-6105afba5248",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "30aa8f89-c95c-4c70-a333-96a857938ed8"
        },
        "item": {
          "id": "775fc1fa-ce82-4955-94cd-bc8bcba26075",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e52fae77-4cc2-4749-b44a-b9d113bb6eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b06d90-eb83-4726-a522-cab7080a0a7b",
        "cursor": {
          "ref": "24da0e95-ff00-4348-b4c1-80ae3d098007",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "28393974-ec6e-4fb7-add8-8c9dec13c254"
        },
        "item": {
          "id": "30b06d90-eb83-4726-a522-cab7080a0a7b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "6cbabd2b-0215-4dcf-b62a-5370cc4d0ed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "433a10d1-ddfa-41fc-9496-488095d7a63d",
        "cursor": {
          "ref": "65b9e583-28fc-4ac3-bddc-2fd069710af8",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "07693572-c9dd-4eab-a95a-3749784f0519"
        },
        "item": {
          "id": "433a10d1-ddfa-41fc-9496-488095d7a63d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "582f1eb1-ed19-4ac7-9271-e33ad62ec57f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09811559-d700-4e87-ad9d-6b94a7f88da0",
        "cursor": {
          "ref": "c2074d88-8e9d-4efd-963d-b47dd7819b22",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "dd275172-4769-4de6-96a8-2865b0478b59"
        },
        "item": {
          "id": "09811559-d700-4e87-ad9d-6b94a7f88da0",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "dffd6d8f-3998-4541-8f0b-f52000f39f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8a9fb4-577a-4259-a7f7-61ca735e1a6a",
        "cursor": {
          "ref": "f61bddcc-2b04-4347-a7d5-637bbf5dcf00",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "94dd420b-0dc8-44af-82ec-43b3c31bc1d4"
        },
        "item": {
          "id": "1d8a9fb4-577a-4259-a7f7-61ca735e1a6a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "859501b4-cf74-431e-9141-0ff28089156f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e78cee5-2f1c-452f-b3fb-5c9c2c27d141",
        "cursor": {
          "ref": "6e775974-0646-4ff6-b34b-86b1de719ebc",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "bee35817-bb05-4848-9eb4-f85a8dfb86f5"
        },
        "item": {
          "id": "6e78cee5-2f1c-452f-b3fb-5c9c2c27d141",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "9cd6b83f-0354-4fd1-bfef-c0087931ea63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a0f2f0-c5da-4cdf-b456-a10f4046eec3",
        "cursor": {
          "ref": "61e36d24-f346-4dbf-b77c-69d33ebf5583",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "24ddab58-ba47-4d55-8bb3-973f5db45505"
        },
        "item": {
          "id": "c0a0f2f0-c5da-4cdf-b456-a10f4046eec3",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "eefa7062-a0ed-483a-aae8-49e046c5bb69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17021246-a7d9-4906-9a41-d2e6a01349e7",
        "cursor": {
          "ref": "3a2f118c-665e-42eb-b3e9-1804769bc2b8",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "67e29030-9360-42cb-956f-6a6a9866c365"
        },
        "item": {
          "id": "17021246-a7d9-4906-9a41-d2e6a01349e7",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5eba2ef1-8fef-4acf-96a7-4cdefc6aaf6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934ecb4e-5fcf-4271-8d0c-54e9132e3004",
        "cursor": {
          "ref": "6bf03e8a-81ff-4cbb-8945-fcd81f95e5bf",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "26f87b51-9792-4820-bbc3-3cd766a7bbec"
        },
        "item": {
          "id": "934ecb4e-5fcf-4271-8d0c-54e9132e3004",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "237619dc-3db8-4368-86ec-c52566b8c65c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b083d64-6131-47d7-a8c6-76ff1f004314",
        "cursor": {
          "ref": "61471d97-9f75-456f-b801-b1122d66863d",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "fe3a0e1c-5394-4c6d-b5d6-c3ecd9815a4a"
        },
        "item": {
          "id": "6b083d64-6131-47d7-a8c6-76ff1f004314",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "4b091cc8-faaa-4a76-b44b-949310d1ce3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea69445-8204-421e-95d4-239be0033be2",
        "cursor": {
          "ref": "13fbe85a-3341-4008-947a-8c9f200d0a17",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2bba8143-755c-4e92-becf-86f9fb498022"
        },
        "item": {
          "id": "aea69445-8204-421e-95d4-239be0033be2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "94a2341e-4745-434a-81f2-3854dbc29ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c696f2-ecf7-4e59-8b80-1e6e8c942f6e",
        "cursor": {
          "ref": "f2e4bc3d-28e3-493c-942c-b261f2e01dc2",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "43e6b0be-109c-4552-8123-262f3e1d199b"
        },
        "item": {
          "id": "64c696f2-ecf7-4e59-8b80-1e6e8c942f6e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c08c092b-0e33-49ed-a324-9a849a01cfce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7884f24d-aadf-4a6d-95e3-6a640e09510a",
        "cursor": {
          "ref": "5fdf3757-e2aa-4181-a3cf-07dcf25b2ea1",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "75e3c882-39b6-40a5-b891-ac312a62a7e7"
        },
        "item": {
          "id": "7884f24d-aadf-4a6d-95e3-6a640e09510a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5c72a4e0-ee2e-4316-a2a8-621c434cf0cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1270d5-9b9d-4013-8b78-114cd678b0a3",
        "cursor": {
          "ref": "b98bef48-1ae4-48ca-9257-871f5199c5d7",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "923089e0-6707-4bac-ba61-63065bab2b72"
        },
        "item": {
          "id": "ee1270d5-9b9d-4013-8b78-114cd678b0a3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3e67518b-204c-4c0f-a097-2babc23669f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c471cc-2492-4b73-b3d9-c12da6897a33",
        "cursor": {
          "ref": "ca076c05-512d-4c8a-a244-2e23ba6378e3",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c6d88c6c-c6d9-436a-b736-a1f398b5e4ce"
        },
        "item": {
          "id": "29c471cc-2492-4b73-b3d9-c12da6897a33",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6301c37a-5f29-448e-a25c-42395ab8b68a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952c353c-6105-48c1-b079-c889a9a611b8",
        "cursor": {
          "ref": "2d1de4cb-d9b6-43f6-a70e-f588531e75c2",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "762064f2-8dab-4945-899a-cc37845ede1d"
        },
        "item": {
          "id": "952c353c-6105-48c1-b079-c889a9a611b8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a1bd3966-01bb-4434-8b02-57b024016279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25cc63b3-ce63-42ae-9c41-0c844c403115",
        "cursor": {
          "ref": "8a4d3481-1b0e-4db9-a180-f1a73f5c194c",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "8efa4cf1-b949-49d6-b192-c586a919feb2"
        },
        "item": {
          "id": "25cc63b3-ce63-42ae-9c41-0c844c403115",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "35fe21df-595e-4556-9c9d-2c2ecddcb4aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94928657-21cd-4a00-9984-6163056a854c",
        "cursor": {
          "ref": "64356b4e-d06c-48bc-a0df-aea55f3db856",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9191d066-b7d4-43ad-9d9a-7020d543d92d"
        },
        "item": {
          "id": "94928657-21cd-4a00-9984-6163056a854c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "9b3f753a-753b-4629-8721-24900e2744af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fae0930-25a4-47ec-8d30-b62f4c187176",
        "cursor": {
          "ref": "b5d58637-ef71-4e2f-a0e3-1592e3b13e76",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "94321195-71b7-4269-83ed-da20e17609ea"
        },
        "item": {
          "id": "4fae0930-25a4-47ec-8d30-b62f4c187176",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "74a27420-172a-4442-8069-d5007c254f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2349616-58b2-4209-93ed-376c3e707c1f",
        "cursor": {
          "ref": "dd63a5ae-fd91-4ccc-a3ea-efb418395e5a",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "97b2a847-898b-46d6-a261-54beb13419c4"
        },
        "item": {
          "id": "e2349616-58b2-4209-93ed-376c3e707c1f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "90d70587-9c19-454b-a007-366c54769f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25822c08-0304-45ee-9f75-d2c77cd0972c",
        "cursor": {
          "ref": "d0a43e4b-c664-4690-a55e-934e58fe48a9",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "178031d8-8701-4cc9-8522-2be429343bcb"
        },
        "item": {
          "id": "25822c08-0304-45ee-9f75-d2c77cd0972c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "f884a7d9-9f24-457c-9c64-5ee9b8991700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de14498-8395-4d1a-ba54-23cd937c1185",
        "cursor": {
          "ref": "70de1d2e-7e15-46ad-a2cd-79afdf411732",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8b3bf107-c7fb-4c58-acb0-2ff2361ca6cb"
        },
        "item": {
          "id": "6de14498-8395-4d1a-ba54-23cd937c1185",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "327710c4-663c-4d17-81ae-e878c36d120e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e0e23f-6692-47f2-88dd-cd4d1fdce6f0",
        "cursor": {
          "ref": "342f0302-66d4-439a-9f2d-c4064ec59a5a",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7ef56095-b0fc-4ac4-a9d4-5a96042f321b"
        },
        "item": {
          "id": "07e0e23f-6692-47f2-88dd-cd4d1fdce6f0",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "523fb690-b7e4-4371-aa5a-6f03d7f872bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa4b77ae-cd0d-4e2d-ae69-6546ced68924",
        "cursor": {
          "ref": "5c1b3682-3202-4a2f-9267-f02e5ee17d5d",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "8bc76120-0276-4e75-b975-865bf6569c6b"
        },
        "item": {
          "id": "fa4b77ae-cd0d-4e2d-ae69-6546ced68924",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "02e3d158-69d8-4a2e-82d3-8dafeef3a7af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7fb4897-4cbe-448d-8e48-f40b7866ca14",
        "cursor": {
          "ref": "9fa275c8-7711-4746-870a-bd6d86a8d684",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "6df422a6-353a-4048-81af-3134fc251051"
        },
        "item": {
          "id": "c7fb4897-4cbe-448d-8e48-f40b7866ca14",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b05438e2-0afd-4b2f-8d04-a624f069142b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4ccaa8-784c-4055-8169-fb9f1b804d7e",
        "cursor": {
          "ref": "6886bed7-cfea-4454-9adc-b28247f1c5a4",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "16688024-fec5-40a8-aa3e-0f1ad1daa96c"
        },
        "item": {
          "id": "4a4ccaa8-784c-4055-8169-fb9f1b804d7e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "004c118f-86fb-4454-b0de-f57c7cb0f43b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b9bb6e-f9e4-48b0-b14f-a2abe7951e8a",
        "cursor": {
          "ref": "38d72e2a-31d4-4a7e-93a1-7746e0b1f5ba",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "1ebaf8aa-fe9a-4df1-bd85-30da3061ab3d"
        },
        "item": {
          "id": "98b9bb6e-f9e4-48b0-b14f-a2abe7951e8a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "2890807d-beee-40e9-bcbd-e91013d531a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb1ad87-1c9a-4a31-ab6a-3c62fe952820",
        "cursor": {
          "ref": "c833e515-f6e3-4762-97f3-b1234f943231",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "2d9113d0-ffd0-46f3-ad7b-ee375b9e7359"
        },
        "item": {
          "id": "4eb1ad87-1c9a-4a31-ab6a-3c62fe952820",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "75c7facb-50bf-41fe-afa3-4c958c189f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ad0174-67d8-4c9c-9f0d-0938c4f4e01b",
        "cursor": {
          "ref": "74c6b79b-aa40-43f0-ba04-2ecafdbee85c",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "626ba19e-d2bb-497a-9d75-5b99fa55e1af"
        },
        "item": {
          "id": "59ad0174-67d8-4c9c-9f0d-0938c4f4e01b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "84500c27-9af0-43a8-8480-effc7548ada2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9430d86-d770-415f-8067-090ac85b7f5f",
        "cursor": {
          "ref": "df4ba143-a549-425a-9515-68945e8dcbb8",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "44ee77b1-b9d2-44a9-a39f-0df5c1e4c0a9"
        },
        "item": {
          "id": "a9430d86-d770-415f-8067-090ac85b7f5f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6e9727f1-caa8-4007-84de-8a5da0e42a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eef634e-4881-4597-944c-ac24f07020d8",
        "cursor": {
          "ref": "adee7a17-dd1f-438a-9f1f-e9885c825460",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8bbef49a-2773-4ff4-9b05-0199001fc2e3"
        },
        "item": {
          "id": "2eef634e-4881-4597-944c-ac24f07020d8",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a62d15de-1a6a-43c5-a6f6-28be5e924472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4006f6-3293-4139-bc24-dffa358337fd",
        "cursor": {
          "ref": "7911ff52-d862-4dc6-8e94-09c8098aaca1",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "762ba8d8-7ce3-408e-bc4d-acd0d14073b0"
        },
        "item": {
          "id": "9c4006f6-3293-4139-bc24-dffa358337fd",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c1bc36d0-de2e-4462-87d9-fd194aff7555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "021c5bf2-b976-4071-b7de-4f92a6ba4686",
        "cursor": {
          "ref": "ec0a2c87-3c37-493b-b5fe-f6a77e16f2a8",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a7a66aa8-18dd-4a0b-9a21-abe61bfb695e"
        },
        "item": {
          "id": "021c5bf2-b976-4071-b7de-4f92a6ba4686",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c145533c-c437-44c8-82ce-ae73babebb3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ef329b-08bf-4c19-a62b-6412b85339c5",
        "cursor": {
          "ref": "cb3c2d14-2a00-4446-8361-2758ebbc8748",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "2f6ad40e-15c8-4470-9f5e-697c4f4014a9"
        },
        "item": {
          "id": "75ef329b-08bf-4c19-a62b-6412b85339c5",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ed4a8ca0-99c7-48e7-92d9-203962db7b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15876063-6b90-4608-a591-d4f07c7a0b81",
        "cursor": {
          "ref": "f6bfbd63-23f8-47dc-8cf5-72776efa5cc6",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e28b9120-5d9f-4155-91db-458510672869"
        },
        "item": {
          "id": "15876063-6b90-4608-a591-d4f07c7a0b81",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d30faca5-dd47-4098-a612-0bea09d719ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73546c5-1d63-4617-bcaa-d823abfe1aee",
        "cursor": {
          "ref": "0f06f665-30eb-4833-8dc8-72a648f3dd53",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "17487d4f-2a25-488b-ba37-a5135e5ea8ab"
        },
        "item": {
          "id": "d73546c5-1d63-4617-bcaa-d823abfe1aee",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "2b11fd7a-8bf8-44c0-b7af-6a8d66819191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d316ba84-ead0-45b8-a0dc-1d7489f69c88",
        "cursor": {
          "ref": "5f4809b8-5a05-4d2e-bf0f-3ff26ebb0710",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b3625e46-e2a2-4c0f-ab34-91063811aafa"
        },
        "item": {
          "id": "d316ba84-ead0-45b8-a0dc-1d7489f69c88",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b7162447-874f-4bfc-a773-4ff87c862ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb1db54e-ebd6-43c9-b8f9-d567e0311d1f",
        "cursor": {
          "ref": "e8f9a54a-e28c-4762-b706-e75aa9653445",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "8425f2b1-7f9d-42de-8c9c-0ba4b47f8490"
        },
        "item": {
          "id": "eb1db54e-ebd6-43c9-b8f9-d567e0311d1f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f41af145-e65d-4f38-a0b6-433e67ddc055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0903b11-e573-441c-8731-7819e1dd8eb8",
        "cursor": {
          "ref": "02ab83fb-6955-4fc4-b636-9f9aa58cd178",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "be6db1fd-65f1-4b50-9431-01a17d7f19d6"
        },
        "item": {
          "id": "f0903b11-e573-441c-8731-7819e1dd8eb8",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "9b8d8ed6-ad67-4101-9050-0a8ae3468f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f4665f-b71c-4a52-bd5e-7c538f8fccab",
        "cursor": {
          "ref": "f6dddc61-80b1-4ede-928c-b198cc6f5656",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "344b00a4-d307-4a47-9aee-fe0be7f06f69"
        },
        "item": {
          "id": "86f4665f-b71c-4a52-bd5e-7c538f8fccab",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "5c6da017-0521-4344-bee0-04475519ebcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24fc1e4e-109f-4a71-92ca-14577f00f8e4",
        "cursor": {
          "ref": "67741b15-d847-48be-b8b0-92c581c2e42b",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ad7c9c1c-a503-4a3d-adaf-f92b9b7975f6"
        },
        "item": {
          "id": "24fc1e4e-109f-4a71-92ca-14577f00f8e4",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "57c3fe46-ae50-4e62-93f1-bff99b7f4848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f16e0c-f744-4f86-adbf-68aeb5398b15",
        "cursor": {
          "ref": "c7b11cb8-2988-4cec-a8dc-3e10be1c4cc2",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "0836389f-dda3-4796-81c9-7aa9eae78f37"
        },
        "item": {
          "id": "26f16e0c-f744-4f86-adbf-68aeb5398b15",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "1958c3a6-0f8b-46af-b39f-33062605e4f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a5c189-6118-46f5-8940-c06fec3a6e17",
        "cursor": {
          "ref": "5acae5f0-9479-4652-9477-f828fd6fe71a",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c09dcf43-5c0d-46a2-a540-25adc7460878"
        },
        "item": {
          "id": "71a5c189-6118-46f5-8940-c06fec3a6e17",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "aea90272-341b-470c-8959-d4dd2b51b7be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec05411-21e5-48fe-bdd0-b82104798a16",
        "cursor": {
          "ref": "440b2602-cd8a-4589-81f5-a5cfaf519bf7",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3a23e1cc-2c10-4a40-98da-bd2e30f3f074"
        },
        "item": {
          "id": "dec05411-21e5-48fe-bdd0-b82104798a16",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2e184043-535d-444b-98dc-9e50b832c21d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "010b23b5-1f71-45b2-8865-b58ca954cce3",
        "cursor": {
          "ref": "e1b49553-4ec4-4f6a-ad34-0e44a631251c",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "413e6b42-7168-4d37-aa80-c53d6cd3966e"
        },
        "item": {
          "id": "010b23b5-1f71-45b2-8865-b58ca954cce3",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "48b85a2b-4112-4e8d-886e-54a9d439d110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03fadf3e-d3a1-44ad-9330-5dc0e1488917",
        "cursor": {
          "ref": "1194a701-86c4-4ef6-9bb1-5a68846e9ad9",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ca889653-ad22-4df9-b1ee-b51133bb0933"
        },
        "item": {
          "id": "03fadf3e-d3a1-44ad-9330-5dc0e1488917",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b5e307c7-0efe-4a0b-8fa2-12c03168ac53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65cd0354-5705-425a-a0e7-340c9ee4bcf4",
        "cursor": {
          "ref": "686998a6-7d4b-4b21-82c7-059f73b352f4",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4fdd2596-632a-4c1c-8713-3f7c8899dc31"
        },
        "item": {
          "id": "65cd0354-5705-425a-a0e7-340c9ee4bcf4",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "aa30b12f-a153-4609-9cbc-279d1e6e4215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f225426-3033-47bf-b327-8e6368c0e01d",
        "cursor": {
          "ref": "24f1dcbd-2fee-4e28-b811-a6c97e593976",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f2c8c8e9-1f3d-4f03-b7ea-c957d29fccef"
        },
        "item": {
          "id": "5f225426-3033-47bf-b327-8e6368c0e01d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "eed28595-7e73-445a-b301-57a7c6c03194",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4aa0bf-4986-4ae3-bb87-136ae60d85fe",
        "cursor": {
          "ref": "6d85010f-2e37-45ee-9a26-abef488fbdf3",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "99e907cd-55a8-4592-94bb-fee21abc9b1d"
        },
        "item": {
          "id": "ce4aa0bf-4986-4ae3-bb87-136ae60d85fe",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "9802fe89-65d2-4b6b-b29e-9f5af600b48d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "bd94d24f-2810-41f1-a3e6-5459a1de0ea6",
        "cursor": {
          "ref": "b18ce333-6816-48c7-a47d-d87bd934e224",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "921392c0-e0b4-4102-95a1-015228822753"
        },
        "item": {
          "id": "bd94d24f-2810-41f1-a3e6-5459a1de0ea6",
          "name": "credentials_issue"
        },
        "response": {
          "id": "83971722-5a97-44a1-a402-5b247f924da2",
          "status": "Created",
          "code": 201,
          "responseTime": 8814,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3dae65-61f4-4bf0-b4dc-9cc3094a4499",
        "cursor": {
          "ref": "ec2cbf89-5bf0-466c-a077-94bef6066016",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "03106ac0-7ed9-45c4-bdf3-cd0b2c125a87"
        },
        "item": {
          "id": "0d3dae65-61f4-4bf0-b4dc-9cc3094a4499",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "04944ed4-aa3f-4369-9f13-336bddca41b7",
          "status": "Created",
          "code": 201,
          "responseTime": 7678,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "37890eda-829e-40ad-a1cb-34e148e1356c",
        "cursor": {
          "ref": "4eb3087e-5720-4321-9054-302af56eee3f",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e004df5b-31b5-4d92-920b-8fbdf80ec24d"
        },
        "item": {
          "id": "37890eda-829e-40ad-a1cb-34e148e1356c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "4dba9e38-baa9-476c-bcb4-0b597639767f",
          "status": "Created",
          "code": 201,
          "responseTime": 7594,
          "responseSize": 1229
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac47c17-674f-4191-91e4-44a2270bf80e",
        "cursor": {
          "ref": "7be727c1-f788-4e94-9417-8e461414693d",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "128ee2d0-178e-4b06-8bbf-815c6864f26b"
        },
        "item": {
          "id": "dac47c17-674f-4191-91e4-44a2270bf80e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "fcb6a1ed-3e6d-4080-9bc3-646fb864efec",
          "status": "Created",
          "code": 201,
          "responseTime": 7786,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c1253b2-0859-419f-b74a-4e99a8c873af",
        "cursor": {
          "ref": "ec7aaf79-65f7-4b5d-bb2e-9150aaa2e871",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "750067b8-f7e9-438e-941f-9a3dbb8535c2"
        },
        "item": {
          "id": "8c1253b2-0859-419f-b74a-4e99a8c873af",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "922d4a8d-de3f-45fb-9ed4-fa1e399bb591",
          "status": "Created",
          "code": 201,
          "responseTime": 7949,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-06-23T00:42:12Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-06-23T00:42:12Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "fc0b2bc0-bf47-4cce-a090-4422139f30d2",
        "cursor": {
          "ref": "ee302c88-ee5b-4994-b75d-f429e7419f0b",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0b2a0358-984c-4f02-881d-d4a5730bc80f"
        },
        "item": {
          "id": "fc0b2bc0-bf47-4cce-a090-4422139f30d2",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "61777502-c19a-4aa1-a3b1-b7a8482c8afe",
          "status": "Created",
          "code": 201,
          "responseTime": 7959,
          "responseSize": 1218
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7924b8-9e9e-4ac4-8283-644e3805a88a",
        "cursor": {
          "ref": "ae33043b-3b6c-45cd-95f4-ceddc1c0bb29",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "be777315-89cd-4f93-b56a-1c4544b36c3b"
        },
        "item": {
          "id": "ba7924b8-9e9e-4ac4-8283-644e3805a88a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "83d31570-b780-4ee2-920d-fd52d4e6c43a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d81d5cc-4d38-4e06-b418-8cdb7dcb678e",
        "cursor": {
          "ref": "e5cf4765-8e10-451e-af39-ac0792d6291c",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b9da5a9c-55a7-4918-a346-d1036a1d7820"
        },
        "item": {
          "id": "8d81d5cc-4d38-4e06-b418-8cdb7dcb678e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1fec16d4-89d6-4047-a43e-5b0efea20ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "251f7069-d918-41bb-91e1-cf96ff143599",
        "cursor": {
          "ref": "07b5e265-d04b-41ec-8819-37b6dd6c55da",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "0cbf1028-3b3c-49b6-933d-0ef621a4960c"
        },
        "item": {
          "id": "251f7069-d918-41bb-91e1-cf96ff143599",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ee4a21b5-2b19-4543-9e06-995f01a8b5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f701a53-be30-4c41-9b4d-e467f375352b",
        "cursor": {
          "ref": "31a24d0a-7007-40ae-a866-c8f5fda99b8b",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "33d3501a-6478-4d67-8394-9350be6158c7"
        },
        "item": {
          "id": "9f701a53-be30-4c41-9b4d-e467f375352b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "cbd60695-5cb6-4b30-bb34-d950d2353a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "347464ae-115e-4cd7-b455-2fea236a438f",
        "cursor": {
          "ref": "96bf1420-8ab1-4e2d-bbc5-aef0e0c61b2f",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "bf494f25-ab90-4b41-9f73-0ce0c856d7c1"
        },
        "item": {
          "id": "347464ae-115e-4cd7-b455-2fea236a438f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3df67393-fd7b-4ea7-9e69-d696add42cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bdf225a-614c-4720-a40b-d57d24245282",
        "cursor": {
          "ref": "9d8697e2-96c4-4918-b824-27f46072ef06",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "7c3c24db-e4aa-4327-8682-788eced2a8f0"
        },
        "item": {
          "id": "4bdf225a-614c-4720-a40b-d57d24245282",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1a4f4616-b886-4e35-9631-189c9e1f370c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc442ffb-1d0a-4914-83f2-53363f8fa182",
        "cursor": {
          "ref": "727bffd7-b35b-40b0-a34e-7a7afa3151af",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0d30f353-bdb0-4c0b-bf2a-03501edb7998"
        },
        "item": {
          "id": "cc442ffb-1d0a-4914-83f2-53363f8fa182",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8b63507b-b8dc-436a-9845-bfa750533c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da352515-9ccb-4869-846f-1f789d33fc5c",
        "cursor": {
          "ref": "51285671-e647-492f-8fec-ead9817063a0",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "6fe1f190-0e53-48d3-812e-af003093ef99"
        },
        "item": {
          "id": "da352515-9ccb-4869-846f-1f789d33fc5c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "11f370e1-13fb-4a4a-ad90-46b3cd0ac5e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b56a27-03d4-461a-ba6b-c1081e60c211",
        "cursor": {
          "ref": "404c5f4b-1fb3-458b-9d31-083808270a6d",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d11f28c0-aa21-4f02-a995-b2428b9fa31c"
        },
        "item": {
          "id": "c6b56a27-03d4-461a-ba6b-c1081e60c211",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "88073f86-8ab5-4cf7-867c-190e57673cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b3eef1-8ad2-44d6-80d8-bbcf7dcf5533",
        "cursor": {
          "ref": "97308077-56b2-4711-94b3-8a18e176eaa6",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d9ec6ff8-3545-4d8b-9166-ac0a4c26f56a"
        },
        "item": {
          "id": "f5b3eef1-8ad2-44d6-80d8-bbcf7dcf5533",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a7f4878a-4951-47d3-a945-c7cc04a842a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b608410c-2ef4-4226-824d-088c6c66bfe6",
        "cursor": {
          "ref": "79fb1867-bcac-40d2-b89d-64f9c1b51a0d",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "68d2e121-5d50-4f31-bffc-1b7de76e3366"
        },
        "item": {
          "id": "b608410c-2ef4-4226-824d-088c6c66bfe6",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "428dd90d-4068-4ee4-b8cd-7f0b7826a436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7444db-16d1-426b-878a-54b021179b77",
        "cursor": {
          "ref": "e2496a0d-5f29-4476-89dd-f44a90aa0187",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "cf833299-a15f-435b-9f53-b25c2ca653a6"
        },
        "item": {
          "id": "ed7444db-16d1-426b-878a-54b021179b77",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4fedceb3-ae18-4d35-862e-4ca8c60bd982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d1158d6-5523-491d-b4b6-e427e487a9eb",
        "cursor": {
          "ref": "a58f78ea-2590-4a4f-9dfd-59b6f526d08e",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7e5348a9-ac5b-409d-92a2-5959cc94a31e"
        },
        "item": {
          "id": "2d1158d6-5523-491d-b4b6-e427e487a9eb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c9454236-06d7-4c06-86e5-7ca701e75745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566529fc-8d97-4ea3-acf3-f6625732e4e6",
        "cursor": {
          "ref": "98d1e34b-b2ec-4850-a06c-11f9fce61e0d",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f4db82ae-cbbb-422b-b437-9bc8ff34e96d"
        },
        "item": {
          "id": "566529fc-8d97-4ea3-acf3-f6625732e4e6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a84285b7-860d-4b3a-9920-748cc96f7a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec8fdd0a-8083-46e0-a3b5-d9600b0f5441",
        "cursor": {
          "ref": "b62643d2-1521-4191-a06b-1b238c34100f",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "40a8719b-2c45-440a-91fc-f648c862694f"
        },
        "item": {
          "id": "ec8fdd0a-8083-46e0-a3b5-d9600b0f5441",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "608a3c12-3be9-433f-bec8-d6e600eb12d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7978f8c1-7b53-467a-a8fc-1946c002ec71",
        "cursor": {
          "ref": "21f41e31-a20b-4d2d-bb47-92ae65f9541c",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "05c5d230-907b-47af-9d25-51d8915cf61a"
        },
        "item": {
          "id": "7978f8c1-7b53-467a-a8fc-1946c002ec71",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "78656301-f724-4eb1-bd10-34d7e9a3b825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54013e4b-b9be-4955-9c57-c4167df8d96b",
        "cursor": {
          "ref": "0d591a2c-8c6a-4b71-b943-2eefe8c946a1",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8080030a-b522-4c2d-92e2-23f8dedc5816"
        },
        "item": {
          "id": "54013e4b-b9be-4955-9c57-c4167df8d96b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f00c5e2f-3c5b-4b8b-85e1-e2bd4567dc24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b77c352-cd64-4d73-a9a0-be59f6c54508",
        "cursor": {
          "ref": "d948b80c-f169-4eaa-920b-22c419a6a0d6",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "5564aa31-9b4c-402e-91e4-8963a72d46da"
        },
        "item": {
          "id": "8b77c352-cd64-4d73-a9a0-be59f6c54508",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "787a4e3f-1948-4fe3-b397-0bf15f1281f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572cbfbd-6480-44e2-bca3-808eb7329c96",
        "cursor": {
          "ref": "4053c46d-7c85-4363-9803-47ed085cb958",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d1b0a1f3-dbaa-4f67-9967-81230cde8799"
        },
        "item": {
          "id": "572cbfbd-6480-44e2-bca3-808eb7329c96",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a0a58088-aeef-492f-9410-5eaf951e8a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f44e9fcb-10ce-459d-962d-2cfe3bbc008a",
        "cursor": {
          "ref": "e56c0b48-fed9-4c35-8594-2ebe99e72906",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d1d72276-e089-4b99-a57c-a963599c38c4"
        },
        "item": {
          "id": "f44e9fcb-10ce-459d-962d-2cfe3bbc008a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e418ec48-ea3b-41e0-a5c5-680f5df90c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a21f6b-afa6-4e77-b531-dd4f1bcdaccb",
        "cursor": {
          "ref": "14c25b88-427a-4a76-a376-6be695c2bfe3",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "394c3854-8030-49d9-9286-aff28e6cf5d7"
        },
        "item": {
          "id": "68a21f6b-afa6-4e77-b531-dd4f1bcdaccb",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "774c8d26-76c8-4082-96ec-e29302e7149d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5cad771-e0ad-4303-8848-afe3cb91dbef",
        "cursor": {
          "ref": "1c19a783-6d45-42f8-b5b6-1fef8fdb5f54",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "eec1fd9c-8342-432b-9acc-8b8d1520fd03"
        },
        "item": {
          "id": "d5cad771-e0ad-4303-8848-afe3cb91dbef",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5888a87c-551f-42af-a171-dfbbdfac5dd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a142f764-9a5e-451e-8c82-34d504b6da9f",
        "cursor": {
          "ref": "aa59ae88-dcb3-45f7-b64a-ab18095048c3",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e5ed592f-1409-40fa-84df-2184acec3f00"
        },
        "item": {
          "id": "a142f764-9a5e-451e-8c82-34d504b6da9f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4c0f5a28-ef05-4a53-9a8f-14697dbf5dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8890aa9c-7052-496c-a4ac-93472de1cb2f",
        "cursor": {
          "ref": "82c67048-7a10-4da6-9427-3e5fa955935d",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "927aa931-0674-4897-aa2b-42783a326d54"
        },
        "item": {
          "id": "8890aa9c-7052-496c-a4ac-93472de1cb2f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3028f785-2764-4ee9-be99-7109533723af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae27e95-3e23-4709-bfaf-83b29895060d",
        "cursor": {
          "ref": "a9267cd0-477c-443e-9d84-32ccf1e261d2",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "50fc12a1-b336-48fa-9cce-e9485f2a8e7b"
        },
        "item": {
          "id": "5ae27e95-3e23-4709-bfaf-83b29895060d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0eb116a6-24cd-4867-a624-2083e8c16c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a790da-4d95-4d53-822e-a394b1ed2e6b",
        "cursor": {
          "ref": "b25def38-5ee3-4dd8-88d5-cb5d903d63f0",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "2b56b545-7ad3-4097-b2f4-f04b6cc36475"
        },
        "item": {
          "id": "c1a790da-4d95-4d53-822e-a394b1ed2e6b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "aa674bcf-2c95-48f4-bc3c-091d93cc0ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e4f021-8be0-4612-aeda-3d2b9b1a9f5b",
        "cursor": {
          "ref": "c3d23802-ad9a-44b7-8deb-f215203b97bc",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "8cb9923c-679a-4e83-bf36-24057f8e3ebe"
        },
        "item": {
          "id": "30e4f021-8be0-4612-aeda-3d2b9b1a9f5b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6293a2db-1ddd-4ba7-8603-f14cc8076142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f49427-53ae-4c91-962b-fb5b65729473",
        "cursor": {
          "ref": "f08c219c-1b49-411e-bd2e-93dda403b92a",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "2936710a-f0e2-4510-b403-12b8022a0395"
        },
        "item": {
          "id": "b7f49427-53ae-4c91-962b-fb5b65729473",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f185b079-5b66-44c0-b97f-68bacb1a202d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ef6882-6b3e-4629-a3f1-8eea3856599b",
        "cursor": {
          "ref": "c3629b63-6fc2-4319-acb4-4d5520a9ffd3",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7bd10854-d317-4d16-b01c-8393a793e0f7"
        },
        "item": {
          "id": "f8ef6882-6b3e-4629-a3f1-8eea3856599b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "75f1ef7f-13c1-4703-8fd0-9a010941e0cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2fa1318-155d-4d65-a872-5018bcab80ca",
        "cursor": {
          "ref": "5b11763c-235c-47cb-a066-be037238090b",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b9ae8c1b-ee38-44f8-a241-31bec8421f86"
        },
        "item": {
          "id": "a2fa1318-155d-4d65-a872-5018bcab80ca",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "739aeea3-97d7-4813-8628-16f972191905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa58209a-907f-485e-8252-447dda1cfcf8",
        "cursor": {
          "ref": "9c5ab2e7-1ff0-4134-8714-1b3c68cc9d09",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "92156a84-4d17-4f21-8cd7-ff893885cf62"
        },
        "item": {
          "id": "fa58209a-907f-485e-8252-447dda1cfcf8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e66ba7c9-1077-43cb-a2c6-95027d6236b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79263415-b37f-42fc-bb70-0a8d542577fb",
        "cursor": {
          "ref": "f7bd5c2c-9a1c-4e62-afd5-89efe79d2435",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e7b9c175-3496-4605-b51b-72c11dc47fe5"
        },
        "item": {
          "id": "79263415-b37f-42fc-bb70-0a8d542577fb",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "1759717a-b4d4-48d3-86d0-b37215b74aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76184c92-ebd7-4ab3-b67a-321c94b2b09d",
        "cursor": {
          "ref": "2fe8ce61-e22e-4ec0-88c7-3fead9d3da1a",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d57fd991-d3c1-48df-8b54-a27a17970f1d"
        },
        "item": {
          "id": "76184c92-ebd7-4ab3-b67a-321c94b2b09d",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "fda29b94-e1d3-43b9-8b04-0341de7bc03c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072a47e9-a394-4765-8613-be65d8860ccd",
        "cursor": {
          "ref": "98ee5762-79ac-4c87-8bfb-cc9f2a651faf",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "db030a90-638f-490d-a085-b9835d19e5ca"
        },
        "item": {
          "id": "072a47e9-a394-4765-8613-be65d8860ccd",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c86bfe98-da0e-4e4f-af31-bf3ce221c768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a0cab2-26b8-4f42-b257-aa3314ad9236",
        "cursor": {
          "ref": "cfd14c83-5232-41e3-a6c1-ad2a7af9661a",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3ba4055f-b5c0-4a45-be99-1859ef69070b"
        },
        "item": {
          "id": "c1a0cab2-26b8-4f42-b257-aa3314ad9236",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "a6404a11-b5b4-4f73-b71c-6044390b65bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab60a41-dc28-42b1-bc1b-cf9503a9f690",
        "cursor": {
          "ref": "b3d891af-b3aa-4997-9f58-f914bd3b5ac8",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ddca8deb-c799-4ff9-b237-7e795c02c540"
        },
        "item": {
          "id": "0ab60a41-dc28-42b1-bc1b-cf9503a9f690",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "63da4a97-8e4a-4c1f-9008-902a8232d1e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e7663b4-d1c0-4393-9a80-204b8e63de5b",
        "cursor": {
          "ref": "b687dd55-f094-426d-ad87-59d34a3562f2",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "993e7d8b-9a75-4d53-829f-5ac08a08b564"
        },
        "item": {
          "id": "3e7663b4-d1c0-4393-9a80-204b8e63de5b",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b3e61de3-8092-4382-be71-ba246d318553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d4c0ba-99f1-4407-8c46-4268646a89fb",
        "cursor": {
          "ref": "9255947a-0eb3-44cc-9111-269d4b5b2ee9",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "fd9ac42a-bd3a-4b7d-9703-cecc26aa7884"
        },
        "item": {
          "id": "e6d4c0ba-99f1-4407-8c46-4268646a89fb",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "273d5fcd-eb5b-4db3-9a6a-858ca40a30ea",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0dd11e0-253e-47e6-8a5e-e5a8b1f7fe0d",
        "cursor": {
          "ref": "0bea5c28-5ba2-4d95-8fe4-c08903f9febf",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f70ae02c-9ce6-436f-8b74-d997e9015df5"
        },
        "item": {
          "id": "a0dd11e0-253e-47e6-8a5e-e5a8b1f7fe0d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c84afa26-447c-4158-a020-cb7fb9a169e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3fc02cc-aeae-40c6-b16f-8e4bad85f0d9",
        "cursor": {
          "ref": "9d98fa48-9556-428c-b26a-f6dd7db15812",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "04841f14-af7f-42bd-b769-1f55c2104b4f"
        },
        "item": {
          "id": "c3fc02cc-aeae-40c6-b16f-8e4bad85f0d9",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "06486a6d-bdab-41cf-ae2d-3fca416210ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d91934-91fb-4d82-b839-56beb573b9b9",
        "cursor": {
          "ref": "021a088e-e80b-4941-a344-d1778b01f74c",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "202588b1-ce91-4dc0-8a08-41a7201bf295"
        },
        "item": {
          "id": "e8d91934-91fb-4d82-b839-56beb573b9b9",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "81272e05-e01d-4306-ab10-574c9114a90c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452452dc-fb71-4d2d-aa6d-0525a6d0d96a",
        "cursor": {
          "ref": "52b5b6e3-4c9b-4d70-9b06-1e91b5651f12",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d6dae084-d2af-46f0-b96e-373692fb1c7d"
        },
        "item": {
          "id": "452452dc-fb71-4d2d-aa6d-0525a6d0d96a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "55b16445-233a-4f69-8836-f95107cee2e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338192ba-d79c-4a23-9873-683b9e2ddb1d",
        "cursor": {
          "ref": "4ff028d3-63ff-48f9-81f1-d7d9f43bf039",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6ce59f2a-a4c8-41f1-858f-7d1137a365fd"
        },
        "item": {
          "id": "338192ba-d79c-4a23-9873-683b9e2ddb1d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "fe88eeac-d9c2-4766-ba9b-dae0a9b09383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c889d24-a9cf-4dbe-b99d-0ab2660a599b",
        "cursor": {
          "ref": "220ed111-472e-4a5e-a4c7-91f5a434d497",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "12c17c05-d455-493e-9f8a-7cd593cb0929"
        },
        "item": {
          "id": "3c889d24-a9cf-4dbe-b99d-0ab2660a599b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "4ebd2a1c-89de-431a-868f-311369a611b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d27177c-7c9f-4e0c-a1fb-e36872fb66ec",
        "cursor": {
          "ref": "1fead51f-755e-47f0-8b6f-f8fc1d8ae41e",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "12034bbf-7d95-4fa5-8c5b-78944e3c8b8c"
        },
        "item": {
          "id": "1d27177c-7c9f-4e0c-a1fb-e36872fb66ec",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b200e984-aed0-4cc2-9a17-a4240387de03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd6852d-2dfd-47f1-ae02-2e11e64a22f0",
        "cursor": {
          "ref": "489032fc-2f87-491e-a315-c442f3e08bc6",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "155288e5-87f3-4a18-9efc-1f8fc4aef754"
        },
        "item": {
          "id": "7fd6852d-2dfd-47f1-ae02-2e11e64a22f0",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "5ae8aa10-d130-4c5b-bc39-4978f9af38ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566da0a0-cbd5-40f0-98eb-9940f4026a51",
        "cursor": {
          "ref": "29f567c9-85e2-408a-a749-70f2805e73b4",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1be7b0e8-6ff0-4987-a2e5-2f8954b272c9"
        },
        "item": {
          "id": "566da0a0-cbd5-40f0-98eb-9940f4026a51",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "09df49a2-4e7b-4563-aac4-7003500cc12d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a583b4d9-6a01-4e5a-b5ef-48e270dd5c81",
        "cursor": {
          "ref": "c136d7dc-4695-432f-a499-8c6e895e954e",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "67ed0727-0062-4630-a38a-450cf18012f4"
        },
        "item": {
          "id": "a583b4d9-6a01-4e5a-b5ef-48e270dd5c81",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "cea118e0-5aa4-4508-984b-5c4f5350f629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dddde38-2a04-46bf-a05f-41b30b533ede",
        "cursor": {
          "ref": "8c8d52c4-70f2-427a-aeb2-717d37cf99ea",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "db1a844d-43ac-49fe-b4da-dbf09e9e15e6"
        },
        "item": {
          "id": "1dddde38-2a04-46bf-a05f-41b30b533ede",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d4bf84ae-e42c-42dc-8c95-f9d0cda43ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d5d686-edbd-489c-9054-aea5ab7820a1",
        "cursor": {
          "ref": "f6083355-6677-4269-83f6-84a9beb89f0c",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "ce73bd53-2860-42df-8ec5-f6d684d97c83"
        },
        "item": {
          "id": "60d5d686-edbd-489c-9054-aea5ab7820a1",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ae6827e6-15a1-459f-9b40-b95141f88165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1faea24c-1412-4c31-aacb-e3783c757930",
        "cursor": {
          "ref": "953addd8-fed9-4798-8ce7-2f7c96428570",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2e27da79-3caf-48e4-a6dc-03860498d8e7"
        },
        "item": {
          "id": "1faea24c-1412-4c31-aacb-e3783c757930",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e02a62e1-7d72-401c-8f07-f90164bd6026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef687af-fa0f-4092-9fc3-7d049dff7941",
        "cursor": {
          "ref": "1e441d2a-9a6d-47c8-b2ae-23b693d5a5cb",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "97a21dc7-6908-49ae-b53d-e824d8d86409"
        },
        "item": {
          "id": "fef687af-fa0f-4092-9fc3-7d049dff7941",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a012867d-6f89-411e-b41c-f1258c1a0bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04957cac-4f79-43c1-b859-088f3ea4d665",
        "cursor": {
          "ref": "e7a97b1a-3ee2-42db-a7f8-0f3d972f781d",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "966f89c3-ab7f-4adb-b4b3-7793538cf298"
        },
        "item": {
          "id": "04957cac-4f79-43c1-b859-088f3ea4d665",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "2611ebc6-8225-4a87-8b3e-962a5bbf02c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f0f6fd-fe1d-4d40-9738-65cf115d223a",
        "cursor": {
          "ref": "afe11119-6819-47fa-9b30-245a6169aeee",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "7c27fedf-02bb-4a89-a394-bfd1c197181a"
        },
        "item": {
          "id": "97f0f6fd-fe1d-4d40-9738-65cf115d223a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "02d7dd57-a126-4daf-af12-0707332a94c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c6b95c-a432-4a31-af82-8afa59f77f64",
        "cursor": {
          "ref": "6112fd3c-6a8c-4d0d-987d-445dbdb17d08",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e0e98ac7-30e2-4e09-8885-ab1ad034c3e0"
        },
        "item": {
          "id": "d6c6b95c-a432-4a31-af82-8afa59f77f64",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "06ba6890-4172-406a-87a2-e0bcd996085f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efe936de-e5bd-45e9-a3e6-e114ac06c8fe",
        "cursor": {
          "ref": "f6b731ec-d289-44ea-b804-56c1dc8f27d6",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "cc59e5a8-0a90-4c82-b92f-5ea42a738d0d"
        },
        "item": {
          "id": "efe936de-e5bd-45e9-a3e6-e114ac06c8fe",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4fc0cea8-dc93-4d1c-a526-71d455ce4822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d417135-6820-47fa-8a89-892f2d7296ea",
        "cursor": {
          "ref": "0778df03-b6c0-47a8-8b7f-5985f8adb484",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "094b6c11-7505-4166-91c0-a62e492062ab"
        },
        "item": {
          "id": "4d417135-6820-47fa-8a89-892f2d7296ea",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a367b2ee-9930-4eb3-be16-c5f06dd8219b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98628e04-b2b7-4378-aed5-8cf09e8c688e",
        "cursor": {
          "ref": "1c0c8952-3921-4a50-87db-30a8f69a074c",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a90d6640-ed75-4324-8e5a-0a94a6415195"
        },
        "item": {
          "id": "98628e04-b2b7-4378-aed5-8cf09e8c688e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "6b445544-a18e-4146-aaa2-993031728321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd489e57-055a-40a9-9987-63781c22f48e",
        "cursor": {
          "ref": "5bd8d545-8fd2-451b-b365-7484031be341",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c07e5c76-28c1-4647-ba32-c8b519efa516"
        },
        "item": {
          "id": "dd489e57-055a-40a9-9987-63781c22f48e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "39eb2c2d-fad3-41a9-a1d3-57c7c551f10d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db33cef8-ea13-45e5-baca-67eaae1c1a6c",
        "cursor": {
          "ref": "51c2d643-07ec-4b53-8b3f-0a941b442baf",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e5ad8a2b-6a88-406e-9f9b-7044a0c37659"
        },
        "item": {
          "id": "db33cef8-ea13-45e5-baca-67eaae1c1a6c",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "41dac10f-4f22-4bea-a14b-84d928f814c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871c9b78-5ae8-4f43-80a5-18f126be20e0",
        "cursor": {
          "ref": "5b5112af-acb1-4c12-bd48-4870218e3ffb",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "6267c2b9-5b0f-441f-bff0-405a2cd178ad"
        },
        "item": {
          "id": "871c9b78-5ae8-4f43-80a5-18f126be20e0",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "cc5efe87-5e33-4592-8564-da4bd20d3ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca585d7-42a5-433f-a7d9-b74f902e09bc",
        "cursor": {
          "ref": "cd4dae81-3166-4215-be20-96715cd5ecec",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c70d3446-12ce-432a-a88f-1aba8e026ad2"
        },
        "item": {
          "id": "0ca585d7-42a5-433f-a7d9-b74f902e09bc",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "4cec82aa-33c0-431f-b90a-6f6e10731530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1319f95-5af3-4f74-9aee-cb53c462646f",
        "cursor": {
          "ref": "bf4d886a-f140-4cee-a932-61f17741a010",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ef6797c1-2342-4cb9-b76e-83c0bba11b8b"
        },
        "item": {
          "id": "c1319f95-5af3-4f74-9aee-cb53c462646f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "869da18d-0667-45ac-b40e-3b1df295eb8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef66646-42c2-4cb0-a758-33e1be1e2268",
        "cursor": {
          "ref": "1003f016-7854-4d55-bf69-2a4ba54ecd16",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c898ac0c-9d32-49fd-bc72-1ecf6989b1a3"
        },
        "item": {
          "id": "bef66646-42c2-4cb0-a758-33e1be1e2268",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9be07c29-982d-41bd-924b-013043d99de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867882c1-5276-427b-a4fa-36f96aaca47c",
        "cursor": {
          "ref": "69777a72-0316-4c1a-ad8d-21903668b63b",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a395e668-0f95-4116-aefd-1f4990bd99d9"
        },
        "item": {
          "id": "867882c1-5276-427b-a4fa-36f96aaca47c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5a4d0474-de84-4b33-851d-7c234f891e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca27948-be17-4d82-9e21-04565deeb480",
        "cursor": {
          "ref": "7a4fd39e-2881-4bd2-94cf-441555cabd49",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ebc50c3b-e847-49ac-b5e6-6596e587c72b"
        },
        "item": {
          "id": "eca27948-be17-4d82-9e21-04565deeb480",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "24ba6f05-6365-46c0-ba3e-96f9374e5988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9552f359-5302-45a0-be44-11ff8326d7da",
        "cursor": {
          "ref": "171d6571-4fec-4922-876d-a045de364827",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0cb4dab2-77d3-413a-99bc-f21b50f605a7"
        },
        "item": {
          "id": "9552f359-5302-45a0-be44-11ff8326d7da",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "43cbd0f6-9856-46dc-a2c2-814e250e192d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c678d3b-61ee-415f-a45e-3109efe34475",
        "cursor": {
          "ref": "b612fb29-36eb-4045-8527-ec81500a71a4",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "54ca9313-994e-4fb4-9e26-8062b784650f"
        },
        "item": {
          "id": "4c678d3b-61ee-415f-a45e-3109efe34475",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "62820182-62e6-4f0d-bbc1-c4d02699654e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e6ef49-1dcf-4b71-acf2-2bdfa7e3c703",
        "cursor": {
          "ref": "8a0783bd-f3f7-4d5b-a37e-562e74b7ed7a",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ea90c751-80a9-49ec-af70-a8ce084e709b"
        },
        "item": {
          "id": "e7e6ef49-1dcf-4b71-acf2-2bdfa7e3c703",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d70ed7ac-f2f5-478b-90fb-e90902ac2f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f63307-d469-4ac9-8e48-f4329d89f89e",
        "cursor": {
          "ref": "e8dbc317-bfa9-4a52-a3d7-e4ad31aa98ca",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f5fbf81d-5ad1-48ec-8452-bf1517b47806"
        },
        "item": {
          "id": "59f63307-d469-4ac9-8e48-f4329d89f89e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8c7cd2ff-35a1-4da9-b313-508d29fe687f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ea6ce0-68f5-4197-ab14-5c8e9dcb5c8d",
        "cursor": {
          "ref": "7ff9ad16-53ef-4087-bd80-c804d8b20c31",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8e55130c-ba41-401c-9423-a9c4a052ca58"
        },
        "item": {
          "id": "d0ea6ce0-68f5-4197-ab14-5c8e9dcb5c8d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c77a63cf-d0f0-49a6-88a5-02fae1b5bd2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48082726-fadc-4d74-af79-0710b2f4da53",
        "cursor": {
          "ref": "833386c3-f1f3-4592-9c35-fe0765a0d23c",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "92f56ad9-3b33-4b5f-aa6a-5edd79162eaa"
        },
        "item": {
          "id": "48082726-fadc-4d74-af79-0710b2f4da53",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f0f482a2-2dba-44ba-88f0-57245b5116ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf4ea4e9-e551-4727-b270-ef76ae6b349f",
        "cursor": {
          "ref": "59ff9534-45cd-4546-9106-79781eca3c09",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e070c134-21a6-43b0-ba4c-2710dc7ad81b"
        },
        "item": {
          "id": "cf4ea4e9-e551-4727-b270-ef76ae6b349f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "28cad5f1-6e6b-41c9-a074-c69e91d6d3b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b242f2-35d4-4923-a9ac-2f8e68ce02ce",
        "cursor": {
          "ref": "75c8ea17-0378-4999-956c-71d9db322f27",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ee12748a-9b5e-450c-9155-4b3d9e52b2b4"
        },
        "item": {
          "id": "82b242f2-35d4-4923-a9ac-2f8e68ce02ce",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "42cb3c29-5a8d-4184-9617-4996711479c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d3b685-b269-44e3-8a4c-14d333aee755",
        "cursor": {
          "ref": "5917fbd3-f704-4a20-ae9f-1428e899a8f8",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "fdce8fde-4d18-4912-bb6b-4c8a4343638c"
        },
        "item": {
          "id": "85d3b685-b269-44e3-8a4c-14d333aee755",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0d1345af-708d-4444-8845-50dea2ed527c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b3db432-0e16-48c2-91bd-e4fc9671e07a",
        "cursor": {
          "ref": "06a83fa7-484a-4470-be6d-1677b381c484",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5424d48b-e422-4d25-836f-39b8cbd01346"
        },
        "item": {
          "id": "1b3db432-0e16-48c2-91bd-e4fc9671e07a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "94925c03-6f83-4c2c-be7a-d4366bf01792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e11a50-8531-4161-b209-5a8dd7c5c7c9",
        "cursor": {
          "ref": "46086ac7-7c31-4dff-aeba-ab4cbc96017d",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "077b91d0-d481-4ad1-80ef-ca64bc1b97b8"
        },
        "item": {
          "id": "65e11a50-8531-4161-b209-5a8dd7c5c7c9",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f08af7f4-c705-4c40-bedd-0ae9d4142f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19bac30c-47d6-44c0-8612-0babef01a438",
        "cursor": {
          "ref": "57ebaecc-3aca-4a14-9f41-bab82baf186c",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a656b1f3-29cd-483a-a0bb-3d87d403cd09"
        },
        "item": {
          "id": "19bac30c-47d6-44c0-8612-0babef01a438",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b38bc495-2d7b-49ae-9627-48be48c38423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68c1fe6-653c-43c9-8eeb-93f6b126a9dd",
        "cursor": {
          "ref": "cc207e6f-b106-41b5-aa03-4cf953514c71",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "7ac86391-0d29-4106-aef8-605f57a4ed01"
        },
        "item": {
          "id": "b68c1fe6-653c-43c9-8eeb-93f6b126a9dd",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "03867e29-811c-40d9-b7e5-fb4d47ff57dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7bf19a-e324-46c8-a120-e45bb4a3ce12",
        "cursor": {
          "ref": "8e80ea7e-fdef-4d56-a226-292c03b08974",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f7f265f9-3451-4c90-8f12-47062099fc0b"
        },
        "item": {
          "id": "9c7bf19a-e324-46c8-a120-e45bb4a3ce12",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6304c9d2-950d-46c2-93c9-61af17facdc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac186dd1-e5d2-460b-90ac-a164086d5c62",
        "cursor": {
          "ref": "4e091cde-915b-4fe4-8fec-3bc2f12bda3f",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "1c7ad278-13f8-413c-a212-59a967515353"
        },
        "item": {
          "id": "ac186dd1-e5d2-460b-90ac-a164086d5c62",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "6bd5ab20-6cbe-4ad2-a05b-7541944ba8a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b05c2d3-1413-4f36-9abf-aa0d72d0d555",
        "cursor": {
          "ref": "ed08224d-92e9-4372-be6f-43caf12d27fa",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a7e587fd-f678-4b78-9d65-fb7d4d08f9e3"
        },
        "item": {
          "id": "2b05c2d3-1413-4f36-9abf-aa0d72d0d555",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ca90b03c-e3c2-4320-974b-c614aa317bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b325a9af-8a4f-4497-9010-75621185ad89",
        "cursor": {
          "ref": "e3a6afee-7ba5-4f54-9773-d35879ebb8d3",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "151a2528-d65f-4c63-8277-2654f5ee519d"
        },
        "item": {
          "id": "b325a9af-8a4f-4497-9010-75621185ad89",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d8ab313c-9b30-4102-9ba5-1fe12cb4eb99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee2085d2-01fe-4ce6-bfd2-8a022052c0ce",
        "cursor": {
          "ref": "5a39032e-7539-4eae-b5af-952aadb9cf79",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e1db9bc7-0e93-4d09-b019-b1e219bc4747"
        },
        "item": {
          "id": "ee2085d2-01fe-4ce6-bfd2-8a022052c0ce",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "31f17641-4ea0-4471-a431-36e921f50d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d8fd3d-c688-477a-a5c4-c9299d707ff7",
        "cursor": {
          "ref": "1e333bcc-83bc-47a0-84eb-cf27de82b292",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "7c98030a-5a30-42e3-b256-6bfa9ecbce55"
        },
        "item": {
          "id": "40d8fd3d-c688-477a-a5c4-c9299d707ff7",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "be807d36-3e61-472a-b8f1-184d4e5a8afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c440aa8-9618-4ef9-a215-97d3d69a45b1",
        "cursor": {
          "ref": "c8b6fa4c-c489-4fd0-aa7c-864b2a044d8d",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "33661967-11d6-4757-b6d0-6e135f678a4c"
        },
        "item": {
          "id": "2c440aa8-9618-4ef9-a215-97d3d69a45b1",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6d326277-ea2b-4e2a-8339-30b44749b67c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f50c6b-ad37-4709-95f4-254b27b57c08",
        "cursor": {
          "ref": "2e6933f0-90b2-46e7-bb5e-885da2259dd3",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "46b12597-6ca1-42eb-879c-011ecbc0c893"
        },
        "item": {
          "id": "81f50c6b-ad37-4709-95f4-254b27b57c08",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d40c4951-6c21-4665-aa2e-7322ad913e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd35c352-a0e8-4737-8ae6-612621db79cf",
        "cursor": {
          "ref": "42dc2d60-acba-43d1-ba0a-c11269c2a815",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f2eae884-53a5-4708-8e4e-12aad7789e31"
        },
        "item": {
          "id": "dd35c352-a0e8-4737-8ae6-612621db79cf",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ac01dbbd-e78d-456f-b58c-5600e56adb5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea792c6-6c7f-4515-b368-558b693783d2",
        "cursor": {
          "ref": "a07f6e6f-ea55-45e0-8489-af6adfe49c8b",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "4b94ec5c-02a6-45f4-b0c4-4e5dcf4339d9"
        },
        "item": {
          "id": "fea792c6-6c7f-4515-b368-558b693783d2",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f1282f1d-7423-4f28-834b-51948eef7950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ec31b4-fbb1-4aea-a435-b7ef8c79d18e",
        "cursor": {
          "ref": "5cd6d097-f1bd-4c57-af18-28865b7ae830",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "68cf0390-f485-40eb-98db-f201652eaace"
        },
        "item": {
          "id": "58ec31b4-fbb1-4aea-a435-b7ef8c79d18e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "197e9d11-b3dd-4445-b6fe-07c033c34555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fda3da1-4155-45b6-b565-2cd013e98313",
        "cursor": {
          "ref": "c47bd4a8-ab96-4b5b-848a-57f8f60efb92",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2b5f4e04-8a84-4e9f-be2c-906e9ce8d4d3"
        },
        "item": {
          "id": "0fda3da1-4155-45b6-b565-2cd013e98313",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "16b9aea0-d181-4f7f-abe0-ec46766b5ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c29f1d29-657d-4c36-a93d-0949f5294b7b",
        "cursor": {
          "ref": "407886a9-84dd-4156-9809-2e53f4864c33",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d71ad3fd-faaf-4db8-b2ed-201ca157402d"
        },
        "item": {
          "id": "c29f1d29-657d-4c36-a93d-0949f5294b7b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d1bc13ad-0663-42bf-8c34-189e0d4a43a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f78d67-0ed3-4078-a0d8-94fd9cca1ab0",
        "cursor": {
          "ref": "7d78e573-4a7d-4632-b10f-fd73d4b20ad4",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "dde4a63d-602d-4c04-bf00-1c98ce048d03"
        },
        "item": {
          "id": "f5f78d67-0ed3-4078-a0d8-94fd9cca1ab0",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "eee4b26f-f110-4fa6-8593-11f707fedb66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f2505f-5f97-422a-a963-ddb1063d6f91",
        "cursor": {
          "ref": "16a523ef-7f36-4393-9035-f28bb45a09e5",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d519b1ec-dd17-4d2b-b26b-50215006d6d6"
        },
        "item": {
          "id": "43f2505f-5f97-422a-a963-ddb1063d6f91",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "1d3a5dd8-0ea5-49ff-9d9f-b0bf8e821fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a647a6-25b7-4499-8bfa-c2926e7551f5",
        "cursor": {
          "ref": "63822a05-1785-4143-9af7-22c38629d0da",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "db37b85e-addd-4247-a571-ee80835b1c7c"
        },
        "item": {
          "id": "01a647a6-25b7-4499-8bfa-c2926e7551f5",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e213530e-e692-4ec0-ad17-1d06d0e3491f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d4cdfff-4635-498a-ad6c-a65a9ac59132",
        "cursor": {
          "ref": "8dc049fa-4ff3-4e0e-85aa-771e20e6076d",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0de94a36-62de-4d8c-a998-3c400d05715a"
        },
        "item": {
          "id": "1d4cdfff-4635-498a-ad6c-a65a9ac59132",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "08fac26c-1ca5-4d47-8b70-5f7308c5f3f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d2bbde7-d93e-44e7-a5dd-4279e9f48cc1",
        "cursor": {
          "ref": "553b13ce-5033-4a72-a8e1-fb2735d7d426",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "fb835cb6-b130-45a6-808c-7ac8d8d2b89b"
        },
        "item": {
          "id": "0d2bbde7-d93e-44e7-a5dd-4279e9f48cc1",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "de872a57-5d18-4e18-afa6-9731a07bca74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "228aa9ed-1b42-4b60-84b0-71a2e55d2fbb",
        "cursor": {
          "ref": "0cdb76c2-7ae2-48a1-939a-af40808a83af",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "fdeb6e26-ec3d-4be2-88a9-bfb4c0ce46d9"
        },
        "item": {
          "id": "228aa9ed-1b42-4b60-84b0-71a2e55d2fbb",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "4882da2f-1279-4426-925a-2681e7637b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b961b8-9052-4d50-a794-9bf11b95e864",
        "cursor": {
          "ref": "0505e08e-ef03-4e12-8b73-3d85aacf8c26",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ecc4e969-3638-40ec-8dfa-62746bd18219"
        },
        "item": {
          "id": "81b961b8-9052-4d50-a794-9bf11b95e864",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "305a1fb7-2d8f-47fb-b5ef-8754a6c588b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a66e51-24ad-4248-997c-11ad029a88b1",
        "cursor": {
          "ref": "8b2c3fc4-e486-40a0-97a8-98454640a199",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2d39ebaa-0ca5-4efb-9ad2-81d1711bcb2d"
        },
        "item": {
          "id": "48a66e51-24ad-4248-997c-11ad029a88b1",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a6e22d4d-3272-45db-bc33-649241a27bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0db39c-d20d-40ba-bc52-620bce0f2059",
        "cursor": {
          "ref": "7232cab2-4b62-4636-bf95-f0c02f6e580b",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7c90f96d-dd32-4f6d-bc7d-d72c1737abce"
        },
        "item": {
          "id": "0a0db39c-d20d-40ba-bc52-620bce0f2059",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e6c84925-0ed8-43dc-ac66-305a0da1ef4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a20759-6b0f-4a87-9bf7-0e97b92de19f",
        "cursor": {
          "ref": "e8c81604-a394-432b-bd6a-7497a0e43469",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "24072c93-1ec6-401b-89c4-59b222a3c615"
        },
        "item": {
          "id": "c0a20759-6b0f-4a87-9bf7-0e97b92de19f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "944b9ccf-0413-40ec-aba4-501bdd2b2137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c49c475-6d85-409f-83dd-6a2ba2cb368e",
        "cursor": {
          "ref": "54cb3af7-1cd0-4dc1-b3af-e4f0b30b73c1",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "4fd05d19-28ea-4f75-8d9d-3de29043aabb"
        },
        "item": {
          "id": "2c49c475-6d85-409f-83dd-6a2ba2cb368e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1a137f56-4fb4-41c6-b9a9-c13ec3fc1296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c1c04bb-2f59-4049-9d35-e8e1c86446e8",
        "cursor": {
          "ref": "8b9546f9-ca54-408a-9cd0-4d0eff70779b",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "61450492-fd37-42d3-beab-ba63905db6dc"
        },
        "item": {
          "id": "8c1c04bb-2f59-4049-9d35-e8e1c86446e8",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "6a1e9e03-1669-4b7a-b96d-f8867bf1c5e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ecf296c-a192-4d29-8c14-edd8788abf1d",
        "cursor": {
          "ref": "da3f007c-eda2-44f6-ad5c-063befa5bc08",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "531e69a2-2467-41e8-8c36-b6b38ebeaede"
        },
        "item": {
          "id": "8ecf296c-a192-4d29-8c14-edd8788abf1d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7ac6a1bb-85fb-443f-a5d1-39982857f6e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1ac843-7385-4087-99d9-05b47457cadf",
        "cursor": {
          "ref": "9dff89cd-4760-4f79-be6b-97d8b26931cd",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "103fcfee-9c80-4c55-955b-9261a0baf58b"
        },
        "item": {
          "id": "ae1ac843-7385-4087-99d9-05b47457cadf",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "152a74ca-da0f-415f-ba16-2dbcd9eb7451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b33b75-1124-4e7a-8e9a-0700993f98e5",
        "cursor": {
          "ref": "1dd5718a-4abf-4be6-b97c-45790abd15e9",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "90f3eb5b-493d-42bc-be22-45b2f7d3c50f"
        },
        "item": {
          "id": "64b33b75-1124-4e7a-8e9a-0700993f98e5",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1c9145fc-e64d-453d-ade3-51248d68b08d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f73622-b046-4897-acff-ecd56c265317",
        "cursor": {
          "ref": "8562294f-ebca-4fb6-909e-513bdc62afdd",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9f6bb0dd-4ff6-4b48-859f-409d7b287a96"
        },
        "item": {
          "id": "15f73622-b046-4897-acff-ecd56c265317",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "57438a86-87f5-4adb-ab47-d0b27830ee48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f15575-159c-4037-b0c6-7adb696edc8a",
        "cursor": {
          "ref": "fed70d6d-6d11-40cf-a1a8-f334118b6ba0",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "422c22ae-9aca-43f3-8047-63751d0e9824"
        },
        "item": {
          "id": "68f15575-159c-4037-b0c6-7adb696edc8a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "12b42c3f-2779-4277-89f8-5eb4a95d2c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "624bc3df-7850-417c-968d-30cb61b26a46",
        "cursor": {
          "ref": "430e16c8-23e2-4a72-94b0-c7f4a3a4f436",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "182a4451-9ed9-45fa-83be-0fd685fe71c4"
        },
        "item": {
          "id": "624bc3df-7850-417c-968d-30cb61b26a46",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5045c424-3122-4f79-9c85-4cf4c706ed4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "707f2020-3466-49d2-8734-3d243a56fcdc",
        "cursor": {
          "ref": "4c9ed9bd-aeef-4a66-96d7-c04ce97e51ae",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "81c01ce9-4f1f-4fae-a411-b7f7012adc95"
        },
        "item": {
          "id": "707f2020-3466-49d2-8734-3d243a56fcdc",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "14ae2322-6a2b-407c-b09d-0f6cd93c06fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e234726-94d3-4430-86e7-6227ed2c841c",
        "cursor": {
          "ref": "9d125fc4-d6e0-4bb4-b36f-9ce0ada440ea",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "3a24fa36-a458-426c-892e-53717be5ac8e"
        },
        "item": {
          "id": "2e234726-94d3-4430-86e7-6227ed2c841c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ab33f3ee-8936-4b13-b194-6d10d88cb198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "781d9f4e-81b8-4d17-a540-ea86f9abedda",
        "cursor": {
          "ref": "86d3c647-0d19-473b-8e47-0d41d6159d6f",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a05f5cba-c6a8-4c0f-9e65-4dae906ac32a"
        },
        "item": {
          "id": "781d9f4e-81b8-4d17-a540-ea86f9abedda",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c49a330b-66fa-4897-9225-61b12a0ee12b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01e9dd12-85df-4e5f-a59f-e25929ea55ae",
        "cursor": {
          "ref": "830af13a-80f6-462e-8385-1479a94d0c9c",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "771781e1-551d-4609-9b6e-0b090e3bf70a"
        },
        "item": {
          "id": "01e9dd12-85df-4e5f-a59f-e25929ea55ae",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "48faa99c-a5ec-4ff3-b723-081489dbc4c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7472c216-9c2a-48d2-9299-4b9ae936785c",
        "cursor": {
          "ref": "e4be3e4c-eeac-430f-8cfa-d350beee21eb",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "87d95d8b-e67e-4810-bd68-fee30b9d0a6c"
        },
        "item": {
          "id": "7472c216-9c2a-48d2-9299-4b9ae936785c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "c917dfaa-d84f-4412-9ea3-807fbaf61bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "558691ff-6e1f-4ba4-b29b-60817dec0257",
        "cursor": {
          "ref": "42c58dc2-d882-4dc3-ad33-b840fb380699",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "155a4cf5-09fc-43a3-b9dd-19d642926096"
        },
        "item": {
          "id": "558691ff-6e1f-4ba4-b29b-60817dec0257",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "239dea91-9b87-492b-9144-da24178f2398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd16827c-96cb-4b60-8a45-e7648a0a915b",
        "cursor": {
          "ref": "3ce44326-81f5-4540-8074-be08c1d6fa7d",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d244b87a-ac43-45fa-b8a5-64a79cad3388"
        },
        "item": {
          "id": "bd16827c-96cb-4b60-8a45-e7648a0a915b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1c9577b1-17b1-4526-a5a2-2320243160e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2b615e-06ca-422e-9694-d7aa31b51eff",
        "cursor": {
          "ref": "bdfcbbee-9c47-4373-93f7-d60ecd6a6adf",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4781b10e-8b5a-4876-af9c-f278862a319a"
        },
        "item": {
          "id": "1e2b615e-06ca-422e-9694-d7aa31b51eff",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d2f4cabe-2594-4af2-b665-e017e1969e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409c1f5d-a4d6-42ee-ae30-d90d647d6dd8",
        "cursor": {
          "ref": "0047ad8f-d237-4650-b7b9-8f5a89d80d70",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "46edd36e-21a2-4da9-b2c8-16c08a0ca2df"
        },
        "item": {
          "id": "409c1f5d-a4d6-42ee-ae30-d90d647d6dd8",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "605c02af-e74f-491b-b773-09b9ef49ec52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e10367ef-22ca-4120-a589-823af4126d89",
        "cursor": {
          "ref": "473fde7f-09ad-42ca-84e0-6f34b2b6c277",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "208579f7-fdbb-4807-a48b-ccd0e012c96f"
        },
        "item": {
          "id": "e10367ef-22ca-4120-a589-823af4126d89",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "feb93b45-43f6-46e1-841f-8dc6b36e66a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed5528b-e283-4134-aadb-c8f34811cfa9",
        "cursor": {
          "ref": "65c55036-ef0c-40d4-b255-0aac9ea28dac",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "226074aa-3b06-47b6-aaee-a05ffd374107"
        },
        "item": {
          "id": "9ed5528b-e283-4134-aadb-c8f34811cfa9",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "30de0805-a11b-4dc9-8491-fcf743fd9929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea125fd-3ea0-46e6-8ab6-dff68a9e6355",
        "cursor": {
          "ref": "df1779e7-814c-459d-a8c0-66e47c6a7bed",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f2876e9a-e60d-4a17-a011-cd6b4ea36933"
        },
        "item": {
          "id": "3ea125fd-3ea0-46e6-8ab6-dff68a9e6355",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4dd3ff9d-4ece-42d5-9867-9b262a8ba858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c924e60c-33e7-4cb9-ab63-5af5f9a3241a",
        "cursor": {
          "ref": "ba29bb60-76a2-4cf5-a075-f82f31e5dd1d",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3c0c0750-f59b-4ca1-b0ec-ceafe1d29a45"
        },
        "item": {
          "id": "c924e60c-33e7-4cb9-ab63-5af5f9a3241a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "94d20ee9-319f-4ac2-9cfc-201a6e914bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5339da43-0f95-4be6-b48b-e56d7f5f59b1",
        "cursor": {
          "ref": "af7efa83-4b60-4e5d-811b-e9cac9c00a47",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "96874670-3ffe-40d3-b28d-dcd44ed9550a"
        },
        "item": {
          "id": "5339da43-0f95-4be6-b48b-e56d7f5f59b1",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "5e8e16b9-45dd-40ad-972a-61a03003f693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c6f844-eeb4-493e-ac92-d8448d427184",
        "cursor": {
          "ref": "be3aee5b-708f-417c-8f7c-5395e86fbf3a",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "255e3df1-be7d-4049-b50a-72b3c6bfdb6c"
        },
        "item": {
          "id": "24c6f844-eeb4-493e-ac92-d8448d427184",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7846d770-73c7-448a-ac7c-8abaf6a64dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc6bd82-af97-4156-8436-da4e25352b0f",
        "cursor": {
          "ref": "b29a9acb-dcd9-4a5e-8d3a-7ca6c9e006f6",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "689d5ff9-66a2-41f8-a955-c6495e8e5bde"
        },
        "item": {
          "id": "0fc6bd82-af97-4156-8436-da4e25352b0f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c2cc9589-cc54-4a60-9a69-c4265ca015c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f09970d-41df-435f-b52e-504b9aa624ea",
        "cursor": {
          "ref": "10eb4ae8-281d-41f2-8b1f-49fd5b7b555c",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "584d852b-8fe5-4108-9456-cdee72f9d710"
        },
        "item": {
          "id": "3f09970d-41df-435f-b52e-504b9aa624ea",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "93c38818-b8b2-4919-9495-45857654cf49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177db2e5-44d6-47f9-a71a-2ba078f5c882",
        "cursor": {
          "ref": "65b7ba4e-bca3-4580-b1c4-60fb7c4f4880",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "185e47ab-cf29-4d18-a32f-59f96efcba7b"
        },
        "item": {
          "id": "177db2e5-44d6-47f9-a71a-2ba078f5c882",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ea7e8ce3-6588-4b97-b1e1-8083545e72f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "601dda37-09c5-4aea-b98b-3ca6d9ab2281",
        "cursor": {
          "ref": "c3e5b251-0eba-4cac-8eec-77c0ac085bc3",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "6da90dc3-7d89-430b-adcf-79489fa50876"
        },
        "item": {
          "id": "601dda37-09c5-4aea-b98b-3ca6d9ab2281",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "36c97b84-fcef-44f2-95c6-250ee5d0d1c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e117318-c300-44ed-8a32-5eb10ea9acfe",
        "cursor": {
          "ref": "212ca03f-3949-41f6-a546-790161443408",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "616f6b29-a8ec-44fc-aef8-8b55e30571be"
        },
        "item": {
          "id": "1e117318-c300-44ed-8a32-5eb10ea9acfe",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ee05825b-3c6e-4961-b792-ea10b2878960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc881c10-ddca-4059-9077-c073d148cc9b",
        "cursor": {
          "ref": "fcee309c-e95a-4d5d-b80c-04e4876a0b7c",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f361ef9c-6dc7-42ce-8be9-f1b8a434c272"
        },
        "item": {
          "id": "cc881c10-ddca-4059-9077-c073d148cc9b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b8d84628-fbf2-44e6-a5cb-90135d8e087d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161e0e25-ff4d-4e1c-9aa0-f7fbc11cd5be",
        "cursor": {
          "ref": "ba42933b-71d8-46ca-b7e3-4caa2ff0a7e0",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f3c2327d-6d37-4809-ad41-33459cb3b2af"
        },
        "item": {
          "id": "161e0e25-ff4d-4e1c-9aa0-f7fbc11cd5be",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c617feaa-a5b3-422a-b015-df4e5ec38d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58128b71-c1fd-4aa5-97c7-2b3661e9ea86",
        "cursor": {
          "ref": "edb06fb9-9072-4a39-a5c9-e278f0ade77d",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "abcbc4fb-ebcd-4d35-8607-3dfcac194739"
        },
        "item": {
          "id": "58128b71-c1fd-4aa5-97c7-2b3661e9ea86",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "300d1ea3-3575-42a8-8b49-d858b8ee3ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a71efe-9605-4aa1-8803-f1ace687d311",
        "cursor": {
          "ref": "8dac85ff-8f71-4595-90e7-ab9a7fbd71cf",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b4c25eca-fb77-41ff-a7f5-56b80649928a"
        },
        "item": {
          "id": "38a71efe-9605-4aa1-8803-f1ace687d311",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "70fca3f2-3aba-403a-83c1-610793cc7bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c855552-7fff-4dc6-aceb-3f50a9ca69dc",
        "cursor": {
          "ref": "e0ba2122-ac66-423a-a228-bcc26cd597b9",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a92039a5-cfa2-4fcc-bae1-760c9a2716b4"
        },
        "item": {
          "id": "9c855552-7fff-4dc6-aceb-3f50a9ca69dc",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "426ac81d-32b9-4353-b378-cc875e6f596c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3945d51-7be9-4157-aff8-4fc477e8baff",
        "cursor": {
          "ref": "96a8da6b-d097-456c-b054-698beeaf95e3",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "5fe004e5-9921-489a-b89e-8fce9740de77"
        },
        "item": {
          "id": "d3945d51-7be9-4157-aff8-4fc477e8baff",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "fc202705-2801-4cd5-ad9e-c112e9f894a7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "388b9f68-4901-4c8c-bc11-501ba0dea121",
        "cursor": {
          "ref": "40040279-372e-4a13-b865-f3626e2761ce",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "1b95018f-3d68-4177-a6ce-7918a7679442"
        },
        "item": {
          "id": "388b9f68-4901-4c8c-bc11-501ba0dea121",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c0b511dc-aab8-4449-ae09-847c467a1907",
          "status": "OK",
          "code": 200,
          "responseTime": 2274,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "eccbca23-3390-487c-ad77-a1918c288145",
        "cursor": {
          "ref": "1eb4b1de-431d-45fd-9007-c0807557b821",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7b672c29-7cb4-4b69-a446-dbe1f53a3088"
        },
        "item": {
          "id": "eccbca23-3390-487c-ad77-a1918c288145",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a16f52cc-6247-4e2a-a93d-3210ac0c8f6a",
          "status": "OK",
          "code": 200,
          "responseTime": 2887,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2265dd64-9d27-4120-a7bb-156b68d9f600",
        "cursor": {
          "ref": "5df02fd5-acf3-40f0-bebd-c33f5963e2b0",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c5873522-4053-45f5-93e4-06725aa324f5"
        },
        "item": {
          "id": "2265dd64-9d27-4120-a7bb-156b68d9f600",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d75c34bb-e332-4ffa-a842-3c0a0c5fa19a",
          "status": "OK",
          "code": 200,
          "responseTime": 2548,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d750ac-e742-4429-a0ad-ef435709204d",
        "cursor": {
          "ref": "e1fdcc98-d0c4-4617-bf8f-9dca990e63aa",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6c26d989-e63c-4b4e-a384-407755126680"
        },
        "item": {
          "id": "04d750ac-e742-4429-a0ad-ef435709204d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "63d1a6be-6fc9-4367-a229-34efda12c86d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d750ac-e742-4429-a0ad-ef435709204d",
        "cursor": {
          "ref": "e1fdcc98-d0c4-4617-bf8f-9dca990e63aa",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6c26d989-e63c-4b4e-a384-407755126680"
        },
        "item": {
          "id": "04d750ac-e742-4429-a0ad-ef435709204d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "63d1a6be-6fc9-4367-a229-34efda12c86d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051d8c7b-3e44-45e5-b1eb-c9e39158d988",
        "cursor": {
          "ref": "673445a2-d7f5-45cf-bc04-e214cd4cf1a4",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2890ca0c-8b43-4ae5-9c9c-048090d493b5"
        },
        "item": {
          "id": "051d8c7b-3e44-45e5-b1eb-c9e39158d988",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a9c03a53-4f00-41bf-8286-4dc5517b20a1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a662c08e-419d-40c1-be17-fa7b95958d9a",
        "cursor": {
          "ref": "c25e8faa-9e04-452b-846d-3f81a3242728",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7ada9d02-7b41-4ecd-9e67-4e9aa3221cd3"
        },
        "item": {
          "id": "a662c08e-419d-40c1-be17-fa7b95958d9a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ed0b69f6-7176-459c-b13a-27c689cf032b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}