{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "106409bc-a650-431a-9580-1bfb335fb62e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "efcf79a6-a983-4171-9b5c-71f0a1384326",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c41d3582-488e-47ab-9c73-c7c9c89dbf71",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0ecd4e90-1efd-45d1-8f3a-6e53f95dc213"
                }
              }
            ]
          },
          {
            "id": "6af32418-a0b1-4713-b646-20e68c0972a2",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9c11729b-290f-401a-9ff9-ed81b0a36c29",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6be75b6d-bcf6-4d06-a77c-37ceee085332"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "593a536c-400d-4a7c-a82b-0dca5f52480f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8a444126-be6f-42e4-9437-e6582588b765",
            "name": "Positive Testing",
            "item": [
              {
                "id": "249b9e5d-6f33-4307-9a4f-ca15f974b32a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "97513698-fa24-4ced-bc79-b7ba4bf705fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "df1383f7-949c-4048-83f7-533e4dc3f20d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "799aaec2-6ec7-40a8-8ad0-6949c4823ba5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a4a2d4e9-7b85-4b4b-8162-86f17a7120aa"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1d06be89-8b9f-4151-a720-11cdc55a82e7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1eb4e0ad-88c8-45f6-9777-fbda893b44d9"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "901192e7-91bb-4772-9115-d10ee099f61c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "59ca1f4c-7910-4428-87a7-c731582b3c9e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d1754595-4926-424b-a8e5-571b6cf4ff1b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0b7e6b2a-5371-45b4-9e81-db46b6d70517"
            }
          }
        ]
      },
      {
        "id": "41607a3c-9cfc-4bc0-accf-8fabff3c12e6",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ffc9aaea-251b-47a5-8b1b-7b5314827453",
            "name": "Negative Testing",
            "item": [
              {
                "id": "874ef899-5108-4da3-a3f6-5393e6057dd6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "72663e0c-5dc8-46f3-89b4-784be6b957ff",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbd79bda-5c8e-4680-adfa-aff4d31a1604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed6da9ff-7725-479d-a94b-7634634da3be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ee61da-dc70-472e-ba20-c469295c2926",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc2f9ec0-6f25-4423-8016-d0c26648bb40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90a13862-928e-4d25-955f-91560bc2fe78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e495f9-4c16-4947-ae54-62973d4a8ae1",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3ceb50-209e-4e98-8715-200ea0585f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b40ebcbc-6818-4385-85a9-337433728344"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a0df3a0c-e63a-4f6a-bc83-8455ad75f136",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "905bc176-c076-459b-a67e-a86086ff14da",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c52784-e916-4ec5-9bf7-d179a5550e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "162ddcfd-5897-4b73-b3ae-44870277c5a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4862c5f-af33-4a85-871d-0e4c3af14547",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1200b60a-04d2-449c-8bdf-15a37a075d26"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8751d869-c27e-42b2-935a-61859d02c8f4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1814dfa0-cd60-4f1e-9fe9-9d22d88bd403",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf6dbae8-39e1-4441-a158-899dc5286f0e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "3e4dd0ed-a3af-4372-b6c4-54af9bd7443b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2f204255-c70d-455f-b6ae-d3f8f6869e89",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e34798e6-7630-4d55-b926-201cc67d2519"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "736c1644-f71c-48a4-bd2d-016131bd2dc4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8aaabefb-c49f-447c-a983-e37601639a7a"
            }
          }
        ]
      },
      {
        "id": "0c44eeb6-4759-41c6-9499-e7ed4a2c7330",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e529d970-af27-47bf-a178-13c5803abc1e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d6fcd018-4a6a-4344-b991-5bc69a01ee45",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b13762f8-0d8f-41ab-bb6f-cf0406891c41",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "525c328d-d149-4367-8c26-7e4e85ab54df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17e2dc0f-31fe-4c42-be0f-bfa3e92fbd11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b784de27-9d99-4be2-8b2e-7b0f0b8f1068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3675a2d6-6ef5-4bb1-80c4-b416c0ef051c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef4100e-b418-418c-9c19-ca098b1bbd55",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b22eec-4c2b-4b7e-8b72-b361057f4d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "537b6bbc-a194-4b05-8e3c-64548eeeaf15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0a166b-f701-4901-9f39-8f58ce519b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "386d3fae-5a31-4d36-9943-3f14c438b82e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "895624fb-1610-47d7-8161-0423d9781706",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9821164-1fc8-487a-811d-dc6e41b0db27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "430a1091-d5d1-4c31-9dd2-c9d04ea012f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc729323-965d-4151-86c0-b96cabd933f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "047fb8c2-add6-42a9-af3f-ea00e8296cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9a47a4-d739-4cc1-8362-2d1a87a3144a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f5fac2-a710-428f-ace6-41b5777212ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eaa9f20-b7d2-4413-9bdc-08dc4bfafc2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2199db3a-5042-4b34-a582-63768f1576f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60162ae4-5580-434f-b208-f6c5faab55ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8df27d-1467-4a4b-ba17-8c5c18014921",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c765fbe5-5944-4450-ac16-87a90c34b6ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b38bf8f0-6575-4eb8-a4f0-254ab6c15688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e14da8-1521-4560-85f3-2da19041719c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86258ceb-2705-4ec7-b137-89e58676af93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a082780c-754d-4b80-827a-2c5d926ac389",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b71753-60be-433e-9f03-1a9c6ed657ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a443aca1-3c26-4858-82a3-f704cfca2b29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ef64fb-f52b-4d24-ab91-6a6cd1d1ecab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa08e10d-5088-4719-b2f7-87aab3ca4fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08759a95-f202-43a3-b908-11b6067ebf00",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae9b50d-9129-482d-87dd-c7f6450bd263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0e16b66-ea96-4ae8-bf9a-5e72bd390902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9333fbdd-09f7-45b0-afaa-bee0a27f9d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "359d8073-3b5f-46fe-93ac-dfd395572802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e55c7f9-1758-41f7-8c45-cf59906e3660",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7c030d-ef36-4ca8-a796-5abab38cc759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e13a5bbb-8865-4b4e-9ebe-c245566e4594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c5aeba-b66f-42a1-90df-2d4bc018b9e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7cce3f20-658b-4e51-b5c4-7c441dc6bf42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb83b9c-3a3b-4a1e-b7bd-a974f7e70dea",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c787bfb-e884-4052-b385-32b1e5e77eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1b2eaaf-bdd9-44ee-8b7c-ded9eaac9efd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce5d32c7-861e-4001-a801-ec604de23a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00dfe344-50bf-40ee-a147-d0e83f0baaca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa31b37-301f-485f-bd6a-ddfa8e658dea",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dac09ce-adfc-4f1a-8a4d-87c9de8dc7d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11e01e57-5e41-42ba-89e9-79016fa7facb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16753d63-8b0a-489d-86f5-ab80892f7c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa67b96d-ced5-41a1-b96c-1c911ccdc17c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79a088e-76b4-4d5c-94c2-4fd92b077976",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d182e326-32c1-4ed0-9c4d-5656fec471f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca202239-5c53-4c22-b6e7-664b091eb789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b069561-0fc6-4f05-b3be-fb748ab7e5c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8396a876-0bc3-4ca1-9b2c-9b258bb32492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeeca4a7-aac4-4777-b3db-ecbfb810531f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d7e38ac-69eb-4345-bbe6-9a730a79156d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2d2fd74-a87a-46cc-9ab8-814df7903ec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b83b90-c31d-4cce-be3d-2ae414bacc15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74022bfb-d025-45bb-9d81-ff392d6f709b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f80c52cd-1e3e-4375-aef7-e6293db1c1ae",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14726c80-dfde-47d1-881c-52bb2728d1cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd01d448-f4cd-4ea8-959f-8aad9f016eea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20fe0946-ac0d-427a-8e7d-b14deddb64c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0937050-997b-444a-b162-d13bc5cfb87b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8817d52-ba10-4cdd-bfd9-f9198c2b97b0",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1603d0b-6792-498d-b8a3-0163399f04ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bccfaf7d-afb8-4eaf-bfc4-88e98e6bf397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa833a1-9561-415b-890c-7ef1f0319733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b42c3572-ca2f-45f0-b660-166293e36d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df0cd4ba-a046-4624-acad-262c7881cc40",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "207c82a5-5306-4ee7-8c13-394a520841ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93da1214-c605-4aa9-b72f-485da2943e7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da1ea233-4023-47b4-bad3-5838ea2eff3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76901410-5aeb-4533-808b-63034076aaf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "479fddf9-70df-4d6f-be9f-d7d7c8d2a31b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a0aaef-98dd-4d12-bb59-8990767c83be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a66a900-757a-4c8f-a89c-6b783c39d2fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9093c6a7-fa33-48b2-aae3-f04ad1f635c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc40aa4c-ca20-461e-90b8-4a59a2d4b72b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f59279-177e-4ac6-958c-857167ca8b25",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d89df8-664b-447f-a45f-5aeaf2dd5292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d7b190e-a6d4-44ea-875b-02e02150e62f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb832637-e588-4c15-8ead-55db99d95278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59fd0117-1feb-40be-85eb-d8fa9c412256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac06dde-441e-41fb-b390-3f4c2bcad578",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0027cbf0-acc0-4814-bdfb-0549079fac38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a21679b8-9aa9-4326-9469-e343cb84d67e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f5c20b-c3d5-4297-b374-2b1f846066a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5190c13-051b-475d-a2ed-eae38b3f35bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a18fbf4b-8335-4b24-b733-7658e3754b5f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec7806e-d109-44ea-a8b2-d63d3d22c30b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4186501-25cf-42c7-b0d2-78363570c2c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a3119e-5ac6-4b1b-aa42-7ee59f30f383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9b4d0fc-9003-49a1-a1fa-47d738e9622d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d67ffa-bdaf-4175-bc09-4a61b04662cf",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d167b80-f8b7-4fda-970f-a842657eae77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa2f1b8b-898e-4af4-9646-f28676c6f21a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15028513-81ed-4f92-9363-72e9e8ef85af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c1d32a4-dded-40f3-9a93-df39de6d3ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f06fca-ff8b-4be0-b975-496f9843d46e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "484398b9-5b3c-408f-8501-494f96b858c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c350c54d-f3e7-4e75-b78a-5b0d4cf11bce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d67aaa-4a2f-49be-a875-1da12d7b789d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0f4202c-740c-4759-8790-1582114373a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58264df5-ec4d-49eb-bd35-5598e458a014",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc5608c-45be-44d9-bda8-b5a70f95020b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "624b6a93-debe-49c0-b27d-e2e001652f40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ee477f-6dc6-419a-9fd7-f4e3a6fcb391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4bab23f-0f77-4e68-b268-ced662eda372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf7f457-9cad-488c-b2e4-b46dfd059281",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb391e4-b6ac-45ef-b7ae-efc2b7a5ca1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "903017ec-0828-4554-b5b8-56fa27efae34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ef9d4d-d8ab-4d04-b6a8-980b1eda7ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0d41216d-a0b0-46e0-ba83-642f7a5db74e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3b8ecb-d333-4150-9278-3f16340eb55a",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "926b8ab1-2225-428b-b8af-3992595f6446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08fd4500-ca51-480b-874f-5d4c34cf110f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68912cfd-5066-4656-b2c9-ebd5b395e66a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fca3f3a-9570-4991-a193-1877f8ee9337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c5014ad-13f3-4eaf-9ef4-1bb2f286cb83",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "969fd397-08a6-4a13-8443-74dd0b0cdab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a7ab069-2a29-4da6-b442-f2db72d288e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "259ac15c-3b9d-487e-a4a7-48a3d45fb07f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e931ca96-03af-4d73-bc11-0df89e26c882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807c721f-8d46-45a4-81b8-99f2a8907bcf",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b33cbf8-98cc-490f-b086-7a0b10034879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0651e49-5e6f-4bd8-ac1b-e2b55cabc6ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "265e7458-8edc-47fc-bf8f-23db83059666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c94e15ee-b9c1-4059-963f-231d420011ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c50353-451c-4c8a-b91d-50cb896597bc",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bffa83b9-2e53-41a8-967a-c06b5ac5a240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d2d9f85-1df6-4809-9ba4-e7b79dc9c54e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbec89ad-2ae7-462c-9a36-2ce5a4cdbb8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdf092c7-521d-483f-82a4-1f883ffb935b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b54eb9b-e1d8-40bc-a9b0-984e3fbe2414",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "662349f2-3c95-484d-a593-0e7b6b559824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32f2d2d0-4445-400e-8a5f-9204f4a9d803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d93e3f35-8a28-41fc-80a8-4df65f71cdb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "343a1217-1016-4e4e-86c0-e2119cafabeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feab6aff-8ad2-4514-8177-957bc43a4413",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7380b6-92df-4ea9-aaf2-ca7d81e1a792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4601bb3-b1ad-4acc-a226-5841c9a069d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df23494-2bc5-4290-87f1-b60c77f7f22c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5427a34-584e-4e31-9eb3-af1ef15b2ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61ff61f9-bea5-4c27-a1a6-b00f2a9cb366",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b476f4-6e4a-4223-bb10-9f194b25864a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bb9305b-7a3e-47d9-890e-eb1170bc19d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90a3247-c74d-47ec-b079-cd903170efdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "be1a1884-21fa-4e38-848f-16ed3174d32d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48987aae-7acb-40c9-917c-bf90c17e1088",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f99514-7e38-42d1-ac15-744bcf598602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13522349-5cfe-4aec-aa9f-dd3da6440b6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc55cfe2-98b7-406f-a067-65d1f50c573a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8c2fc32-df89-49ce-9c57-8f0eb7f32683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa5c7dd-af50-4c28-a2cc-070ed39717ad",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f15072bd-e57f-49e7-b1cd-cbef4d73362c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79bc37c9-1664-4c70-b5ad-6477eb9c984a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12dec9c2-4439-41d4-bf42-02f50f2e6b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "67648df8-ef17-4161-95be-50c6c3af71cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206da71a-13bc-43fb-b5a4-fc123990b9fd",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8fa094d-7fe0-4eb2-ab7a-595b56bed5b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5ae88e5-fa01-4115-8b39-92a7464044da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a677703-4e1b-4068-b67c-7752e184493d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "568da805-63c1-4e2a-a856-57cc2a2bfcf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7362029-66ec-4ee1-af41-fa70ea143bef",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc85c3d-c0f2-4ebc-924d-63cf9a5c8ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46615d24-f544-4c2e-8ac8-0527ad7d0a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c2e10d-6ca1-420c-874e-83752ff77d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea0a28c0-13d2-472d-a621-f4203eea4aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc08255-9dc5-4aca-bf31-44b241248b51",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "febf3273-453f-49cc-a98b-223a9a0bd1f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7e14d84-9f94-4b9b-a07a-3ab0b2b67b78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a456c3-9ef5-4bae-86e7-c0a4fedb4097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "56de1410-7de5-4ce0-b4f1-96519a143302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ebcb995-032f-4307-ac24-4268c1a804e3",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f815456-85d4-483f-ad0e-6cf6c715a683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d6cb0362-e787-43af-9b22-d94713b33448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b12c4ba5-121f-4ed6-a24b-df5711a45968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a10f926d-e9fe-41d9-8fcc-00317777c140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c9fabbe-7ce9-42dc-8bf6-285ed491deca",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a29b56-f15b-417e-b0c2-0243c6305aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be254879-5b10-4cfa-97dd-67eb5b3c026c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0bd15d4-592c-4628-9cdf-0d4e6d208424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9cc93e3a-bb20-4c25-886e-ee06591a5ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09fc6a8a-fe14-45d9-b1e3-c6c70908c728",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4dd134a-d439-4552-8eec-3c9da76976a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30cea1ad-88e9-4e4c-a8ce-3bbeacf02528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5e3852-1ed1-453c-9193-3ca906b260f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "da16ac1b-8fd5-4f74-8e4b-b64db3275c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fcb2edb-87b1-483b-b4a2-0a4c80dfa0ba",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca395a4-c2bd-414c-ad60-4b77aef65896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b362113-ee85-4091-a020-eae10bebaeca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff636d07-b125-4168-a759-54cc4b5126e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b62517a8-1ceb-4e7d-b1d4-fe4d6cc1788f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b521054f-a4bb-4f9e-a86a-c75b82de0646",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ec3826-46d2-4b75-8193-1d6fafc6254d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c03b67a8-9d74-47c3-a3af-e4f21a9f395e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "761d9fd7-f2ca-4b4e-83c0-80a5c14565f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "586f640f-1a15-4bb6-8102-1d1fee4f291c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3266646a-9027-4974-ad0b-9aa1b66e2b78",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed7c104-4716-4bd0-8e1c-434a02bb14c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1137a01b-aa46-4247-8a65-fe025490f799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb0c421-c9a3-46d3-bc45-1f26207a7a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d5e94de-3d0b-4c84-ab2e-56fe526907fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8914a33-cbda-4131-bd20-a34b35d5fbfe",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf26cde-bfcc-41f6-af26-4df917b0b36c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d337f8f2-864e-4255-a7a7-0820bb960b9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "605d85d8-2744-4526-b7ea-31d95f3ab8b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "91c8046f-21b8-4914-9e17-06de20ecf443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82762d91-a54b-409a-bc77-57a91145bed5",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f978d9-5e2a-44a2-b157-972241b4296b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57ebec01-eeee-4f26-a44e-ce8aead92694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11a88c4-7ad4-4b15-bd7e-7e4a52157bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "07545103-b0e4-4167-af55-8e40a1a0ef3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e39163-2def-44c4-bb3e-df258218d590",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b1a99d9-f2a7-4635-b3d2-a29bad2afdde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b35c6f3-8ad6-4fff-94b1-d9114f249ade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d834e88-eb7f-4a6f-a349-c1a786133455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7ece91f-6e8e-4198-9421-50fca314f73b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660bdddd-ff2c-44c0-bb4d-203f91ba2e6a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ee1bfc-5474-4305-a527-f0726317371d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08d97a22-2a40-4db7-ab2d-66d9300f6888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40fb81a3-09db-4567-864e-1d5eeafdc965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc4e37b1-f413-48bb-b4a4-b313d35f0cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c352db5a-8b88-4afd-9505-f81b0aa818eb",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8904d3c-d8df-4962-84c0-02d9e298cd57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73c0f081-75dd-4a37-aea5-83dc480f4559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc41da52-7ce0-44b5-8fc6-86abbd984f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddeb4b23-0174-49fc-b3be-0d3ae10d0177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e9b761-a28c-471e-9107-d8f530b9894b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79dd5be9-1725-4611-bf2c-8a665a0a73a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6187dfd5-d227-4d29-a7c6-f0f43184662f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cbc9660-de5a-41f4-97bf-852224554ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3209e6a1-3be7-457c-b96c-7c479aa09da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678d2aa4-9e9d-4a65-aa55-735af419692a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37aceb7-94e7-4f93-92e6-5059c47822b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02b176a3-9a2c-484a-b7e3-a7eeb015856f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85dca1d2-348e-4277-9a1d-3c7b13da4efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8812e7e-b1a3-468b-b605-f862140f70f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d291e2-f0b3-471e-9282-7246203a7cba",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4bb6aef-ce77-4b4f-8241-d27219c1b862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf07e165-f198-443e-a15e-0dcf31e7b190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd6df63-2d39-4872-bd48-6f8599bdcc2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a55fe524-cce1-4ba3-bb7c-e80075ffc399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56dbda3f-7139-4065-a6de-6994dc65ccb5",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "893f3a61-6673-4110-b23f-df92c49eedcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d654023d-fa3a-42f1-9321-cecfc1724f5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "426e4930-9f4c-4d31-bb21-179c511e7557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "963058c4-d273-40b6-8b5f-779467531f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aca0614-a3d1-4016-a2e3-e1a735a10a4f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21261d8-939d-4220-be0f-017db9a4b4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ceb5ea8-e53f-4692-bfe1-47f73ed9543c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364127ad-d643-4fdf-9e8f-55a562a24938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b556164c-f290-46a6-8be4-aac8f7a9fc31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcda3bbe-a46a-420d-a85b-39ef1d108b60",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e89a0d-b9f3-46d9-9106-d1f3dc5f4b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e70a7ab6-b7a9-4497-9d79-e9d76b99a38b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a0f158a-2a46-441b-a140-73920ba068b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b31e34a1-db59-4f55-801e-2674155d1904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87826ea5-bc96-4c48-a98d-337436a17f15",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce2587f-3dbb-4eed-a40f-080f349ddf0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "743c3b79-8fff-4708-8a5b-56ea4eb6d0b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a7e7e3-95af-4f21-9c63-82fcdb9b2cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7658c3c3-945d-448c-8140-cfaea5c3a688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0971f21d-6f60-4c2f-b2b1-d5b239e026f5",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "472a205b-3ce2-49e2-b833-94d6bde54228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4624a118-fbd2-4676-857c-afab470de9f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d0a7391-a991-4ce9-bd10-10194588ebe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f597416a-03af-4768-88c4-4ab7238e11ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6fd41c2-2ef9-41b6-8234-f4eb7773e528",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c3caba-77e1-4930-90b0-8b6c7ce624b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc25b79d-7528-4c12-8ef0-17dae8ec51f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ea583d-b483-464e-a1d6-31e68d8ab0ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e031ac04-43ff-4524-a97f-dbf8db4d2589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa2c229-0a40-4a6f-95ba-11fe923a9bf4",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "724a7f38-5e19-4a59-9440-d783df29df92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "308916e6-1f22-46bf-a89e-e70638ed7864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b997be2-d941-463f-815c-ef6b4cd78753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5523645f-e3d4-4b4c-b20b-689fd855c3c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04d5444-36c2-4079-a600-764a7c3f6c41",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fda30e86-ac52-4d88-a9fd-b2992c431d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a2bd09b-f44e-4a43-93a7-9bf4db09d692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "169b2681-c2af-4bb3-8d2b-5fdb821f55e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d37e9580-b9be-47c3-86c2-9c7b07551dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d8f45d-b168-45ee-b5e6-7e97861951c5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea8c02e4-d4e6-4785-bedb-797360891ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67b19689-607e-4fd9-a234-672ebd4f1878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24fa3066-5e79-4e07-9ff8-8ef657d3b40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c5635d8-a98a-4734-a66f-354fbc1d9fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e50b955a-7b96-42da-946f-bc3c2ba7576e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "855e3338-1772-4b72-a630-d9a4ae51c7d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddef2456-3d6b-4551-a35b-732d6447ec49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322050ce-9c3a-4b15-97ee-878c2d9b9cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cfb1db55-2e77-4f38-b8f0-a59fdc27f8c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac319cf2-3d32-4f0e-9e0f-844882bfcc55",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60425ead-a38c-4aa7-b8d2-30a57174c85c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dfa47e6-0eeb-46e5-b33b-cbe13388e2e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a36a5ad3-4418-49dd-936a-3fb572f33030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "75590a66-1a5f-4d8e-85ac-54ac0c21663c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff22537-dea0-4531-b386-7402de5c6787",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7995d22c-340a-450a-8d07-bd637e67ef99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdb0a597-6e74-4f5c-8e16-7a6141c805b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c409f0c-3893-4783-b412-a040f56bcc33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3b169c2-afcc-44cc-afb6-8626bef81f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec2a2f9-3a6a-4b6e-aa1d-0dbf33e70acc",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f1b3885-a76a-4914-8bd2-2b35605f72c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3790bb79-3127-4b4b-9294-4f8e05f49bd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc9b56d-6e67-40fe-9eb6-0fc0e996763f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9bebc8a-41b7-4d96-b7ab-ed7a5fe353c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69d08146-1d81-4fe6-9a97-a02df75a2716",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57c9dea-46cf-41e6-97c9-7d4b8bde2aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aa2ca19-9d58-4c33-8f89-298aa01f7691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69cc047e-d017-47ee-a03f-c22ffe4d95c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "be445f71-d329-4ebe-9883-7be3c4f90fec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b83cb9a8-68ab-4c4d-8331-0207d799f9f5",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "328666de-3a8b-4e7b-9e66-255c0a8a235f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7bd5c9b-3d76-4e72-8310-f2f45406a5be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c51e19-c39f-4116-bb7b-112a9ac483ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "59bbe3d7-7d79-4081-a3bc-edf398714779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ea7c00-4137-4f1d-bd7c-81368e3b3586",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46322e2-707b-4f41-97df-5499399a81dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83737629-2d97-4de3-b10a-625962ed4a81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76b7b8a-4be4-4766-ba5c-ee982cc740dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcd258fe-72b0-478a-b128-881152d1c70d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d9e78eb-127b-4358-80a1-7a2c2be896f6",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b80edd9-5cd8-4ba5-bf41-2213d314764c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe51167c-0a6e-4e7a-af04-2e3da32e9c82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "509be976-3d92-4e5f-a8b0-d19e71d04084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a7a1e75-62d6-427b-8f48-0b90a33e1256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ffff878-9b77-412e-8f0d-31a16e79d1f2",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "286ff7e7-d915-4806-8df8-9ed39dff9b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baf9c5d5-6bfb-444b-9776-77811152a141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c7a0b2-57e8-4fda-b7c7-5aa2da9a8d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e1ee2881-5a99-417b-a4fe-19cd41e07b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311badcc-65ff-497a-bb01-fc592a78e192",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4bd6f0-b386-4eac-8216-82641199bfda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0c9a84e-59f0-4d1b-a656-dd7cf3bc3344"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93eb9545-b6cb-4255-b641-18399368497c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1fef1b7-0ee0-42c8-bf4b-9ae56191b3ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d86c8655-1ea7-4371-b97e-68e470a229b7",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "551c30bd-a6f0-4913-a315-614881ed6020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1f3dd4b-389f-43ca-9368-c04c6d4736a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eade095e-ed37-435a-b4da-0fc6fbf35360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "48621bfe-b387-4317-bb86-7661ee21b5cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f14539f-afc5-42e9-b0dd-428aa3d95352",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7229509e-9751-4669-a4d4-b33f1db3b92f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b084d5a7-d3b1-4d23-80b6-b7fd281e477c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ff6a6a-1e66-495d-848a-83f4d312d30c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1df15fe-9396-4ed1-86e1-1450632942ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edbd616b-1a1e-4181-937d-82337e5844c3",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b80f889-2b62-4e4e-bee7-82dbdfff8803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a26816f-ae7d-4760-b589-54a04808c37e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0227c880-39f0-4a21-be29-7e184ea0cebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa874746-5ccd-48ef-aa5f-f8bb39e0db14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42abb8b0-c9a9-4276-94c8-140fdb45c82b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de77e897-b308-485a-9c01-feae7dbf074b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2829d9b-8d99-4413-b90b-b2a0432d1e7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44bbffd8-cd64-4ca3-84ef-d0898a10b493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "22a21769-b4f3-4c5a-9c4e-75d2f9ee895a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b7e8fa-5ea9-4217-9ace-17d34949eb7e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1acc11f-c828-4e45-8769-398d87842305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dbc1cb4-5c13-4c07-a4a2-3e0967b8a8d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dfd1671-f2f6-45e8-a223-470c58db8d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e6dbb97-de05-4a45-85bc-8a0a1c32e267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3042699b-bb5e-4056-ae94-ce24202509d8",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c43e5330-ef67-4f37-b952-eec73847f63c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "877943cb-b9d9-48f5-a6bc-fbad7a83f05d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0638fb11-4f7a-46cb-aa93-a7784cc83dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2c0e72a4-afc0-434c-90cb-e03dfc96b817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c1095d6-ec66-4079-a6dc-0d02d8557d78",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4833ebca-23f0-4099-be42-7cecab664445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72da66aa-5ba4-4be6-9dce-c5e328ac61af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7605e76-d4cc-4814-b06d-674568ff0dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e42d8ef3-04a1-4963-9375-2356734927d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12686c3e-eea5-4328-8828-4530d90affd9",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f28d0761-be59-4576-83ee-f30057ac4604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21f8364e-171b-4880-9155-5224e49860a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7757767-25a0-41b7-9071-737e80f68941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2026abbe-c8c5-424b-8a53-8fc0f3d0ddfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be317e9-0b46-41a5-87c8-d84927f1ddf0",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "507d3f3d-4f41-4c61-8243-f344b6b19b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee5a0d99-3912-46d4-a06b-76b9432153bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fdc5b9b-6bf4-46b3-9a3f-21a7ac95ea23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d3a6ef8-a8b8-40ff-9d4c-df472fbc5b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1afb4448-8d11-4f31-98fb-f3e7d09f51d9",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4437bdd-c221-4e57-8c4b-da43ae6b322d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6ae7cdd-8eb2-4441-a180-d46229b44166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "796bf775-287c-41a0-9f44-bc3b3b19309d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9502a801-dc83-4320-b3ee-a15d83bdce89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb55c5a-ae6c-4b22-8c23-e37c2642729d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "280d0570-f39a-4848-8ee3-2218f98271cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9bbec52-6164-4074-b976-96f3252ddeaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2499e0b2-b844-415c-98de-ebeb49424b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d664a1c5-3c96-4351-a9d7-d19702238c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c6dcd7-2678-494c-9c9a-b90c057c8be6",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b3a07f-8ff2-423c-b3cb-44bb4aef3b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fa636f4-1425-4dc3-9e23-4cfa316cbf39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80086179-b2ac-4c51-8820-2a74e44a8cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e70bcc45-b1fa-4c2c-9e58-095894ca6c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d26122bc-55a8-4a3a-bafe-4821ecc29285",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26190be1-99da-4863-9f8e-78b45b8f7cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48cf22a4-ca16-44e4-8459-c9b3eea913fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8910cba7-8bba-422b-8482-ed5d255454e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4edc91a-bbac-4ad6-b14d-780fdaee05ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5def1c-af92-4db3-9cd5-561bb86a7974",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b225ddb-1d50-4337-9d56-c5903c9bf5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9e7204f-6732-4ca7-8e41-9e9f9dbbc9fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06904114-e6d0-4b31-bd13-fe4781f8e475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bde7d5e2-c81b-471b-a939-655bc61b5b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a7aafe7-fc5f-4514-ad02-5e39d772993b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b02a7d1-1bad-4585-9d8e-cea84a8eeda7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0554b637-56c8-4ccc-9726-16fea97d25ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "240ea05f-d22b-4ff5-a15a-eddf47e2f36c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "602312eb-1957-43e1-89bb-47ba182b9195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c0a2255-fc47-4ea0-8d07-09d52ca05e0e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c6df27-eb91-4b01-bb6f-010949fecca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6d693f8-8137-4763-aac3-85fae087edd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ad868d-04e6-4762-8fe8-c944c1774a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "39c360ea-43d8-4b6c-b6f5-2370115dc0f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d710a9ba-3609-4133-aa8f-7c584c66c7b7",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a7dbf63-1b61-48c6-9f28-9d00e39e5565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40e574e6-874a-46f6-9bfd-ef59ff185ee5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca4e5831-8203-490f-a217-73c04d1a97cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dcdd1e0d-c605-4838-9fa2-b5752a53c602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed3b3a7-3876-4169-8968-19037bc226d3",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "365b1021-7e23-4371-91e2-cd0d29b2ab92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55db145b-2060-4005-b995-24aff308030d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75671b20-f87f-4d9f-abc7-106e893f53e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4472f2ec-0ff5-4737-a474-2186d7144c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7867fb2-dbd1-4996-b7bc-328d9a2e1b0a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "335a9d02-5e91-432a-85bb-698d8c337835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9432b919-65af-4aaa-86e5-9a02e1477b72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6642ed1a-e3ed-4547-bf4f-e98e780d0db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fae54cf9-0043-460f-bf68-c28cf6707261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "750f6d69-ea60-4907-ad36-1f29b7969082",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69755181-3f8a-410f-8634-8b3b17d951aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6b15712-02a3-44f4-83b4-519165a19f05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ed0ac3-04b8-433c-9d66-2a32211771aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d53d5b20-ff28-469f-947a-42e51cb68989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "198bf73b-5c81-4ae8-8cb5-df85ed2a9ad5",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7fe05b9-e74a-4eae-8de1-ea58186527f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "540e5330-c7bd-4628-98f0-8b3731b7e17e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3198527d-3871-4682-b7fc-ae5e4729b9a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ddaccdd-ac66-47b5-b6a2-834180305a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb502291-e7f9-4b15-89fe-6f323d2d5697",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5b7f4c-6cab-4320-85fa-fcd4ecc14c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d7e4f66-3b19-4e9a-82ae-2dbc0036fa33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b45a5c-5ef9-4f62-b523-e72fb524dea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2fda51a7-9844-452b-9fad-6b35fec8cb2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18af4164-b787-493f-8076-df0e391a4292",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "264f98b2-2570-4f71-975c-63a80ee93640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cf23ff2-2d5b-493d-9b35-6b1651faf65f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e1730d1-c266-470a-8077-8a180ff9425c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e90c8596-c0b7-414d-9f07-ab0cdd534678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e94d68-e036-4851-b61c-ba09ab7e9151",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f66993-2d3f-491d-a8eb-f631f50bf766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b2f1240c-cfec-4d10-8393-0073541c15e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "078a519d-5ba1-4f2a-bf56-e94f8d246de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "510716d7-4325-4057-81b4-189a29a5c032"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "162ba89d-ca81-4f58-82cc-0c5c91b3fc3b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "74953533-2ea8-4111-a03c-7b25080355e0",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c322a6-60e7-4323-b54e-429b5210b041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eae4ee08-21ab-4047-92b9-44e59a3efe70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8d2bf8-ff75-461d-9d15-494ec0f9e2c1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ddbb7cf5-33ab-47b3-b51c-b5f890f9803e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5da6c5da-573d-4e2f-96c4-b424f4a63235",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e4809dc-087b-473c-96b9-9ff950526cc7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d2754b2-59bd-4cbf-ba0b-f7871b499228",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d10b58a-59f9-4ac3-ae79-d9f05082aedf"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "33f33da3-aead-40c4-aec3-9ffb5b6465e7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e8e9eec5-1ddc-4901-b795-e540dba1af28"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "af99881c-365e-444f-a030-0b57fba43d25",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0abf6763-c3f1-422a-88bc-0620faead5b7"
                }
              }
            ]
          },
          {
            "id": "40ab4480-7006-4b83-8234-78ce45e74cf2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "af0c29bc-45e3-461d-8680-272a1a229524",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "a8ce99f6-d6b0-4f6f-8db6-d05e93e147ec",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e5bb7a2-d513-4177-a1c9-ed16f18c0696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2b77d692-ff23-4808-b3c1-250c9233b760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ec7658-b3c1-4ef9-885e-ec832b2f3ee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61bae402-586b-44f6-be46-179526245f19"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "45fc7589-3649-480f-b854-c1539c5b0186",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3a57376-eec8-4709-8664-456b94dbb174",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f9b358c3-72ba-435d-b3ea-6690c8c05f8c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ac088b29-9431-445b-ba5e-25f9c3ac2bb8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cebcc5a8-550f-4956-aa1d-c039700f9539"
                    }
                  }
                ]
              },
              {
                "id": "9ef1c2b3-86fe-486b-b25c-669be26458d8",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a87b1acf-4fec-4356-83f6-d2b7660d9988",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2c511598-b378-417e-9165-1e6820de517e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a386e4b6-f79a-426e-b331-ec169d5f4c0d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6a6a89eb-cbb1-472e-b73d-5c26a1061eea"
                    }
                  }
                ]
              },
              {
                "id": "097c11a1-cbd5-49e2-b0f4-f8d668366ca6",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "56cd7bb3-8333-4e4b-92af-ea68bf36be6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7730fdec-738c-48f9-a0c4-1f401a3325b7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2daa069c-1a09-45c1-a595-b2c11f6a9067",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "88da38ff-a401-4fed-a241-e56698d3f70c"
                    }
                  }
                ]
              },
              {
                "id": "a358c3d8-58c2-4a48-ab07-9fc3766b2ae2",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "400532da-001c-456a-988e-e329570c4d1d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3d1f1719-434a-4523-8235-ad5011b99540"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5015387-6c9a-4195-9d07-7e1070a0812e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "5f8e1baa-6ea4-40eb-8dde-c433b552b266"
                    }
                  }
                ]
              },
              {
                "id": "f7dbde49-5665-483d-b7c4-4b1595f8eb11",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "588454a4-9861-49bb-9c06-d9a5d4161acc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c1cb722b-ebc6-4cd2-862e-add1765100c5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c374bea5-de69-4eed-86a3-7354872e5190",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9a0dcdc1-6342-4e66-a602-9535d9daa5a9"
                    }
                  }
                ]
              },
              {
                "id": "6d9f697e-1d76-497c-ae7d-55d936382569",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6a362b6-e9c5-470c-8715-235fb28fa860",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4263777b-a635-477f-b1f3-7957901d23c1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2f090bc-a3b4-4e71-a5ce-4b390750fd62",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "67bd6b28-f129-4b2a-b076-f25d967a909f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "91541be3-a497-4bd0-809d-898ff979a145",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dd2c68a9-3bad-4d77-afb6-3bd175490935"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e0c2a946-5bf1-492d-a33e-f60c951cea09",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7f0fd853-7195-4fc8-9a58-070ad199b720"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4d7f21c0-f5a6-4fbe-a1ac-da2be4b803f4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c32be9ef-505c-4fe7-9d1c-50e2f3f0a9a6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c95129c-9273-4d12-ad32-fa13a7ce581d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "62ed44e9-eeae-43ce-b7fb-6316b48d6953"
            }
          }
        ]
      },
      {
        "id": "58adc0d0-7345-4e80-b61f-6ff03918fb20",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "082db5a0-a24d-4c43-aaa0-cf56baa0dabb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "823df23d-4bda-4dfa-8c2a-1ee3c0ac2431",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c22b2490-9149-41b9-b700-c47ecab4c5a1",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71430760-145f-49ab-bde6-84fee150de0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa57914c-e468-454e-a434-e12bd8cde8fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28271cf0-a232-4d43-9835-af990cab1675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "00d40a74-63c9-4498-b72c-8586f424bb16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a104e228-4603-46cd-a464-ef7bddb0e81a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "389db213-4e2f-4dcd-90f9-14f9239d89e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73fb885c-aaa0-44ee-ad8b-8991b76df251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19457884-65fa-4fdc-9707-cfc4250f118c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac6e44ca-14ae-49c5-a566-da8d17c1ee22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f574b16e-2ed5-4158-bfe8-82f558579b11",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e8e187-94aa-46fb-9012-406731c48b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1df449c3-ed44-47c1-9737-b3a81b67072c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35173ff5-6d55-4668-ae2e-1bb33d4819d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7add000-6bd2-4fce-8075-5cf367530de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed48b495-ffdd-40aa-9371-7d9e204124a4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "780b3100-fe68-4a5b-aee1-623ad28b87e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71834b1a-37e1-4497-afcb-8851e7f02883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf127c2-4bd7-47b6-8c7b-4324d00c6f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7601fbff-ef28-4c28-974e-491edefba351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5dd2f29-1c44-4774-8900-1ae22946285d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cddb089e-d86d-4fb3-9172-d8f4e88df92f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63a7d491-7e3b-4932-8062-1ff56a0aa90e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "885c37ec-2cf9-417c-b711-7f2827fdc4be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1adb7c5-6ecc-4bd2-ac92-81600cc792d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1594c0d3-bfce-4ed6-ae7f-55f33baac483",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d46202c-51ec-44aa-b9e2-bc29f5b3c9ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0d8b12e-0d6a-49c9-b878-9c9889dc848a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d2d2b0-5603-45eb-a095-732030680366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "95b6f5fe-02ea-4dd5-a7d9-743e1e0c98ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "282aef2c-ae44-42c0-b3e1-eff08e9099e0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "409cf556-01c4-4234-a43e-43acfdb898b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b35004e-dcf4-4e26-85bf-b3e64a25d5f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4d4ff0-8083-41cd-88d1-cac8c44f30ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3da5577-c6f5-4f31-8f65-5e4cc16d0836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8df8977-5739-4b3b-baef-462d0f2905c7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad34dbbc-1d17-41cc-8680-65cac37d5ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8955d92-bfde-480d-b39a-8d5001dc8685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f8bfe1a-6bd6-4231-ad2e-c54c1ec23c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "22c3d43a-c82a-4b78-ba46-ee1c250de678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62103ba9-f705-428b-9d18-71f6cc7b6903",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1071f9d0-5df0-4680-980c-eb5ae33fbf0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16e2f799-3afb-4bf6-bb20-db1466cc0fff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "208bba54-b3d4-494e-9834-1781b191e30d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e4b7468-4b2b-4b4b-b635-b02686afa3de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d9ee63-f848-4ef6-903d-e91c3989f54a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d251596-c637-4114-a19a-efe8925d0fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeb4d670-76d8-46bd-83d5-8fc210e470f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ed4a67-049b-4c4b-8d23-14e8b8fae372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5d3e2ba-fec0-4a3c-8252-42ec65284544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f54938-017d-4189-bf8a-c445f28cf45f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c71c58-b180-4ff4-b761-2a9c607cd95d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a8b4a38-fd38-41bb-9cb6-c4fc54086edd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f0daf44-b94c-4365-ad69-6d8e476ae0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d6f56878-27dd-470e-bd0a-860976939a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55d9e41-b85b-4639-98a8-d1b6e85fcf8c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d7e37f0-2612-4747-94bb-a22717787275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc573fb5-f182-448c-9e23-ace51f601b91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa126381-1ddd-418a-aba9-af09a45f9264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aa1cba40-0713-4bf2-8255-ea6134d745e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c113bf-3a98-4654-8710-79c26060796d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1338533c-8d0b-4bb4-96e5-f93106390992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa7e5708-a74d-4267-9da4-188c3dfd3fbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f21599-b000-4469-a3f7-10e5ab7ef88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac7dd9ab-0058-448a-9414-30f71773b5a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa316415-486c-40d3-b039-ba58bcb8fdf9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff11e22b-5b8a-408b-9dde-bb130bb934fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d5c3b1c-fd5f-4202-8cb4-d615666d858f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d12e63-1174-41e4-9b79-dcebabef0e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "87380115-d851-4bfb-9ea9-b650b0e3e6fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb260e44-6aca-4557-9f23-572f02898df7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef28c9c-6795-4963-b8f2-e73f0d35aade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce723153-3c7b-4845-a3bc-4e178c6c353b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a057189-5fb1-40fb-8d43-b4e857168d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "35c15972-c9be-4551-af55-2b8fc5f2d9c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a11c2d09-effd-478c-b8a8-12d522f02db3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd87a9d-9c57-4d75-976f-d7cc9e0981e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c9f67b0-1090-4df3-816d-7c691a76eae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e51295-3f3a-4403-abe5-b6084552edd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a81cceb-a89d-44f0-b6ba-6fb19b914e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29bf8500-fd22-4233-b925-0ae7c161cb77",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "455b14dc-8cfc-420e-855c-224fba0335d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efc37f30-4be7-4bd2-a441-61c4d18ff7f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa86a246-1653-4a66-8e9f-3f1c2d45cc84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "737c11ec-d062-49a5-a4f0-048499a53121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82009342-044d-4b1b-8c2c-85a6117c638a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d58910d2-24ca-4b27-9083-6254f0ec46f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44544157-a157-498f-a90a-d897a0bdf576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7887ac02-4964-4410-9def-010a55c189e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b7614af-1257-455c-8175-6b1ee959e23b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659d2f92-945a-4844-97bf-25bcd8f1c5df",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e363d6-3545-471f-b15e-853fa86e90e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35281ab7-a459-4d9d-80e8-0f78bddbee99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e127a340-fa64-4d1e-901a-49b9c8155b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2c5325e-7e65-44d0-ae89-f39e20387e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e9326a5-f68e-4d62-bf7e-65dff37f6ca7",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a98f8a6-8bc2-4de8-aa13-6e3029bfdda2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2d50d0c-c085-4d47-a537-6b39343a0cb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bdbadab-b759-46fd-9416-a1eecf62c3ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66eb8b33-7511-4184-90a8-a706af7066af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e802f507-794d-47d5-b594-acbfcf572544",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c082ecd7-532a-4745-9290-19efb62b3b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61c144b3-6b00-4d09-903a-497d22fdc442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1111a62b-5352-4711-986d-4ad339805109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82680cdb-2304-4d19-b697-190ca0fc769c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e998c8b-e887-4e2b-8f0f-d906793e1cc8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb24788-55ca-402a-b627-889a1fa541ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4ee3373-2cad-404a-ba74-dcb80a62c727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf51d0fc-d87d-45ef-b9ed-a0c50ab07b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7155792b-933a-497d-b92d-86fe2252c9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2bed81c-6b23-4874-841f-e7e8c13c7b70",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d36f3a-e795-4e23-9cc6-af057fb88f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fadb3bc-0be1-4950-95b5-b9908c4f2413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52aefaea-09a5-4794-a9e5-f7925a95b26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da9704ac-eb09-49fe-a484-aae0e820ec90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ddf65e-927b-47ee-9511-da3867e3d1df",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "029a02e7-00a4-479e-82d2-45b59b2b20d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1e42d02-1a98-4750-be5c-8ce654646c90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "957b4187-18d0-4add-bec4-170b0071d1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1fa1caa-e99d-4cd9-84bb-0706334749b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad830aaa-9f4d-4442-a8f9-8a3ed18c2ae1",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d92706-3be9-4c81-9e26-ced2a74c7d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90209520-dccc-4afe-89b5-f4cd79033243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39fc69f5-837f-4ca9-a8c0-19aee7eb51b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21ff92fc-55ff-4830-87ee-b5b789273516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd43a318-3ec2-4d40-9219-fa9bfd0e7467",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad57654-1174-4a70-9225-dbd5f0dba8bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eebe908-6efa-494c-9eca-8107409ba7cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d06d2f-bfc6-4c87-8dee-1d362f65fcd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94984dea-a163-43aa-8feb-bbc7416c25d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6bb49a1-1575-4ace-bbad-8f7db71bd895",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d3f900-1531-4723-85d2-af4d64759604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb6d6d52-f970-4f29-be46-155aa9bfbad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f8d134-6103-48dc-a088-159d9fcd9e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2684218e-0370-428c-97e7-aa4428382896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e593b5a4-0581-4b13-8aee-4002fc499273",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4912dd0a-0071-4fb2-a8fa-e2345d5cb7ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18f3d16c-1966-4a10-b2b9-369e12d129ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dd2b550-4d96-4e82-adfa-36599b6edd7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bf73adc-09de-4cb4-b589-a47d2e01a3c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e5b9cd-6e98-47bb-b273-e7ebdfe70471",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "959736ee-1513-49af-aff5-98067616117b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed1896e0-8ba9-48a4-92bf-37d1ee60b473"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6cac95-0169-4521-a4c1-920b49b33efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f21a085e-ced3-41bc-b585-dd42d97b61e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c8bc347-a9a4-4f58-b808-2ccb434d0339",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "483e11e3-f3cd-4153-a3de-2236ec0ad51c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec41b074-a7b2-4111-b2de-52ad4bd1cd9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4acb2b0e-b48a-438e-bb6d-8d18a62b4c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c02f3450-6211-4b90-9f57-cb699ea3ad5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c4e17c-2a2c-41e9-8042-9a15f8385da6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a71ad5-72ea-4c85-9cae-7a2b066c1dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3511305-a2b9-4ab1-8fcf-1e6e94812978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "636be9cb-619c-43cd-ac04-80b18a8435ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98e57c09-d5a2-4640-9e2c-4e787556dd0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2000313-c6da-4c74-8cf6-77d2c5ab0bff",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df2fa83-d1a2-4d5c-8e10-98135fbf576f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8e4f233-001c-401e-8563-bceca92aa15f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e7837f5-9d13-4096-9d2d-b8f2b134fdeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "034830ef-c6f6-4994-81bc-dfec4e52c729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e139884d-c001-44d3-b418-dc0ff07cb4db",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d78bbb1b-9e48-4a23-8c30-a48e360b9d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7045b376-c1a1-4743-9bf0-44f34c83d31d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b8d3226-4c8d-444a-bf5a-4f9003a15622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b8bdfa4-6733-4548-8460-6d256db48749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "629f4541-776a-4ddf-a401-8df35fe169a1",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c65416-f42d-4c52-ac58-322ed0c1b2be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e4800db-929e-478a-8367-fc09e17c4960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d89a67fe-92ba-4101-acbd-05a2fbd66cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8adc29c0-8ff3-48f7-be0d-3aa404ce40cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fe48e71-c223-4312-91e2-9af5cbe89da8",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1447f596-87d9-4136-b1b5-f0438b5e676f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d1bcb00-6f51-452f-b4c0-dc295a5e39f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "961afeca-e6f8-4a35-8325-4f770570c96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f1fb516-dc73-498e-b604-493efd5da23f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3b7fa70-c726-46a1-9dcb-579fe6db1bea",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53479e7a-07ca-4590-a0dd-c34ff2452369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d46c527a-bdff-407f-928b-a85f582bac52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d24f2537-5757-4d03-89e7-dc07494b9768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "284fcbdc-e581-4990-a409-5f2ecd383796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70dc5823-d1a6-4d74-b79a-0c59f0657ea8",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baeb59c8-854c-4b52-8e5b-1dcd970bca9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d0b3dc1-31ee-448b-a317-02d2ee22a1df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b8d359b-c6aa-4092-b09b-c3f896553013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5430981b-c7c7-4ff0-b20f-966c1fec8f82"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "930b1593-5f52-4f96-b2d3-3c405ca2f936",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a90b3ca9-cc6f-4c27-af9c-c4f751d7c965",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd32cb89-8a5c-4b28-85c0-69ff07829a1b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "95a97a0f-cdce-4d58-bd0e-86dd3cadd70d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f8b0d9f-d0f9-4438-846c-01576b6035ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "62b936f7-4868-4eba-b93d-fe2a1da28714"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9084653c-b82d-47ed-8687-449dbe3b5ce2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd29b817-7901-4807-8020-9904c3a525dc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a588f12-013e-4b39-b4b1-d702b2ad6f3e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ade540f-6363-4b38-9997-195b66115cac"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2c1da2f9-c3c6-447f-9c5f-f4ba6baf9d1d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a91afed7-147c-4440-86fb-4016799873f2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6559bdeb-06dd-46de-860d-1034f01341fe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "66a061b3-87c1-466c-be63-2f2007eaab1e"
            }
          }
        ]
      },
      {
        "id": "489d2040-617f-446d-ba72-bb33cfb91cc2",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "64ef6b28-8c37-4c29-be04-10957c8bf2ec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eb162e12-7ddc-463d-b435-93ee352ccf0a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8ced3ce9-e5b2-4cd7-a0b6-9e3b95c99a97",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8139354a-e927-4a8f-aa68-4df151949a64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a826394-4fce-4d45-9636-5fb280801fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b2c03a-11fc-49a1-8260-23a83ed29539",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baae6509-244e-40fc-9c13-40d88995f0a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36b1f522-fb10-47f1-b2a8-6de9d0aa6ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e875effe-3108-46cc-8c45-6c85980056df",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef6f9ac-944c-488a-acb1-05c7e64eea8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43b6ab96-a41f-410a-b0bd-3bcbdff033c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aed38c5-f06e-4eb8-9a92-de710f8761f1",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5eec24-d92b-4bae-927d-3e1a9d23b8f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "108fa0e6-8180-4963-b17f-29e4180ab6f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7efdf144-a57d-40b9-b30a-be1bfebe9185",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca338878-5698-4fff-9901-9c97f24c52c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "680edccd-bde2-45bf-8056-232fadb857fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50891941-9a56-4e74-b209-bbc415c39c02",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "556de4ba-38ef-42e8-8b45-44c789eb27f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87af4e48-4932-4243-805d-c0c68f76c829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc47765-cec7-4afa-8fe9-73eefa7af386",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b8870de-ae78-4ae9-adbe-e1214b354d8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "009ee057-4834-4c71-9b8d-b7c2b6a92847"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa1000ef-8406-4ab2-8264-e9d1b856e1c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e197a29d-7e1e-4774-867c-7b4d068da508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "976bceb3-5c79-4440-b731-95cbe0b3a014",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "460fba42-0f61-43b3-a0a6-540fec3cdf6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45ddbefc-fe0b-4a08-8328-9f7be532df93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b862f145-aef3-4ec5-9e89-8a6177b8b1a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd031646-be14-4fb8-860c-38bb782f8694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e41ca429-c99d-45b1-970c-9e84e0d7f7a7",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7392429-a372-4f3f-b815-27b38085c6c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54a175cc-6257-4245-927d-f7efd6e62bd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c89678f-b7b2-46b4-8332-3776fe04f0e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a0f0973-1593-4a0d-bccb-fd08c95f4f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb3c40fd-3dcc-4c92-85a7-fbd91506574f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11675771-f7e5-4e9e-b479-9b2c9d729211",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3b355b7-0a35-4143-8d31-75e4fe6d3587"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd35a132-fe87-425d-9296-62abe0f33b81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d4cd738-5e99-4ced-88fc-7b412233eb15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d54db73-408c-4966-93d9-23f93be402cc",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff4d3f50-dbbb-41b3-9f06-e42b1f507c28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8179b04e-76bd-4a65-a671-778b3fcc2334"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b7fc4f-2e17-4fb6-a10a-f53ce2701ea6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69d8d105-ea74-4d39-8738-d0de61ea38c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c969d41-df22-454e-94c6-b035d7692f3d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9936d40-eb0c-49fb-b347-5690384237dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f36fa533-95a3-43f3-a194-34cfe42ae7ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "125d8932-a2b0-48b7-b603-da9d3ae2aa95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4a4f9d4-08b4-4aa5-8ec0-d2c1a6b83c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf1f5e4-f27a-434d-ba47-e075d38235e9",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af2f814f-b5b0-443e-af80-fecb9b043b4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0f966a0-d847-49e5-955b-a4ea59b85722"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f56f1c89-b6b4-4ebc-becc-e9697c7aa67a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6927efe4-0832-4bb6-bb5c-d4e26768b904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9016e587-8bc3-4d8e-8627-4f30a90493c0",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e6839fc-de1d-48a9-9e69-51f14c996dba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e14c52c-bb8b-4ccd-9e2a-28a5773cd6a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0546253f-ba29-49d0-9fe7-ac0ab47f0608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea75ea28-d869-4550-89b6-9034cf5a8d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b10e32-72e0-415c-8d25-bc26603cec0e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea9e0845-1cf6-48fb-8db1-d8a06c7273a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "faa7b8b0-0ced-41f0-92b2-a7aeea578e2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b7aeba-c83f-43c8-9077-d5b9114e1a5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd7f972c-cffe-4e47-a2da-7b6209f71432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd270a82-51d3-4a13-9bdf-18e782686a15",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2949686-b68f-432c-96fd-d85db95d2045",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "464dc652-279a-47b8-b1e2-9919522357b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31385acd-38b0-4bfd-bf4a-db9eb06f38cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2657a1a0-5607-40eb-917c-df203dae822f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf589ef9-d4af-48ba-b904-cc92954b6a27",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e852c184-9531-48b6-8e8c-3e5cf650361d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c17104b-c136-471e-833f-2a528cd9ccb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b91cf1-7cd9-4e99-a656-6a721f59c977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1939c2c9-378d-4d8a-9b19-8e1469f75398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77050cf0-9d1c-46e3-b4d8-478f09b6207d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f6acf7-885b-41ae-8b3d-d3e5b66328f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6653d2a9-86c0-4a41-a149-81a1887fffc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce2f74b-d49a-4a4e-8fe2-7698dfcc4d43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78c860fd-0c83-420e-b23b-ced6a487fce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "281d4318-51ac-442a-8a00-7675cf1b0d09",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8419f98-a25b-44e2-aa4e-73130c2e25d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e8f4d79-7c70-4d24-9be8-502125db92be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d867d77-3ccf-4825-8e87-a8731c2bff69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8873e67e-9b7f-4b41-9ed2-e5a54cf822fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622e68d7-8b59-46d8-bd3b-9c8cbcadf52d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "129efc6a-9a4d-4169-a5e7-81f3f086b7d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67056104-68aa-486c-b2f6-2d52420f3a8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8014c4a2-437b-49c0-9e4a-14a9b90ef67a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42d3af6b-2276-4469-9d5f-14179dc949fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ae9134-636a-4e40-8470-9a82cc4b6573",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07fa5ada-896c-40a3-b0ec-f3aaf300b097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bd55967-c437-4ba4-bea8-e5296de20ddd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1657883e-7329-4fcb-865c-a385991a137b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf5bdf68-b2a4-4184-bc6f-d84d4eacff20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8411e195-73c8-46f8-b492-0593d1ad812f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "852a84bd-c146-4a74-9f1d-01fc11e7dd23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49fa593e-9414-473d-ac0d-66d8875ab78c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ef2962-6fe8-4c7f-a944-28a2c5416fb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "209f3550-06dd-4d93-884a-3689fc631ba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b498cf4-1a50-4657-8f52-f59e1c419649",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ea8b67-dad6-46c3-9837-b1ac8375bd7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2089e95b-90bd-43a8-b152-32c80dcaddb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de9846d-46ed-4e44-8046-dc403cde6025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f82b260-1cac-4791-b740-f4902a10abad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04521a28-63e8-4f09-9d9d-bc7e05210d9c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc65aa35-976c-45d7-8b21-a8b5d7b91467",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be799d99-5568-45b4-90f6-c6e366435a87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b108d09-ac2a-421b-8a1a-ecb233126954",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7727c6cc-c6b0-404e-a64e-420a57f00664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "410f16fa-1796-4c0d-b5df-aa70e3dae87b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64bd1f78-1097-47e0-aabd-909dd3e97973",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b4b0297-e98b-40a2-b435-1787d9b67704"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe6cb27-5a68-4861-9599-28f33741d94b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eadf7365-3a82-4722-a2f7-8df1eb8d4f3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "723d6ea4-8908-4a14-aa6f-95888cb073b6",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882ac93c-70e4-48b1-8c98-338b08a60de1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5852e26-e841-4ebe-8ac3-4cdb52ac6efa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e02544-dd65-46b2-8312-46c838827013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "417c7e14-a1e9-4ab9-9a7c-4dace9e68ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a63b223b-4b6f-47b5-8b73-28314600be7a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ffbd625-4463-4f95-bd76-9c5859b67c32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cad3f300-7c61-4295-858d-bbe1aaf39bbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1969c59-df0c-49a1-800b-a55623573152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f8b1beb-e9fe-4671-95a3-5f9d4835c704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a166d9-1797-4ff7-bb98-77aa84383e29",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "597b8911-5774-4d6b-b2df-886b3a6f3d4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c75f8147-1fe3-4f98-8cb4-bbf1a5c39cfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d1e3cf-8156-48c8-8b75-a913110ca200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d985fec1-341f-4897-ac9a-b89ca559b1d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ce9293-7125-49b3-9c2c-8bd14d0f4ca6",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc22f4ce-179e-45c2-bb83-00b024786724",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d242f16e-704b-4c06-8d9d-4a0db8dc66a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9ca8e9-0256-464a-a789-d04336f0015e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34d17556-179d-437f-8078-f632e7ebae58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2679673b-67e5-4377-942b-308705c2cc22",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41149555-2ef7-403a-a4a7-0588aa2742ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "beda5099-9d91-430f-8d67-a47705369159"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b94613a-f4ad-44c4-89b7-f3a87d3e33a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a79ecefe-bf5a-4c99-ae92-ceb921071cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe12a89-a855-471d-9419-3492f33e2f53",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3601892d-805e-42fe-93ac-a659ea08d316",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba42f7bf-f01c-477b-9b8f-08d117376f89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a835dea-3727-4df9-a1c2-1eb1494b9368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "babd7a57-8151-45b2-a901-63b66cfe71d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7602c78f-5f4c-4015-beb4-7b0bd4b9a46f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f793f1-bbc7-48a7-87dd-f4e6ea8cae28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5f94909-beda-4b0f-84b7-3534b624e303"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f050d3d-316e-4d18-afc6-2b414df125ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94ef3801-817c-4b1d-a541-d5dcb791ccde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d90510b-0f0c-4693-a1c0-aa309f9a111b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051d2eef-6ef6-4cf0-bebd-372cdd1a0d3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61c66fd2-1548-444c-8ead-f0ad0adcc3ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc9aed3-e59a-4e71-aaae-e87575eaea1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d078b3d5-deb0-45c6-b9ee-505944d25a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9510401-975f-499c-832a-cc0bba525a00",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "361c5d91-0d27-4a85-8944-6cd05c94daaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bef8153-4a6d-46a1-844f-31408cd58da2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35bf9c7e-ed69-45c7-9784-fabca7dfb5f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "546b6778-1e88-4344-a1e5-0c9d44e1ed83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee25e58-8dd7-4bfe-a949-b51ae1cdbacf",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db64850e-6bef-4012-a844-594163466e1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd31f989-5453-4837-b5c8-ad0d5d759c77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d4fc170-d2b4-4e5a-9661-955d5f17d2da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38b52193-afd8-4107-a7db-8768de2ef3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdcccd5f-b07a-4443-ac16-d08572175e9d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d103cff4-7ebd-4eb6-9d0a-09dac2cae583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "853583bf-a1c7-417d-b44e-4056db0ca992"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c489cbbf-60bb-4873-b91e-e3aebf7fb354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b045bb55-c9de-4dc4-b8b1-5046b4d676a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a846fe7-fb45-4667-9c6a-b32446741883",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db7bdb03-62c0-4f34-8a56-4f967504e99d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6370993-2656-4704-b754-64abcb80a00e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e01109-552b-44cf-a1cf-cd919833a30c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4786b784-f264-4346-9fb1-0374d0254ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec32ac6-e6d3-4652-b878-dc13f1c05d56",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21fbb9c6-df9b-439e-8bee-94f623ab5716",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51f24f69-b2c0-44d4-a516-7eb7e8778e2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c2a3d1-0dc1-41c1-952b-a1f6d6824b00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "362240a8-2dd4-4048-8945-5f7d0b52725e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b62d7769-ceef-41db-9c1a-760aa649baf4",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50fb8b05-d420-4672-9b92-4eda8739e557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94c7f006-8d23-4a6b-81b3-2dc68f1463b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "849b4157-a597-42a2-8d4d-f1259deac9a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33a1f051-f2a9-4037-a25c-189b22f3e17d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc3cc6a9-1162-496c-ae67-03785cb097a1",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97cdadf3-7317-4c49-99e2-6f78f9d525da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75b97aa7-acb2-48b1-bc93-3bb65751352e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "accf7e4d-f3d7-4166-8063-959b6fc591d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "957aa817-2227-403a-9ade-4e19dffc6d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d74ada-5c75-416b-af10-e682d0afb05f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f0841ba-2204-4338-9467-837efb324d5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7be95c0c-c1c0-4188-b7eb-b194dc8879cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddfc6c19-4593-4b00-a851-cc6877f97b12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4274eb7-0152-47a2-8b99-f21ce0cf60cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff936f2-7e62-429a-9528-74019d6941f3",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d36184f-e5e4-43a7-912e-926829e19e15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85a2424a-d57a-48ac-ad54-3c71ac5171f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42099d1f-91ed-4ec7-8546-0e41a0f88b2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efae3d47-3363-4334-9fe7-d85f8b59263f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c97f577e-9b35-4a5a-9da7-1fd31f8a98c0",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31c6a9cb-5f9e-4d44-b2ee-1aa6bd194ae4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c83a713-d392-4f33-a27e-14a2cb3c2685"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f9f18a-18aa-4571-8e77-b6f685af55e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c917a460-38f8-423f-9e73-c0acb9ec3e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "978f8682-e906-488c-b5f7-249cbf2284e0",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d00f0e2b-86ff-47fa-9f09-e55bd27d9735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ccb0ac5-5972-4833-910a-b03ccf010c30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b7fc184-2d1d-4239-a392-8f07e0538a5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e12cc8e7-6033-4454-8f6f-a89e40e36bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ecd373c-3c96-4047-bc35-7315b1a04739",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c455aa8-f1d7-4a7a-8c90-50bc52fa97ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d403c85-51d8-4b3e-b094-e7f1a3afe090"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e21ccecc-4346-4509-914b-ffda63270db7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75aa502e-1d9e-44be-a221-0306c6ce89ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9e93c2-3cb1-4ee7-919e-52ce2d7604dd",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36131a0e-e14c-4e3f-b870-3b0c8b353cdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51e8956d-6c97-45e7-82aa-1dbb44099bfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b951761f-917f-4d68-8f77-937730593f95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7ceab51-3117-4fa9-9135-17be239e72d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb36768-6eb8-4b7e-8cb1-ce574577923f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2231de4-e9b2-4972-8df8-35c3344f7a71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f9bfee0-d282-407e-955f-fa3089732bb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b6cccd-4d13-4705-8cc7-c517795a9845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caae85a3-ec90-457b-b3fe-ee831e9a63c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea269a1b-dddd-454d-b911-79097183c12a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba22b93-ee4f-4033-b6c7-2e301902920b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9fdc3f0-8de6-4001-8496-215cfd3bee5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66084428-d344-4729-ad68-24fd5669bf2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac079604-5cc3-4858-86dc-5d43fa3a8223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f97f4a1-a4ad-4282-8168-24a877f474ad",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66183dc7-aec8-4239-a294-4452e611e153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03c02077-f26a-4b5b-9b2b-da4fb31c82d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44695ea5-5023-4200-b16e-4851cb7a468d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67558174-e577-43e6-9cc7-07bbef42f437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88085f3-407c-4f17-b656-122b18a7da6d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa93feb9-ee6d-49d0-88ef-1f12d4507782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac90ff76-829f-4a65-9de7-dfa0ecf1da97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b12b8b15-9b33-48a2-bb0e-5c5907b19817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1750a1f6-b6ed-4465-a39d-aef809a8e872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641fe364-e9c1-4ceb-8281-fbfc990aeff9",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01987b9c-1342-4ba0-af7e-e0a812713f39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ca1b8e5-71f2-4b85-afff-4d49eea2819f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bad75d84-7831-43a0-9d8c-30957e2f7fe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2136c47-6065-4367-9964-015672e7cb86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "922a7a3f-77bd-4a89-bd0a-638232b0f712",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67f50e9-6323-4b0b-a998-a7a55e3dd18b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d907122-cda2-46dd-9f14-e77cfd4762b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "117510fb-7c78-4635-8356-47d41d6d2bb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9100e681-f8a5-42de-926c-8f1f159178de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e8aa57-4360-4281-8db6-04e8fb569970",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22802e58-752e-4ec2-8840-6cd36569c129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcbeba38-4b4b-4bf4-9c6b-aac6320afd36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "363b467b-4a15-415e-b053-ea088ea871fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acf214b5-e5a6-4eca-ba97-86b92bcf8014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2eb0e1b-84bd-4c65-b9a4-a22079ef3070",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f1b9cc-ed1a-4e94-ad96-de08a826d1ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80250296-62fc-41ce-b85e-e6cc941a30c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32ea901-0438-490e-b2a7-ff5e738091c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc85349f-5c68-4db2-81c2-55849cd03dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683ff753-55c0-4f6b-9c33-f0069baa5cd6",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef90a00d-cedb-4cb9-9f00-7c4844a47f46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cee49995-fdbb-4f56-86f7-760c6b7c52f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f9f504-1c40-47c5-9b85-6b73e8368eba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89704a95-eba9-4000-a9b6-310fdb7b3b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934deef0-e6d2-42dd-b2e0-7a3cf08fc0a6",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9e4f09-f887-45b2-8a8c-362d1ebf8978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83a0122f-5a89-4dbc-b3a7-cfef0813f4e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47cb13c-cbe5-4b1b-be6d-4b8595b152fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a511c4f9-0149-418e-a8fa-20cbcee4c7bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddbaa159-2549-42b1-b3e7-bf94d9f664d8",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf47fe8-487f-4297-b0b6-0ac715f51ede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59b6ab1f-9893-45b8-a3a5-2100978e4a11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddeb89cc-959d-4cdb-9821-84219b3268df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a36d993-9b57-4641-9ab2-c75b14bbde4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ae2167-ddad-4800-a036-75c90259d5ae",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "177e1e9b-0021-4946-9dc5-d0f2c0ae7c65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "591bb3ac-156e-49ce-b084-f7937013cc81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "048cc9ce-6b5b-4e22-8e53-a53fd025c3a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef4f7cef-b821-47b4-af42-c91581a2d32a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "167b3c53-b222-4242-919c-ed5b52691661",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a8fc1f0-2ac1-49d7-9611-86d4ace38bfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d745a5c-cdb9-4d63-bd86-b0a88880ffce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b83c2e49-7fae-4212-8838-0896936048b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "096a38e3-c9aa-45fc-8426-ec3d97c321f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a648e38d-1c49-4f12-82c1-e5300c2cd542",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15be55b7-3f83-4e71-9c05-300dc17a9c84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feae24c3-b830-4bc0-8a03-7605bce91861"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f2f75a-6216-46d8-92fc-9e42f249eb05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "091cdd0a-d66c-4985-9855-91efddb961dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "832330aa-0006-43e9-b7c1-8ba8029d6a53",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed33f2a4-a526-4226-86aa-665a13fdbc4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b6b2c72-ca76-4a26-a5f0-1b0e6c3877d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5e4785-c6c3-4484-a7db-bb2301c05268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e118db42-0cfd-446d-a1e5-0a960da9a96f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad3a0068-20b8-4b3d-8c12-73c3fda92987",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb21e08-3452-4f2d-a7e3-ac542e85e1a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dff111d7-fe7c-4ce8-a15a-efffca2ea05c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7872dc-8883-4239-8f7b-c373fe2c6221",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b8b8b0f-bdbc-4855-8e5e-f1dd3c405a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5a78f1-addd-4063-8d2b-18ba2056d800",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "957b0c56-5c7a-4dac-ae45-fb234e6a1140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e8a8ba2-173c-49d0-a463-4f20f6fcadf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee7fa68-d81e-47eb-8b61-442e89263cd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8168c058-833c-41ac-bcc8-4d6d8c29dd53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b84a5a-c332-45f7-87d3-baf875df956c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c9e33ae-7681-441a-b507-d8175b65433e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae1e3c34-ce8f-4b02-b555-75c4ba18f7b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa24a61-7c84-4305-a702-cffceec272a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94d69211-d2d0-498d-86a1-03a7e1c65e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407b67b7-7a5d-409e-990f-a22a47dfde74",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd30cada-3e65-4ae4-94f0-642a03f05047",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27009cdc-7787-4197-aaae-120b1b07f254"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b5415b9-17e7-487f-8558-e6399b2476fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3d701af-fc21-4c40-b2e9-f53467ae1d33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8c0e7c-f793-4325-9fd4-5d50205dcce8",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610d0082-3978-493a-9a43-8179753b7582",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "520a2b31-0afc-43cc-b9c1-edc1e8364c06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b164516-49d3-45a5-bf8c-405d3a947ba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e9191d8-b090-4703-8207-4026b16fefad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dae0905-fa91-4b56-8bc2-ead51cea521e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "752ff8f1-3068-42a3-9f30-234af8ab9e6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d07e49d0-db31-4ed7-a220-f6eb7d897437"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "996f5d5b-4ba3-4144-b3b8-bbdb1b59caac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd735f0f-fa06-4f1d-9c3a-6d862fdb6f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17eb6be1-ebc8-45f4-9e4d-4cbc6282b0a4",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e93b7b19-5a01-4ebb-9d86-40f2709d7d87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebe8a528-cc17-4453-9f9c-ed7185aa38fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62d83d2-dcb4-4545-bc53-08038349a63a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8f90cba-b740-4eec-b38f-782f0095ebe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cefe3b1-1212-4bba-9220-fee5f8685cb1",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0af900-babd-4ccb-8f98-a34c8038bfa0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f87a9e7-c49b-48ab-896c-596952eb7794"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f11d43d-00be-4bca-9083-7144498d3205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ffc4066-30ba-4934-baab-f8e8d07f30af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8383655d-da9e-4c89-8cf3-0ef84af71472",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e375cdc-47d2-4d84-9ebd-5e98413328de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9a97859-b0e5-41a3-96b7-a56bf9e5fd66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32714f7f-9d08-47a8-beae-9e24de2abf7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2a809b6-e7e7-4ae2-a078-f38d811f982c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f0dddc-f579-449a-b044-1d1e938faa67",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad1b1bb9-7bb7-4b7c-bcfb-81e590d36243",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1be30ac7-07dc-43c6-9f30-ea732a7a170f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1c8345-48cf-426e-91ff-846562986d29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fffa796a-7c4e-49fe-9292-90ed3da05281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52055996-eb2d-45c9-abe7-86543dfcebb0",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555af912-a00c-4367-a5fc-cf4dc144bb78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9748da0a-6253-45f2-84bd-6f65cd32e462"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6950db5-b41c-488a-91e9-a43d387b8dd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f0bfe16-b2d9-4f96-bf1a-5189b689305d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c1703d-d207-40a3-91f1-d9def8b1c6f8",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936fe1cf-59e2-43b7-9e60-2b7ba65bf932",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6145ed79-761e-4991-81be-8c66e9f621a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b87a9e-ab5c-49b8-ac84-23c739b19d22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "553714bc-a18a-4595-861b-a7c802a23e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0666e150-e2a7-4c98-b114-d34870cf108f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd5d217b-dbf6-46dc-a705-03c0218a2f27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5efc1e73-24b4-4406-9dd8-964de4b5d6a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f90e52-ce5f-4b0c-ab2e-5f3a7729884d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92e684fb-262d-4bae-b75c-0f9c328cb9f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2fa38f-e589-4a90-bb50-6b706bf26959",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4e6683-54f9-4298-b6b1-750a422f325e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65e27800-15ca-49f5-b358-d04d5ea3dc4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcded52c-3825-4748-a1b1-04fe9060a74c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4b5dd93-ff90-4197-a027-4ae8b565ed5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73882b34-8f0b-41d3-b94a-eb4628b9c9ef",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd0a1f77-0ce7-4735-a22d-7fdbc38aec27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61263672-34a4-4655-be40-9f3edaaaaf87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba61118-9fe7-416e-a85e-29484adde119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b963a17b-7d85-4e69-9fbe-a1a82416179d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848af2b7-fcb1-49e8-a30d-759380f19340",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4425f8ac-120c-4bd7-b250-aaf11822749a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c472a91f-6ef9-42e3-9a38-0f65751f6042"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b780a1e3-a29f-472f-867e-7e94b87513b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab8ca307-0bfa-485f-9bd7-6b0e7ab0c93e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "040a1871-45f8-4e55-9fd1-3aad67cda789",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee9905b6-a047-4de3-902d-d19d860e4e83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a0e157d-e406-42b0-87a5-7d0b1cee0e19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "765430ce-6f3e-4f4f-8846-322e867678dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3fd6850-b27b-4ac2-b377-25e0267c5728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce713d4d-3e3c-4adb-80c2-c4502bfa46bb",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8fca97e-8f8a-4242-b727-9988ac41bc9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "345986c7-7607-4274-94a1-878e6af55b2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d2cf03c-4566-491d-88a1-4e4de644af30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "567df8b0-e39a-40f2-b3bf-126750af27e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44b6d05-5cf7-42d5-a6bd-8f78e7f2ca82",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15a439a-ffdf-4261-9950-190a4508df2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bec4f39-edde-40c2-9bf6-aac297ef1960"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81826075-7d69-4204-8091-a685c8e9f1dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2f520b6-5783-4292-80ee-98f033e58b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f3bd47-427f-4fb5-90a7-ff4c72e681a0",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9664de49-730e-4672-9089-2d50017d1191",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b1e6711-d82d-4246-9122-ff120346b5da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c7f5512-3a1c-49f5-8dd9-40fe7ba21150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f382dcc7-c072-4af5-8a28-365b7db98bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "352254e5-463f-4ded-847e-62ae7f4c3cc0",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e80ed45-2eec-4a3d-90a5-1260a404f1b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d668248-d6a8-4d78-a320-f43d60a4016e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb7f161-04e3-4fd0-a330-89679b920810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d514a4e5-7c0d-4380-a2f7-d01199ba8c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b8fb2ca-6e4a-4e41-a285-3852b91f4857",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32efa06a-1af8-4ef1-9bcf-3db6c6aac662",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38373527-7dcc-4217-b16b-47cc8be52026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6ae985-7427-4d99-aa38-14856075aad9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fffe1d9d-4797-4468-9c44-abeee00fe043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4cec08a-ccc9-4869-92f3-e878085a37ac",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60c41d4-4e46-48ee-869e-7b6efae2e019",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08bcb8bc-68d3-4b0b-af50-25fd1c23e5ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "501c80e1-9eb7-4967-9eec-9c07138ad653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a34a778-5e93-42c8-9da2-e3d35de91424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3853811-0ec5-4535-9ee4-60e362b2b204",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a206ab-8515-426b-aab4-b1bc00ee619d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5175795-94eb-432a-a39f-52c2b7ab750e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af239e4-314d-4d41-9319-6c97680aa6db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "312eb094-c6b8-4ddc-a467-9f87cbc1a529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f7397f0-2332-4b81-9961-fc9b294595b7",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc30056d-adb0-41f5-af4f-ef9fdff1a476",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43c44233-bf73-4003-924e-88ffe8259521"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a8b3d64-fb47-4fcc-8ceb-e8ff28ce11fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d66defa4-0c92-49c5-a103-16f7a763a951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b614ab4-5559-42d7-8138-c2847ddf8a04",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d6984b6-c115-4279-940d-c7e232501a54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a8e0444-ad9e-410c-bb18-8c5e92fc1416"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56682b83-9a96-4b8a-98fd-0345ffb4da21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ea68f6f-5a41-4770-9320-56bfb49e1026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a6fb33-0ce1-4f96-b677-6699e5df05c1",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb0f08e-dcad-4bfe-9869-5fce2f29552c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a573741-eb28-45a7-ba56-d15aa663ba6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28cb5cb8-ae65-41f6-882f-6b07bd5a5a50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "520105ae-53e7-440d-8ba3-2fcc86cccaef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9807c3de-a34d-4d58-99dc-76b40b7bde84",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a84f4093-7ccb-4269-877e-d43c0d3a05b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c43f1bae-cb37-4490-9189-3c125229f16b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff0d12a-df61-4761-93a8-3ddf0d730aba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63a54517-f2b8-4aa1-a3e1-0ab22ee70b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e370c75-4d98-475e-bec6-87f0c3b0bb42",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "728dc68b-c6b8-4e35-83d0-a28608c86740",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d011081a-cff3-4b70-ba45-e5df1f5cfdf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0bed275-3ef3-498e-b104-00690148ead5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33636c65-c354-454f-a06b-d3b6aa4717d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e94a854-6850-4146-9764-84f23e82e35c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "130d9699-f7a1-4544-929a-e44ef5cbde5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f05dab38-4ad1-4857-81e6-e907e5d60cc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "832dfeb6-ca0d-48fd-b7f7-62b56e85a3ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9480ceab-22b2-4138-924a-cf4855623388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bccced8-3154-4598-b24c-fd6d9aae4a74",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc1823c-a212-488e-8191-00b2cac9e94b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c222599-8b9c-49ae-a199-1a668d31dd0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7efa75b7-536a-4cb1-a921-1d0738e99f39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d451269-5266-4734-80d7-abbe61ac8b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "961f393d-d2fa-4342-bdb7-7dda6266cd8d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8f0397-fed4-4913-97c8-2ffdf945e898",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7618bde5-5bba-4a94-87c4-5be6b50baae2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a60f34b-b408-4c8f-9cf3-cc51f8380aed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "929086ee-faf1-4f73-942b-213c225855a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea0dc5a6-0c60-4b5a-ac80-cba954140379",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d301e4b0-bee1-414e-ba01-2824dfe09104",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cab873e8-7f6b-467c-a94a-ec0ce1c180ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78bb027c-485e-48c4-b22c-332d198e0dd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88113091-1b8e-4cb2-ae23-7e0818b135ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4528d137-93ae-499d-bb38-e892c7e27da2",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be16bdc3-e9a9-462e-9ed5-7adab1a129ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d96098c-9cb3-46e7-8e91-6182885b9984"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66858aa8-83ed-4fb7-852f-8eb29bc3a905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8930cd9-8ac1-4eca-b5ec-bc232f5ce618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84dabc8e-b70a-4a04-a806-c3360eccec50",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbab64f2-e508-4486-a7e5-7a328cf3453e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "134b630d-6d02-420e-af25-f1f53b53e193"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aafd12b-33f8-4507-b8c6-e845f5b4b72a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46f50181-76e7-4bb2-a5a1-41fc2f480b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "426d817b-27ae-4e1a-a88b-e620dbe6024e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c25e78b5-7e3e-4748-9959-5d27a9dde052",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "241ac596-0fd1-46e0-ba11-e17f5e6c85f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef26c291-6fb3-4a57-919c-945ee742dbe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b973df02-ba26-430c-afb1-cf4defdd45ea"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b688ba8d-8637-410f-910d-bd0dc37a999e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec2e8f67-eba1-4e45-94f9-77ed8600849a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "64a7a997-167c-4e48-923d-031f173b5082",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "490714ba-2664-4e62-b874-1f7015c5703d"
                    }
                  }
                ]
              },
              {
                "id": "d29d0371-e2e3-4857-bfba-db6da00bc05e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "53d1bfe3-add1-4d2d-8f8f-79bb6e899952",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f90da57-6116-431b-bb9a-4366b826a427",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c9fea901-da15-4cbe-af09-e21ba50c232b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c8d08f-32bb-4f1e-bd9a-856bc0b454bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "58afa287-14fd-4338-a38c-334e839a3529"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7196d093-1814-4887-a187-9a26e2bb54a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08625a15-2305-43e0-a338-d22a16c1d7e7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "35b26e38-703f-40df-bfd7-18d68cae7365",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "882e4d66-7aa4-4698-b27f-e13eb3652571"
                    }
                  }
                ]
              },
              {
                "id": "52557a3b-79f9-49a4-af24-eb0f3c0d2403",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a820b448-a78a-4550-8ef0-410250140357",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "881b58e5-0627-40f4-9bec-709e6bd9c5f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "05e94484-ca38-4de8-8a92-a558f16f1c53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af061a4f-36bb-497a-b10b-aa13721f6297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a139bd4c-c72a-4b3f-ae62-ab1ec10c4e10"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ace3d30b-2d5e-40e8-a5e2-0070624c0c1e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6329a226-bcb3-492b-8f01-13cb0d3e5934",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "21de98fb-885f-4e65-8d73-a833011e575f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "460a4949-dd2f-47b7-b5f9-f6bf0ad9ae4e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c853f57-69ea-48f6-9f37-dfcc7cd81855",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c04df2b4-6dbd-4a37-8d06-fe87afb58a5d"
                    }
                  }
                ]
              },
              {
                "id": "1f65e3f9-7768-4a64-9201-86382799ba86",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d8ed8a1-2869-4941-8f6e-fb165f36a01b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3e75b266-82ac-4cf9-affd-ec5e2eee4c13"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07774a49-ad28-4039-9240-4c883fad7a6f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5215bf9-fd07-4500-9765-62e62cae89a4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fd948b58-3604-45bc-930b-a90f98e09970",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "98655f28-80cf-4937-8e5a-5817b9985261"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e0aebb33-3b38-496a-9fc8-2302f80e71dc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6b6d5918-ef37-485c-8ab3-1619c0e1721b"
            }
          }
        ]
      },
      {
        "id": "6b00dfea-3d02-45ff-8f9a-bdbdcb8f2a5c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "088bcef3-d4b9-42df-be79-c2b22ce7044b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "50686f1f-909f-46d2-8052-7f5f3f0faf79",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2d501c1c-b90a-49f5-a16b-e3a59daaa98f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd8aa7f-2aa3-4404-bc9f-ba3a22234a1c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3ea3f9a8-0bf0-4bfa-b77c-adda3da4e395"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff9f4ad-8029-4faa-a2c4-f2ad649f83ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "24ffb677-da6d-41f9-b929-c9e65ce4dcec"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f0748af-e900-4e6d-93ff-ed03728091b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7f77d97-63c5-4e74-be91-8a1176c2b1d4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ff6c957-636e-4d96-bbd6-f80825234007",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8984d3e-4efd-40d3-acf4-4ea039735141"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "34ac7cbe-9218-47d3-9407-cf14a6abc572",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "be09a792-24ec-499c-9a63-7b10f93a6c55"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "04483635-e611-45a8-8e54-5eb80075600a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "78d73827-4a42-472b-bc02-30faaf9d32cc"
            }
          }
        ]
      },
      {
        "id": "658384fd-8db7-4829-a9da-cc100dc72212",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "3c54b2e5-71b5-44a9-9ee0-b6c216936ac5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4ec5fc8a-0a94-4316-b5b2-67a96c79ecee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "66fcc355-24f0-4b53-9494-78ec2c115dd3",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "298b942b-6bd8-4e3e-920f-9b8293bfab01",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "919aee5f-8c49-4d85-a905-977e5c8ee9f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b96345-49d8-4c45-b07d-ccb687279173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3ebd2e7-7e7c-443a-9505-006e83539fe0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e96b7149-90a6-4bed-8707-a0ff3dd56a7f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dfe428b6-e3cf-4af3-bd52-013064fbcd9a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8fa411f6-56a3-44d4-994e-9e296cdded2e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae83836c-5ff7-45ee-9e37-b9c31f81ce9b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8dfc8937-5c8a-454a-b69d-16eea8e9017c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "45c686e5-6acf-4aa9-bbcb-2ec83e2b438d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "014618e3-cb49-4fbd-bf29-36766d106f6e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "35f79379-d29f-4dec-bf17-93449786a2e1"
            }
          }
        ]
      },
      {
        "id": "7f5685df-a71d-4cbb-a3f5-3e1d011a7029",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "852a83f0-92bc-48c2-98d7-1367c0422c66",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c65862b8-d5dc-4906-83e9-b3f93f362453",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "830b56f5-f5d5-44a5-a44a-b378c9c5f762",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e676dd19-c210-428c-9c5d-b274b1188db0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67c82657-e19e-4791-ad74-394e1b8c2417"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffbe5c1f-5056-4c8c-a6e9-2314cc46eb93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "536ed06c-d603-4e01-afe5-ac688a3d97cc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0bf9351f-3225-4ca0-a342-e5b22fa2c970",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b773e68-1563-4382-9128-ed27f2054bfb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "611df32e-3cd6-4602-82d4-6a9120406b57",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9989cea-36a4-4019-b53b-a23f34be91f3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e87ef2c-634d-4314-8d73-9c6cf704712b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5cf3915a-eb45-4abc-acdc-25614c03d0e6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a712d2fa-a37b-44dc-b610-0ae86c419510",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c7acdfa0-104a-4acb-8e3c-323dbda4d2dd"
            }
          }
        ]
      },
      {
        "id": "d13f50b6-ba46-434e-9632-4bd2ee2f9d2b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bd8f6edb-8c87-4fe8-8189-d3a8a80c4ba7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2a7c9091-004a-463c-a504-87d197e2bcc9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8f8b0e0a-091b-4d6d-a6da-b2eda671e29f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5e9a5b70-e18e-43b6-aeaf-076ad422e0ba",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "99a9808c-b1b5-404b-86cc-5d45aa31e2f9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 30.00793650793651,
      "responseMin": 7,
      "responseMax": 251,
      "responseSd": 23.808760569777384,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1719103273981,
      "completed": 1719103289740
    },
    "executions": [
      {
        "id": "efcf79a6-a983-4171-9b5c-71f0a1384326",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3dd348f5-aefe-4e3f-9ab6-a7bb297d3e95",
          "httpRequestId": "5bda8492-efc4-4efb-8db8-5f61cbf2dcf0"
        },
        "item": {
          "id": "efcf79a6-a983-4171-9b5c-71f0a1384326",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "2510d106-375e-4dad-8791-75c7162b4232",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 0
        }
      },
      {
        "id": "6af32418-a0b1-4713-b646-20e68c0972a2",
        "cursor": {
          "ref": "1aeefd1f-0dfb-48e4-8144-d75486b00ef2",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8b2390fa-dc7f-44ca-b737-afb1cd8e000a"
        },
        "item": {
          "id": "6af32418-a0b1-4713-b646-20e68c0972a2",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "796c1164-edde-4d01-819c-3a4316d25215",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "249b9e5d-6f33-4307-9a4f-ca15f974b32a",
        "cursor": {
          "ref": "56b61cbe-3b3e-4c52-a38b-0d184f9ee724",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b3c85c87-5239-480b-8860-9e96fcc90d5d"
        },
        "item": {
          "id": "249b9e5d-6f33-4307-9a4f-ca15f974b32a",
          "name": "did_json"
        },
        "response": {
          "id": "da870f8c-91a0-4ce8-8e17-75d98e25cd52",
          "status": "OK",
          "code": 200,
          "responseTime": 251,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72663e0c-5dc8-46f3-89b4-784be6b957ff",
        "cursor": {
          "ref": "83622b20-b065-4b40-bca5-e06194a758f8",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "043cac84-2832-48da-9b88-a77e3cce0812"
        },
        "item": {
          "id": "72663e0c-5dc8-46f3-89b4-784be6b957ff",
          "name": "did:invalid"
        },
        "response": {
          "id": "643962e0-02dd-4a9b-8ead-afd24edcfe6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72663e0c-5dc8-46f3-89b4-784be6b957ff",
        "cursor": {
          "ref": "83622b20-b065-4b40-bca5-e06194a758f8",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "043cac84-2832-48da-9b88-a77e3cce0812"
        },
        "item": {
          "id": "72663e0c-5dc8-46f3-89b4-784be6b957ff",
          "name": "did:invalid"
        },
        "response": {
          "id": "643962e0-02dd-4a9b-8ead-afd24edcfe6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ee61da-dc70-472e-ba20-c469295c2926",
        "cursor": {
          "ref": "717999f5-3659-40d8-a8f2-00430540f236",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "094b4da4-820c-4f09-85e6-6f0b276de38f"
        },
        "item": {
          "id": "f6ee61da-dc70-472e-ba20-c469295c2926",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9746d17f-b237-48f1-bd21-565d49de9c69",
          "status": "Not Found",
          "code": 404,
          "responseTime": 92,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e495f9-4c16-4947-ae54-62973d4a8ae1",
        "cursor": {
          "ref": "552c4f7c-b8de-4256-a602-8a67d9f1f321",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "6ed5f39d-2acc-4283-b782-6f53c48cd958"
        },
        "item": {
          "id": "89e495f9-4c16-4947-ae54-62973d4a8ae1",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b60a9155-43a2-46a4-912c-06d6af8c5c57",
          "status": "Not Found",
          "code": 404,
          "responseTime": 28,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905bc176-c076-459b-a67e-a86086ff14da",
        "cursor": {
          "ref": "fe81cfd7-f419-4cba-b6c4-6f313980a34a",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6e5ccea2-37f8-42c7-9e6b-b0e64a39c4c2"
        },
        "item": {
          "id": "905bc176-c076-459b-a67e-a86086ff14da",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "363cbc35-8975-4f85-9a6e-3e45a1ebd589",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1814dfa0-cd60-4f1e-9fe9-9d22d88bd403",
        "cursor": {
          "ref": "138d1dab-6ce8-4f86-8591-2513d98b9ecb",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "eb0e422b-fb35-4487-b3b0-d620f6c9ad1d"
        },
        "item": {
          "id": "1814dfa0-cd60-4f1e-9fe9-9d22d88bd403",
          "name": "identifiers"
        },
        "response": {
          "id": "55cdd050-94e2-49d4-b61c-680a969c7b49",
          "status": "OK",
          "code": 200,
          "responseTime": 241,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b13762f8-0d8f-41ab-bb6f-cf0406891c41",
        "cursor": {
          "ref": "f2adc988-a8a0-45c6-85c3-3cae42443da0",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2e5a03c5-9a86-4ffa-a33e-20ed78b5bc9a"
        },
        "item": {
          "id": "b13762f8-0d8f-41ab-bb6f-cf0406891c41",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "745f86b8-4588-4676-8765-c74c935236dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef4100e-b418-418c-9c19-ca098b1bbd55",
        "cursor": {
          "ref": "d9dd7762-55af-4f31-b5a7-6fab09a6898c",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "83d07273-7e01-44f8-bd51-225ace70187c"
        },
        "item": {
          "id": "8ef4100e-b418-418c-9c19-ca098b1bbd55",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "3b7b9132-c237-4ebf-a2cb-d1d6051e50e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "895624fb-1610-47d7-8161-0423d9781706",
        "cursor": {
          "ref": "12f614de-3bf7-435e-b836-7536065fb769",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8090663d-5135-473d-ba74-cbfd6469fc01"
        },
        "item": {
          "id": "895624fb-1610-47d7-8161-0423d9781706",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "85f573e9-fb77-4442-b3d9-06db24d9295d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9a47a4-d739-4cc1-8362-2d1a87a3144a",
        "cursor": {
          "ref": "b3fb7673-4cad-433b-a31a-cb472a95231e",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7fa64693-cf8d-44b0-b44d-a14053fb84d1"
        },
        "item": {
          "id": "0b9a47a4-d739-4cc1-8362-2d1a87a3144a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "cb5f8600-4a10-47ee-a685-39211c03df2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8df27d-1467-4a4b-ba17-8c5c18014921",
        "cursor": {
          "ref": "163676e8-880d-4b16-9e5f-f8b3727f3106",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "da3cbd4e-2a84-4424-b572-7d59d1b7934e"
        },
        "item": {
          "id": "af8df27d-1467-4a4b-ba17-8c5c18014921",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "bc15765b-0328-4c0d-b45c-a0c56d364b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a082780c-754d-4b80-827a-2c5d926ac389",
        "cursor": {
          "ref": "c4196b8f-f8a4-4cf9-9193-556a7e72ff38",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "142ce444-caa2-4450-ba55-fcf151a057b0"
        },
        "item": {
          "id": "a082780c-754d-4b80-827a-2c5d926ac389",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "5adaf1d1-ba55-4615-b052-fa736fdb589d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08759a95-f202-43a3-b908-11b6067ebf00",
        "cursor": {
          "ref": "db3efbb7-44ea-4917-903d-899d9768dd9a",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "52125b95-98e9-4d5b-8bc9-72ef13531f4e"
        },
        "item": {
          "id": "08759a95-f202-43a3-b908-11b6067ebf00",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6d118e39-3df3-47d6-bc32-e911950f9156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e55c7f9-1758-41f7-8c45-cf59906e3660",
        "cursor": {
          "ref": "93f25320-be45-4b6f-ab72-e9b83e5dcd06",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ed5fa1eb-ac20-499c-9d66-8009daac1256"
        },
        "item": {
          "id": "1e55c7f9-1758-41f7-8c45-cf59906e3660",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2e92374a-9d3c-43fe-b756-923ab59d9811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb83b9c-3a3b-4a1e-b7bd-a974f7e70dea",
        "cursor": {
          "ref": "7b23fc2b-6b0c-416d-8e2a-f5e3f4c1cfda",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ee430e10-6648-4d2b-a69c-3fc7bb36ba39"
        },
        "item": {
          "id": "0bb83b9c-3a3b-4a1e-b7bd-a974f7e70dea",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "346d60c3-e9cc-4de5-b01e-3e18cc658d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa31b37-301f-485f-bd6a-ddfa8e658dea",
        "cursor": {
          "ref": "312b3194-4836-4b62-9248-7692cc9ed20b",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "46097f2d-36b8-4426-a0d6-4e04e5f6d084"
        },
        "item": {
          "id": "afa31b37-301f-485f-bd6a-ddfa8e658dea",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ea83014e-b863-4e57-819c-ccccd94fcb85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79a088e-76b4-4d5c-94c2-4fd92b077976",
        "cursor": {
          "ref": "8a72247a-36a1-42ca-8ba9-de924f5a5ad8",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1ea2f0e5-e659-4554-9642-40672f137246"
        },
        "item": {
          "id": "d79a088e-76b4-4d5c-94c2-4fd92b077976",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "adafb0a3-1c43-4495-a602-986160143b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeeca4a7-aac4-4777-b3db-ecbfb810531f",
        "cursor": {
          "ref": "19003898-0cad-4b46-9dc4-44d0c3a29ac3",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e0e1af3d-6309-4db3-bcf2-0a7d81f799d3"
        },
        "item": {
          "id": "eeeca4a7-aac4-4777-b3db-ecbfb810531f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "8db97476-1f07-4e67-839e-0f36809ab90a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80c52cd-1e3e-4375-aef7-e6293db1c1ae",
        "cursor": {
          "ref": "cb738e8e-5298-4e66-8edd-7c00ae18005b",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "52755ccd-f37d-42e8-850a-a37e48552def"
        },
        "item": {
          "id": "f80c52cd-1e3e-4375-aef7-e6293db1c1ae",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a78874f0-9ce6-498f-aae2-131f3e754cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8817d52-ba10-4cdd-bfd9-f9198c2b97b0",
        "cursor": {
          "ref": "103bfe82-b005-4ef6-8161-6c5446f56fff",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "2cd794d7-b1dd-46d9-9f32-f166c339c545"
        },
        "item": {
          "id": "a8817d52-ba10-4cdd-bfd9-f9198c2b97b0",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "cddc1e68-9589-4a69-b0a8-5e52dcc4a9bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0cd4ba-a046-4624-acad-262c7881cc40",
        "cursor": {
          "ref": "c30b9070-6bef-4841-9a43-068320c6ea21",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c343ec19-7a07-4fb7-a371-5a43f207aad0"
        },
        "item": {
          "id": "df0cd4ba-a046-4624-acad-262c7881cc40",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "27aa8cf9-e0d8-4f8d-b810-332ab2722a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "479fddf9-70df-4d6f-be9f-d7d7c8d2a31b",
        "cursor": {
          "ref": "9af4ae8f-2543-4d0a-9627-6a6adea49ff4",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "240347d7-ed57-4291-8fbd-ed04e9bc1b3b"
        },
        "item": {
          "id": "479fddf9-70df-4d6f-be9f-d7d7c8d2a31b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "19cf09ae-9da1-497c-98ae-e8aed99a0548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f59279-177e-4ac6-958c-857167ca8b25",
        "cursor": {
          "ref": "9ec1b400-224a-4bef-b279-49a03de8fcae",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1fd96522-b7ca-4a1a-b909-bc92e4ff6512"
        },
        "item": {
          "id": "f0f59279-177e-4ac6-958c-857167ca8b25",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "36e0adb8-9e70-4166-905c-a28c99f4cd57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac06dde-441e-41fb-b390-3f4c2bcad578",
        "cursor": {
          "ref": "3d136fde-a2ac-4463-bc5f-ea576486713a",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "70096a4a-a453-4517-9b6f-5537bbdd48c0"
        },
        "item": {
          "id": "3ac06dde-441e-41fb-b390-3f4c2bcad578",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1af60cc8-95f7-4697-b629-b6fee5b6e15c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a18fbf4b-8335-4b24-b733-7658e3754b5f",
        "cursor": {
          "ref": "e17eb351-4922-458c-8fa5-9ee1f8fa58c6",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "439526a5-f30d-4cfd-915f-02a299ee1607"
        },
        "item": {
          "id": "a18fbf4b-8335-4b24-b733-7658e3754b5f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "cec27472-c708-4bd1-85a0-fd4022f5e998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d67ffa-bdaf-4175-bc09-4a61b04662cf",
        "cursor": {
          "ref": "6837e842-ad4a-47b7-b297-efa73ed278a0",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "082f1b72-fa02-4dce-b46a-94043d6c535b"
        },
        "item": {
          "id": "33d67ffa-bdaf-4175-bc09-4a61b04662cf",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "389b13ab-b314-4c01-a72c-5948046cda79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f06fca-ff8b-4be0-b975-496f9843d46e",
        "cursor": {
          "ref": "1847ff65-b210-44ec-bb50-02ecf41a5355",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5003ce30-0e3a-44e6-bf8d-316289cb3d99"
        },
        "item": {
          "id": "21f06fca-ff8b-4be0-b975-496f9843d46e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "5044bd4d-ac7c-4ddb-9799-1933edcc8728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58264df5-ec4d-49eb-bd35-5598e458a014",
        "cursor": {
          "ref": "8b454999-db2b-4253-a5b9-af9aa3f36a45",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "3effaa31-2070-45c3-925e-e8accb2b4193"
        },
        "item": {
          "id": "58264df5-ec4d-49eb-bd35-5598e458a014",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a7c3953c-b724-471a-b43d-6c7676b80563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf7f457-9cad-488c-b2e4-b46dfd059281",
        "cursor": {
          "ref": "06306352-8a88-48dc-b114-cd15b0cbe4c2",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "13c92632-baa4-443e-8fe1-90d512f93d98"
        },
        "item": {
          "id": "dcf7f457-9cad-488c-b2e4-b46dfd059281",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "36114f49-dfa8-4ee6-af5a-15fdbd90706e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3b8ecb-d333-4150-9278-3f16340eb55a",
        "cursor": {
          "ref": "56763274-153c-4946-ab53-efe49c186bf1",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f8c3bec5-43b6-413e-b00e-a683aee94213"
        },
        "item": {
          "id": "aa3b8ecb-d333-4150-9278-3f16340eb55a",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "8c69a034-dd6c-4a0a-bda3-787af48fd869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5014ad-13f3-4eaf-9ef4-1bb2f286cb83",
        "cursor": {
          "ref": "d74e3d59-ab96-4b9e-b260-716fa138a9c6",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "4f9394a9-83f7-40b2-9af3-1213d43d6d3c"
        },
        "item": {
          "id": "9c5014ad-13f3-4eaf-9ef4-1bb2f286cb83",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ae828b18-f216-4b3c-860c-0abe3549249a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807c721f-8d46-45a4-81b8-99f2a8907bcf",
        "cursor": {
          "ref": "2200350a-8337-46a7-9d9d-6d96555cfe60",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f96a0b93-adc4-4693-9f6d-05fda95b60e5"
        },
        "item": {
          "id": "807c721f-8d46-45a4-81b8-99f2a8907bcf",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "577b61f2-3443-4715-ab2c-c825107d644d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c50353-451c-4c8a-b91d-50cb896597bc",
        "cursor": {
          "ref": "e72f67c0-43e2-43f1-95a4-9046706cd38c",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "3d409545-88b4-4a00-b7ea-ed650b92f0d4"
        },
        "item": {
          "id": "c6c50353-451c-4c8a-b91d-50cb896597bc",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7f219f35-5815-4ad6-8b58-ec217213c1eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b54eb9b-e1d8-40bc-a9b0-984e3fbe2414",
        "cursor": {
          "ref": "3f0a8788-a701-45fd-9d2d-8c9d70476b57",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b929b801-6ded-4231-a12d-468be22d1f0e"
        },
        "item": {
          "id": "1b54eb9b-e1d8-40bc-a9b0-984e3fbe2414",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "bcf41420-8774-4dde-8501-78c0e562e512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feab6aff-8ad2-4514-8177-957bc43a4413",
        "cursor": {
          "ref": "ab2a86bd-3eb1-418d-a430-d780f6cdfa76",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1ade06f7-8472-45bf-b36e-add926a85504"
        },
        "item": {
          "id": "feab6aff-8ad2-4514-8177-957bc43a4413",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ca3be016-cc37-4208-a66c-0b9774872915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ff61f9-bea5-4c27-a1a6-b00f2a9cb366",
        "cursor": {
          "ref": "68a64527-bc42-41b9-a12f-c0df4e3ccd52",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b709bc58-c9ce-44dd-87a0-a84261048914"
        },
        "item": {
          "id": "61ff61f9-bea5-4c27-a1a6-b00f2a9cb366",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d05b1302-187b-4076-b589-13047235d056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48987aae-7acb-40c9-917c-bf90c17e1088",
        "cursor": {
          "ref": "66920b0a-362e-4f2a-97e5-f2df66e0278d",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "9831d4ff-f3d3-45e8-bf5b-6245a253eb3b"
        },
        "item": {
          "id": "48987aae-7acb-40c9-917c-bf90c17e1088",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d3cf9cd8-e999-4238-a3cb-2155d5d95300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa5c7dd-af50-4c28-a2cc-070ed39717ad",
        "cursor": {
          "ref": "a2db02be-e130-45db-8681-632656b7f033",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8f3ce861-d784-4fbb-b3af-62b7e4ff9fa2"
        },
        "item": {
          "id": "6aa5c7dd-af50-4c28-a2cc-070ed39717ad",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "0c708073-13d1-40df-8ca3-b0a6432ff7b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206da71a-13bc-43fb-b5a4-fc123990b9fd",
        "cursor": {
          "ref": "c9b2ae35-8219-4906-aaf4-61d5c6813d3f",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9e2334e0-8b5b-4192-bc7a-ab53cfd2a1f5"
        },
        "item": {
          "id": "206da71a-13bc-43fb-b5a4-fc123990b9fd",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "03f370a5-96f8-49bf-82a5-b5b7b8f638e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7362029-66ec-4ee1-af41-fa70ea143bef",
        "cursor": {
          "ref": "7057118e-346c-4136-b5fb-b29917b874bd",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "9b248473-d698-4f1b-b547-4d2973eb5bfe"
        },
        "item": {
          "id": "e7362029-66ec-4ee1-af41-fa70ea143bef",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "319ed6c0-b63b-4940-b6d5-15a28d766a12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc08255-9dc5-4aca-bf31-44b241248b51",
        "cursor": {
          "ref": "20c04a94-100a-435f-8ae7-7b1e35850c70",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "846bbfe9-cdd4-46f3-ad87-da943b0cda52"
        },
        "item": {
          "id": "8cc08255-9dc5-4aca-bf31-44b241248b51",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5a975d84-a61d-4d54-aa1b-38cb9b34a0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ebcb995-032f-4307-ac24-4268c1a804e3",
        "cursor": {
          "ref": "6640d231-dab7-4d4d-8b34-438346593ed0",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d42e91e9-8424-4ae4-9473-992d6d5aa1a1"
        },
        "item": {
          "id": "0ebcb995-032f-4307-ac24-4268c1a804e3",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "6f501396-3a34-4928-9b2d-e2698f9d48d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c9fabbe-7ce9-42dc-8bf6-285ed491deca",
        "cursor": {
          "ref": "0ed0d30d-bd70-4b19-a9d7-6e4b0734003e",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "fc81f396-fba4-48c2-86d0-396e58b659e8"
        },
        "item": {
          "id": "0c9fabbe-7ce9-42dc-8bf6-285ed491deca",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2e276f45-6bd1-4d72-bd75-a5b2a81a079d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09fc6a8a-fe14-45d9-b1e3-c6c70908c728",
        "cursor": {
          "ref": "c60d523e-a659-4be4-8bbf-291fe1586ad6",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "2cf02d9a-7c51-4e2a-a510-0eecd464c464"
        },
        "item": {
          "id": "09fc6a8a-fe14-45d9-b1e3-c6c70908c728",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "dda39738-4207-4592-b7f4-8999d11697c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fcb2edb-87b1-483b-b4a2-0a4c80dfa0ba",
        "cursor": {
          "ref": "37bce8a5-71c0-4d7d-b47a-4afe5e453581",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "cf306a09-dd1d-40d1-b024-98f015ef4d7c"
        },
        "item": {
          "id": "6fcb2edb-87b1-483b-b4a2-0a4c80dfa0ba",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "880f784e-8ca3-40cd-8684-642022c5dc61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b521054f-a4bb-4f9e-a86a-c75b82de0646",
        "cursor": {
          "ref": "b7a54574-b1b0-4c8e-b666-0524833d6c86",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "aabb5721-0357-408a-a424-fc6358bbd648"
        },
        "item": {
          "id": "b521054f-a4bb-4f9e-a86a-c75b82de0646",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "92b6c0a5-f4ff-4378-8569-ba01c0d62227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3266646a-9027-4974-ad0b-9aa1b66e2b78",
        "cursor": {
          "ref": "ded2e20d-a4ab-47b6-b778-25b0a52a298e",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0740649a-c6c9-401f-a581-b38e75041450"
        },
        "item": {
          "id": "3266646a-9027-4974-ad0b-9aa1b66e2b78",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "3f59df3e-62f3-47d9-b889-1a4053d212f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8914a33-cbda-4131-bd20-a34b35d5fbfe",
        "cursor": {
          "ref": "eaf5869a-55e2-4310-8b90-a81bfb925c4b",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a57d78d9-c58d-475a-a7d3-f0101ddb574d"
        },
        "item": {
          "id": "d8914a33-cbda-4131-bd20-a34b35d5fbfe",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "724e318a-b282-4e99-a8df-9ac7c28d073b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82762d91-a54b-409a-bc77-57a91145bed5",
        "cursor": {
          "ref": "f01bc253-a896-4110-9582-bc3ac117caae",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "16bee5e8-b951-469a-96bd-40ce1b0fef4b"
        },
        "item": {
          "id": "82762d91-a54b-409a-bc77-57a91145bed5",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f6469a70-47c1-49c2-9a9e-1cd557e6ecf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e39163-2def-44c4-bb3e-df258218d590",
        "cursor": {
          "ref": "7f6fcc70-c16f-4c57-b2d9-760d7e0c0791",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d53971aa-ea68-489f-9443-5c6500ce8f9d"
        },
        "item": {
          "id": "77e39163-2def-44c4-bb3e-df258218d590",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "995d54c5-57f4-4edc-a924-8d03493cb9c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660bdddd-ff2c-44c0-bb4d-203f91ba2e6a",
        "cursor": {
          "ref": "e0a5fa03-f041-48be-9227-02af668a6801",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "017023d8-c9e6-43bf-a85b-18342711a488"
        },
        "item": {
          "id": "660bdddd-ff2c-44c0-bb4d-203f91ba2e6a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d8a0c210-783d-4d29-8ac2-c05f131f822d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c352db5a-8b88-4afd-9505-f81b0aa818eb",
        "cursor": {
          "ref": "7e5bed01-876e-47c5-8cd8-81acca18b1ef",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "cdd5a35d-c693-451e-9d69-666978e4c568"
        },
        "item": {
          "id": "c352db5a-8b88-4afd-9505-f81b0aa818eb",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9ee10cc6-194c-45ed-9f7f-99095566f475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e9b761-a28c-471e-9107-d8f530b9894b",
        "cursor": {
          "ref": "843fde78-c89c-4e22-87d4-901c7c681a93",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "98e0e7ac-c94f-4587-aea4-d32795456af8"
        },
        "item": {
          "id": "08e9b761-a28c-471e-9107-d8f530b9894b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7b542201-1d51-4450-a123-3cd62727e887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678d2aa4-9e9d-4a65-aa55-735af419692a",
        "cursor": {
          "ref": "68677178-9161-4304-b25a-9c5553ca50b5",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "444b1cee-c027-4ea4-b4da-7e6e44efa978"
        },
        "item": {
          "id": "678d2aa4-9e9d-4a65-aa55-735af419692a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "9c5c5ff4-8f97-4d06-9fe9-21aa72d7aaa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d291e2-f0b3-471e-9282-7246203a7cba",
        "cursor": {
          "ref": "b7dcc663-0555-4367-b392-030bd7fb867a",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f241dc99-bf44-4ed5-8785-7c08da7e2736"
        },
        "item": {
          "id": "37d291e2-f0b3-471e-9282-7246203a7cba",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "bda7b3c4-6a95-4c6f-9f3f-225463526f51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56dbda3f-7139-4065-a6de-6994dc65ccb5",
        "cursor": {
          "ref": "127db128-e33f-44ca-b640-eec112a6cdb8",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d2656f5f-ed15-43c3-b8ed-17dadfffaf69"
        },
        "item": {
          "id": "56dbda3f-7139-4065-a6de-6994dc65ccb5",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "644ece0f-518d-46a5-9ebe-e814626889ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aca0614-a3d1-4016-a2e3-e1a735a10a4f",
        "cursor": {
          "ref": "09aac5b0-0da6-4406-8adf-07fe8f4d971b",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c0a42b1b-8054-420f-9441-8f67fc32e4c9"
        },
        "item": {
          "id": "0aca0614-a3d1-4016-a2e3-e1a735a10a4f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "82194e11-f30e-44a9-884a-ad1b46108b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcda3bbe-a46a-420d-a85b-39ef1d108b60",
        "cursor": {
          "ref": "2c446078-755c-47c1-9559-d4b49d4b4d59",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "6ae8d5e0-2f85-4a9c-b413-acc8deaffb49"
        },
        "item": {
          "id": "bcda3bbe-a46a-420d-a85b-39ef1d108b60",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4e793087-49c8-4138-b0d3-03730db0cc0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87826ea5-bc96-4c48-a98d-337436a17f15",
        "cursor": {
          "ref": "c5278357-3d62-45bc-beb1-0abacf57491e",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0d3d7d60-d029-4c54-acad-63c88c409ef0"
        },
        "item": {
          "id": "87826ea5-bc96-4c48-a98d-337436a17f15",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "49d3d01d-92f3-4913-ae37-28a6ba38b8a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0971f21d-6f60-4c2f-b2b1-d5b239e026f5",
        "cursor": {
          "ref": "e16ec49b-da63-483e-ba59-cd42e622a882",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f757c42c-3b39-46eb-8aa4-3f194a3cc69a"
        },
        "item": {
          "id": "0971f21d-6f60-4c2f-b2b1-d5b239e026f5",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "74519057-1344-452f-a9cc-0e8aca6a87f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6fd41c2-2ef9-41b6-8234-f4eb7773e528",
        "cursor": {
          "ref": "dc799980-f184-4fc9-9c55-6efe5e9035b8",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "312b21bb-1293-4641-9bac-28ad89225ed7"
        },
        "item": {
          "id": "a6fd41c2-2ef9-41b6-8234-f4eb7773e528",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9d1429f8-5b5e-4011-81e1-8274a04872c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa2c229-0a40-4a6f-95ba-11fe923a9bf4",
        "cursor": {
          "ref": "695c704f-3f87-435a-b6ae-6ae667d92ba7",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "812e72b9-32aa-4c3a-9f7a-ad08b6b2b1a6"
        },
        "item": {
          "id": "9fa2c229-0a40-4a6f-95ba-11fe923a9bf4",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a4ecc684-6e7f-4970-b733-d2e91603557c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04d5444-36c2-4079-a600-764a7c3f6c41",
        "cursor": {
          "ref": "f0b84f10-bc30-4e2a-ad99-c6ea037ece62",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "720b5cff-0a1c-40e2-bb3f-08a443bf2d4b"
        },
        "item": {
          "id": "e04d5444-36c2-4079-a600-764a7c3f6c41",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "627919be-fd88-4bf3-a156-44ba6c9946bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d8f45d-b168-45ee-b5e6-7e97861951c5",
        "cursor": {
          "ref": "dab15ce2-3345-4ab2-94f8-6525e8ca0160",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8cc67e9d-eac5-4d13-a436-0f26b48d7911"
        },
        "item": {
          "id": "c6d8f45d-b168-45ee-b5e6-7e97861951c5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c9db68a8-3b0d-4f97-8833-f14c3a1736bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50b955a-7b96-42da-946f-bc3c2ba7576e",
        "cursor": {
          "ref": "f588b05e-790d-4c10-8c60-967f48dcb097",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a394cded-6c82-4903-9269-c6ae5dec6368"
        },
        "item": {
          "id": "e50b955a-7b96-42da-946f-bc3c2ba7576e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "710f07a1-ab77-4076-b9f3-5db88a8aade4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac319cf2-3d32-4f0e-9e0f-844882bfcc55",
        "cursor": {
          "ref": "e6d9b613-9f11-4a72-b6e0-002db0de5522",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "63773c17-3ca8-4708-999d-d19e88c200f8"
        },
        "item": {
          "id": "ac319cf2-3d32-4f0e-9e0f-844882bfcc55",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "970b3f9b-c907-48b6-8bb9-85e7ec772dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff22537-dea0-4531-b386-7402de5c6787",
        "cursor": {
          "ref": "f43877fd-41dd-4db1-bac7-88595a8a900e",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e853b859-06c1-48b2-a243-e15cf3206c40"
        },
        "item": {
          "id": "5ff22537-dea0-4531-b386-7402de5c6787",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "0e464e5f-feb6-4d98-9955-61b3c4022327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec2a2f9-3a6a-4b6e-aa1d-0dbf33e70acc",
        "cursor": {
          "ref": "e7f90fd1-dc36-4cfc-b90d-cb1c8e92b9db",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "7b93dde4-a2c1-4f69-b7b1-d2873a07639b"
        },
        "item": {
          "id": "9ec2a2f9-3a6a-4b6e-aa1d-0dbf33e70acc",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "57730c9c-437e-457f-9ee2-f0ce7c02844e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d08146-1d81-4fe6-9a97-a02df75a2716",
        "cursor": {
          "ref": "ca221bdd-955a-4060-ae02-d820c4d2ead8",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "fa37cd9c-3afd-4846-a19e-c61d4b0cc340"
        },
        "item": {
          "id": "69d08146-1d81-4fe6-9a97-a02df75a2716",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3ab3c257-7b79-4f31-a52d-3551b78f89f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b83cb9a8-68ab-4c4d-8331-0207d799f9f5",
        "cursor": {
          "ref": "51a00e0e-6fb1-44b8-9e58-1a5ffed35fc0",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "527eee96-703d-4716-8e0e-97ef7549dfe2"
        },
        "item": {
          "id": "b83cb9a8-68ab-4c4d-8331-0207d799f9f5",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f51c5566-11b6-47ee-b608-ff424376e31b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ea7c00-4137-4f1d-bd7c-81368e3b3586",
        "cursor": {
          "ref": "2944d66d-42ef-4ace-a980-4487fe57ca9b",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f216466d-2028-41a1-acb3-b3e2c8919b39"
        },
        "item": {
          "id": "96ea7c00-4137-4f1d-bd7c-81368e3b3586",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a454099f-fd20-4e5d-9412-a6c0f377ecc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d9e78eb-127b-4358-80a1-7a2c2be896f6",
        "cursor": {
          "ref": "3b53f0e6-f9ba-48bb-b88b-34cb3817cd4d",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f7b9d32a-770e-4252-8066-b6a3546f5e50"
        },
        "item": {
          "id": "7d9e78eb-127b-4358-80a1-7a2c2be896f6",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6b12e1b4-a82a-490b-9908-48ee8314951a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ffff878-9b77-412e-8f0d-31a16e79d1f2",
        "cursor": {
          "ref": "a848a6ba-0fbc-48f4-80a1-bcc6dba9fe26",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "fabcc415-9f0b-4938-bc6d-79ed6a065e67"
        },
        "item": {
          "id": "7ffff878-9b77-412e-8f0d-31a16e79d1f2",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0006aea5-62d4-49cf-8338-76bb96904de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311badcc-65ff-497a-bb01-fc592a78e192",
        "cursor": {
          "ref": "6448e3ed-176c-4c35-9953-bd081a37b5a1",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1599f37d-8926-4ed9-b2a1-6a4d2a992f34"
        },
        "item": {
          "id": "311badcc-65ff-497a-bb01-fc592a78e192",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e4861b26-5606-4837-a038-719058ad6739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d86c8655-1ea7-4371-b97e-68e470a229b7",
        "cursor": {
          "ref": "0caca42c-7acb-4586-9412-46e38aa82f03",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "4eead87c-136e-43b5-9a88-aec5932e67be"
        },
        "item": {
          "id": "d86c8655-1ea7-4371-b97e-68e470a229b7",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "bb06a1e3-b20d-4e1d-b887-7b885b2ea26a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f14539f-afc5-42e9-b0dd-428aa3d95352",
        "cursor": {
          "ref": "687c8211-0eea-4c6b-815d-8718b03f08b2",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c4197a0b-5a82-4e9d-ad8a-b096616daf2a"
        },
        "item": {
          "id": "2f14539f-afc5-42e9-b0dd-428aa3d95352",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "70924d61-6c2d-4e43-9ab6-457ecab23d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edbd616b-1a1e-4181-937d-82337e5844c3",
        "cursor": {
          "ref": "c000d714-da4a-4ac7-bf94-bc20f6bd576c",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c3574165-fbe7-43c2-a652-bed5964d8672"
        },
        "item": {
          "id": "edbd616b-1a1e-4181-937d-82337e5844c3",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "537f7f4d-585e-41e3-87d7-41b2ab59e47a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42abb8b0-c9a9-4276-94c8-140fdb45c82b",
        "cursor": {
          "ref": "2d37d951-cef8-4e11-a89d-7053f813a0b8",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ea63f64b-80da-4a7e-867d-ac42d0fdec57"
        },
        "item": {
          "id": "42abb8b0-c9a9-4276-94c8-140fdb45c82b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ade70806-be6d-4d30-8161-0b867df5428d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b7e8fa-5ea9-4217-9ace-17d34949eb7e",
        "cursor": {
          "ref": "a75e1f96-64e2-49ba-a1d4-f78a97a69f6e",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d8ea42ee-5cba-4523-af88-54f14db5b36d"
        },
        "item": {
          "id": "10b7e8fa-5ea9-4217-9ace-17d34949eb7e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "8e703bcc-cffc-400e-a570-4bc93b1ddcc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3042699b-bb5e-4056-ae94-ce24202509d8",
        "cursor": {
          "ref": "0522d84c-d7ab-4500-bf55-b08b5f059ab6",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "669fcd92-f2c1-48b3-a946-6af44a85d3ce"
        },
        "item": {
          "id": "3042699b-bb5e-4056-ae94-ce24202509d8",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ecfdc7b5-f889-42a5-b3e1-abd054cf2669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c1095d6-ec66-4079-a6dc-0d02d8557d78",
        "cursor": {
          "ref": "0cc58b10-95c0-4c4a-81e2-e4c63dfc3eac",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c451c10b-1b44-43ae-a0e3-7762e5a10222"
        },
        "item": {
          "id": "8c1095d6-ec66-4079-a6dc-0d02d8557d78",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "4bf0c37d-ec21-4ba9-ba28-669af18125e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12686c3e-eea5-4328-8828-4530d90affd9",
        "cursor": {
          "ref": "a21efacd-d34b-45c6-8155-65b6a45e2a6f",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "fb2afee1-9655-497f-8afb-4468dacd562d"
        },
        "item": {
          "id": "12686c3e-eea5-4328-8828-4530d90affd9",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c1c7dc5f-3642-4f26-8c12-3f8c5a9c925e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be317e9-0b46-41a5-87c8-d84927f1ddf0",
        "cursor": {
          "ref": "782bc00f-7e49-48bf-90ce-77d6c8f78e0c",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "38afe490-8345-429a-934c-ec5c84b5299f"
        },
        "item": {
          "id": "9be317e9-0b46-41a5-87c8-d84927f1ddf0",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "28a1bc26-fe65-47b5-b667-456533bb5f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1afb4448-8d11-4f31-98fb-f3e7d09f51d9",
        "cursor": {
          "ref": "85361028-2a2e-4b77-9730-b8781a2d8af3",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a1790938-f0b0-423a-a424-ce16be7476e9"
        },
        "item": {
          "id": "1afb4448-8d11-4f31-98fb-f3e7d09f51d9",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3b2fee41-46fe-4cd5-b89a-a1b2c05c5b11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb55c5a-ae6c-4b22-8c23-e37c2642729d",
        "cursor": {
          "ref": "ac42546d-116f-4265-98b2-2e996c964c40",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b1ee645f-575f-4c50-9c54-0a624ed925d0"
        },
        "item": {
          "id": "edb55c5a-ae6c-4b22-8c23-e37c2642729d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "1ca39c97-ebd8-418c-8b95-5554d4ea49b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c6dcd7-2678-494c-9c9a-b90c057c8be6",
        "cursor": {
          "ref": "dd099e27-9aa1-4484-a175-7aab979db31b",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6d554510-31a6-4ebb-aff9-08fb788e167f"
        },
        "item": {
          "id": "08c6dcd7-2678-494c-9c9a-b90c057c8be6",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "049ea124-fc67-451f-8a4c-8eab5bdb34a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d26122bc-55a8-4a3a-bafe-4821ecc29285",
        "cursor": {
          "ref": "925f2477-2b99-46d4-9b15-c7a79434e7f5",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e225a5e2-edcb-4d8d-8b8a-eaab9aa572e3"
        },
        "item": {
          "id": "d26122bc-55a8-4a3a-bafe-4821ecc29285",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d72ae0ce-34f0-4583-bbc9-dcea5300fb91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5def1c-af92-4db3-9cd5-561bb86a7974",
        "cursor": {
          "ref": "e1d92cee-2ef6-4ffb-8d8b-661474001b88",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b6287108-2c2d-41ff-9ff2-eca7cd170826"
        },
        "item": {
          "id": "fc5def1c-af92-4db3-9cd5-561bb86a7974",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3d35e5a6-5d0e-4e9e-a287-5ff9e8c8413f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a7aafe7-fc5f-4514-ad02-5e39d772993b",
        "cursor": {
          "ref": "9e056a81-5a19-4653-b153-47a53e4864d2",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "9e542ac6-7f02-4fbb-b23d-5e2fbdf133a5"
        },
        "item": {
          "id": "5a7aafe7-fc5f-4514-ad02-5e39d772993b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "76bb44fd-3114-430f-815c-09b8dd8a0a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c0a2255-fc47-4ea0-8d07-09d52ca05e0e",
        "cursor": {
          "ref": "75bdaf1a-4059-449f-aa14-9afab0d01bbc",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "affaa2bc-3dc1-4ffc-8762-e79d03d8acb3"
        },
        "item": {
          "id": "0c0a2255-fc47-4ea0-8d07-09d52ca05e0e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8496c424-b8e6-45d8-a33a-8387c2a09e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d710a9ba-3609-4133-aa8f-7c584c66c7b7",
        "cursor": {
          "ref": "e30fe9b6-b931-40ce-9f77-0927e20f5794",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "6e167c70-8b6c-4a88-8c71-ee955b703d93"
        },
        "item": {
          "id": "d710a9ba-3609-4133-aa8f-7c584c66c7b7",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "8589b333-c3ce-4c22-a20b-8cd6bd58341f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed3b3a7-3876-4169-8968-19037bc226d3",
        "cursor": {
          "ref": "04fa4be6-82e3-4692-ae38-4dda92d74531",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e047d501-2b1d-4e3c-820e-77287b796910"
        },
        "item": {
          "id": "1ed3b3a7-3876-4169-8968-19037bc226d3",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f1513e93-4018-4447-8827-7e7104ba9967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7867fb2-dbd1-4996-b7bc-328d9a2e1b0a",
        "cursor": {
          "ref": "07e127fc-0096-4ad5-93a6-9c06d9e64025",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "fb12e585-4b5a-4c70-a3b5-7b2d8a6ffcc1"
        },
        "item": {
          "id": "c7867fb2-dbd1-4996-b7bc-328d9a2e1b0a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "38e817b7-3dae-4b67-9bb7-b74f9b5e367d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "750f6d69-ea60-4907-ad36-1f29b7969082",
        "cursor": {
          "ref": "a9b2b593-9cea-44de-9a17-934be38e2006",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "9dc8a0ab-322d-4361-b97a-00d39de40a68"
        },
        "item": {
          "id": "750f6d69-ea60-4907-ad36-1f29b7969082",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "7d2a06b8-5054-42e0-bce9-f1bc1f4f06f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "198bf73b-5c81-4ae8-8cb5-df85ed2a9ad5",
        "cursor": {
          "ref": "6d6a1ed0-293c-4386-8085-e2255051e342",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d65b7199-f625-4078-8ee9-a0ad3f840dc2"
        },
        "item": {
          "id": "198bf73b-5c81-4ae8-8cb5-df85ed2a9ad5",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "efd876e7-f387-4c4d-85de-988b5f6017c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb502291-e7f9-4b15-89fe-6f323d2d5697",
        "cursor": {
          "ref": "19f68a84-9789-41fc-a938-d8fe1a040705",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "92872321-c77e-47f3-942a-ef080281620f"
        },
        "item": {
          "id": "cb502291-e7f9-4b15-89fe-6f323d2d5697",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3afc3588-fbb0-4c51-95f5-2ebb09d7db7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18af4164-b787-493f-8076-df0e391a4292",
        "cursor": {
          "ref": "d645c1bc-ecc4-4bbe-8838-66ddb691bc9c",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "890e5574-84a0-48a3-a6b0-be1b087ff36b"
        },
        "item": {
          "id": "18af4164-b787-493f-8076-df0e391a4292",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e5820ad7-8d2d-40e6-9cf8-1e3aa60c3ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e94d68-e036-4851-b61c-ba09ab7e9151",
        "cursor": {
          "ref": "e83fad0e-6f53-4e7a-9786-682910eff5a9",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "63eb8889-e85f-48a0-ba4a-0253f3201f93"
        },
        "item": {
          "id": "03e94d68-e036-4851-b61c-ba09ab7e9151",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "85defc00-766a-48f6-bcd5-c4dfb6d953e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74953533-2ea8-4111-a03c-7b25080355e0",
        "cursor": {
          "ref": "11707ca2-3f06-413c-a64e-5a01318cea97",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "0a7ee54e-6fa1-4507-968c-f76a507d3ea0"
        },
        "item": {
          "id": "74953533-2ea8-4111-a03c-7b25080355e0",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5eaf585c-2093-4fca-9241-17e12b14a4df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ce99f6-d6b0-4f6f-8db6-d05e93e147ec",
        "cursor": {
          "ref": "5335c976-0985-4273-980c-9599d3486e46",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "6380f324-bcf4-4705-9cc6-5c9be036499c"
        },
        "item": {
          "id": "a8ce99f6-d6b0-4f6f-8db6-d05e93e147ec",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "e1ec19a4-bf2c-49fe-bbb7-3cfd11221f4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "45fc7589-3649-480f-b854-c1539c5b0186",
        "cursor": {
          "ref": "17bce084-cdd0-4721-94d6-adc6e62648f9",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b6a15dd4-694f-4297-9ebc-9a05c37f4992"
        },
        "item": {
          "id": "45fc7589-3649-480f-b854-c1539c5b0186",
          "name": "credentials_issue"
        },
        "response": {
          "id": "75e0b17e-2c33-4972-978c-8acb932eeb89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "9ef1c2b3-86fe-486b-b25c-669be26458d8",
        "cursor": {
          "ref": "09c9d61d-20c9-4ee9-a88d-0b9f894151ed",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ea8e9a88-495a-4bc4-bea6-145750b8f0ad"
        },
        "item": {
          "id": "9ef1c2b3-86fe-486b-b25c-669be26458d8",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "13f33734-f207-48c0-bb00-ff7d9da70d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "097c11a1-cbd5-49e2-b0f4-f8d668366ca6",
        "cursor": {
          "ref": "08c9796b-42d5-47eb-a81d-f4816709a75b",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f8fe5529-ad9e-4f44-b3a9-ada7af073d01"
        },
        "item": {
          "id": "097c11a1-cbd5-49e2-b0f4-f8d668366ca6",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "12cc922b-3a69-4cf8-b26e-452732a6c17f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "a358c3d8-58c2-4a48-ab07-9fc3766b2ae2",
        "cursor": {
          "ref": "149da4e8-21c5-4fcd-9228-2df27b1aae8c",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "de5fe980-659d-4739-9500-cfb99d7f70fb"
        },
        "item": {
          "id": "a358c3d8-58c2-4a48-ab07-9fc3766b2ae2",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "351adc8c-2aa9-46c4-87b9-23369ce5ad65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "f7dbde49-5665-483d-b7c4-4b1595f8eb11",
        "cursor": {
          "ref": "c795215c-450f-4f86-b92e-1da1d2d75e40",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "41f6b6b1-f793-4491-97e3-8fd700027a18"
        },
        "item": {
          "id": "f7dbde49-5665-483d-b7c4-4b1595f8eb11",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9375828d-f5a6-469e-b2e5-61ea5ec143db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "6d9f697e-1d76-497c-ae7d-55d936382569",
        "cursor": {
          "ref": "dc205fa3-bd9e-4003-9f11-938fde5b2f66",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "254c5d9a-f2f3-45a7-853a-a1d15a36ce69"
        },
        "item": {
          "id": "6d9f697e-1d76-497c-ae7d-55d936382569",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "bd3f9d3c-9b19-454c-8c99-a73bdc8f0b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "c22b2490-9149-41b9-b700-c47ecab4c5a1",
        "cursor": {
          "ref": "e8764835-1db9-4ffb-a484-01b73735aa5b",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e7824cf3-69ad-4940-9502-00b78ccbee93"
        },
        "item": {
          "id": "c22b2490-9149-41b9-b700-c47ecab4c5a1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "656b8dca-db7a-47b4-aa67-d6e851a1eebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a104e228-4603-46cd-a464-ef7bddb0e81a",
        "cursor": {
          "ref": "8948d3fb-b461-4b0d-a716-09034e44dbe2",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b380e9cc-8dd0-4baf-be80-2483f1c52bb0"
        },
        "item": {
          "id": "a104e228-4603-46cd-a464-ef7bddb0e81a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8af7890f-df9d-4480-ae06-01969f9af41c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f574b16e-2ed5-4158-bfe8-82f558579b11",
        "cursor": {
          "ref": "21a7608f-eded-4155-be2e-e28e1ef26b4c",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6abecf5c-7128-4a49-b1c7-545a2b6626c0"
        },
        "item": {
          "id": "f574b16e-2ed5-4158-bfe8-82f558579b11",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "13e4ccca-8d33-4721-a8d3-ef7f14f42b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed48b495-ffdd-40aa-9371-7d9e204124a4",
        "cursor": {
          "ref": "94fe8bb6-838a-433a-96b8-8de925c33ba5",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a12f8ae3-ab13-415b-84d2-b513ae87ed94"
        },
        "item": {
          "id": "ed48b495-ffdd-40aa-9371-7d9e204124a4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2f42430b-b9d5-490e-b848-0aed14a88f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5dd2f29-1c44-4774-8900-1ae22946285d",
        "cursor": {
          "ref": "388812c9-ccab-48ea-a89f-45cb50c0816f",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6df351bc-cf4c-43d2-83fc-cab14a034d6f"
        },
        "item": {
          "id": "b5dd2f29-1c44-4774-8900-1ae22946285d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "40b6e750-0e85-4edb-bbb6-7da545667ddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1594c0d3-bfce-4ed6-ae7f-55f33baac483",
        "cursor": {
          "ref": "ddb41282-01e0-4cad-a926-b44087f4b631",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f6d18350-345f-47b5-93e2-c55a331df44f"
        },
        "item": {
          "id": "1594c0d3-bfce-4ed6-ae7f-55f33baac483",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "296a6f07-6803-4484-8e04-6cd5af2b300f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "282aef2c-ae44-42c0-b3e1-eff08e9099e0",
        "cursor": {
          "ref": "402bb56c-2559-4705-a438-4bd5b1127d5d",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9636eea4-0e52-49cb-b9a8-96325586b423"
        },
        "item": {
          "id": "282aef2c-ae44-42c0-b3e1-eff08e9099e0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1a2f7b2c-a37c-4b72-8df6-7f78285f6210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8df8977-5739-4b3b-baef-462d0f2905c7",
        "cursor": {
          "ref": "5b4e32cc-5e90-4ffe-b42c-e473eb9c3a41",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "5d9189ea-976e-48b9-9e04-0a4846b8c5d2"
        },
        "item": {
          "id": "f8df8977-5739-4b3b-baef-462d0f2905c7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "20257fa2-528a-446d-bee2-ef3ed0ad9d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62103ba9-f705-428b-9d18-71f6cc7b6903",
        "cursor": {
          "ref": "a013f154-8b67-4a3c-93fb-f1090f9eb889",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b113ff3f-fbe7-4038-b721-7c8e79d47214"
        },
        "item": {
          "id": "62103ba9-f705-428b-9d18-71f6cc7b6903",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7469426e-73b3-4df0-be00-86e74f92875b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d9ee63-f848-4ef6-903d-e91c3989f54a",
        "cursor": {
          "ref": "8cd91dbf-2d74-45d1-b479-38cc232f2961",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "71bf09a2-1340-4ffb-92a9-c71e9de355f7"
        },
        "item": {
          "id": "f7d9ee63-f848-4ef6-903d-e91c3989f54a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7ccc00e6-0c5a-4bd1-ab35-be425792e1f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f54938-017d-4189-bf8a-c445f28cf45f",
        "cursor": {
          "ref": "c572db24-ab64-40ba-a6bf-a7a3b2e70e5f",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c0f9196b-0352-4c18-a7a5-f3b422742788"
        },
        "item": {
          "id": "15f54938-017d-4189-bf8a-c445f28cf45f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4f07d4b7-bb6d-4dcc-b8b9-e7b8579534f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55d9e41-b85b-4639-98a8-d1b6e85fcf8c",
        "cursor": {
          "ref": "e93df614-079b-4f7a-8e98-d450d75be307",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "6821a93a-d2aa-4d6d-913e-65a309c7100a"
        },
        "item": {
          "id": "c55d9e41-b85b-4639-98a8-d1b6e85fcf8c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e8ba73ed-e0d6-48b6-9212-acba9a60f2d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c113bf-3a98-4654-8710-79c26060796d",
        "cursor": {
          "ref": "63ab353f-4bb7-47aa-98ae-c4bf29bc377a",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "bcf758fe-fa65-4b89-9ed9-c0e4cdf8c2ae"
        },
        "item": {
          "id": "78c113bf-3a98-4654-8710-79c26060796d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4ef9fafa-18c4-45c6-b5a4-285fcffc155b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa316415-486c-40d3-b039-ba58bcb8fdf9",
        "cursor": {
          "ref": "b6ec2602-dc99-4202-9e38-460942bd12de",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "133c6ecc-9779-4a40-95ea-d538b835a325"
        },
        "item": {
          "id": "fa316415-486c-40d3-b039-ba58bcb8fdf9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6d532f0e-67fa-4f6e-9385-fa37e3f94dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb260e44-6aca-4557-9f23-572f02898df7",
        "cursor": {
          "ref": "cfbc1770-28af-48ea-9049-711528719197",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "dfcac4c1-ef9e-4972-92c3-20cb2655c931"
        },
        "item": {
          "id": "fb260e44-6aca-4557-9f23-572f02898df7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "204908d0-8d46-4aee-9595-5c1bc6480e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a11c2d09-effd-478c-b8a8-12d522f02db3",
        "cursor": {
          "ref": "8790229e-6d62-469c-acb4-82c138419ca0",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "962c5570-bb5a-4e82-89c7-3fb6fd076962"
        },
        "item": {
          "id": "a11c2d09-effd-478c-b8a8-12d522f02db3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5ae72551-01da-4648-89e7-dc81e4a86f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29bf8500-fd22-4233-b925-0ae7c161cb77",
        "cursor": {
          "ref": "1d403ee2-1811-48d3-afe2-abb3f25779d0",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "68c313dc-1dc4-4979-9c66-084df6d44291"
        },
        "item": {
          "id": "29bf8500-fd22-4233-b925-0ae7c161cb77",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "109ffb9f-2c0a-48a8-b0d7-cec65a1497b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82009342-044d-4b1b-8c2c-85a6117c638a",
        "cursor": {
          "ref": "72cba75b-f4a4-4260-bd70-15c22eb0db7a",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b5896ce7-6efc-46e1-b76a-2066c81b94ad"
        },
        "item": {
          "id": "82009342-044d-4b1b-8c2c-85a6117c638a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0d1aa96a-589f-4e1c-bc70-372a0d345000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659d2f92-945a-4844-97bf-25bcd8f1c5df",
        "cursor": {
          "ref": "6aea08a8-d388-4b34-be90-75978b39d255",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0b27132a-3e9f-4c4d-9f77-56a7b8fbfa74"
        },
        "item": {
          "id": "659d2f92-945a-4844-97bf-25bcd8f1c5df",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "11343ada-fcb0-43eb-847a-d98fa4574f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e9326a5-f68e-4d62-bf7e-65dff37f6ca7",
        "cursor": {
          "ref": "3e367baa-0978-4067-bdfd-bfd56ee91199",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f7461499-28ab-4f07-9dd1-a8b0c4965151"
        },
        "item": {
          "id": "1e9326a5-f68e-4d62-bf7e-65dff37f6ca7",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ef78930b-6523-4358-a4a5-8e65a7542856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e802f507-794d-47d5-b594-acbfcf572544",
        "cursor": {
          "ref": "d30dac23-a499-42c8-97db-03421856650b",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "93ece05c-becc-4e49-803c-141e693ef829"
        },
        "item": {
          "id": "e802f507-794d-47d5-b594-acbfcf572544",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b9257780-0116-48dc-a7cc-403076fc1ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e998c8b-e887-4e2b-8f0f-d906793e1cc8",
        "cursor": {
          "ref": "e5156632-f5a0-483d-8e0e-63129a3d61c5",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c28bed6f-7362-465d-941c-7f2cfc9655de"
        },
        "item": {
          "id": "3e998c8b-e887-4e2b-8f0f-d906793e1cc8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2671f224-022b-4aa9-82bd-ba054ea0f6fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2bed81c-6b23-4874-841f-e7e8c13c7b70",
        "cursor": {
          "ref": "97d0fc74-b410-4d39-b2b6-b285912fa8a4",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e1e24d14-ee5b-4e9b-98b6-9ba3728e5de8"
        },
        "item": {
          "id": "d2bed81c-6b23-4874-841f-e7e8c13c7b70",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d1c09a73-14b4-499a-acd1-983a2f3202b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ddf65e-927b-47ee-9511-da3867e3d1df",
        "cursor": {
          "ref": "edc63ef2-9d4e-49f6-a9a3-673d9ab53b4c",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1edeaa23-7a92-4e87-a54e-1b9430b02371"
        },
        "item": {
          "id": "b9ddf65e-927b-47ee-9511-da3867e3d1df",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "bcf3b51b-c875-4c33-b143-7c2f19911168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad830aaa-9f4d-4442-a8f9-8a3ed18c2ae1",
        "cursor": {
          "ref": "a59ce62c-def7-4c99-b4ba-497e46cbce60",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a0b58213-ea90-49b6-8c7a-aec24e160b65"
        },
        "item": {
          "id": "ad830aaa-9f4d-4442-a8f9-8a3ed18c2ae1",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "37110e5c-3f45-43f5-87ef-54f6802e6eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd43a318-3ec2-4d40-9219-fa9bfd0e7467",
        "cursor": {
          "ref": "afb1fef4-8d86-470c-b8b0-1beeea9a6a59",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "73e781e1-f8a4-442e-9771-de38f0d4dd8b"
        },
        "item": {
          "id": "fd43a318-3ec2-4d40-9219-fa9bfd0e7467",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "31533406-238e-48ad-bce6-9285fcfcf63c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6bb49a1-1575-4ace-bbad-8f7db71bd895",
        "cursor": {
          "ref": "78872f6d-a5b7-4258-957a-4a80ec770da4",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "7b0db665-d182-4c11-a32e-b078a50bcc0d"
        },
        "item": {
          "id": "e6bb49a1-1575-4ace-bbad-8f7db71bd895",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "df9b5e9f-6b13-4a75-adce-cf260b68e555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e593b5a4-0581-4b13-8aee-4002fc499273",
        "cursor": {
          "ref": "79c25998-10c6-4090-8aea-e830eebac14f",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "47f3e677-4686-4e4a-be3e-fcb1c5920df1"
        },
        "item": {
          "id": "e593b5a4-0581-4b13-8aee-4002fc499273",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f1c84326-5b4e-4565-a522-c34f4772e094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e5b9cd-6e98-47bb-b273-e7ebdfe70471",
        "cursor": {
          "ref": "5272bb8b-7801-4a67-8575-e034175e0e7b",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5f023f23-e2e0-495b-a7a1-cb3819858787"
        },
        "item": {
          "id": "b5e5b9cd-6e98-47bb-b273-e7ebdfe70471",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0b4cbedf-716a-4468-8a43-c5c2a47c21e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8bc347-a9a4-4f58-b808-2ccb434d0339",
        "cursor": {
          "ref": "933dab13-8c4d-44c7-b694-c923c22ec161",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "7d4fe101-7af4-4480-b847-4ae099e09e82"
        },
        "item": {
          "id": "4c8bc347-a9a4-4f58-b808-2ccb434d0339",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d4ce19f5-52c4-4522-8e06-2b3ce162c4f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c4e17c-2a2c-41e9-8042-9a15f8385da6",
        "cursor": {
          "ref": "28be20aa-7120-4202-b1db-7d690a14fe14",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "65407bb1-953c-4a1a-b726-e469f5a67bb4"
        },
        "item": {
          "id": "72c4e17c-2a2c-41e9-8042-9a15f8385da6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1b3528df-59f8-4a1a-9903-4e70c0fff52c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2000313-c6da-4c74-8cf6-77d2c5ab0bff",
        "cursor": {
          "ref": "0de419a5-8dab-4063-88a0-12771f471a60",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "dc90427c-2597-4588-8868-be4b2c8d22dc"
        },
        "item": {
          "id": "d2000313-c6da-4c74-8cf6-77d2c5ab0bff",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "83f5e235-2a4e-45e9-bef6-61c82bbbb81c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e139884d-c001-44d3-b418-dc0ff07cb4db",
        "cursor": {
          "ref": "6f41bea2-7a19-4202-8a69-f8003e4835f1",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3cf37338-3294-49eb-8f08-0d94bfd9e366"
        },
        "item": {
          "id": "e139884d-c001-44d3-b418-dc0ff07cb4db",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d71ef41d-2d87-4bfe-b1ca-1957443f890a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629f4541-776a-4ddf-a401-8df35fe169a1",
        "cursor": {
          "ref": "12dbe668-da04-458c-9ed9-477cf1cacb99",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "907f69e3-206b-4856-b686-b847b5ab6721"
        },
        "item": {
          "id": "629f4541-776a-4ddf-a401-8df35fe169a1",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "2f9a56cc-75a8-4755-b42b-a62d120f5471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe48e71-c223-4312-91e2-9af5cbe89da8",
        "cursor": {
          "ref": "ff0f7d1e-399b-4e98-ba12-c7d87fcc8e37",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9e265c04-3a17-407e-a941-8b09d882fa10"
        },
        "item": {
          "id": "9fe48e71-c223-4312-91e2-9af5cbe89da8",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d8207e8b-bc34-461d-a7e2-b140f3ae2c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3b7fa70-c726-46a1-9dcb-579fe6db1bea",
        "cursor": {
          "ref": "04ba1366-6fbf-4630-ac12-7099771112c1",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "fa4f7cb2-cf16-4446-9d7b-1e54fd19b192"
        },
        "item": {
          "id": "a3b7fa70-c726-46a1-9dcb-579fe6db1bea",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "bc9e456c-f337-46e0-9c7c-6ab4dd6be030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70dc5823-d1a6-4d74-b79a-0c59f0657ea8",
        "cursor": {
          "ref": "e1d76cf7-fea7-444c-b4ce-8b4b4983b3cb",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "88b39202-397f-444a-9ac7-dd5ffa159434"
        },
        "item": {
          "id": "70dc5823-d1a6-4d74-b79a-0c59f0657ea8",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "495580f3-5a86-45be-8a6a-55a548d811e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a90b3ca9-cc6f-4c27-af9c-c4f751d7c965",
        "cursor": {
          "ref": "0387f53d-5179-4cb8-a906-0e75ff9f2533",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d6af67f0-48bf-4f5f-a682-1a9e61a5a65d"
        },
        "item": {
          "id": "a90b3ca9-cc6f-4c27-af9c-c4f751d7c965",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "721d4672-637f-4aae-a6d4-49065b7e69a8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ced3ce9-e5b2-4cd7-a0b6-9e3b95c99a97",
        "cursor": {
          "ref": "620d2e6b-b49c-468e-99b9-68c19e7a1718",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f809eba9-c534-4bab-b0de-433a799759ca"
        },
        "item": {
          "id": "8ced3ce9-e5b2-4cd7-a0b6-9e3b95c99a97",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f0ee1229-508a-4627-ac50-ea877fda3235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b2c03a-11fc-49a1-8260-23a83ed29539",
        "cursor": {
          "ref": "1e7609d4-4edb-49fa-bf70-fbc346dd3885",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "461bb728-13a7-482b-bc01-df9741d0caaa"
        },
        "item": {
          "id": "09b2c03a-11fc-49a1-8260-23a83ed29539",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8e6fd3e8-a25d-4eb0-b839-84b1b62fae5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e875effe-3108-46cc-8c45-6c85980056df",
        "cursor": {
          "ref": "661a3d16-cdd2-4dce-a391-2181259b4d37",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "7e486bce-0afa-4417-a801-6aef62f6ea19"
        },
        "item": {
          "id": "e875effe-3108-46cc-8c45-6c85980056df",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d7e66ba5-9418-47f9-90c7-078c2c1b61fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aed38c5-f06e-4eb8-9a92-de710f8761f1",
        "cursor": {
          "ref": "90d4a8f5-51cc-4551-ae5f-35b91f2fe7d1",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0de2ef44-4ad7-4a1c-83fb-3801284990ab"
        },
        "item": {
          "id": "7aed38c5-f06e-4eb8-9a92-de710f8761f1",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9b82ac3e-78d5-465e-aa08-aee88a16ef22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7efdf144-a57d-40b9-b30a-be1bfebe9185",
        "cursor": {
          "ref": "e8916b43-272e-4141-b79c-a70f29c796c8",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f5854300-f3d6-48d2-b068-4dec55db5535"
        },
        "item": {
          "id": "7efdf144-a57d-40b9-b30a-be1bfebe9185",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "89b1d644-8fc4-49fc-86ab-de0c236c449c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50891941-9a56-4e74-b209-bbc415c39c02",
        "cursor": {
          "ref": "bc5ae167-3025-4a7f-a4e3-baab33a0647d",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "0c9d399e-fcd5-4815-9604-95008f1ec9ea"
        },
        "item": {
          "id": "50891941-9a56-4e74-b209-bbc415c39c02",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8e721695-a63e-4bf9-929e-70e379355ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc47765-cec7-4afa-8fe9-73eefa7af386",
        "cursor": {
          "ref": "e0892975-fb33-4fe3-93d8-a4fa5e74e0e2",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "328c751d-6329-465c-be2d-d33cc6d185e7"
        },
        "item": {
          "id": "4bc47765-cec7-4afa-8fe9-73eefa7af386",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4d5c3fa9-8cfa-4f44-8ed1-18cd078e9c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "976bceb3-5c79-4440-b731-95cbe0b3a014",
        "cursor": {
          "ref": "4081c6da-a0ab-4bd6-99f9-aed7cb33f9e4",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "243151d7-1c5f-44f8-91ea-83eced0af2fb"
        },
        "item": {
          "id": "976bceb3-5c79-4440-b731-95cbe0b3a014",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e36fbc7d-0249-480b-904a-e88ce2a2027f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e41ca429-c99d-45b1-970c-9e84e0d7f7a7",
        "cursor": {
          "ref": "610e3c65-775b-4e35-af5f-efb379e3416b",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "07861277-9669-4372-8f13-854df857e0de"
        },
        "item": {
          "id": "e41ca429-c99d-45b1-970c-9e84e0d7f7a7",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0f66f007-53b8-49de-b891-a60bc8d34a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb3c40fd-3dcc-4c92-85a7-fbd91506574f",
        "cursor": {
          "ref": "3eddaa39-c4d6-4a59-adf1-185ae71cebf6",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "878aedf1-6383-4aef-af5a-468af2c4490e"
        },
        "item": {
          "id": "fb3c40fd-3dcc-4c92-85a7-fbd91506574f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b08dfded-f95a-4e0c-978a-a62539af7999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d54db73-408c-4966-93d9-23f93be402cc",
        "cursor": {
          "ref": "10faa6d4-a8f2-4c20-bb47-c237247d532b",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2a7a86e8-078e-4e3b-a8e8-9f61969131dd"
        },
        "item": {
          "id": "5d54db73-408c-4966-93d9-23f93be402cc",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0ed67aa1-f495-45ef-90ae-65eaae6dc2d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c969d41-df22-454e-94c6-b035d7692f3d",
        "cursor": {
          "ref": "b6256637-6307-43e0-904b-5fa55f3c0fbd",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f8bfcf77-abb5-4e31-b385-a3af71c4ac0a"
        },
        "item": {
          "id": "9c969d41-df22-454e-94c6-b035d7692f3d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "9cf4caf7-5e6b-4634-99e7-33d3d9a62f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf1f5e4-f27a-434d-ba47-e075d38235e9",
        "cursor": {
          "ref": "196357fa-43ea-4834-beb0-3f134a956393",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "723a8148-bc30-4b58-bbaa-7820cc98b53d"
        },
        "item": {
          "id": "9cf1f5e4-f27a-434d-ba47-e075d38235e9",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "36b1f492-af53-4d69-863c-dd2d98ac2016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9016e587-8bc3-4d8e-8627-4f30a90493c0",
        "cursor": {
          "ref": "06632d22-5f60-4baa-98ea-f14581c419d9",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e5b438aa-3e6c-4e44-935c-ea9efe2725f9"
        },
        "item": {
          "id": "9016e587-8bc3-4d8e-8627-4f30a90493c0",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3f7aae67-a568-4e28-b49c-52999d7ce9e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b10e32-72e0-415c-8d25-bc26603cec0e",
        "cursor": {
          "ref": "d5f1f167-eced-4924-aeee-4965e2b20e14",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6904108a-9e6e-40ff-9c71-1b80f6cf3df1"
        },
        "item": {
          "id": "57b10e32-72e0-415c-8d25-bc26603cec0e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d83b76ce-ba20-4482-8e69-1cdcb223a9ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd270a82-51d3-4a13-9bdf-18e782686a15",
        "cursor": {
          "ref": "ab607ee4-85c8-44ae-9485-b7c2c6bf2040",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f2f0c4c8-44dc-4180-a395-732a0fe9204a"
        },
        "item": {
          "id": "dd270a82-51d3-4a13-9bdf-18e782686a15",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "46355a39-99f0-447d-bb19-339107a13b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf589ef9-d4af-48ba-b904-cc92954b6a27",
        "cursor": {
          "ref": "180e649b-bf3e-474d-a0b4-30e46ab32669",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "6c368e8a-e7f8-4a02-a892-4728a7bbb535"
        },
        "item": {
          "id": "cf589ef9-d4af-48ba-b904-cc92954b6a27",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "3c353fee-a57c-406d-a87e-7a904a58cb79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77050cf0-9d1c-46e3-b4d8-478f09b6207d",
        "cursor": {
          "ref": "6199311c-3a76-4728-94a3-e76999718ab1",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a2baeb7e-09f2-4f95-9187-b40c440328c9"
        },
        "item": {
          "id": "77050cf0-9d1c-46e3-b4d8-478f09b6207d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "3e531a88-dc85-4ddf-b705-10429ca25cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "281d4318-51ac-442a-8a00-7675cf1b0d09",
        "cursor": {
          "ref": "41b5ba10-9681-462e-8ba7-41ab17a707d5",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "3c6ead5e-9ee8-434c-b202-56f7f12f1310"
        },
        "item": {
          "id": "281d4318-51ac-442a-8a00-7675cf1b0d09",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "8df6d8d8-bb93-40dc-9e02-727fac9278c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622e68d7-8b59-46d8-bd3b-9c8cbcadf52d",
        "cursor": {
          "ref": "71b8c8f0-ce81-4a6c-8009-355e85fbd5af",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "620ec24a-8514-4873-b178-4b4fe7282516"
        },
        "item": {
          "id": "622e68d7-8b59-46d8-bd3b-9c8cbcadf52d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "0ea52c66-0ea8-42bc-a045-0956a34498ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ae9134-636a-4e40-8470-9a82cc4b6573",
        "cursor": {
          "ref": "cbb042c8-bf2b-4cea-b88c-21016d9dc776",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4d8c352d-fa76-4e1a-9883-b9ba8fc8dc0a"
        },
        "item": {
          "id": "d7ae9134-636a-4e40-8470-9a82cc4b6573",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b05d7c61-4fe8-4bf1-a6a5-7f60e6b1b9fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8411e195-73c8-46f8-b492-0593d1ad812f",
        "cursor": {
          "ref": "97167bab-04ab-49c9-90f6-d27da6e5f392",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "85b7249f-2092-4631-bbfb-4b2aa4af7092"
        },
        "item": {
          "id": "8411e195-73c8-46f8-b492-0593d1ad812f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ed5b044d-f467-46f1-bf54-8b6458beb8b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b498cf4-1a50-4657-8f52-f59e1c419649",
        "cursor": {
          "ref": "742a8b2b-cb15-4ae9-be9f-f7e3c47feffb",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c390d135-b448-4a45-baba-4dc957a7b894"
        },
        "item": {
          "id": "6b498cf4-1a50-4657-8f52-f59e1c419649",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "129d110e-9d92-4f45-8b92-4b228c64d414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04521a28-63e8-4f09-9d9d-bc7e05210d9c",
        "cursor": {
          "ref": "4d7e3d19-0368-414e-b9db-473208487a3c",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f2eae208-facc-4084-a9d6-c4f100c644f6"
        },
        "item": {
          "id": "04521a28-63e8-4f09-9d9d-bc7e05210d9c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c64dd1e9-d713-49b4-95aa-1b178bde2181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "410f16fa-1796-4c0d-b5df-aa70e3dae87b",
        "cursor": {
          "ref": "36d5467f-a635-419c-818c-ff684e240562",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c6d44e07-4017-482c-b6dc-8ff7a4505a3a"
        },
        "item": {
          "id": "410f16fa-1796-4c0d-b5df-aa70e3dae87b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "cd2578ce-a6e7-4ca6-bfc8-252d0aa7b0b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "723d6ea4-8908-4a14-aa6f-95888cb073b6",
        "cursor": {
          "ref": "9fc6fd6a-63ff-41b9-a7ce-14bed19db662",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "af001819-e980-4d8d-ba3d-22dbfcee7f50"
        },
        "item": {
          "id": "723d6ea4-8908-4a14-aa6f-95888cb073b6",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "427e331c-3ae2-4685-9e1d-83f73b1913af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a63b223b-4b6f-47b5-8b73-28314600be7a",
        "cursor": {
          "ref": "971a0ca4-6ca8-49fb-bc03-c791896847b1",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "15f62079-e32d-4f0b-bed1-76c3cacbdd10"
        },
        "item": {
          "id": "a63b223b-4b6f-47b5-8b73-28314600be7a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "dd02bc37-1106-4002-b5dc-5f4a50ac953d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a166d9-1797-4ff7-bb98-77aa84383e29",
        "cursor": {
          "ref": "cc3b9029-694d-4643-80b5-0e0da6f7e981",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "89cf2b7c-da81-4a4a-8086-ca5548afc892"
        },
        "item": {
          "id": "c6a166d9-1797-4ff7-bb98-77aa84383e29",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3ebf9c4b-9958-48a3-a2cb-23be677677b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ce9293-7125-49b3-9c2c-8bd14d0f4ca6",
        "cursor": {
          "ref": "dad24926-8ea9-4091-9db0-c05b271a1689",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f23e48c2-162e-43ca-aad3-035a2c6eb5a6"
        },
        "item": {
          "id": "72ce9293-7125-49b3-9c2c-8bd14d0f4ca6",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "5b32bbbb-7038-43ff-aca1-aa276b5c5434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2679673b-67e5-4377-942b-308705c2cc22",
        "cursor": {
          "ref": "6a97c306-5c8d-4a9f-9c92-471844e1ea5f",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f2a529d1-26fe-447f-8d3d-cc6015ba52e0"
        },
        "item": {
          "id": "2679673b-67e5-4377-942b-308705c2cc22",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "83d9a803-74ae-40ca-b530-559819294a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe12a89-a855-471d-9419-3492f33e2f53",
        "cursor": {
          "ref": "fa508ad4-113d-4344-93b7-873d46732db5",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6b5a87b5-e467-4bda-8eeb-5a25a53c3784"
        },
        "item": {
          "id": "fbe12a89-a855-471d-9419-3492f33e2f53",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "caa87abf-66f5-45ac-8baf-04526344bf19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7602c78f-5f4c-4015-beb4-7b0bd4b9a46f",
        "cursor": {
          "ref": "695ad333-a823-4578-8b64-21a6a9912cb6",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b2c2ce9b-b120-4d2b-84a7-a49efcf12570"
        },
        "item": {
          "id": "7602c78f-5f4c-4015-beb4-7b0bd4b9a46f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0b84aa1f-99c1-4f43-a090-81829a4d7125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d90510b-0f0c-4693-a1c0-aa309f9a111b",
        "cursor": {
          "ref": "15a04abf-6611-4d45-80e7-dfd2f5afc8d4",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "89d9cc71-b24f-48c4-984d-ff4f7650d322"
        },
        "item": {
          "id": "2d90510b-0f0c-4693-a1c0-aa309f9a111b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "03b82036-ff66-4527-983b-f709aed939bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9510401-975f-499c-832a-cc0bba525a00",
        "cursor": {
          "ref": "d607fd6d-6834-45bf-b903-4e0752aefe07",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e5c888f5-df20-4afd-89a2-11e9610f8cac"
        },
        "item": {
          "id": "a9510401-975f-499c-832a-cc0bba525a00",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "dfff768c-0821-4c12-b05b-028e5c252a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee25e58-8dd7-4bfe-a949-b51ae1cdbacf",
        "cursor": {
          "ref": "5a162db0-1c87-4495-8434-bde1547cf01e",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6f594097-ad06-4fdf-a6e1-8792e3c013ec"
        },
        "item": {
          "id": "9ee25e58-8dd7-4bfe-a949-b51ae1cdbacf",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "98c84c43-b2d7-425d-9535-fcf9acc7e14c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdcccd5f-b07a-4443-ac16-d08572175e9d",
        "cursor": {
          "ref": "130dc5c5-8baa-4a2f-ba3d-5914cb9b4591",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "50ebc48d-0e20-4304-a977-55858ee8ddc1"
        },
        "item": {
          "id": "cdcccd5f-b07a-4443-ac16-d08572175e9d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4db0a954-34e8-4f51-9343-de2261fa9626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a846fe7-fb45-4667-9c6a-b32446741883",
        "cursor": {
          "ref": "9fd65045-4c9f-4886-979b-8549a9079a8d",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f72e893c-d8a6-45d7-abae-f3720432bdbe"
        },
        "item": {
          "id": "9a846fe7-fb45-4667-9c6a-b32446741883",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b1bdff94-ca71-4106-bfe9-577799f0b64d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec32ac6-e6d3-4652-b878-dc13f1c05d56",
        "cursor": {
          "ref": "38ed52bc-ad0a-4f23-bb77-e3dd0a0e096f",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e085d48b-6582-4672-88fd-665d4484478d"
        },
        "item": {
          "id": "2ec32ac6-e6d3-4652-b878-dc13f1c05d56",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a038287c-e822-4320-84c4-335e42ab99cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b62d7769-ceef-41db-9c1a-760aa649baf4",
        "cursor": {
          "ref": "e4b70e5b-9e14-47f7-8324-4812ec830c2f",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "cc22ad64-3c1a-46d3-9cbe-b8c8f57e9c28"
        },
        "item": {
          "id": "b62d7769-ceef-41db-9c1a-760aa649baf4",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "0da43c90-bb6f-4ce3-a240-d7a4a7dc4c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3cc6a9-1162-496c-ae67-03785cb097a1",
        "cursor": {
          "ref": "ef71238a-d3bf-48b7-af8a-74c5387a65a6",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "eeec3cf1-caaa-415e-ad5b-a5c50d997e1c"
        },
        "item": {
          "id": "fc3cc6a9-1162-496c-ae67-03785cb097a1",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ff8b854a-6aa6-4f6e-a26f-0a5c8ae66866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d74ada-5c75-416b-af10-e682d0afb05f",
        "cursor": {
          "ref": "c5a6e827-d294-4165-aff2-29a2812e9e30",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "18213dbc-8107-41fb-b082-a97559d12323"
        },
        "item": {
          "id": "00d74ada-5c75-416b-af10-e682d0afb05f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7ed7b4de-d060-4fe0-ac5d-2ef88a2bdd5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff936f2-7e62-429a-9528-74019d6941f3",
        "cursor": {
          "ref": "174c6945-0f0e-407f-b9a5-42b8fe1da3cb",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f423984f-a726-46d3-881a-823506aa30f3"
        },
        "item": {
          "id": "9ff936f2-7e62-429a-9528-74019d6941f3",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "db27e874-56f7-4ce3-8eda-ed0b8a600764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c97f577e-9b35-4a5a-9da7-1fd31f8a98c0",
        "cursor": {
          "ref": "239c7079-291e-4d19-8522-b71bacf5c46c",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c432b37a-704b-46b0-94eb-44e7b0d18abd"
        },
        "item": {
          "id": "c97f577e-9b35-4a5a-9da7-1fd31f8a98c0",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a07066fe-fdd3-4ca2-a66a-c5fe8f176c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "978f8682-e906-488c-b5f7-249cbf2284e0",
        "cursor": {
          "ref": "f7d3b1f7-e467-4bf6-be00-b25c5df26a75",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "aabe4782-6d11-46e7-b0ab-dd72a2b16eb3"
        },
        "item": {
          "id": "978f8682-e906-488c-b5f7-249cbf2284e0",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "bee1620a-2f14-49a3-8a24-430eee8e8a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ecd373c-3c96-4047-bc35-7315b1a04739",
        "cursor": {
          "ref": "8e9c3353-f696-4f33-b0d0-e480e4ec9f7f",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f4a84a81-ae9a-4265-a6ba-72483fc17be1"
        },
        "item": {
          "id": "7ecd373c-3c96-4047-bc35-7315b1a04739",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "9582e550-a58a-497f-81ae-2ec40374a20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9e93c2-3cb1-4ee7-919e-52ce2d7604dd",
        "cursor": {
          "ref": "543753ea-f8fd-4699-b93a-dd113565f4d5",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "6bdba9b6-5640-4b7a-bad7-b863f950d6a7"
        },
        "item": {
          "id": "8a9e93c2-3cb1-4ee7-919e-52ce2d7604dd",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0e371b07-8fd8-463e-af96-27a0c8f28c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb36768-6eb8-4b7e-8cb1-ce574577923f",
        "cursor": {
          "ref": "93a0a03a-938c-4128-9298-5b2e016938d4",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b40c72f1-621d-4f1a-aaa9-46b1ab83693a"
        },
        "item": {
          "id": "adb36768-6eb8-4b7e-8cb1-ce574577923f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "2e03d4d1-60f0-4808-87ff-3aac7901d496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea269a1b-dddd-454d-b911-79097183c12a",
        "cursor": {
          "ref": "cc7a6e34-8cc8-4e6c-b4c4-88322cc5036d",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "20ec9670-946f-4083-a017-5e4aa518875e"
        },
        "item": {
          "id": "ea269a1b-dddd-454d-b911-79097183c12a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c9517da7-28b9-400b-80a5-cd39ad26896f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f97f4a1-a4ad-4282-8168-24a877f474ad",
        "cursor": {
          "ref": "d3a8323a-a2ed-4e36-91f5-96dd37a12965",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b700ed0f-924a-45f7-86d4-a0af059bdca4"
        },
        "item": {
          "id": "6f97f4a1-a4ad-4282-8168-24a877f474ad",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "90ee0e4c-03d5-4361-ac3e-7e8d394c1653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88085f3-407c-4f17-b656-122b18a7da6d",
        "cursor": {
          "ref": "03c10d08-904b-421b-a90f-2b007262a24a",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "57e437c5-38e5-4aa3-a5f4-fc078a16373f"
        },
        "item": {
          "id": "a88085f3-407c-4f17-b656-122b18a7da6d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "355076ba-3e81-4449-96eb-fe1af051f3a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641fe364-e9c1-4ceb-8281-fbfc990aeff9",
        "cursor": {
          "ref": "fd134f07-9727-4370-8fcc-58e8b740f19c",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "69a7b7e4-a18b-4225-825d-c09f1ea9c5f1"
        },
        "item": {
          "id": "641fe364-e9c1-4ceb-8281-fbfc990aeff9",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "5e94209e-9b98-4e46-8210-4b1c18c9ce44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "922a7a3f-77bd-4a89-bd0a-638232b0f712",
        "cursor": {
          "ref": "550e34de-eccc-4b9a-970e-27207406b304",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "5af38a3b-a121-41ec-9015-4ffb4d19b57a"
        },
        "item": {
          "id": "922a7a3f-77bd-4a89-bd0a-638232b0f712",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "3d506bef-ed57-42d2-96ba-a9361de5a99a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e8aa57-4360-4281-8db6-04e8fb569970",
        "cursor": {
          "ref": "2bb78fb2-2a3e-41f6-a4f1-d8b59cf8c773",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b5181824-4c85-460b-abd6-2523364c48ac"
        },
        "item": {
          "id": "72e8aa57-4360-4281-8db6-04e8fb569970",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "05f19ed9-0664-4a41-ad8e-499afe384706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2eb0e1b-84bd-4c65-b9a4-a22079ef3070",
        "cursor": {
          "ref": "9710d585-22e3-4df1-ac1e-ad182557b23c",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0d64ccbf-5fe5-4204-a355-993d5996269a"
        },
        "item": {
          "id": "c2eb0e1b-84bd-4c65-b9a4-a22079ef3070",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "442cc8ed-9943-4b16-afea-d33291d3a527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683ff753-55c0-4f6b-9c33-f0069baa5cd6",
        "cursor": {
          "ref": "0b774712-5e01-42f9-86a5-271adfcdf6fe",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "2e586136-6a2d-4717-817c-18221223317e"
        },
        "item": {
          "id": "683ff753-55c0-4f6b-9c33-f0069baa5cd6",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e7e50465-7f71-4854-9df7-2742ae5e2a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934deef0-e6d2-42dd-b2e0-7a3cf08fc0a6",
        "cursor": {
          "ref": "4b95c417-78ce-4f55-afb6-4680fe2d06db",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1805d1bd-5a61-44f4-a987-415d48a45a2b"
        },
        "item": {
          "id": "934deef0-e6d2-42dd-b2e0-7a3cf08fc0a6",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "fe734435-da70-41c3-9d0f-4544c6e4b808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddbaa159-2549-42b1-b3e7-bf94d9f664d8",
        "cursor": {
          "ref": "7a437091-851e-4cd6-9d3d-75f1c4a682a4",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "0761b61b-0828-4d69-8337-7a6540b8e1d2"
        },
        "item": {
          "id": "ddbaa159-2549-42b1-b3e7-bf94d9f664d8",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "31d5c0ad-e064-4c9e-975e-c6eeb672a812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ae2167-ddad-4800-a036-75c90259d5ae",
        "cursor": {
          "ref": "53c87f7e-c125-4c0f-9712-b858d068b356",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5b14b40e-ac59-4afb-9413-7ce6b607cc9e"
        },
        "item": {
          "id": "b1ae2167-ddad-4800-a036-75c90259d5ae",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "54647ad8-97bf-49e5-a7f3-4ebb2c27ee51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "167b3c53-b222-4242-919c-ed5b52691661",
        "cursor": {
          "ref": "3d89bac7-b764-42c1-883a-e3e7af44071d",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "33c251e6-0df2-4a03-af10-bd7072746fa5"
        },
        "item": {
          "id": "167b3c53-b222-4242-919c-ed5b52691661",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c7b59885-2c75-4cbf-a107-a6a629c8e0d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a648e38d-1c49-4f12-82c1-e5300c2cd542",
        "cursor": {
          "ref": "8b55bd94-d630-45f9-8145-b6e4d26cdcf4",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "57546f57-78a2-4cf7-88b2-0da3ac08e339"
        },
        "item": {
          "id": "a648e38d-1c49-4f12-82c1-e5300c2cd542",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0dd07ba5-accb-4260-9ac6-78c2f46f7e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "832330aa-0006-43e9-b7c1-8ba8029d6a53",
        "cursor": {
          "ref": "e95370d0-fb70-4815-8a50-96a730ae34f0",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0f78e033-e729-4a58-ba2d-b06dcd0d3906"
        },
        "item": {
          "id": "832330aa-0006-43e9-b7c1-8ba8029d6a53",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ab2dfd0b-9b1d-46e8-90a0-d23638464078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad3a0068-20b8-4b3d-8c12-73c3fda92987",
        "cursor": {
          "ref": "f4da792b-8e25-4768-b864-e2a18e74ac40",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1569923b-3402-4fd9-89ce-31761e532936"
        },
        "item": {
          "id": "ad3a0068-20b8-4b3d-8c12-73c3fda92987",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "3ea6575b-7ba1-4af7-afb0-4d8410673d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5a78f1-addd-4063-8d2b-18ba2056d800",
        "cursor": {
          "ref": "31a3170d-ddba-4248-bf5d-aaffbe8b5387",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "1d2d515c-5851-483e-80ba-7f1c96656c75"
        },
        "item": {
          "id": "fd5a78f1-addd-4063-8d2b-18ba2056d800",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9a3e5eb7-8859-4b81-b18d-ee2cc563683b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b84a5a-c332-45f7-87d3-baf875df956c",
        "cursor": {
          "ref": "49a0e054-1279-43c5-8a47-e51d4a2e8fa7",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f6805f51-bbfd-454b-a8de-ce335ea76430"
        },
        "item": {
          "id": "00b84a5a-c332-45f7-87d3-baf875df956c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "1a347d51-00a8-4e76-8519-37312572bcda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407b67b7-7a5d-409e-990f-a22a47dfde74",
        "cursor": {
          "ref": "9ebd297c-ad20-4021-a1c1-cbb5d14e7f31",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "7df9df8a-a6cb-4709-aea6-7a3c780f6bfc"
        },
        "item": {
          "id": "407b67b7-7a5d-409e-990f-a22a47dfde74",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f136c3ac-2868-46d5-b63d-3cd7f5813971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8c0e7c-f793-4325-9fd4-5d50205dcce8",
        "cursor": {
          "ref": "0c500bf1-fe45-4592-b82a-6b68e48f1b06",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c52411de-8244-4394-a3b1-915c9417bbc9"
        },
        "item": {
          "id": "1c8c0e7c-f793-4325-9fd4-5d50205dcce8",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "0e34b9e4-bf79-428e-8edc-df10ebe31e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dae0905-fa91-4b56-8bc2-ead51cea521e",
        "cursor": {
          "ref": "dc674f94-6db4-4ac3-9d6f-15aed784e9ff",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e0495ac3-056a-4f39-adaa-d109dd492f40"
        },
        "item": {
          "id": "9dae0905-fa91-4b56-8bc2-ead51cea521e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "88f416fb-50c8-45f0-91b8-3495b94f13e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17eb6be1-ebc8-45f4-9e4d-4cbc6282b0a4",
        "cursor": {
          "ref": "a37515bd-bade-40d3-b19d-ff0101e672fa",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c45a7f8f-a256-4e43-81e5-5cb727db9782"
        },
        "item": {
          "id": "17eb6be1-ebc8-45f4-9e4d-4cbc6282b0a4",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "2cee64c1-1be5-4657-8267-1ecd9f8124d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cefe3b1-1212-4bba-9220-fee5f8685cb1",
        "cursor": {
          "ref": "6f268bcb-41be-44ae-85a1-4bae6754ae5b",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b606a0cb-7495-480b-827b-919b76b1049d"
        },
        "item": {
          "id": "1cefe3b1-1212-4bba-9220-fee5f8685cb1",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7c662d43-6f48-45e5-ba7b-c052856ddf00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8383655d-da9e-4c89-8cf3-0ef84af71472",
        "cursor": {
          "ref": "71b51d34-60d4-46a6-b356-a20e8acae494",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "bc653702-a636-4b80-8e52-f5f8fbba976d"
        },
        "item": {
          "id": "8383655d-da9e-4c89-8cf3-0ef84af71472",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "00b92d73-95c8-4339-9ca1-719f5137d29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f0dddc-f579-449a-b044-1d1e938faa67",
        "cursor": {
          "ref": "c07b529d-ceae-4098-a159-0eac00c425ad",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "86a069b4-16f2-4b00-869b-9956d1efba95"
        },
        "item": {
          "id": "78f0dddc-f579-449a-b044-1d1e938faa67",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "682123ea-ad52-4603-88c6-21ff04cd31aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52055996-eb2d-45c9-abe7-86543dfcebb0",
        "cursor": {
          "ref": "b3d826c5-96b4-43d6-b441-852f566eaed2",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "853246f2-cb13-44ee-ae5c-7e88bed96142"
        },
        "item": {
          "id": "52055996-eb2d-45c9-abe7-86543dfcebb0",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "87c9cbe9-5355-46aa-8333-5ef22a687ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c1703d-d207-40a3-91f1-d9def8b1c6f8",
        "cursor": {
          "ref": "80fafe3c-0cfc-49a5-9bda-7cb4c9140f69",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c7260ffc-ce14-4ba5-807d-d5c446beab83"
        },
        "item": {
          "id": "48c1703d-d207-40a3-91f1-d9def8b1c6f8",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "49ea6c1f-b937-4398-97ec-cbe511f65765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0666e150-e2a7-4c98-b114-d34870cf108f",
        "cursor": {
          "ref": "077a26ff-d9a1-42f2-b9fc-b05ddc78257d",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8e878180-457e-464d-9b5c-2997b88f9cc4"
        },
        "item": {
          "id": "0666e150-e2a7-4c98-b114-d34870cf108f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "cef5db54-c16a-48ee-a221-d269d02c868f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2fa38f-e589-4a90-bb50-6b706bf26959",
        "cursor": {
          "ref": "b8175241-355a-48ae-a132-dd35a1143727",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a80f77c4-0254-4f14-b4c6-c4fddf6f9b7d"
        },
        "item": {
          "id": "9e2fa38f-e589-4a90-bb50-6b706bf26959",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "8eaddbd9-1e9d-440d-9cad-fe0b0b7c5b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73882b34-8f0b-41d3-b94a-eb4628b9c9ef",
        "cursor": {
          "ref": "b57f6e1b-9447-4604-aa0d-eceead561e95",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "913de50f-9d3a-4fe7-bb00-be793625e966"
        },
        "item": {
          "id": "73882b34-8f0b-41d3-b94a-eb4628b9c9ef",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "5ca49341-b8a6-45b9-bae1-9a34668752e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848af2b7-fcb1-49e8-a30d-759380f19340",
        "cursor": {
          "ref": "fea3c34e-cba3-4315-8cd5-fc47702e0d82",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "01a81d14-0b80-4152-a3ff-643c706a94ef"
        },
        "item": {
          "id": "848af2b7-fcb1-49e8-a30d-759380f19340",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "6e94a2d4-7e45-4357-9978-9542e5fe0e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "040a1871-45f8-4e55-9fd1-3aad67cda789",
        "cursor": {
          "ref": "90d6a32e-0eb9-4355-b3bb-73bd1e383814",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "8b0504ea-12aa-4524-b56f-16fceb211907"
        },
        "item": {
          "id": "040a1871-45f8-4e55-9fd1-3aad67cda789",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "266d4fb6-9608-4505-9253-312f93716543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce713d4d-3e3c-4adb-80c2-c4502bfa46bb",
        "cursor": {
          "ref": "ecf10552-bb71-4af7-897c-6da0896e9e03",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f08e37c9-de67-4099-8b4b-5bd25c82e9f0"
        },
        "item": {
          "id": "ce713d4d-3e3c-4adb-80c2-c4502bfa46bb",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b00574ab-05ea-414d-91b7-5a74bc5d83b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44b6d05-5cf7-42d5-a6bd-8f78e7f2ca82",
        "cursor": {
          "ref": "e794a919-3b4e-4adc-a3fa-51bf125c1bc3",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4f804be6-e9a9-4c63-9fdc-68bfcec88e6f"
        },
        "item": {
          "id": "b44b6d05-5cf7-42d5-a6bd-8f78e7f2ca82",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4c6ffe2b-30c4-4ac9-bcf0-3699b6c9576f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f3bd47-427f-4fb5-90a7-ff4c72e681a0",
        "cursor": {
          "ref": "b876d2de-81fd-4c00-9107-253f72373b78",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a5634fff-0bac-4121-8ab4-60efcfbe5ed6"
        },
        "item": {
          "id": "b2f3bd47-427f-4fb5-90a7-ff4c72e681a0",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "20eb0e07-7736-453b-9080-fc306411844e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "352254e5-463f-4ded-847e-62ae7f4c3cc0",
        "cursor": {
          "ref": "d1e0bd8a-f299-4f43-8244-25d25f022499",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e2147655-3a1b-4f7d-a639-a58675762957"
        },
        "item": {
          "id": "352254e5-463f-4ded-847e-62ae7f4c3cc0",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "bc02229a-b9ec-40bf-9849-da55ce91d1cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b8fb2ca-6e4a-4e41-a285-3852b91f4857",
        "cursor": {
          "ref": "e3483971-5d2b-4a72-8a24-79222bb3cc06",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a94a9d86-27a6-4600-99db-77227a88009a"
        },
        "item": {
          "id": "1b8fb2ca-6e4a-4e41-a285-3852b91f4857",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e563ac9f-8931-40f1-b0b8-16db6708cb0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4cec08a-ccc9-4869-92f3-e878085a37ac",
        "cursor": {
          "ref": "ee619fb0-6bbb-4ab8-873b-c004d1424ada",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ebdf460d-517f-4175-89f1-801195fe7630"
        },
        "item": {
          "id": "f4cec08a-ccc9-4869-92f3-e878085a37ac",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "821d2f45-e7f5-41fe-8cc8-1b64c5822cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3853811-0ec5-4535-9ee4-60e362b2b204",
        "cursor": {
          "ref": "0cb29985-ca32-4758-b37d-3d28233c2f1b",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "8152b7ce-6678-4c45-a310-60d6ab3d7c71"
        },
        "item": {
          "id": "e3853811-0ec5-4535-9ee4-60e362b2b204",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e5507c80-ac06-4b87-be58-d312ca364ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f7397f0-2332-4b81-9961-fc9b294595b7",
        "cursor": {
          "ref": "c2feb588-dbd2-491a-9b0e-21b78d0c743a",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "834f6093-8d80-4c71-9535-49fd1039e360"
        },
        "item": {
          "id": "6f7397f0-2332-4b81-9961-fc9b294595b7",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1b955a8c-fadb-4a53-ac07-304ca8509745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b614ab4-5559-42d7-8138-c2847ddf8a04",
        "cursor": {
          "ref": "bb3cd02c-97d0-495f-982d-11ecb39b8dd5",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "40190c0b-16e5-44f6-a990-f62ab03a8ecf"
        },
        "item": {
          "id": "6b614ab4-5559-42d7-8138-c2847ddf8a04",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "fd355a99-18b8-4c16-9dda-db2de97b12ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a6fb33-0ce1-4f96-b677-6699e5df05c1",
        "cursor": {
          "ref": "673bd972-4864-4bdc-bfcb-b71592353168",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1c0f569f-dc86-4310-95bf-c57ea30187e6"
        },
        "item": {
          "id": "76a6fb33-0ce1-4f96-b677-6699e5df05c1",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "314300c4-7f10-412c-8c63-cb24c0af4c0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9807c3de-a34d-4d58-99dc-76b40b7bde84",
        "cursor": {
          "ref": "21cd6f1c-7c05-4687-8832-0573574eb0c5",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "58d7ffbb-5bbf-4585-97ce-5711cccac5e2"
        },
        "item": {
          "id": "9807c3de-a34d-4d58-99dc-76b40b7bde84",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b981b73f-3528-48a2-98ce-4549dcbd8149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e370c75-4d98-475e-bec6-87f0c3b0bb42",
        "cursor": {
          "ref": "67d7133c-4804-4b7b-bc9e-d01fb4182670",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c21ed839-12bc-4300-ab19-dc843469a048"
        },
        "item": {
          "id": "0e370c75-4d98-475e-bec6-87f0c3b0bb42",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "9ce990a2-55de-4c9c-ac92-9015ae459432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e94a854-6850-4146-9764-84f23e82e35c",
        "cursor": {
          "ref": "96e03fac-7afb-4b45-a33d-d0c0a09594bb",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "842c4f03-399f-478d-8321-d3762fa19730"
        },
        "item": {
          "id": "5e94a854-6850-4146-9764-84f23e82e35c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9148d74f-f1be-40aa-a8ca-7c04b0ca3526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bccced8-3154-4598-b24c-fd6d9aae4a74",
        "cursor": {
          "ref": "9663c5a0-4e87-42b1-9179-c3752e525751",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f3f8688c-7613-4c81-b72d-1c578f67e5f8"
        },
        "item": {
          "id": "6bccced8-3154-4598-b24c-fd6d9aae4a74",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "909952ae-ee34-4d8b-bc21-80dc8b693458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961f393d-d2fa-4342-bdb7-7dda6266cd8d",
        "cursor": {
          "ref": "6ab8e3d3-5e95-465d-9860-b27526442c4e",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "fa9ce062-39c7-4d46-b29d-18a5441b1c18"
        },
        "item": {
          "id": "961f393d-d2fa-4342-bdb7-7dda6266cd8d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "52864f26-611b-44c7-96e9-996937108307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea0dc5a6-0c60-4b5a-ac80-cba954140379",
        "cursor": {
          "ref": "094e510c-2d0d-4061-b140-7a4c4f929aa5",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "cd300e99-0dd1-4466-b1fc-e8212aa9f46a"
        },
        "item": {
          "id": "ea0dc5a6-0c60-4b5a-ac80-cba954140379",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "314f028c-0518-4266-8692-b7d2bb427d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4528d137-93ae-499d-bb38-e892c7e27da2",
        "cursor": {
          "ref": "3f388341-04aa-4447-8c54-2c6265eb4fca",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "99d2459b-0a57-4c69-a6a8-7958981e7baf"
        },
        "item": {
          "id": "4528d137-93ae-499d-bb38-e892c7e27da2",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "fb504c26-611c-4a9c-ace9-18266ae92f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84dabc8e-b70a-4a04-a806-c3360eccec50",
        "cursor": {
          "ref": "85f3ead3-1d97-46ae-8e7b-1f2a456bd6fa",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "aa5bdab6-eeb0-4072-bd66-f05a6098837f"
        },
        "item": {
          "id": "84dabc8e-b70a-4a04-a806-c3360eccec50",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b1ffae91-9007-4d20-9088-398d437a9def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "426d817b-27ae-4e1a-a88b-e620dbe6024e",
        "cursor": {
          "ref": "dbe3753c-4089-4561-9701-4ef9278414de",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c1530beb-d272-49d9-bebc-65608668f3c4"
        },
        "item": {
          "id": "426d817b-27ae-4e1a-a88b-e620dbe6024e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "aa97ccaf-6095-4881-973d-aeed71b157c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d1bfe3-add1-4d2d-8f8f-79bb6e899952",
        "cursor": {
          "ref": "a9730e8d-4bcb-42f2-a647-3eafd9945baf",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "027d342d-9eac-4407-8c02-c5bfb7085427"
        },
        "item": {
          "id": "53d1bfe3-add1-4d2d-8f8f-79bb6e899952",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "91487566-dee9-4fd1-b599-492f7ec90f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a820b448-a78a-4550-8ef0-410250140357",
        "cursor": {
          "ref": "5cfc0a81-96a4-4534-ad42-4c907046ba4f",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f295121c-c8fe-40e6-9125-f2f319ea2ad6"
        },
        "item": {
          "id": "a820b448-a78a-4550-8ef0-410250140357",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "3e6a53b7-1d52-46a2-8b3a-e7b2a4b1d301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "6329a226-bcb3-492b-8f01-13cb0d3e5934",
        "cursor": {
          "ref": "f994b52a-da68-47a1-8f67-d7a7649683d8",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "72561515-ea07-40bf-9c1d-a1fb437ef83d"
        },
        "item": {
          "id": "6329a226-bcb3-492b-8f01-13cb0d3e5934",
          "name": "credentials_verify"
        },
        "response": {
          "id": "37703678-5e93-4666-a016-d849e1ed05eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "1f65e3f9-7768-4a64-9201-86382799ba86",
        "cursor": {
          "ref": "d2ccbdec-5dd2-4e1d-9e28-2f313327d7ae",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8f399d71-f5b4-4fa0-8aa8-1f0e9eef9ee5"
        },
        "item": {
          "id": "1f65e3f9-7768-4a64-9201-86382799ba86",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "be6511d1-d838-4d69-bbb0-fa2407f03f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "2d501c1c-b90a-49f5-a16b-e3a59daaa98f",
        "cursor": {
          "ref": "3f7fc695-1120-4f13-a08a-da28a95ac72c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7221a701-2751-42ae-b87c-817664ed2d76"
        },
        "item": {
          "id": "2d501c1c-b90a-49f5-a16b-e3a59daaa98f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "65b86702-29cc-47eb-81e8-789f55f3012f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d501c1c-b90a-49f5-a16b-e3a59daaa98f",
        "cursor": {
          "ref": "3f7fc695-1120-4f13-a08a-da28a95ac72c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7221a701-2751-42ae-b87c-817664ed2d76"
        },
        "item": {
          "id": "2d501c1c-b90a-49f5-a16b-e3a59daaa98f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "65b86702-29cc-47eb-81e8-789f55f3012f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66fcc355-24f0-4b53-9494-78ec2c115dd3",
        "cursor": {
          "ref": "3d30afb4-8728-4699-a0b1-92a33768c090",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "39fe483b-7a35-4a9f-a2a0-0e71a7805676"
        },
        "item": {
          "id": "66fcc355-24f0-4b53-9494-78ec2c115dd3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a5db5fd5-92e4-4655-82f6-395b8ec609f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "830b56f5-f5d5-44a5-a44a-b378c9c5f762",
        "cursor": {
          "ref": "b3144cea-4e1b-401e-ab68-580509ab1897",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "45689d1b-c69d-4958-ba17-2cb4b6009317"
        },
        "item": {
          "id": "830b56f5-f5d5-44a5-a44a-b378c9c5f762",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "88d6253a-b28d-4c7e-9bd5-3ef1d3b13580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}