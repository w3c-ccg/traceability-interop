{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "aa830fec-2b60-4db1-b52a-9f08177eda28",
        "name": "Clear Cache",
        "item": [
          {
            "id": "33a777ac-8b6e-492c-9208-dcae4af0b783",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "46085a5e-20c3-4ec5-95d6-142e040f57c8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2e857010-5309-4275-aa24-37d6b5f887c1"
                }
              }
            ]
          },
          {
            "id": "1b73346c-85c2-4805-8c20-521af0f058a2",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f360626b-2400-434d-bec8-395f845fafe3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "aca01fd5-ed2d-4da1-831c-5541734b30ce"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a73766d8-f187-4703-9166-6c2af437fda6",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "3d996ef3-07bd-49f4-ab9e-94329a67cfaf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "abcc6f7c-b0a0-437b-bc1c-d89dbb9c2ef8",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ed3c82d-ac94-41ea-b689-3f2e4c7d24fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "100cadaf-d2dc-4ba2-b308-a108e8696763"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a8a97929-a379-4f2e-a0f4-75af2f315850",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aae4bdf6-be2f-481b-ae23-7d934f0ebc14"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "538101bc-2510-470d-8c60-d6be463a9268",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ef3a1b74-1d75-4015-acdc-57d75e7d39b3"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "def7c021-2b42-433e-8400-723ad588e614",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "5d0ae1d6-4bea-4305-b55f-6e8c670bc7f2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7f9e4a53-f637-4f7a-8b5e-73d320b21b36",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a17e5b8e-bfcf-49b4-b68d-c6756e17608c"
            }
          }
        ]
      },
      {
        "id": "700aec5e-0a44-4afc-8f34-184b356090f4",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "93fd5a35-c1bd-4c17-84c4-49a822b23cd5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f5c2a388-0d3b-4672-a517-7576aff7f326",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dfe2a293-05f7-4140-b94f-2efa6c5b3c6c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d622f54e-cdbf-4240-a310-72d0a85a82fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f343f3e6-0df2-449a-bd51-516f49243c5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b05abe21-2ca7-4933-abf1-ca415e9b048a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d232f7-abec-4885-9273-d56604d35fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c30c28b4-5ef9-4098-98aa-679e9cdac5a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b943f6d-1300-4f4a-8555-376c877c3548",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c8900d7-5456-4d8e-9a5f-668b6bffa4e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f9b91ad3-8565-4e15-83bb-02d7c18623da"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f3418074-d2ba-4797-8eef-22dcdb302441",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "370ddfe8-a4e9-471c-80f5-b87b9c095a02",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6899df73-ef8d-4854-aa61-ab028fe5cfa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "95f51626-2281-4c6a-b58b-11b1e5a19ccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84fda1dc-b1ab-4a12-a0b6-b987793a0286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ca5bdb2-90d4-4141-acdc-4f0bb30fc51d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc396ae-17a4-46dc-8830-c6002a6ca3fd",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "223841c0-a009-48c1-a9f8-3c1cbd6db9ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b39e45e-69be-4d8b-a817-393ef6804e63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a4fae36-1af2-4bad-8dc7-5ffd848aace7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "67a54454-cf00-4ba5-9157-b5fafafe0972"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "826a71a5-62e9-4a65-ac34-f7101f132976",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9681ef1b-299b-4e39-86ff-80f28de8d84a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8f8203e-f95c-483d-952e-debac84ec65e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "20466e9e-0664-4787-8238-400e3168022d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7b5dbacf-2b6f-407b-8088-201e7a7131de",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "94a99bc2-654f-4eae-907e-0252e3687ed6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "70bb4467-6dca-462a-a1a7-b330f45f5302",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b015fd47-006d-44c0-bc8d-e85328a10af8"
            }
          }
        ]
      },
      {
        "id": "bd06efe2-4345-4908-b5a2-ffe46aff46b6",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d397725a-3211-491a-95d0-7cac3b521cd5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "95a1455f-c4e0-4b8b-9ece-1a2ef5fe3eaa",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "07d31b8f-0093-4280-b0d4-ffdbf647c7a3",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a7ea06-f09a-47f6-b033-307ce53f4d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe9c32f2-0fb4-4481-98fc-d9b93c8c19f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69680fd4-4683-46e9-8c7a-f033f912709d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2814f35-1c88-4a47-97b8-f40027ce04ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b0f4a6e-3d81-495e-b34e-154ed611e55e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f004a73-ce6c-4b37-ab5c-788520f953bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecbbbaba-30e8-4198-ab45-a66cf21102c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce47eb6f-43d5-407c-bb1e-09e7619240c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f42d430-de8f-4ae2-833f-cff4b0b2f997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6dd9f2d-fa8d-403a-856c-a6e7b3781b69",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55789589-1aac-4899-99d0-ac3d960c06d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e4fb245-fff7-49da-bfc0-b8fb35b4cf88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a774e4b4-bf9d-464b-803f-52dd486568ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f438214-8199-4bb5-b585-366de8cd2ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a06cc65d-c793-49d4-8fd7-4e006384d56b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e336bfe6-2750-460f-b315-03dd00d239c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d8d818d-f34a-47fd-82b0-5a3a86c5a24e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8064d7f4-2888-48da-b411-9f74296d24b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7d4a8a2-fafa-4471-8799-0df545e6b13e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b18ba1a-2e58-4eae-9a04-beefea265434",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff50cc33-79d7-418b-b70d-b6a2854cfa23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7697df69-b25f-4ab2-95c9-6cb512211eae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c69b972-23d1-4a96-a756-ab1573b3d00b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2559e614-979b-45ac-91ba-0a7ec3af5e7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a379d9ea-bc00-4943-a156-f4bd147cde57",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec38b2ac-89a6-4255-8cec-6f4df4b4a55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86dc24d3-7006-4ad3-81dd-5d38189e0984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d17051-8ab4-4271-945e-d51a82660b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6797916-b70e-408b-9b56-34c6b795827b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "594ccefc-6380-4116-adce-a11ddb7c966a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f6611a0-27a6-4f7d-bb6a-a9af7cbc6f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5858a01-6f2f-40f0-937f-821ca6bed0e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c2b92e7-2d26-4294-89b1-58756b11ff79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45254b60-4a8b-4bff-a83d-372ea7c82b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acde539e-0566-4159-8612-bae119cc7a8e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a94ef4-bdd2-4306-af8b-e9187d3c8f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8419824c-6eb0-451b-a598-bd84d4ee9f22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d77f4495-6ce5-4c3b-9e9f-3c2d46ab1c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50f4648d-db28-4989-b320-032e91875581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27adea39-3e44-48fb-8d0b-4f81e50c88b2",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d614bb79-1f84-4719-819f-3a14d849f54b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edb13dc4-72c3-4e70-a686-78edce2410db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8100236a-afee-4d40-b18d-736b21777794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67693b28-6e04-4a23-b12c-3c08cfbc0077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f19b049a-5337-4fcb-833e-b9e396dc502a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac3f1e37-9155-4ec6-ad32-ee97e5744db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "237f0b18-93e5-4fbf-907a-e28a114eff42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391537d8-36d7-4dfe-a926-48b9f41b1240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ffce1b69-a421-453d-8d38-0ac1939eea5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db8d484b-e810-4c18-b075-1e29ec86369d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec66be96-e8fa-4edb-9b24-008be0f55323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff06f2cb-cbc2-4420-9769-510b6fa2fc62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "574afefc-6c4d-4a74-a3be-162e683aa4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1693fd2a-ca40-4984-94d3-bf9947c56d33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e88f1c0-a972-449d-bc1e-0b5e6cf9227d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e20c444a-855e-4ef7-9217-df048fa49493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66cc37c0-2cd4-4388-9941-6700b859b3af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277481f9-f602-4fdd-87a2-19b7f499bc4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d28dafff-0aaa-401e-8d5a-a480b286be88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd6c7c9-8fcf-4663-880d-9c5c3daa0caf",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c11945-adb0-4e83-872a-e91ca6ab54a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1a7058f-c974-4777-a1cb-66e33e50d713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d5b525-a8b1-422a-b14f-d0dbb1648514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d7cad27-af9a-46a8-8120-02702aa46187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "429123ad-a1b1-48a6-9ebb-fca7b6a8c9bc",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3659c5-411e-4333-b06a-9057ae723721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2140bd78-f022-4536-8a90-963a0349c918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6382e4a8-f425-42c2-aa89-f01a6a4de810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8427725f-1432-4da5-bfb4-cfb42569dee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5829f6f7-4913-42c1-80b6-38260f623e0e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93122af0-7c7d-4fe2-9940-bc11d0f91ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "259a712d-b45d-451a-ab97-e175232138b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0874fb92-3fe1-4f78-9d04-cd4b6b2d5de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f671a30a-af42-47d2-a35e-e91f7b004538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ace73d-4f16-4c69-8f94-41ef4406c191",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c96c5c-9ae7-4959-938b-c64df13285c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe38b553-dc6e-4a48-9d62-da5d0f321cde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3659d649-3808-4d39-a80a-ee5e48e5933b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f455a354-7466-47a7-9517-d190adc8c887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94614e59-1011-4f70-a88e-5fa9585f2711",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6861939-193a-438c-a614-88ee79a6f406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3f11f7a-9b7d-4286-8676-2ecd8124adf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29277bdf-e197-4be2-a80d-ef287f00ea58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e0ebebf-180b-4c50-b3a3-66194de85780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dbbbbd5-40fb-4c55-96ba-01994ed97bcd",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "925562dd-8fbd-4d82-9b8e-4b9de2eea76f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ded525d-a44c-45bb-bd6a-7bec138dea6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c5ffc5-6aac-43a8-afb0-7bb65162024c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a04e92f7-5127-4d4c-a243-c96215e47656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e60476-0d66-426a-a4b1-47e42df26195",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06097bd1-2058-48ba-883a-4782bff8c94a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4590f836-df28-460c-9948-e166da033b90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd44c26-841b-4d87-8828-158d95b3aa86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a50dfde-82f4-4a63-92b9-a307ca847ae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c2481ee-46c1-4e05-af5c-74738fb03e1e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca87bd1b-79bb-4c58-b7c8-1c866eeda46b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7ef9b94-8b03-42b2-a628-71b25138737e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e6b6ea-d508-4a44-875e-6a6395eaf19c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bb1a617-f4c2-4e6b-942a-045fd26a147a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a7b68f-5858-4ba8-b427-84d3ffcba681",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44cc4971-cd4a-4461-aadc-8fa0fc182401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36cbe385-7316-4b41-98f6-6c4a43fd5dfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d7fb904-7a83-4d40-bc8f-26b26402c972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "22a8b011-80d8-4c15-9303-6dafffefe2a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ce8648-32f0-47b6-b174-6953d522d81f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "603f438a-e84f-4090-b35e-744a497c9ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5749e368-781a-4997-a125-cd69c572ee64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da3bf41-9b97-4762-861b-16ca6ee18b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d551da33-58f2-4af6-b428-1058de7a2081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15025365-6498-45c0-940c-bde65874e5b0",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d895573c-658c-424c-b7a1-c97027a17062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96b399a4-6674-41a9-8a68-a2fe4ad34370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dea12cb-555d-4b55-9e77-0a5eb25bcc69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4b7105d5-aff6-49e2-83f5-137204de568a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24674b84-b29e-4b25-8b8a-20198c074461",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f4df82-8521-4e9f-a942-d062d9131f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68857cf5-e85e-4668-bf40-0c5e54b171e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a644906-ec69-4379-abed-5bf6bf6d60f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c950d63d-1b5f-407c-b9ca-e25cf493a1ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f0f438-f8a4-42ec-92e9-5241c3289818",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed60442f-78b1-4a24-a8e4-3500fab642e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3038e11e-3dd3-4a96-8db7-061fa32d9045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b412f7ce-0dd3-427e-b4ac-2fc3e804f325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "699089a9-ee19-4af2-b36e-96ccb152aea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "742010d2-35aa-485a-ba6b-6262a460d4e9",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2804a76-d2b8-41d6-9d18-24a263b26f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17e9694d-2902-4c7e-ac5e-604d4a1f27e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac4da1b2-a901-43cf-9c43-285611c51637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "65dd8dd9-a496-41c9-8998-9bf348cf2602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7837528-ddd9-41a5-8e24-37c03377f6be",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce2f4f43-5529-42c0-b940-20816fc133ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1a0d34f-eeab-4fb9-b2d0-51bb978ebe1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c6b6fbf-0ae7-40d1-b18f-b6ee58ac7382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "95e4ac66-75bb-4225-8c9d-fd8eb0230d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d77144d6-4a07-4666-9997-8da32e3fbc05",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0997a20f-9546-402f-9369-8ea174e49a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ecbedee-14f3-4a32-9ad2-254d6d7cffb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e800c51-04a0-4ed6-842c-23bccf7c3ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e80146dc-84a5-4332-9db4-fbb6afcff035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d76538-a6cb-4b89-9d51-ed82e7124453",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3feb9a-ed36-4418-a7ce-be62e30a84fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09ba4dfd-b6b6-405a-a95f-9daea357d1e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a48857f-d154-41eb-a45f-4ad9f14d32fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "292e2482-903d-48a9-9d6b-caba45c70b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0efe43b9-7092-424d-b96d-b1e0b5a70465",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbcc1918-17ba-42b9-8c03-c3104d43d33a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edf7225e-1d57-4252-8006-e8de6e4838d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8322a2c-efbf-4f6b-b9ce-54b557773ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "60907f5b-895b-4922-84f1-17112fd17a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4be870e-a706-4fe1-a023-ffc8bb63a14c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9af1fd2-0fa7-4e4f-9c0c-03dde0b2c839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25488d24-9236-4844-a798-74d8f2095039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c998634d-00aa-4c1d-95b6-dff37afa8758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "209167a2-f7f5-41f2-bdfb-76b8487a7227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05cf7bca-8f94-471a-a6d8-ed728577dcea",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45cf4965-892d-45da-9036-a6b3cdf82876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ebd0740-93d8-46e8-93ba-da534374b880"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f14c2fa-dfef-4e8a-b5e3-9ac889c4da1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "48ef281d-94c2-4fde-a324-eb6c4289ff95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a54e5612-3d89-4a1b-8974-dde7fa5df64d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d51fa7-1c90-4d4e-9411-3311a60d1146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c09b386d-a8f8-4524-a5d4-51f124b9bde5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d92794-3052-4867-9668-96239bb118de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ebf08f6-657e-4a03-89f6-41ee68a87484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1d10d1-ad7c-49c3-8d03-1dcb0932932a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "429e4277-8957-4538-9d95-454ff4cec860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c0a5b4a-a7eb-43c8-986c-570e56fb9986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58c70ffa-b1d2-4c2e-aaa5-9f1712755aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe624080-eee9-4baf-af2d-cb115e62ed01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9551dc5-fbe2-408e-b59e-fff9c00d091d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a233c5e2-9821-4fcf-a4be-1333d2e70a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d81b1dc-3da6-458c-9ae6-ab6e2effc914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e8b8dd-19e5-4711-a4d8-1c0026f5ae89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "da780e16-04a7-4653-bec9-ed25020dafef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfac01e9-e286-490d-b046-16aa44f6d7e2",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b94df0-0e51-46e3-b01b-d07fc2e1e9f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "66b03ebb-d673-4fa3-b672-4a08d89567b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a430e36-9db0-4f5a-bcb4-d7f7d38cd777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0aa5c599-7032-482e-8cb7-ab0a683a8c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e1cedf-f368-44f8-ad51-331f5512a517",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e8662c8-99c0-466a-9db2-419fdbf5ff6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c1a206d-f6e0-4230-9588-e876070e799b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5f7836-1afd-41c8-995e-9943fbfbd593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3378198-1685-4581-b03d-bdb73a968713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ec06e3-256b-45ac-a66d-c3389886e2cd",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9078b55-bdd3-49c1-963e-2de61c12cd5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26957f04-095f-40d7-bd36-57cc8779a86c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca9e8dba-1000-494b-8e27-9392f19755be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "12a51490-48fc-4225-8c51-5ef3b56894ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3f4d668-666d-4e91-8b02-ee323c0840a6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af11770a-2c94-40f4-aeef-a4e14f1ef4e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "825dd660-bcfa-4562-a28d-1cac00539177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cffc4450-5de0-4422-8bab-34c220d059b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "887e143b-147e-421c-aaba-1b5efb218285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa04fd88-598d-4da6-800a-df9cef7f6caa",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a536f2-bc35-45ec-b8df-ed2ba1c7d83b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9443880-74c8-4941-ae52-00320dd92e62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99ddee3-f538-4262-ba41-7beade74b3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "72d020fb-5dcc-47db-ab24-8de72c59a2e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86657cf8-ded5-4d65-845f-a53f1c8cfa0a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87951a0f-9d1a-40c1-893f-51fcb3a72bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb92cd83-f7f5-49a9-a821-6a16bc6d8633"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "931dad34-fad5-4e65-97a6-2993b1641c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7846608-cb62-4733-8321-ab0cd2cd8dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a2ccc7d-d98e-4dce-a77f-7344c49aab83",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4766fc-06d2-4856-9389-0b19d7842d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f9a36eb-7d98-499c-8808-5100ce9f67c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f804268-47bc-46f1-b49d-c1b4b86809d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d43031db-ebcf-472b-9d74-b9d92b470404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d318f79a-4bbe-4aa9-89cb-f558e29d6dc8",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3637c395-791f-4e0b-9f0a-b6c6dc26ce2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7d60c5b-2aaa-41b2-af5c-f208fe8aa20e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8fa47a-35ee-4955-b95d-8fccbc41d68b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8cb54d3-69f6-4c7c-a870-7837a7fe0530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "564072d5-b29f-4ed7-b4ff-17985e6d8624",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e27eb85-b130-42e8-8dcc-0ca8d8b1fbe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30b02a0b-f45d-4b5b-aeac-c7087d6cee86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "218d6999-f7ab-4d39-bd18-26f802d77a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "b53b906c-ddb9-4784-9f59-d65bbd423239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b967a9a8-cd0e-490d-b8b0-8ddff2e85f17",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b669125-ad19-403b-b73b-7a9637f2fe52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df925a85-4a91-4da0-8ade-423436109965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "406b396f-1002-425f-a5f1-ddbf78181e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "efae7186-0a35-4a45-8583-d6a33648459b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45eb958a-13a0-4cae-acc9-57ee16a75e9a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47488a8a-8bee-4565-b3c1-06a4e5a739ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14d88e3f-80f9-4018-8e0f-630fc66998cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "602cde97-be06-4262-99e8-26be9a9c1f86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "66a3e96a-1c6e-4063-9729-ff538ca51a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c37cd3-093b-4aa2-bd6f-ebb400505b4a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86a023c-0222-4a30-b6aa-0f6df14b70e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a9e22f8-d965-47e0-9f6b-3245327d78cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54790f66-a8c8-4352-8bae-d26f77c16cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "31c175c8-d254-4f0f-bf5c-07a46fca99ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98cae532-8f1a-4a88-98c3-2f7e48ebec09",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a554733-8305-470f-9abd-bb7a55ff1b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95705d90-8696-47ce-aee7-a81f5f4e8f54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d9e648-4a56-4efb-84d3-c4d894e2cb39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "643d5eb1-7190-4d7e-83c0-99e7bd699dad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "303157c9-c9bb-4704-8917-3945338466e0",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "318effd7-976a-4ada-a038-e8cb085602f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a23be222-d25f-467e-8a65-831f8701a425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c222a8c-7fd5-46f9-9917-56f874e5ffcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d958cdc8-1981-45c4-9310-356f729ac8c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c3e503-c6c4-44f0-a164-9b2ef8229aa0",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a96cb8-1438-4f41-abe2-6805b2818bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73193910-8eb6-4d62-b0a5-28009a9edf80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "690558ff-7c86-43e4-8e97-8b21c70290fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "59f27dfe-6bde-45c9-b1b0-9eeb06cfd08f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "974429f3-ce05-45a3-be37-b1da144de359",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bcb5277-793c-4999-a729-83239bf307e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b42f928-899b-48ab-8b76-60ec5e5fdf5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3386a7-8789-4605-97da-063c37f80924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f9f2ebf-506a-423b-8c77-ef9453d4e0ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8015183-d6ee-4aef-a988-1449100936fa",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5839eb7d-fdb2-4377-9950-d8021c19a5e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45dea4a4-037d-42f5-8b1f-7641dfc955be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa4e53d-dfbd-4c4c-bcc3-0e855f6039c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "51096777-827b-4a0d-889c-f4fca05a4541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4851cdc-9d17-420c-ad75-33d92f1840f2",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acf3c594-cd2b-4f4a-bfe9-d07c208cba4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a769401e-bdcd-44b3-bf06-e9315d2fb67b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d040b8-c4b3-4084-be16-751ed7838869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "811ae4cb-f1db-4c8c-9792-65ea4c9936d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a972a8e3-0243-48e0-b777-6bf1110faa6c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "404aea57-b6a1-46a6-8f94-7c403b90b00f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8383ab6d-aa36-4df7-b037-0bf42ae2bba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ddef49-09b1-4427-80e4-4477b49bf80c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c402dc78-aa5b-4d73-89d8-3a760ad7af70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1cad987-645a-4651-9c9c-72357540b0ba",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "864d5c37-1239-41b6-afae-43094f7dfb46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f5f5916-d473-4a1e-b5b8-bd0e8e15108c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cce9135-ccd1-4560-a7b3-5372d5f708a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "846d5693-c63f-4a56-b24f-8976c56e99a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d30147-f143-4de3-b7f2-de918f80cd50",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "510d3ce5-f4e0-46a4-9d88-1cb8fee48315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a64e13c4-804e-415d-875e-98c1f9db4e6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab7a0079-1f19-4669-b755-38835e0779cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f939ea68-53f9-4241-a118-9c732db09a84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "589a8612-1677-40d8-a871-ef5815274027",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cfcc6d9-c0c2-4197-8545-453f7086fc4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ec04ede-8beb-4bf0-a771-91bc337810d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "887e56ab-6211-443c-8dbf-b45e3d71e29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "640f8f61-5f1e-460b-b5fa-c9092b61d013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b25c62-2e92-459f-9576-42663c20b52f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f404fe-8386-4389-8544-8ea19915fdde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f87f0109-42f3-4a60-9ae5-ca5e931cecdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11d2e15-ce8c-4c7a-8d5c-24e9e3fc9d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b8ef86c-596a-48b5-843d-a628cadb0e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6654c5fd-34c8-4325-92a4-02fe6fa99a5b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f00415e7-b18f-4af6-99ee-27bdecced627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7adcee2f-d4fd-4bf1-8567-fdd3ee042471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4cc138e-3cc5-48e8-939c-ba98151be537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e440fffb-962c-4f26-b0a3-18592ba32048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f4f7dc-456e-4b21-882e-b4e31c797c45",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a742773-d6a5-4863-b55b-57a8c39ea084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "364b7ac4-3d63-4081-a6ea-33f4b1b90825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d26f6e7-37f1-42c8-8dc1-f18a5c1b6012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "de7ec211-9875-4853-a3c5-80714f3d9be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da23fd2d-cbf4-404b-a834-b151d7cdacab",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b44f7de2-0ae2-477e-94c9-6db7d606935b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9d7911d-dbd1-4011-b109-b216596e6c21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b381e1b3-4372-4850-8e22-46e80bdfa8c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f453ae6-8e10-4b73-bc0f-5fb10d2c8024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc56ea9-fc3d-45e2-a9cb-7486d8194abe",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5226607e-53d9-42c7-b4c4-27b6e8c34173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cff8166-0a32-41b3-82be-bd3fa8fc1a63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b9b073-2b3b-4504-a1e6-f26733113add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3647cf78-9f25-4c38-8707-6fe98b2d8a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0793376f-cf7e-41e9-9074-c6b858b8c578",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f06da56-a133-4ad0-a790-89bdeb254e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "032ea717-8066-4870-9675-7807096f94d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27aac708-f09a-421c-ac91-6d6112d7ca37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa5c6e2d-06d7-4766-99e3-2b6256ec0d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea1edfb-8cc3-444f-af1c-832729641af8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "013c42ca-c47c-4d77-b1ab-19cdebe89b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a93c0eb7-7de7-409f-9992-62bc331642c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc777ab2-bad2-46a0-a07e-0e6cc797879e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "db9ca46a-2aea-411b-b7aa-9e8327b3a71c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ab649d-095c-45de-9ae2-5ae3b325dffc",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a28e397d-23ba-4556-aa81-a63804ca32a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f27f093-f7dd-4d57-b5b6-07b57b0f1e99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4509ed5-a7a6-49c6-9c4f-5eb17943adc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f15a24d-3c67-4268-81f2-721b5105e441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d6553c-f31c-4f8e-b402-517e808fbda6",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f92500d-3064-4afe-b5cc-69b9d39641a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cb91752-812e-4b6a-9416-d5baa8515b13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f73f9eb0-b535-4589-8eae-82a4e4580ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "755093b0-8b11-4576-b0d8-2ff18d1bf471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc06d1c-1f3f-4792-ae63-504d8dbcdb64",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ad7ce9-8e61-43ce-97eb-6e5a54e68a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "472bd0cf-2db8-4848-9350-363e9071fae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1db30d-8626-447b-8872-a6df7e716a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5f8e1144-aa7c-45c9-9282-85d934047ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "592589b1-e68f-46dd-ab05-01bead20d3da",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53fec7a-250e-437a-b0ec-b1944509ba28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e8b5812-1eb8-420b-91ee-aebc6b7fa952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85bc27f8-9ecb-4b99-9eb3-146972867d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa7106c1-c09d-4cb8-b282-eaeec17888d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "451b50df-5ce3-4d4c-aa80-d7ae444e332a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "323b48b6-60ed-497b-9da3-97b2222e671a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a96b2ba-bea2-4526-be19-b0a76a23d9c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4640c32a-de93-4842-a8f3-69bf37be694c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1e41519-efbd-444e-b216-b745324e7441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fee3bb9-b5e2-445d-be89-8b1a43d49018",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f9723e-27a2-41d0-b880-fa277c23a141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb8269a6-f82b-4d82-be2f-442e7d08e165"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f995b4-c360-41ca-8b9a-a33c7cd910bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "91845538-daa9-4809-857c-09554e5f69ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74bd9916-57cd-4b3a-b01a-7448b7163015",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2abf658-2e7d-4816-b1c3-a0b1ae46cee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67e6d604-0640-4f16-a917-a96b00dc4d48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893ec0e1-bc3a-4bf3-9986-3db16f2ecd17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bb17ace-bffc-4f24-bc94-0fa927bac22a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e67b349c-01ff-4b7f-a9d7-3df0e3be39f9",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "145ef56d-0edd-446e-9a85-7cd3575b3996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe0a668d-8a97-452f-a154-1cc37484415d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c27127e6-aac6-4153-828e-bb02bf0d3edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e92409d-a283-4e80-8ae3-616536c29508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "000375e9-f6d8-484a-b65e-4283fbadd688",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "173a7180-2b4b-4bbc-a98a-e3675472cddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebbf15e6-2872-4574-a031-9a5c1aed1c5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aadc86a-3724-4d6d-b657-6437a66d1894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a734860-6252-4019-a97c-73e41dcfd405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f07f84ce-3c0b-40b4-a146-b53d3c048d80",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e18bd17-a943-4ddc-954f-ce39a4f84be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a8772fa-a82e-4d28-8cbb-22dae3b0020e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231e16c9-a35a-4423-8b04-ad2392f390a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d1c13f77-7ce7-45c7-99d4-65cdfd87268d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "694b4d40-fb6f-4023-a7f5-ee7faaa636b0",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be4525f-005c-4e25-8a82-93146d0984c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9396d49-9e5a-48ab-8468-f0583af06015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f93fdbd8-cefa-40ba-b3d4-3db9b6fe17a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c632ebf2-ed22-4d9b-a45b-dbe7047da60b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfbded18-02fb-42b1-8aff-1cc48b31b1f6",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e04f9d-67ce-43c8-a21b-9e22d3767016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6b304f4-dab2-4a3a-b075-147f5829a182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6dc16d-850e-45d5-a146-b9b241bfe84c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2fc552b-0276-4c5d-a1bb-95b95c49d4b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd0b632b-4507-4ef0-8601-285dfdd1cb3b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99edb78e-3223-4578-881a-7b8e135c2e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d00248e-8b63-4162-8b44-9da692f7108c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55c6d10-b43e-46fd-8605-b3704e5d83c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "025d14ba-5bb7-4466-b6ca-120a5b59801e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca227a3-6ffd-44ee-b077-27b5aa0fa0a5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5faf7ffe-ed45-461a-a81d-1b886e92ce4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a1e1c01-adae-48a4-a0c9-0df21effcafd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d59eff6-e2ae-4449-8320-5e240b4a5bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e093154a-5487-401f-9442-951f725e24df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d6f7a6-09b2-4d04-884b-fcc771b0f5a2",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce04c41a-2edd-41b8-a4aa-2601a279279a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c685eb83-fec1-4d0f-92b7-a9b98317e91d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "534f1a8f-b761-4e03-936a-d18ec9bb69d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0bc3086-cb9b-4c30-b814-21f9333b9a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6affd34-5cba-4cd0-a803-963e4052eea5",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d02649-c7f9-4a99-a426-f332a6be8730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11d64a51-0548-4a45-b5bf-82888e6f057f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5174d04c-a100-48e9-9456-93750cfe8a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8fff8e77-4605-4629-9aaa-1e791f92bb05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "294da6d5-de0b-4db8-a0f2-6a3e568cf102",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac3c7f0e-c3aa-4316-8974-00e98de81b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b30b47e-3269-47fd-a563-733760f12016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d68e4c-eb2b-4e1c-a554-dd6fff6732c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "200571c9-74f5-4836-b6be-d0ac3b4f4052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "302c0580-272e-4a45-bcb9-30943a1c7e85",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c64e1b-139e-4f9a-9596-db4c5369455b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b0f5231-48dd-4915-a9fe-6a400defb167"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4afff45c-0880-4cc9-a7ed-9a2050004877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f512223-f35c-4e47-9792-0d69d127df46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac30d9d4-3c2f-4e89-b1a6-bd5d882ab7cf",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3e830a-86ef-4955-838b-a616fb384dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49bc02a2-ce12-461e-a186-f8d6055ac26d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c37242-84a8-44a3-9ff8-b6bbe8631429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9573164f-867d-4f9d-8753-74d76a88ffd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e501ab-a6a8-4c7a-b384-9b71a5130ad6",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee8dc448-076e-49fe-b3e4-9f5596d84d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89a8405a-e5d3-4529-b129-8e8f8ab293bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "762245aa-2c4b-4d0c-b149-d16aa15570c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc6012ed-3199-45df-a328-466c63a780c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd232882-6990-4153-80d1-14846a5ae5d6",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49620839-0ff5-4dc3-88b3-9289d962ae39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "243b86b9-161b-41d2-908c-2b02a85c879a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f05a5657-d332-4345-a265-47e9267410b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eb9d6cee-0cf7-44b2-b80c-aa0a6cda95d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a8b2a5-e1ab-4421-902d-7f24b3a89d7b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b12bcd-a8cf-48fa-b81c-5027602cab52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07e61a0a-0ee7-492b-8c57-a3ab1ed6b64e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e21dc2-0bca-455e-a345-54ca1177a0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc50962e-1c42-4416-87ac-02d5cb88f95e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "349fb310-32ad-40a9-922c-8bc993964307",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a584694-827a-4e80-a86f-a3ea387c00e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9510686f-b663-4108-9c38-7df1ea13b271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44be177-1ce5-4ee9-bf62-9bf39834d2e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a4ee131-70ac-4b77-81a7-d4aea5bb155e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0a98137-0afe-4f28-a3c7-385fac312ec9",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b0eb8a5-e6e4-4122-96b0-613fb293c4d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db6ef05c-2b77-4350-b07a-45dd92c3faf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874b8774-b670-4d8d-bec5-a3581fc0f49f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ade9adad-18ab-40f5-84d2-f8fda5cf9d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a3a975a-bf34-4839-9dfe-7411ce9efd58",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a6155c-c941-4c30-ab8f-69ac90d22b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bf75b19-27f1-4986-949c-0151fa90be5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fd7c1f4-2d53-4227-91c2-0ad88e20f0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2fcc46a4-107a-459d-abf3-73ec12476cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a93f7b-4d5c-4031-9e18-cae654d9c1ef",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0e11fd-8abf-4699-bcff-52f15289f30f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6913f5d6-3522-4d7d-b94d-efd2368add69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d57fe85-41c1-4acc-96f7-54f5f46e4876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e96cd197-b8c3-4915-b9b0-5c0adea0556f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c1de0c0-fcae-4963-9337-90562b51e3b8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0930ae2-117a-4aea-96b8-00737070d3d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc297b9e-38fd-46d0-8c88-e2d0b66e1aaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1334cc65-dba1-4698-a32e-95d1854e5168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7abc3e49-c517-45bd-9ade-7baa637273bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed91dda-7f05-49d6-ae57-f2b4f251df17",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba7dcc9-b9c9-41f1-b0d1-76a7c18602c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "40e6a8f0-7a47-418c-86a2-e8d5c4b982db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a30be78a-22aa-4c2c-9a17-b47eefad5353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "32ec7598-4a19-40fc-b0d8-1b887e098bcf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "377ca665-e5fb-4d7a-8d36-90a9350b9341",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9a7d78ac-6f6c-4aa2-b701-c9b5c4af6b8d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "812176b2-3801-44b2-9324-945c0766efa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "264fd213-ceac-4181-9ee1-fdc1e3cedca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3b8e8f-475a-4e66-8364-40248523b774",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb88010c-e3d8-482e-8a84-760c98a811c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44babf0b-c8c4-48b7-8b27-a99cc8255d07",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "699e820b-da62-4fda-bce4-0d7deb728c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2d959ce0-57ef-4a9b-9b76-907594a29ebe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad26a4c-4255-4e63-90a2-b3e3cfda02e1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2638300e-ffc9-4579-b7d5-e883127c837c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94479dcc-cf93-49a4-af57-1558407b7bac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28786397-7686-40de-bfd4-a2ed9006b911"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "118e82c2-f089-4c42-b58d-1bb92c18ce6d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "91736108-aca1-43db-9388-af41ea0b04e5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0b5a319a-154a-4ec2-8542-f2624438ef8a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "94f7c54d-1420-4cc5-a038-ccdb0be49f18"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "193dddcd-cb22-42f9-bac9-3e2addf55840",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dfbcc1dc-88bb-4c48-9bbf-8689c37be17b"
                }
              }
            ]
          },
          {
            "id": "dc6eafc8-5d90-4663-ab23-69e1302bcbc0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1d7eb446-c1fd-4c8f-bbdc-3640cd1eb6e2",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "495a5fef-acec-4115-b315-5079521bb8e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0f7eced7-5350-4bde-b195-a92015f0690b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3bc2e1b-0517-49bb-9a74-56c44a38abe4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8852fcbe-ed0b-45e6-bf9f-af1c43827035"
                    }
                  }
                ]
              },
              {
                "id": "6e98403c-1e70-42e2-a3f3-6aa4edceb642",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1c5d354-fc2d-4a4b-ba49-6f37cc8ce15b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8508ce7b-b330-4f00-a106-cfcf458252fe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34ef9213-88ad-4d44-ab3f-5ee4e570b44f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bb0a7402-1b93-4a29-b47b-af4efd2a76f8"
                    }
                  }
                ]
              },
              {
                "id": "90e04f51-4438-4713-9d5d-9bbaa3b118d2",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa25cf1e-7db6-4018-9981-0b8c0e63d977",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b6c98ebe-3f0f-4cd5-a636-9fcd50977c08"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f29229c7-633a-434a-849e-2fc8debab791",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9017d186-d041-424e-86e0-843a95bbae0e"
                    }
                  }
                ]
              },
              {
                "id": "6b24241e-07ca-4a71-828e-363810070873",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "35ed9c45-6318-4c77-9175-5d5a9efd1955",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b640d170-30bf-4ef5-8cb6-e6f50f5978c5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "44f0f368-2321-4797-b295-078c7de1ba71",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d82f9120-e42d-416d-8b2f-c1f78604b53b"
                    }
                  }
                ]
              },
              {
                "id": "79a5fcaf-7d21-4a27-a570-8c7c739fca55",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6cb27ea-ba4b-4a6d-8e2f-02d5bd85bb40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "95dfaa28-29ca-4b12-939d-8dab02366220"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75ccffac-89cc-43da-8826-ee6ce160c783",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "622f9a81-8319-4709-980c-f13c40a43ae0"
                    }
                  }
                ]
              },
              {
                "id": "69f6d45c-0081-4249-9b01-454dfb67e142",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "621a2681-c2a9-4e9a-8595-9985b131359b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b8dd0f53-09ba-4bfa-a41a-016089f9068a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b4d6b42-cd0c-4b01-8f4c-1e95fff88bd1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9f3f69c8-d66c-461a-aeda-0b2e4b243296"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cae3397b-7fc0-4418-b339-14c8a69dc668",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7f1cf4b0-35e6-4cd7-89db-91ccdd0b55bf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3292a738-13ff-4229-bd08-94c476757890",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4eca4bef-cec5-4b78-8001-01d2a7009149"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ebe77b6-4148-48ac-bcd1-4234d6cad908",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "09614d36-30d9-46a6-9131-f04fc1c3f9bf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e7b11e87-2250-4b52-9fae-9e9f7e141099",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "94ea0c8d-420b-4a13-a401-b7a201a50574"
            }
          }
        ]
      },
      {
        "id": "b4528f5b-c10e-4efd-84f7-158c3ebe7451",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5e3b6638-df51-495f-9777-e5bb7e5608d7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "af02246f-7fc9-4f6e-b1e6-1dd2ff1b0938",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f01b643f-fa99-466b-84ff-274f0b0d17eb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd01ae40-63b9-4883-9e07-1f884ca962da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9652c035-d048-46a5-8da2-a0b004969db3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74222371-3e55-48ea-944a-c3fcbe5be81a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "45ecee13-2831-4fa3-858b-7ef7dd97edfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3741fa9f-256e-4379-87e2-ce705bfa9137",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "632bca0e-5f4a-4ca0-ae13-cfc568027e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c621c99a-0c36-4b49-b075-07560da57741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ed6a7e0-6311-4e38-86ff-283ec9738f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fc79592-990a-4922-91bc-06aed9c34eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15bcd604-743c-4716-89d1-e2eb1a1e2e36",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c4b2ba5-3a39-4deb-a70a-eeabdf4c4a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28f84375-c148-4936-bc11-b67b57e34565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ac10f9-04ea-4534-8bae-22f56a17d373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "40e82a06-1dda-4ad8-aabe-50a36978fb51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9092199a-9394-4623-882b-358166b3523d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c7d2f1-48e4-4bdd-8aaf-a155a0261197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "487d12aa-6c6a-422f-94d8-71447effe376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "658e518f-2f59-4d01-b67d-8895f27b1163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1184978-f092-4625-aa78-684b4faca9ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ba4baf-d9e1-4b6d-bf80-f67c3f7c8b27",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f1ba9a-9669-4adb-94a8-bb5b023bd6aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2a2b3c3-941f-47e5-8ca4-68e58e7d5cb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ba049b-edcd-42fc-aeb8-51e9d55e9393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "867f4758-446b-4a33-bcb7-054cdaaad037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8183ce6f-3a9c-4414-9770-05ad7f5e815b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd01e453-294b-4fc2-acd3-5e46af4e9788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa322484-2451-4fdd-89a6-5d3606cb9f7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e641f53f-1050-46fc-aaf8-52e0d419ccc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "14e4b83a-8be0-479d-ba30-aa2e299f6def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee8745f2-433c-4d41-a4fa-fb63c90780a7",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a637da00-aa89-4d32-ac79-01c1c4a8b212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4be47cd3-9ffa-45ba-bd40-0965e658713e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8fd173-0619-42a5-957e-fcc654e645a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "27276918-7271-48f1-8a0f-0a8f6a337254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41d597e7-28fc-4835-9dac-edcb9fa4ecee",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "564a71fc-3a84-40db-9a93-00ac70503ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "940f9ce7-d643-4e98-b3ff-1c3e7145d7b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b7b9519-6010-49b4-a630-013fe944ca1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "abc2f2e1-8a5f-45e7-9519-a94d4e310f3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b678cd1-efcc-4a90-a565-1fe6c223aa79",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69969f95-1805-4440-8021-d6f7a39c9001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01b50eba-3b6d-4ff1-b98f-5e9c2f7f3c90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "042828ae-cdaf-4823-8288-9cc99944a7c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bf25365-e98c-45c4-ab0f-38a9bc1dde1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb62516-8bf5-4819-8c5b-ac4d6c7fe8f7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33673211-67cd-45e8-865b-b57c1e8ff025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d2a9ed8-434a-4023-813d-5eeb6586d4de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14646618-f581-40e1-a66b-cc3b8e573711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3494bf80-ba8e-4cf6-8180-60f200d3c3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc90000e-97b3-4659-8e82-803da79fcf37",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f0f5e7-1e16-4bf0-b2e8-a7ad3f530d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "533fd8be-002b-414f-8bb7-e68b10254598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f821d5-0394-4705-9ae7-02e0a45303f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "bdf668df-03c6-4fa7-ba51-e1c7ff9a0e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1949e43-e433-43f9-9cd6-21bfce7774e2",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8937a857-766e-4bdb-b23e-c9c26a908286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef2eee67-0c26-4cee-badb-06f3ff31ad1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f554e0b3-2718-45ff-ac31-25ea23655667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9ba2c5ec-abfc-45b2-8367-34bc4655d5fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f81fb3-620d-467f-862a-19515ec2a2d4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c2017b-cc94-4d8d-915f-bf5da1ff76cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47d5f81c-3048-4524-8827-d64eb67cca70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7935512b-7a66-4405-9d7f-a070bffa0539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cac229e-cc91-44a5-9bc4-656f0a6e2da8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e195f009-daf1-45ad-887f-55c081894386",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf31d486-4c55-484c-a48e-ec041f930bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b3f94f1-28c5-4eb9-b5ba-52cb19be776a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bef7adc-dc0c-4e4e-92f0-b17b38e1848a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6c8cdf0-32ba-443e-89b4-8c7d3f7b89b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b1122ea-cb53-4911-bc43-32ec945160ec",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c606e1d0-9646-478f-9474-37b3aaf3655f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32c19de7-47f9-44c6-abe9-11de40a9b6d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c60bac9a-4f34-42ef-bca6-1b33dcf00931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ad2ca9d-dbd5-49ba-a214-5d2088cc3dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "577e6beb-e561-4c34-a577-5668f3dd1272",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24578efa-6055-4d0f-b48f-e96a05e8a316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bde327bb-9c3b-485a-8218-e288be26331c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82702495-e43f-40a3-a764-f61990d9df67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "055a36ac-d519-4881-951a-bfacea5ae31c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1590ed0c-94bb-4f51-b898-cc301b557490",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8619f561-f6ee-4876-bc70-28fdd90e96a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4cb8ff4-f942-4858-9ed6-6fbb95cddb1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4767c605-bfb2-496e-b1ea-87b86f0d41ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba92c6ff-db23-44dd-992c-6ae054f6919e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb80f7c-d96a-4526-a4d7-1ffcc3261ed5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "266f10ea-8089-40ee-9296-2a9a29bc8dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1011d747-5e5c-47ec-a4f3-a1239d2ad8e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb09663-2dbd-425c-a226-cd139ee78015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "efde5cb6-7425-486f-837b-28e448e90711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c6fa954-41c9-4c54-89bf-90ff61f6c90f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab6289ba-cad8-4011-a725-5cc70d4871ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c3a06d0-f34d-479b-bd7e-885e82e95a3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "688ff92b-163c-48b7-8dc1-38ebbdf06aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16e33825-cfe7-459e-b79f-5f5504ce114c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840f9ba6-8b2a-41cb-acbb-9181bdf791cc",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "198c3dc1-8d01-41fc-9d56-b3b831aa8461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a566718-2685-4f40-9d40-492488c5e371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d111df-08b9-4f43-b983-a0072ce7dfd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07153214-d613-4369-a8bf-1a309c2d2f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e369733-18d7-45f0-9e69-85cfac71a465",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f05a7b9b-9624-4017-9ba8-e93507022d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaa77197-ea5a-44b9-969f-f9b539d740ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a4f8b03-7bf0-4008-be1e-091bce2f834d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f320ddf0-d22b-41fe-b3eb-c2acaf86455f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ac076d-4eec-458c-a5bc-20b41a106f33",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15825cb7-8bbc-4b3e-8335-92571350bd53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d8e399d-b282-43a0-924e-84c9768c463a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d93cf1-81cc-4ff9-878c-373fe0a09fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36793d87-db1c-402f-99d8-2183d646bdd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b89c04e-34bc-4fab-b46d-56f714dca9bd",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9fc4d9-4ab1-4d08-a4ef-bc306e55ab8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbef3845-9386-489c-92ae-6c3953c0c86f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f1307db-8034-49f9-84e5-09ffa53816ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bf4033e-baff-47ae-8619-756836bf2b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "140d3ddb-2191-487b-990f-f69aa6aba404",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9835040-6cce-47cc-8a0c-241fab22b919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88a50095-77d7-40c6-8f43-05d16e8c7089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c39788-9436-4160-9450-303ee123575a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c0e82bc-a9ce-4892-bd35-40eb50b68545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c14dfb-2fc0-4d74-9c12-c241d2896e8d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e873729-6184-457d-8bac-82ece161e324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9994eff2-a1ca-467e-a003-ad21dd732473"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae52a0eb-7e29-415f-b402-e87d77655a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a633ce8-26ad-4551-bd5a-477f82f1cc0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a163ee7-8b80-4aa7-8389-9ff8e6829d83",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acf15727-ee09-4749-8cc0-3ae039ce6adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0323fc85-92b0-4a8f-bd50-39a59d06359c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fdd2688-946f-4563-ae09-7cb120016586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb549978-ed30-497e-aff2-6b192fab93eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6689ed-fcd0-4ab0-817e-c113e94b067b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3f329ca-0158-46a8-9e4e-f442bc3f2c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a602352-f4ed-4a43-aba6-e0f4b8c0cbbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2676537-d046-4a9c-8887-509d33740578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dbd0243-c472-484a-aa36-4a4adee6865c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69f2295-21da-4c39-bb0c-513c61977068",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf25208-3355-40bf-aec2-4ed962e3b8a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b856e66b-5fdf-469a-845b-e9d741ecc3d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efdc7054-a78a-4408-9de2-f9a19928e995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dff3acb-af2a-4221-aac0-01c747401354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb9c140d-ab54-42d6-adf1-b118ecb1214c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbdcb619-2faf-4c0d-b921-62a4a9c5847b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33357a09-e412-42c8-b6dc-7ab783109bf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce007b1-8681-4b33-8c90-5afa4178ad88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd82487e-0cc4-435a-bbd2-d5dae97d3c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "818c5f7c-eacd-474f-a87d-a194ae0dcf86",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d62c5a-35d8-4437-a6d2-29e11b9f9679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a28fd8eb-539e-4976-bc3a-5cc5eb7b283b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6349e67-5707-49d0-8ef7-2fb463ef11c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "873f39d0-f08f-43c4-ba24-2f4b3fab7e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac9e3b5-93a9-47dd-9d57-5d46c8a9b03c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6133142f-655f-4ad1-b57b-d26bd8380bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73a70796-5ce6-4311-a2e3-3738b0d89ea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e9dfc91-e708-4113-8ac4-96f9c0ee04dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "771d3473-e5c2-425d-9e0a-1533c3dd2f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c19a291-9ca1-4f41-930d-64fd60e00d46",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46105542-9db9-427c-ab54-6f4ef01cf857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e94cf372-8884-4f7c-87c3-fce0c9e2854d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b1304b1-19fb-4463-8072-de6ec31c388e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c904fe2d-3c72-4519-948d-ddf108ec594b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a1233f17-d6e4-43aa-92c8-411cd251d9de",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4ab43abd-50dd-4e3b-b39b-b4a434841d73",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b17d8ac-4c58-4f1f-b6ab-aef732ad04f3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "eb4ea88a-e98a-456a-bdde-ade5ba4b4a6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f63561b0-e728-4a6e-9ed2-b66c59b1f27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c8c19fe-9e1c-412a-be29-4dda6de563b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f94f215-1f16-4fa1-ba33-b23eabb827f5",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea2b498-c2f0-4fe9-b8f8-49bd2bb476c1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "97b8af47-2acb-4e16-96da-3b49bda258f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "868ff416-f708-4355-8d0c-b592dbc2b2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "04bc9c4c-bb18-4ba3-81eb-017d813a2f2b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1d7bbad-b8ff-4c26-a09a-a3b0963bd4da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3fc93051-fd0c-4b1d-937c-db772c0045ff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba310dec-19db-4c04-877b-99198d279854",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9e663cd-37bd-4d53-98ac-002e9caf77c0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d19142a8-2a89-4cc0-aeda-606da2888cd3",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7777f301-4f30-46ba-88d7-dae69f530caa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "70db657c-b334-4521-a950-fe908c51757a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "80db8e67-d239-48c5-8cbc-ddc1653f538a"
            }
          }
        ]
      },
      {
        "id": "2ff4d3e9-354a-41a0-9565-4bc48ee0118c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ea8976e5-1296-43d4-a518-8cbd1ab4fdc9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6463b969-332a-406a-bf29-c41ac4d8f364",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6766479a-1d01-468c-9fb4-0a0b99e31221",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40df9089-f02e-46e4-b419-30406a96650d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a30af345-e75d-4191-9311-708fe953734b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e55bee64-f558-4d72-9ba4-5235cb78cd17",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b0b038-2cdf-41eb-8b0e-98a6b54f9d61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a55b470-213a-4e13-b118-d4df2358f3d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c31c7ee-b620-4a2f-9dcd-605113468923",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "110db11c-2157-4e56-b915-b4e789a68e2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b49ef1de-9f1d-43ff-81b1-5ce56cbfc1db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce6ab60b-760c-43de-ac3e-6e7ef1a4e770",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe21572-4704-4ba3-9898-54810a35c973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac82bac6-e895-4e59-bb34-1e32fc7f98f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4de7cf-287a-4d02-a7ae-a5fc45484f0e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c15037-42cb-4559-8edc-94cefe342e55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f17748d-5ea4-4fe0-beba-95c7591f8bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b40250-4e09-43a6-bedb-72ce352e22a0",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "000fb16f-5c3f-4949-a53a-3667e19a34b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bdb8e72-d334-4508-a3b9-f932a0883727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c02359a-19ff-42bc-a733-e9b4e8e9cca8",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d37157-8776-4c93-a8a1-ca9345fe8ed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "469603ea-8586-4746-bfe5-0aa602bbca47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4110f831-eed7-4e40-ac92-35d049f8738d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95168018-18b9-43a9-887d-aa47b0ea6f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ef92af4-70a7-4001-b1be-e92c088f33f1",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0699a5-43bd-45e6-90da-0db624715474",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d187b1e9-0081-45ad-833d-eca0620ea620"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a33eafb-662e-42ff-b618-490706d4747f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd49e52c-5a23-402a-9846-190fabd7ad21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65c80b51-9bc7-492d-8e5b-ecf144772d8e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f95bc3a-798e-43bd-bf8d-1358f7c3f8b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c7b3ff0-5545-42ea-ab90-bd5dcbb140dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73263aa2-e5af-4f82-a755-fedf90772c42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e38a5f3b-264f-4210-8788-03526d5375d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f29fdf-bbf6-4316-882d-8cd9aa9fb2b2",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e9f5900-d2fe-47f2-bd36-731b4ddfc9fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e228fcee-cefb-480a-b17a-15955feaeae7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe903d8-79f4-47f6-ad39-d96265aabc89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "685e5269-53a7-43d0-9624-cc39ef84bf62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35159d66-9be6-43a1-8c33-20ea5b80c33e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea5b4ed-0680-4c31-b078-54c66e0464e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cf85b39-2e1b-4395-b638-dbb9fcf88e72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "777a7ae9-86bb-46de-b52a-0fe52671d28c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b44e3bb3-19dd-4db6-8a74-68f223a9ca36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92f6b1d-9818-41e3-917f-b857a9ac9e48",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e2db77-d49d-4473-88fa-e1f38da66051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6837ff08-f7b7-4288-afc6-f5e1c8372257"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a252a6aa-757c-4aab-b024-c6c289e76385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f9d1711-bffb-42db-bee3-5ba5f131dec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "058a145c-58b7-4696-9b7c-25f6156189c8",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070953b6-db63-44c6-94da-437b2a26a7ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81aa1bc0-7b31-48dd-ab1a-ebb6f1b4920e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b8c03f-72d9-4d84-a044-652b220d0d06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98e9048f-e2a7-467c-a213-0ee2b43da004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28923315-2858-4caa-9832-4f51f7fb7247",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323e5875-71c0-44c6-a11a-c9b53c125095",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72a5ed62-787f-40be-8713-88495468082a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b247b2e-e4ee-4ea5-827d-eccf132f18d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d72529f-a192-4f80-9d5b-df20258e895e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ae6de6-1f9f-4626-87ba-083a5e91bbb0",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a8f290f-49d6-4801-9ab6-57a174af1f2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5c77d3d-18a1-452a-a0ea-202dc7bf164b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe2c0a8f-aa59-4f8f-a7bb-0f6cbc2476ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2ddaf97-895d-4563-b459-02c41e272743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef3aa18c-5e2b-47cd-a727-83a0dc0077a4",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9253b7cb-9b22-4931-8003-5da8ba96ad07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ea96212-8a05-4f92-b0be-6da5d1d5e38a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d25b8b6-4acf-40b6-9bfa-84ee08ff0777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3813aa97-9fb6-442e-ae97-ee4ff7006c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b3bbfce-fce5-4f2a-aa97-cc619debfacd",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ec12bd-eb90-4633-b29d-0a31bd5f38f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa24edf4-dbb4-47b5-97c4-7a48fa5f9851"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1256423f-5cc8-451b-9b57-34224ef1add5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdbfde5b-af48-47b0-8a65-17630d4d0edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "353f2c60-8b69-4a2f-939f-4c76f23738f5",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc830f9b-6aa4-4626-bc0a-2cc758cda500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b43e93cf-072e-4161-abfe-6cba86c40f5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff0b9684-1902-465e-81be-85b44449708d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec0cefa1-e1ee-4665-bd64-2a62ef381abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8fda17-785c-4a82-bd19-5208a59d824b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3260204-13f4-4374-8f5b-da1a93802201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e26b1236-e7e9-4efa-a983-f3cd0803c8d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a28f416-05fb-4e80-9aba-09e73bf2914a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4901a917-cb95-4921-8dc7-445743a28dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a201c9bf-d486-4a01-b18c-55c8309f0fbd",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd7f849-ad41-4bde-8c11-8e265102357c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac702843-751e-4b9c-9f3f-e58cb938b224"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e86eff-0fc3-4c51-ac6b-cf9bcfd21ac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "685d0193-4860-4ecf-9a6d-c69f35e46ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53910275-6564-47bd-9dbd-a95eaf85d653",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c8baaaf-aa52-4377-9da5-05658b3781c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83dda873-b927-4723-b02c-37b5bf5f6fd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7986ffa2-52a2-48fe-a47f-d1aad4440a6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5d4dc10-354b-4095-ab71-7a8a541ba4b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7dcdd92-2412-469e-85ec-64e79d3f5cec",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b85b97-3d08-4ee8-8c1f-9e18f94ff2ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e834519e-d1ef-4458-a7dd-bef520ae2ddf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8938a62c-ee48-469b-9ec9-1a45bef5932f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01b08158-6291-4aea-910c-0bc0c46db815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e678ba0a-b211-4489-8386-ab84b2ebe719",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64904dbe-3562-4c1e-8b84-bea121cb3dff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70b19185-aa3f-4c50-bad3-496a362916ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f09011d9-e618-466d-8fff-d13d1cb8679f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3418582a-29ed-4086-810b-e8d84d913ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f002088b-b12c-4e9e-a39f-32445cf5960c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb2cb995-dcf7-49b4-89e9-375108790178",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81be1eef-39d0-49a4-9e20-d2f77d0a7aec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8123515-46b3-4ee6-b82b-8484850dfc07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec252a86-e656-411b-ac77-4c581db4defe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f6ba17-3e65-4e58-963b-891609fa7094",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eadc18c-273f-4f01-be8b-a46a482ed07d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eae39362-4960-415f-972e-322a467e3ed0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa0cd1b-1845-4622-8358-c017dc584a2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cae9ee46-c033-4fc2-850e-bafa840760c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcfcb91b-5fce-47ff-9124-349c1f979d5f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d59c65-5b65-4dca-9c01-6234cf9b257a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "153ef7a9-2a4f-476e-a78a-f6fa606ddbbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ebb90e1-33fe-455c-ae06-628f5b2e58d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af2cb920-4e30-4807-9b33-9b49136cdb58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddba5e81-5b73-4107-85ef-d7317b98f6e8",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2859e79-dcf8-4546-ae8d-787931473852",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "881b52b7-e6af-4ef2-bc38-d591fbfd0bb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0927e90c-167a-4e26-b9de-4ca0c822f46f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e15c2d5-d437-4103-afde-1903bb4cc36e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ce0cfc-e529-4608-87d5-900185eed414",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf07939-a87d-4f78-b919-b89c9f43c3a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e10cd316-5037-4b7a-95a6-d47fa2ed5119"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0728fc54-64c3-428f-a6c6-1e80f1bbc0ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c70e8a09-114f-4e76-b745-8e24319b6020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00682412-1765-4307-9321-c5a9ce7c8229",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed9cad14-bfaf-4736-a4ae-c708276d622b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbee115c-fa56-4ef4-8c78-30b29d5bb1b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb165b6-32ff-4cd4-a3f3-bc26e02db142",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afe43398-663b-4b26-8d1c-f3644ce0e37e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c9914b-72f1-4de4-aeef-562553067258",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "922e2ef3-5528-40d7-876e-a4f4d0709d8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1114f682-477a-4f31-9427-c6bf155e3343"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f085a21-428f-4ed0-aa5d-c0e82e92f924",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a49a5a32-5474-4fba-882f-a1826da81f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88721778-a6c5-4bc6-857b-4c15510515dd",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a40a6c-8d64-4117-955d-5b8c1b9bce88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "935f5bc0-42a0-478a-8b0c-ea8e8380e0c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae184c0-8d16-45f8-9801-0d962e3d6681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "970445ae-3d8a-4bac-9dfc-1040dd5e2237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8506fdc-abbc-4c93-9b74-861ad28a761e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a2ad47-a201-42ae-a444-d209d4141037",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31739e29-688d-4649-91cc-eb221fdec6a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64f8a138-8e79-4345-b187-2bc680d8fb43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c4f216b-98c3-4dd3-bd6d-1f1c57504edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d06138-b9b5-4168-9d7f-fda6bd6f450e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b900da83-eed3-4c28-be50-3b36c269c440",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c36d22c-b7b9-49da-a6e6-a64fcc17c885"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce21e10-c06c-4566-a432-0b053155efe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d333c28-01d1-45fa-9315-a8236d750ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1861275b-4b98-4a73-893d-929aa206d718",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a445774-6abc-4184-a33f-472841d7e6fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49dbfd82-d6e5-429d-8732-d0a8b5c612ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28dd3ca2-7632-4b3e-8681-2fbfebcff806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "811915e3-f8da-4f6e-9073-d5b25331d2ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263055de-17f0-4434-bc29-ddc1939bbb37",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d3e1ae-350b-4012-ad07-6270f2fd59d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99ac40b0-cd15-4534-aab4-c51207ac1716"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd78f12-94f2-43a1-ad9b-849c02e8d398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3c690a1-3b94-4f30-92ef-1c1ac16dde09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9ee750a-6c18-4d9b-8480-93ac3ef7cc2e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64712e03-4232-4107-a0ef-b9fc72811051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35bae73d-764b-49fc-8663-b41cd32d234d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b72d393a-13ef-4361-9c08-93c526fd4036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85ac2099-8ee7-4c3a-b440-9284ee38e5e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f93cdfaa-70b8-4492-b8b1-391f60ca0e9c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf276e43-7385-4e74-87e1-8fcf540fe1d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55acbfe9-801a-43a3-998e-a293aadba9cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "528304f8-c786-444d-aa8a-0927e95ac968",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa8abd1a-95a8-4e47-8eb6-b79b4b885167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f4e98e-d07b-4b85-9805-f1ae4ac203d5",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d1a991c-6e68-4f05-bb38-834a086c26f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1ca2cc2-c9ca-4ae2-b680-19216f8ad3de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec444641-12dc-4cd3-b6db-4881ae5173d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fff19659-3bf9-42af-8a77-6f5fc7bca7bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf605cf-9207-43d1-9498-bcf206121fc6",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a5dd3aa-e8f1-4e1b-b723-60c5097d75e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e11ecd8f-9d58-47a6-83fa-1617102b3187"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a65ca5c-8086-4aec-85ff-ffcf6f69c960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db247d76-9ec5-4912-942d-f531919215fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "502ac577-55f9-4ea9-ab6d-298e72759553",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252cdcc0-b389-4f92-82f0-07c7960cf5ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4889b42-7d01-419e-8f59-324cd042d3c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef02b099-663e-4559-abc8-4404c41bb528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d895eb12-11e3-4723-bc55-94981e9f4846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d22c48-36cb-4d1d-9f5b-38f1a51d2d54",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b5ab86-c22b-4d2d-b862-8c130f44d0c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e75a629f-f52e-4c71-8c1f-fef02f713625"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46b89dd-b28c-4b51-bb44-15e57a14d29e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43a8a90e-8171-4b55-8d2d-8ee68c07abc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf7fe1ab-a4c8-4745-8f7a-f00609c97c11",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d38a801-8958-473e-9687-ceb0496754c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20df5964-03b7-449f-8300-94b4e3750c00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df194140-8d18-48dc-b282-22e5173634ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22fe9b69-9e7f-4db6-99e7-f7612a31e44b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c399574d-166b-41e2-96f3-cfcfd36a54d0",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ca2e73-9512-4aa4-9edf-682e815ae4de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e3993e3-b588-4358-8173-734676bb4b9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f84a6fd-9f9d-40bb-9264-acb023048f5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78f8d28b-ba11-4948-afa4-38c3d5816ee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "739a3a21-3d44-4e1f-9696-213c52be8ef6",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13140685-a4cf-4089-95ca-6af0e83664bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2126e166-0348-4456-814b-9c30ff116aea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6112d474-2dee-4332-a19b-78f551c73e21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6d97a35-1c5a-4390-ace6-81af48589cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0794a333-ed5b-40ed-8dbd-29aebbc034ce",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6649618d-2b48-4c36-8594-8868aaf44991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "821514fd-ac81-4152-9c2c-18d886fa037e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d53a8599-6adc-49e0-840e-b282de4f8fb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afb8cbd2-356c-4ae3-9b79-9bf7f4d8561d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bfdb1d1-b6e8-4dc9-b81e-c8c23046ec34",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa7e56a7-7643-4b93-ade4-0940f3baf7c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ecb8518-8ab7-4f44-b35d-803c8d7b39d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74533ebb-eed9-45ed-b4bc-a1455370c3f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a69218f9-edb7-4901-b3d4-d1790011b9aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd63cdb4-33b6-47ad-b6a1-088059deb928",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de91481a-43c4-4a2a-b673-ab52844d6328",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1217b8a0-e6b2-470d-8e80-7ce948e2ebe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a86c45-1b7c-475d-af37-e70b99d13888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6105f64c-07d6-4403-ab32-7dae9cc1a680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e9bf53-f08d-4693-bbc0-9e077118b565",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9db0019-6089-46de-81c7-03e20ab1f980",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaa09646-8605-40ed-ae28-15a4a737c11a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f36252fe-5715-4fba-8919-ec08cd7a037f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "680c5ceb-6f2e-4b97-b293-3f5496d60087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd02ac8-6cfd-49fd-a732-922dbfea1422",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad5bfeb2-d211-4402-85ea-164990dec5d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "579f1990-8ae2-456d-ae4d-75f572212a50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9181c255-ab36-421b-b937-053e34de55ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed595cee-2fb7-4d14-90c0-0dd2ce51379c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1111735-ab57-42f7-b88e-507130631ff3",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813ea3f1-c521-48b1-a127-189622d98bf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa8f8e6a-ded6-4b06-9c5d-23cc09f06929"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd01e55b-da10-4c24-9f2a-83e5ed491507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "774cc192-6aeb-4eee-a9e9-f4178c0ea816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b4a28e-a86b-4c68-bf83-01388cc9bc2f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be2c55f0-3596-4b7d-bf63-84054e170e2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "348f0fb0-e1dd-4ebf-86e1-4b1e87fbbf52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d579126-3b0b-43c5-bb7f-9c55f1bdc331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "241833cb-4f10-4020-a235-61174ab1126e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b4e5fd7-4eaf-4e28-a44e-db6986585e25",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e1e3f3-5488-4003-9979-f5e6c1dca192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eda0fff6-d9f6-4f46-9708-ca2581f55397"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75fc9aa7-fc4b-4169-97d0-f6c6c066a43d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f78cefb-a39f-4281-a074-438474254434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b581c0-b33a-423a-9ce0-db1f54c823cc",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68be571e-b8ac-441c-8f5f-f92e90de33a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d2a4e1c-0108-4e77-abdf-b04a51132aea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a78691-31ae-472e-8d2b-f7aa949e17c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edec95a6-b2ab-499a-9c22-f309500c1ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef491bd-eecc-47ff-aa13-2cf9e929373f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb4db574-914f-48ca-ae57-c7dbbb2c2ab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7b5646c-19fa-404c-99b2-d2fc92f0da3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2183add-3028-4ea7-a6b6-9a411d8241c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4c22a52-2ebc-426d-adeb-ebc4e5772c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc782b4-38ad-4c34-b8f8-6114ef60a421",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f083e697-6b94-4402-8043-8defb82300eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97d99d35-2dca-4a3d-99bd-60648d72844e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "433cc2eb-2e80-4d04-be46-04cb9f0ef386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8195f90b-8ba5-4528-8526-668802c940d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd99fed-311c-474d-a97d-bc7fdb7eb9b2",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55134b3-8fbb-4e68-8d37-ac35e13f2bfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca2f7322-7aa2-40ed-93a4-8e4703aab2d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e1df51-d8d8-401c-8d63-b24091950abf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17373b80-7332-4953-ae5a-720deba16866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e02d4375-0445-40a9-89e1-631bb1d51664",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "179e6b69-5672-446a-9cda-a081d3fe4e17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68eb40ba-892a-4f25-972e-7b56776dfafa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa13d98e-07ae-49e5-88a8-f63c414ee8b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e10b5b58-9510-4942-b6c6-20a9f87852a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df798967-a9e5-48b9-ab14-4cebd900a448",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee50b8d4-a54a-4730-939b-20c97203bec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "660a676b-1bbf-4933-be01-78e289ae243d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cec1fe1-4a1a-4e63-977f-99f0fece655b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a23f65f2-4b56-47c9-a4af-3538094ee550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e58e218c-77ce-44d8-ae0a-9436acd1e026",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e47e7666-3ba9-497e-9c40-bd2bdd8d826f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81563418-c0e7-461d-a48f-dc934c83afc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da0efb32-bf7d-4760-aebf-cc8a21bf4db8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d5cd7f8-23f2-4281-85cb-eb122c9d2b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e65e13-4478-470e-8019-b9aaebc38382",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b168882b-e1ab-4eee-8f25-2c1d6e554259",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9616f81f-f98c-45f7-8865-7a1f6d754566"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5c355f-c28a-4492-ae20-bd81a924b374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da16c068-5bbf-4245-80ac-fdd01728cc5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b7c8835-d415-4738-a754-4aa62c240533",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa669c6b-c37e-4962-8b94-6c739c6367c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec7734cd-b316-47a6-8795-d561efccca28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b227891a-fa93-4c00-9240-b3a459bbad60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5613b345-1e9e-4d65-a8ba-9bc77674c6ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f41102-97ad-41e8-8c03-57cf8e59a771",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "495b13df-16c8-4b30-a3a7-812114f6f882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e11db5a-ad1c-4e23-a49c-d3df01e6b98c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf7c0c8-0428-4e75-83b6-2c6f87ec5d1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1052e197-43d1-4a3a-bfe7-8ed78218c598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc5087a3-0485-430f-9c72-9fbc2178053c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e2c90a7-13ce-44b0-b83c-38b80059dacc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "033b845f-48b8-48e0-b33c-d7778b2cb096"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "388c1c5d-997b-4822-8827-2146b6be94a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f8d4bd2-767c-4a6e-9feb-2c08462cfb72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53516d2d-446b-46d7-a600-032a572cc355",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dfaf421-9032-4fdc-aae7-5b8e38294c5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9da60afa-df80-400a-9f2a-18b5a0e58efe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e3396b5-60c9-4931-8177-0d4a5642c304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69c15d28-ebb8-4021-894b-3d02c30f5238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b004ec-0ee7-493f-84ea-8f4b55309857",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f02cc5-6969-43de-b708-c3427cba1064",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04fdb592-a54a-4eb1-8857-b45c355db22c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "681fb9eb-9fd9-4b69-aa27-45995eb1904d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6175799-e29c-45c4-b983-20fa1a39b4b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b476d1c-de45-4e7c-ad98-58f52251db7d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41222a22-d667-40a8-9eab-0e64e4a026b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f037d0f9-bd9d-4462-893d-634a945ae67b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed27aea3-9c08-4a27-bd77-c43c63ee6eca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f734c92-7e12-49e4-9462-9060b56aa39e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8240197-5ff2-4e84-a983-d59e95573710",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca31897-c5a8-4e1b-b7e6-fb86c6c6764d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21e4a765-cc82-486d-aba4-9978708380f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db62a6b-8aec-4014-a789-5a8276f65b99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88656a77-7c9d-4c41-83c6-52c0701b05c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84bbd941-1dfc-4755-a4a9-a16be24715ef",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c3a915-50e6-4d86-9012-54a9ed05de0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9e93e8c-3440-4d41-bf42-3853a23a3cdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae96a8ba-30e9-4396-92f0-7a2d27879647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dda7609-fd28-4f8d-8d65-c9d03b560086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195813e6-7d54-40f4-b612-add70588138f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f35a623-8ae2-4914-8f34-a3c8dab93311",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25ae56ca-de04-4534-afae-24639b32107e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17589f9e-6b38-4d1d-aef2-012b8109c6aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fba7ef7f-03e5-48fb-8ba2-77474beb9672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8687b107-00e5-4ce7-9f9f-b912fb62303f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae18894-7ea6-48bf-84fd-2ec43787ba5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4c6c508-e6a7-4a5c-809c-a575715418a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f585e946-2ce9-4a0a-b1c7-b570fdf588f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bef9a09f-47ba-4b89-937a-ed8f768a49cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a7cfd8-9fd0-49c2-ba6a-eaae53314b56",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f1db323-7d27-4a9d-ad2a-fcd707c9f47a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a91e7ffb-2565-4591-90a4-c7d3a890c06c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c67077-4b8f-4587-985f-2c015a932801",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b3a9eff-e933-45f3-8715-878b2c007176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc8067c-b70d-48a0-8068-1b09f83f9987",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b5028e-643b-41d3-95ae-7acad1af0658",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "648ddfea-55e7-4fd5-a151-7dd086fa7ac3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a45361-7c01-476b-aa4a-c1a2078bb61d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5f2b2a9-a10c-45e4-bdd3-15d45818b911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a6b08b-c2ee-4aaf-87a3-7bd50c7536b9",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ce12b2-4a33-46c8-9121-fcc113741541",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3efb0728-4135-497d-8217-df62e603e71d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46fdfb02-d45d-4e30-b24a-a48cdac239ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "413cdae0-6748-4e50-b4fa-b9e521b8dbbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "537e7458-0d56-41b1-8a39-6477eb94a00c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b7eb39-5df8-4104-b246-4530b994a8d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cb2790f-1902-4673-8475-d9970455bb8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8c6ac50-a892-443e-9c3d-bb82f6bfb02b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "670bced7-c3a0-4646-98bb-894cc48dd4f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6622c78-92ee-4c29-b1aa-ad983cf61974",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab4f19e3-07e6-4710-b0ee-9684e63b98ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e385143a-414d-4ed8-89aa-788754705c7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6955ec2-d620-49b5-8984-7925c84fd933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "392be98e-839d-4f84-bfcb-3d102484c199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e25b9a65-01a6-4d86-a506-c05c6c26fb12",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d08167-2b24-41c7-924b-713e1747d050",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5303ea6a-0a14-42ea-8268-892e1761b81b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ee5bd0-6dd3-4405-b2d5-f645c731c56b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b33e8518-15d1-4671-b917-2b84c1b11efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "820a800b-aa73-4bf7-bcad-6555ae816230",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a83e71-ff85-4ad8-aae3-7d6765a93966",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ffdfc0f-2695-4ae7-9074-b6abaa8166f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc01091-b6c8-4142-9fb3-e3ad695d5ce3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f41c1569-b66c-44ad-b2cc-3c80439a2fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa06cbd-05fb-4727-b0fb-9de12b42c031",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da879e8-480e-4d18-95ea-9b63a295ea58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10c9e128-c2f7-4cf8-9b68-30261ccef655"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec6b047-e5bb-43da-be50-60d527dbb4df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9108584a-4463-408d-a7fc-3d5a2170af86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6b8f20-dbff-48b5-8499-ac23b68aba53",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad0375f3-2f32-40c9-829f-14100709f1ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "721be4ec-33da-483d-a2dd-4f254e302678"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07bde7b0-d4f9-4ee6-97c2-ad603252cba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "244de293-6cfb-4f3f-9bc2-d3cf9c1f18d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "104af100-cf10-4376-a410-d67f1cbeeaf4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b23eae6-5eab-4576-8562-5104f1ced9f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0abcf1e7-a559-47e3-afe5-4bc0eb4816e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76188c43-9ee3-4d25-b7da-6636e7f8712b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1927db30-487b-46a8-89cb-78bc00ef3e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f297b6a3-53ff-4662-bb71-043e597d9a8f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32758376-d5ef-4abd-8578-b3e867e65b2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b44946b3-5019-4e3a-a853-a33b78ab250c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a43558c8-513e-4ce4-bdeb-1c176d9236bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d85813e6-ffdd-4c8e-9061-ac4ea52e8b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd440d2-7c7c-43ff-a965-97a2fdf53b8d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13a3b3b1-9939-434e-9941-3826f35e8163",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7832092d-438c-427e-b658-e65a7da78052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "279f0e14-fdde-4fd0-a193-2e06e7260022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac7bca0f-a022-491d-9ee0-ebbda246e51a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eff0dae-cc58-41ad-86d4-ff257ef19e34",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e0f09fa-a1af-46e2-acd1-dcc0454f713d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b491833d-751d-47c4-9526-b30220f65f94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab5ed3b-25b8-4960-802b-ceb0c40e5e32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3791b0d9-4af1-4b0b-ab1e-671827f608a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254368be-f20a-467b-a8f6-e3bd3edce16d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fbbbddc-e91e-400f-95e7-8a9ab242abe9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44c01ef7-67bd-4fc1-863b-f96dc4b687cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59adf8a7-9920-4c8a-8e17-d95e25bfe603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97757f84-92f2-43b1-a3ad-ac07dece5264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73dfccbf-a803-43a1-97e7-3693d56d7963",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a7629a7-433f-466c-adff-013b7675d457",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4de9c9a8-a03c-4e27-bdc6-1a99b8f491b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80fb01f5-7475-476e-9e7f-6dc587aa8f1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "683041e9-efe8-43d0-812c-b9172bbba12a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5654593a-1414-4d49-9563-a1f44175ffb8",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f496e96a-d38d-4411-ab40-52352cb1f406",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ad450cb-6340-4c42-a97e-a27695add721"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f48471-27b4-4211-b715-81f50ace4f1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b520f08-f4a3-429b-aacf-5a0f45a6cf5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02bb754-d618-4ef6-98b4-b91bb6bfd482",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373aea02-075b-48c3-aa2e-bb42e25d1166",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4195905-85ae-473e-8cf7-9ebc4fe39978"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d84691-210b-40c0-8ae3-128d076777a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b354b42e-c54b-47f9-b865-43025f0d74fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306876c0-dd79-4a18-801c-f907c14d3e30",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3629672e-5de1-40e3-a6ea-6d52d956ec4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8959e8d-a2f1-442e-bf9a-31ffcfae8498"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb9caa9-6471-4671-af62-802fc131d1d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fd6308a-547c-4005-b6fa-9bc7c92e6dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c8d184-f427-4156-9494-8ef8d960f81d",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bea5c44-2258-4761-9acc-63c54e799437",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc9b7aca-9d35-4fe3-9985-d96bab7326af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "602570ff-ae90-4218-8682-4d4e9dc4181d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35394c6c-f69d-493a-8367-c6c8c6734636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de7d2f3-7daf-42de-bfb7-155378dcf672",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a742c1c7-306b-4c4b-ac41-2f66a91a86fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c567233-2a09-4350-91fe-1fc25296e191"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4981cd53-eb84-4d2a-b8e8-69822d86d7e3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91ece04f-9f81-4978-a8e4-fe3ae3b0b8a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43933fe0-1fca-4f58-abbb-c76b0fb7bf71",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "342b869c-a59f-48c3-a1a1-8d3851d8b6d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8088056c-6edf-4c65-bd36-22f20ac614ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c88f0340-ae64-4307-8e2e-4d46931d0b1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63cabf42-1756-4518-9228-489dab0e8b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a5a962-1a79-4ebc-90dd-fee9a47e1d7f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e664cc-64f3-4fef-99ae-4f721a731215",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b83cf9b-2c2f-485d-9d39-abff0a994440"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f1d7c7e-6079-40b7-ba18-6c399be92802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "136d69cf-9737-41e0-9c71-144332ff5f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8630b658-50a6-4c32-81ac-39abd3a1a356",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53cc59be-a3a3-4736-8c5b-00df3aae3b54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "705a6ba9-afac-46da-83eb-ebd5d12a187b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e77183e4-15ee-417e-89c8-2d92b321ddf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17a09362-5f9e-4456-a8cb-e35dd3735e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c4da9fb-57a3-425b-ac6f-daf9fc13bbe9",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15a49861-3ec5-4667-93f5-4b4149fff458",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f490c9ad-5477-4ef6-979a-e90127e9ac52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a36a9f-f535-468b-b4ab-4816c97c85fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce2fd740-fdd6-464e-ac1b-976222d1146c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b355d3-816c-41f9-9363-124149825f65",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e65f027-a2d2-423a-b23f-4f84b529a284",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60848f95-a609-4cb4-b6e3-eafd48c0e359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d65c57e5-a1ed-46b9-a46c-78da875982d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67c3f134-041c-40e9-9ffe-406a2bf0ade0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a9a6ff-ab70-4fc3-a26a-e22bcbb48c8d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4946ae2d-3304-45ef-b9df-bbb282a8e534",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db3df74a-7a76-4d22-a259-13de600e9386"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d850e4a7-5039-4c7d-9649-838001f3803c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4ef55f6-7498-4114-9561-4781103bcc11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5f6dc9-a048-436e-9a15-20dbeca4e916",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4dedd26-4f3d-4685-bf6a-e51cced7e740",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "567cf6d7-6a26-40d6-981c-ad2b8f3314cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "542552c4-d00d-4c07-90cf-4c18c843529e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "294be44f-2cc1-493a-bf8c-cf484263c2f8"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a7de65f1-a172-47b1-b5af-522986aa8d20",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b16fbe02-3c73-486a-99ed-86628182a397"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bbf4d36f-6ee6-4464-97db-fe1dbfef06f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c91c2806-a07f-4dca-af06-933ae54a1de2"
                    }
                  }
                ]
              },
              {
                "id": "7f312a1b-e6d4-409e-adcb-c14afa929cbb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "016c144c-5191-46a6-be86-77eaa0d4dca4",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47fec757-8edb-494b-ab28-4b2672ef8745",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ef05a29b-506a-4197-bf1e-ab479860b7b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e1152a-e714-4442-89b9-fa25696d1f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1c7d6440-646d-4b8e-843a-19304f26059d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d10869-6553-4c37-8b89-a3e6e8b503f1",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3010cf09-9e6f-4b46-9cef-7710ffc1229d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7b728e1b-31f0-489a-a23e-865900475251"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e22d72-eab4-451e-9793-9ed0f2a5817e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c3150d5c-684c-4f32-8e37-7c7c00205809"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e6f65ff-667d-41d4-94e8-50af200b501a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea4626bc-5628-4c20-80a5-6949b998e56c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "815ca0e1-38de-4780-8bbc-c94fad333e36",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4bc91da5-8bef-4044-a0eb-7be51a0c3fe7"
                    }
                  }
                ]
              },
              {
                "id": "25f7ad22-312c-4163-adcb-3735aebd0df8",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "ea12a685-0003-4d72-bfc4-abd8d305736f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc31887-cde2-422a-af27-09db8ab7a273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "28050ddf-23b0-45ea-8406-cad57a42b388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d811a9de-ef6b-476c-b54c-3b0611380eb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "842537c3-beb5-40f7-bac4-d9fd395c3f44"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3d8eb1d3-146c-4e70-8a8a-7395aa2af9a4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ec9f02ab-c3f0-4eb6-b8e4-bd8d153f53d1",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "86740260-11a4-488f-85fe-f806029a3b36",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3253ee63-d106-4e6f-911e-9613e4f8b962"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c6b943fa-1b77-4004-99a7-4d9633ed26ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9da2192-7c70-4a11-99cf-437b6f9d1e2b"
                    }
                  }
                ]
              },
              {
                "id": "0cef1f5b-ef84-40ad-99f1-ff6c5d67f551",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fdd49e20-d312-481d-8a0e-1539af290cdf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ab07a1fb-f73b-4a45-a646-82067e0f7ae3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4cb4ddfc-e59c-408f-9dc1-cabbc1154d7a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4c9fbe5-0ac6-4446-9bf4-d38d51e60581"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "95679f78-ae18-406d-9b73-0581e7520838",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6bed6bd2-46ac-4639-83a8-8ae71202b1a8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "44ab20e3-8564-4f4d-89de-79b76177bbf0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4b6480e6-9310-473c-b825-c5110f438bbf"
            }
          }
        ]
      },
      {
        "id": "7af3ce24-5c18-44a5-bcbb-5b0f19b84eef",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1b14c3b4-32e5-4f08-adf5-f1563be7ee26",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9c68809a-a288-4038-aacd-57444152b2de",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aec6d6db-0965-4829-b6b9-d7402a4183ca",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8efed846-15f1-4dba-8151-07ef6eaaa75c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d3365a38-647d-42fd-b606-9b8bf48acf91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d80121c0-6827-4586-af49-342f6df04d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "115c7cae-8aff-4af2-9ab0-f49a6d5a11d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1db92924-78c5-494c-b1c9-4a63635c25f0",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc368e2e-0871-4248-932d-02bfc9867220",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2fd45905-b984-4c1c-b0f7-905ac8e9853f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "468988ba-4771-4695-a32e-686e8782e21f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "75088922-d992-477a-aaf8-faf650891aec"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "12629d76-b421-4c91-9e60-b353a428d3dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e55abc9e-ddee-4808-b608-aaca57e984ea"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e17b212c-dd66-4102-bb46-593dea56d33f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d115e0c-bd7f-490c-9ba7-01b636be2482"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d5670113-3545-41dd-99c9-9ebcbf445ff0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ed6b8a72-889e-49f9-93d2-f4e3a490c008"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a5af9b81-5617-48d3-b73b-557b67abc3f2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "daa9d9f0-da1f-4e3b-9754-25f2f5a112ed"
            }
          }
        ]
      },
      {
        "id": "856de8a8-f00c-4caf-abf0-f9271aa7e454",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4c916596-e4c9-4b7e-a9cf-0541320270e0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f35ca96d-2765-4765-8c88-13dc45d7ed4b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c0ce5b10-da7d-4236-bd5a-ed62478b7d28",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b61d09b7-cb6f-4343-99e8-2a5212b3cab4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ffaeed9c-042d-490d-a91b-008cd7f4991c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1486a4ce-aacf-40fb-bfe5-a20a9d92bb79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2e57488a-61f5-4b39-a0e4-8e9f5bba81ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3afba7f5-e8f7-4293-8e37-224b6b8e0150",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b100a9-b159-4baa-adf4-c4db4a614982",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5829ea3f-71ec-4564-ba82-9c2341501945"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "128ef2d2-aa33-48c1-9739-cf2d56155bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3dafce46-f79e-49e7-b375-73cf839ddd34"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0242af41-a69e-4d91-ae65-72518d2d31bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "592cd377-3030-4607-8617-5184efd17161"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1834ee95-aafa-494c-8914-36ec1a12cb51",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "adfcadac-fbdb-4015-b62a-cb281f885845"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a0ecbf06-2975-44a6-bccc-ed3d343975a1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "944c8372-c213-4f96-a632-7c25e6ad68e9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cb26a995-c459-41e3-9dce-d801fdb0d4a4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8e1da449-d3b2-41f7-ab78-80da969b8926"
            }
          }
        ]
      },
      {
        "id": "377fcfab-28e8-4a36-a55a-946427b1c65c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "e9e69f1d-37ae-45ed-ac57-e8515b0f1219",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c25f160c-9b49-4ccd-ab7b-31b43114b7c8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c126b142-4975-4d0a-b3d3-a6843145be70",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1821ee63-8019-423e-a9aa-8157cb0faeb6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "addb4f12-280a-404a-9192-3a0d796532c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce975f3d-1925-4ee1-8846-62288e495d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0853d80c-18f7-4987-ad1f-5f195dbe900d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2fcaff-8de8-4b4b-ad80-528e11dbe2c4",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c88877-98bf-43e5-970f-b154ee13566a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1a4ece40-0fdb-4b6c-ab7f-0ad518fab59d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37761427-28d6-4393-9e98-18488397b992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e64b0d69-b038-48ca-b9fb-eb1e9e9bc61d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97058882-a710-4ad9-8186-69f06ade4230",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b042be2-5400-4a6a-b8a3-7fc402ab4a9c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "58d3d788-9ff6-4232-b7c1-f86abe5abe5e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8fe5240-49a5-4b3e-af3c-f73eab4080ad"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5f050459-a83e-4671-bf7c-8e8e4c7737b1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8591cdec-b821-4951-af3a-f0558998644a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b73d17cb-066a-4cb5-814c-28a42966e158",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "972b47c8-3ce4-4e4b-92e7-d6d693ffe3b1"
            }
          }
        ]
      },
      {
        "id": "6e96b71c-3570-464d-96bb-7a6555b43606",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9cd3e1cc-4bcd-439c-84a0-3842f57bec08",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aaf0acaf-a4a6-46e9-86a3-1b723bcde7a2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ef6e5025-1b35-4b76-bb8e-3f3b51bd6e1d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8d292c1b-98e5-41a1-967b-c3d24e37e2f7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e646849c-502b-4c86-96ca-bd56b487538b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 887.884615384615,
      "responseMin": 6,
      "responseMax": 9457,
      "responseSd": 1031.025405451481,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1682555949765,
      "completed": 1682556191443
    },
    "executions": [
      {
        "id": "33a777ac-8b6e-492c-9208-dcae4af0b783",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8c8fc4fc-518c-4f4e-8d75-f012079a2313",
          "httpRequestId": "0c8223c8-0a7f-4134-a0d3-28384697787d"
        },
        "item": {
          "id": "33a777ac-8b6e-492c-9208-dcae4af0b783",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "4a55ea32-1c84-45be-98fd-7006a3d3eac7",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 0
        }
      },
      {
        "id": "1b73346c-85c2-4805-8c20-521af0f058a2",
        "cursor": {
          "ref": "3c9901b2-6bbd-4ce3-9670-8b44a9cf2f4c",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "872614a4-fd13-49ed-a2f7-caa0b38600f0"
        },
        "item": {
          "id": "1b73346c-85c2-4805-8c20-521af0f058a2",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "28ff3d75-c68c-453a-9edb-0f8a52287511",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "abcc6f7c-b0a0-437b-bc1c-d89dbb9c2ef8",
        "cursor": {
          "ref": "21be5fe6-3431-4d50-9fcc-94647e9bce83",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "bb8efb02-0947-4970-8e3a-aa10e63aa5bc"
        },
        "item": {
          "id": "abcc6f7c-b0a0-437b-bc1c-d89dbb9c2ef8",
          "name": "did_json"
        },
        "response": {
          "id": "2596e689-7edb-4c76-88e2-8be9d5f6d80d",
          "status": "OK",
          "code": 200,
          "responseTime": 1150,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe2a293-05f7-4140-b94f-2efa6c5b3c6c",
        "cursor": {
          "ref": "7717bade-a657-4d58-86e6-1b33b950d5fd",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1d2c0ecb-78b5-4755-a00c-f9f69d42bfd7"
        },
        "item": {
          "id": "dfe2a293-05f7-4140-b94f-2efa6c5b3c6c",
          "name": "did:invalid"
        },
        "response": {
          "id": "6e30a42d-9ba6-4e7e-8bd7-1d12cd1c3ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1334,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe2a293-05f7-4140-b94f-2efa6c5b3c6c",
        "cursor": {
          "ref": "7717bade-a657-4d58-86e6-1b33b950d5fd",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1d2c0ecb-78b5-4755-a00c-f9f69d42bfd7"
        },
        "item": {
          "id": "dfe2a293-05f7-4140-b94f-2efa6c5b3c6c",
          "name": "did:invalid"
        },
        "response": {
          "id": "6e30a42d-9ba6-4e7e-8bd7-1d12cd1c3ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1334,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05abe21-2ca7-4933-abf1-ca415e9b048a",
        "cursor": {
          "ref": "89ac15ae-73b3-4051-a5f3-fd5347f6b351",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "10a70c01-38e1-4a8f-bf3f-11ef7906881b"
        },
        "item": {
          "id": "b05abe21-2ca7-4933-abf1-ca415e9b048a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "352cee26-47d4-40e7-9bab-e119934b288e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 779,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b943f6d-1300-4f4a-8555-376c877c3548",
        "cursor": {
          "ref": "706341fe-4fa8-4b06-b6e7-cadc4e85bc3c",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7201a3df-cba4-4b50-9d4c-4a17bd9672da"
        },
        "item": {
          "id": "0b943f6d-1300-4f4a-8555-376c877c3548",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "51d0ef0b-17a4-42a2-9c5b-c1df2f0c930b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 667,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370ddfe8-a4e9-471c-80f5-b87b9c095a02",
        "cursor": {
          "ref": "367761b1-d447-49af-aae0-ee724fb508d0",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1a511545-228b-4264-a092-e6552acc71ba"
        },
        "item": {
          "id": "370ddfe8-a4e9-471c-80f5-b87b9c095a02",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "81d59230-5b02-497d-9578-f0c5f576b45f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc396ae-17a4-46dc-8830-c6002a6ca3fd",
        "cursor": {
          "ref": "eb86d91b-771e-4fee-a682-7dc6b14930ab",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "47b1989a-4bf6-4f44-b0ff-de35fc348d4b"
        },
        "item": {
          "id": "bbc396ae-17a4-46dc-8830-c6002a6ca3fd",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "b8d05cff-3327-4e88-81fd-f08fa8d862b8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 698,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc396ae-17a4-46dc-8830-c6002a6ca3fd",
        "cursor": {
          "ref": "eb86d91b-771e-4fee-a682-7dc6b14930ab",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "47b1989a-4bf6-4f44-b0ff-de35fc348d4b"
        },
        "item": {
          "id": "bbc396ae-17a4-46dc-8830-c6002a6ca3fd",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "b8d05cff-3327-4e88-81fd-f08fa8d862b8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 698,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9681ef1b-299b-4e39-86ff-80f28de8d84a",
        "cursor": {
          "ref": "678f3317-6a4a-4327-a832-130419f7805c",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "da22e890-4325-48d8-af4e-c97905789d8c"
        },
        "item": {
          "id": "9681ef1b-299b-4e39-86ff-80f28de8d84a",
          "name": "identifiers"
        },
        "response": {
          "id": "0203ab0d-ab23-4580-bcb5-037b82c33692",
          "status": "OK",
          "code": 200,
          "responseTime": 1172,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d31b8f-0093-4280-b0d4-ffdbf647c7a3",
        "cursor": {
          "ref": "b7aea35b-1ff9-4799-9840-2c122788b19f",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7a89086a-443e-429e-9353-240722971732"
        },
        "item": {
          "id": "07d31b8f-0093-4280-b0d4-ffdbf647c7a3",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8229f47b-0a61-482e-82fb-db3e5fbe71e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d31b8f-0093-4280-b0d4-ffdbf647c7a3",
        "cursor": {
          "ref": "b7aea35b-1ff9-4799-9840-2c122788b19f",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7a89086a-443e-429e-9353-240722971732"
        },
        "item": {
          "id": "07d31b8f-0093-4280-b0d4-ffdbf647c7a3",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8229f47b-0a61-482e-82fb-db3e5fbe71e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0f4a6e-3d81-495e-b34e-154ed611e55e",
        "cursor": {
          "ref": "301acf3c-21a2-426a-b783-a891ee6e8159",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9a4b851d-53a2-4b5a-93d2-1c64fd96a5f6"
        },
        "item": {
          "id": "9b0f4a6e-3d81-495e-b34e-154ed611e55e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "437e779d-4049-4620-8255-370c0b68e73a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1458,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6dd9f2d-fa8d-403a-856c-a6e7b3781b69",
        "cursor": {
          "ref": "21b834a0-32f9-48bf-b78a-8e8983d4b5db",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e0cc768c-40eb-48d3-bd31-592fed0a95d1"
        },
        "item": {
          "id": "b6dd9f2d-fa8d-403a-856c-a6e7b3781b69",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c3e1b15c-0c71-43c8-9cb1-1a18fab17c8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a06cc65d-c793-49d4-8fd7-4e006384d56b",
        "cursor": {
          "ref": "faa318ea-b66a-470f-b287-44f62710a495",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "95780e00-e9a5-4ba6-98fa-eed705edd0a2"
        },
        "item": {
          "id": "a06cc65d-c793-49d4-8fd7-4e006384d56b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9f86d7ce-75b5-4b56-bb07-9d22b7d67b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 706,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b18ba1a-2e58-4eae-9a04-beefea265434",
        "cursor": {
          "ref": "d3533fe7-0159-4512-a174-ac172d399038",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "486d6122-3f78-4ca4-858d-de22f5f29a10"
        },
        "item": {
          "id": "7b18ba1a-2e58-4eae-9a04-beefea265434",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f72e746f-58ea-43a1-8a67-ceee3d8e9efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a379d9ea-bc00-4943-a156-f4bd147cde57",
        "cursor": {
          "ref": "f17dd22c-a269-42b4-822f-ce619dcd0c3d",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "de08aac7-e135-44f9-8f92-1d6e58df4c2d"
        },
        "item": {
          "id": "a379d9ea-bc00-4943-a156-f4bd147cde57",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "07362c2c-b74e-4268-8a97-1d04dc59f8a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594ccefc-6380-4116-adce-a11ddb7c966a",
        "cursor": {
          "ref": "e1a5ddf7-6fbf-4a9d-ab7d-681335bdaf26",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c445292f-e87c-4a05-90eb-842c249ac3ac"
        },
        "item": {
          "id": "594ccefc-6380-4116-adce-a11ddb7c966a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "660e383b-7541-4f70-9d0a-cbab04deb54f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acde539e-0566-4159-8612-bae119cc7a8e",
        "cursor": {
          "ref": "d11958a5-e783-4ad4-924f-7e9ef96a65cd",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "753159f7-7318-4405-b578-6c6015584a3a"
        },
        "item": {
          "id": "acde539e-0566-4159-8612-bae119cc7a8e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d744e151-fea7-4b75-b0d9-a5b7bfd49bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27adea39-3e44-48fb-8d0b-4f81e50c88b2",
        "cursor": {
          "ref": "b0ffc681-eab8-46de-a981-db380c4a5136",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "48d6634a-db1a-41b8-8605-2faea633e2f0"
        },
        "item": {
          "id": "27adea39-3e44-48fb-8d0b-4f81e50c88b2",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "67853d91-2da0-4e24-919c-cf9c1f8713bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f19b049a-5337-4fcb-833e-b9e396dc502a",
        "cursor": {
          "ref": "15868526-7c84-496f-9baf-e50578ac3545",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "472ebc7c-284b-41d1-880b-f01ced274493"
        },
        "item": {
          "id": "f19b049a-5337-4fcb-833e-b9e396dc502a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "694e10ea-5586-4386-bc7e-8b46c3e29c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db8d484b-e810-4c18-b075-1e29ec86369d",
        "cursor": {
          "ref": "73c60446-44b9-41d4-b0d0-59768a847215",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "bc42252f-f8ee-492e-8af0-2c1e18fd8dce"
        },
        "item": {
          "id": "db8d484b-e810-4c18-b075-1e29ec86369d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "8bfc33dc-59ec-43bc-afa1-4c0bf668cf68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e88f1c0-a972-449d-bc1e-0b5e6cf9227d",
        "cursor": {
          "ref": "c40fa584-be14-4cac-94bf-c99ae184b0fe",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "93976142-309e-4a11-b6bd-7fa5d1bb979b"
        },
        "item": {
          "id": "7e88f1c0-a972-449d-bc1e-0b5e6cf9227d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6701c5d7-a0ac-4920-a8e0-d76adf083ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 706,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd6c7c9-8fcf-4663-880d-9c5c3daa0caf",
        "cursor": {
          "ref": "f9610265-9f8a-41b2-96b2-84ac4ac26e1e",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "dd8eb2d5-a767-4beb-a23a-08e2e881be2d"
        },
        "item": {
          "id": "1bd6c7c9-8fcf-4663-880d-9c5c3daa0caf",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "99d53088-473f-4c4b-9f40-0f9d512eaa13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 965,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "429123ad-a1b1-48a6-9ebb-fca7b6a8c9bc",
        "cursor": {
          "ref": "7c0eedfc-e75c-46fb-89c7-d996b146abe6",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4a9988b5-0c4b-4fed-97a0-7cd2716eab5f"
        },
        "item": {
          "id": "429123ad-a1b1-48a6-9ebb-fca7b6a8c9bc",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e5c50604-bd10-4deb-88bf-6047dc1feee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 955,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5829f6f7-4913-42c1-80b6-38260f623e0e",
        "cursor": {
          "ref": "def26bd4-57fe-4327-8b5b-40d050ec87ca",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "5d4f3f08-4ad9-4d0b-9aab-7515bd12ed0c"
        },
        "item": {
          "id": "5829f6f7-4913-42c1-80b6-38260f623e0e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "05c9f8da-30c0-43c7-b00d-8b4b7b8bfc4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 943,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ace73d-4f16-4c69-8f94-41ef4406c191",
        "cursor": {
          "ref": "af60cfc3-7ba6-40e2-a674-c565801eb7a1",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "22cff783-c036-42ae-ac53-f7a6f9297e78"
        },
        "item": {
          "id": "66ace73d-4f16-4c69-8f94-41ef4406c191",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "58d9f91d-fe09-469a-a6b5-011b27069b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1822,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94614e59-1011-4f70-a88e-5fa9585f2711",
        "cursor": {
          "ref": "0268629d-63a6-4730-95e1-24b15e3680de",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "554913e2-a886-45f1-a7dd-ba75058507ee"
        },
        "item": {
          "id": "94614e59-1011-4f70-a88e-5fa9585f2711",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "45e7016a-617c-4a4a-90ae-26cd7820c451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2093,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dbbbbd5-40fb-4c55-96ba-01994ed97bcd",
        "cursor": {
          "ref": "2ef7451e-4c75-4085-bb8e-c1f5db0a8163",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "7e85f675-f45e-4861-b19d-f61b1a0d4fb1"
        },
        "item": {
          "id": "7dbbbbd5-40fb-4c55-96ba-01994ed97bcd",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c0385879-787b-4f5f-9b0b-3ff9b2438266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2180,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e60476-0d66-426a-a4b1-47e42df26195",
        "cursor": {
          "ref": "3cbe6409-a9c0-4b06-a0e0-0b230a92b622",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "5ef699f0-ad4b-47ea-b578-19c2d08cd175"
        },
        "item": {
          "id": "f1e60476-0d66-426a-a4b1-47e42df26195",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8b29e51c-6aaf-493f-9475-0b92001523a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 909,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c2481ee-46c1-4e05-af5c-74738fb03e1e",
        "cursor": {
          "ref": "5af75dd3-a5ba-44fe-b023-26fc8caa4528",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ffc860c7-3842-4128-997c-d3ef5277ff63"
        },
        "item": {
          "id": "6c2481ee-46c1-4e05-af5c-74738fb03e1e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8a033cab-d4a2-47f3-a483-daf92fff5de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 945,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a7b68f-5858-4ba8-b427-84d3ffcba681",
        "cursor": {
          "ref": "d94a0718-6f8b-4e72-b8e0-1f666aba0021",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8e7765a8-e420-47d4-860d-17b98044b48c"
        },
        "item": {
          "id": "82a7b68f-5858-4ba8-b427-84d3ffcba681",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1dc03bf8-321d-4488-b83b-58b96a0bf53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 890,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ce8648-32f0-47b6-b174-6953d522d81f",
        "cursor": {
          "ref": "c9cd6581-7ca8-4f9f-9d7c-558f8ab2ba11",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b6422839-b3be-447e-9735-6546179a3cbe"
        },
        "item": {
          "id": "85ce8648-32f0-47b6-b174-6953d522d81f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "74c72df9-059a-4ae4-a49e-6d2fb8cbe5ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 898,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15025365-6498-45c0-940c-bde65874e5b0",
        "cursor": {
          "ref": "300957e6-e587-4bf8-96dc-e7b5373935e4",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3ccf5ab1-6093-4429-a9ed-35bfed99003e"
        },
        "item": {
          "id": "15025365-6498-45c0-940c-bde65874e5b0",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "70632849-d9e7-4f5c-8f7f-359e05168bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 937,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24674b84-b29e-4b25-8b8a-20198c074461",
        "cursor": {
          "ref": "250c6b98-e29f-4c9c-b24f-f4bc004d272d",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "5c3bef2a-41cf-4ceb-afc8-49b342b89de5"
        },
        "item": {
          "id": "24674b84-b29e-4b25-8b8a-20198c074461",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "ae530489-03d1-48a2-a3c2-7482390033b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 968,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f0f438-f8a4-42ec-92e9-5241c3289818",
        "cursor": {
          "ref": "a9d59045-1e03-4833-b3b9-8f5f8d627c42",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b26f5162-a7e5-4742-9c8b-af51bd64acc7"
        },
        "item": {
          "id": "b0f0f438-f8a4-42ec-92e9-5241c3289818",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "7b615b7e-1398-4564-ad35-6647c967757f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 950,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "742010d2-35aa-485a-ba6b-6262a460d4e9",
        "cursor": {
          "ref": "2894be4f-e39c-4447-9a14-e02b4887273f",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "186df083-421a-4b32-b93e-1d1368b16fda"
        },
        "item": {
          "id": "742010d2-35aa-485a-ba6b-6262a460d4e9",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "aea01a82-6bca-4d89-a99e-3dbb097fdfad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 870,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7837528-ddd9-41a5-8e24-37c03377f6be",
        "cursor": {
          "ref": "8da6998f-6996-4529-819d-d51ed50db149",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "64ba446d-7c8b-4bdd-8ee3-a21cb5825474"
        },
        "item": {
          "id": "c7837528-ddd9-41a5-8e24-37c03377f6be",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c901380b-68ef-45ab-81db-339b1bc8918a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 843,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d77144d6-4a07-4666-9997-8da32e3fbc05",
        "cursor": {
          "ref": "dd8f1338-55e0-419a-bf74-b4e0611ed166",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a15f5df0-f8ac-44ef-9221-97ad151fdd25"
        },
        "item": {
          "id": "d77144d6-4a07-4666-9997-8da32e3fbc05",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "43898b52-6c76-497c-8e33-38dae79395e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 905,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d76538-a6cb-4b89-9d51-ed82e7124453",
        "cursor": {
          "ref": "c5684777-3198-4427-895b-7e5488fc0f4c",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "8fb7337a-0ba7-419e-93d2-c8867328be6e"
        },
        "item": {
          "id": "b8d76538-a6cb-4b89-9d51-ed82e7124453",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "33f91951-361c-4ca3-889b-d0882f836120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 822,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0efe43b9-7092-424d-b96d-b1e0b5a70465",
        "cursor": {
          "ref": "4d20f2b9-56cb-4889-9296-696da45338ff",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8378da0d-6f30-443b-86dd-ab0b23aceae2"
        },
        "item": {
          "id": "0efe43b9-7092-424d-b96d-b1e0b5a70465",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "efb639a1-fdf5-42ca-b23f-7e3a725659ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 858,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4be870e-a706-4fe1-a023-ffc8bb63a14c",
        "cursor": {
          "ref": "1f1b51ed-bdeb-4c96-87db-dcd167b39415",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8df0fb8c-e6aa-44e5-8863-ecd34cb68ffd"
        },
        "item": {
          "id": "a4be870e-a706-4fe1-a023-ffc8bb63a14c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "94d1e778-57ef-49b6-8f00-6b83fc8f1065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 857,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05cf7bca-8f94-471a-a6d8-ed728577dcea",
        "cursor": {
          "ref": "de71cb5c-2336-4840-ae28-233639e52cd8",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "4c901222-95d3-4447-9cce-4f3ecaff6fbd"
        },
        "item": {
          "id": "05cf7bca-8f94-471a-a6d8-ed728577dcea",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b7cdcac8-fe07-4570-baa5-bb72b2a66e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 906,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54e5612-3d89-4a1b-8974-dde7fa5df64d",
        "cursor": {
          "ref": "5c4e4bf2-6616-4bce-b975-6b562778b98b",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "10b26061-7e80-40ea-8461-d46cb728d0b1"
        },
        "item": {
          "id": "a54e5612-3d89-4a1b-8974-dde7fa5df64d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "3efbb406-80a8-4ade-b483-85e0776e1c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 923,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1d10d1-ad7c-49c3-8d03-1dcb0932932a",
        "cursor": {
          "ref": "d88b33c2-e894-42cd-992b-e1cddff87703",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "17cc8381-4770-4fde-aa7e-eda02f5de47d"
        },
        "item": {
          "id": "ce1d10d1-ad7c-49c3-8d03-1dcb0932932a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "faf3caa1-5657-4e80-9495-3cb4309179e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1811,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9551dc5-fbe2-408e-b59e-fff9c00d091d",
        "cursor": {
          "ref": "89bed9a1-bf50-4692-9a1d-83525c9620ec",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "787ad098-1dd9-4518-bae2-e852461d46e4"
        },
        "item": {
          "id": "d9551dc5-fbe2-408e-b59e-fff9c00d091d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a1ed02c0-915c-4beb-a381-b603e194f3d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2371,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfac01e9-e286-490d-b046-16aa44f6d7e2",
        "cursor": {
          "ref": "5b0521bb-4901-416c-ae48-6ed0386ea9c2",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c4e9bc88-1169-46c4-819c-320a74ef258e"
        },
        "item": {
          "id": "bfac01e9-e286-490d-b046-16aa44f6d7e2",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8c2c7dad-d514-43b4-820f-9d573c46a98c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1148,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e1cedf-f368-44f8-ad51-331f5512a517",
        "cursor": {
          "ref": "617c2474-497c-4dee-aa7f-50fb5bcf4229",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "63044b26-10dc-4d76-9eac-78361e216b07"
        },
        "item": {
          "id": "98e1cedf-f368-44f8-ad51-331f5512a517",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "10a1b903-890f-454b-8bd5-66cc675fb702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ec06e3-256b-45ac-a66d-c3389886e2cd",
        "cursor": {
          "ref": "f749baf5-d382-42ac-954c-d5f0299ca467",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "574f2ade-4d22-4055-9e4e-74de8341da6d"
        },
        "item": {
          "id": "a0ec06e3-256b-45ac-a66d-c3389886e2cd",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "adb1b897-77e3-402f-8db5-4d8bfbafdf42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3f4d668-666d-4e91-8b02-ee323c0840a6",
        "cursor": {
          "ref": "0a610795-3ad7-4850-bae4-03ec7cb4d40d",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "29b5785a-e814-4425-9968-49cbdc3cae5a"
        },
        "item": {
          "id": "e3f4d668-666d-4e91-8b02-ee323c0840a6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4021c3e1-f973-499d-b9cf-11e8e50af525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa04fd88-598d-4da6-800a-df9cef7f6caa",
        "cursor": {
          "ref": "c8366d51-c81e-4098-858f-8efd167cc084",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d3e0211c-e0fb-4a7f-9f0a-d22845d1a8a6"
        },
        "item": {
          "id": "aa04fd88-598d-4da6-800a-df9cef7f6caa",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f5d3d5b3-514a-4e1a-8eaf-8f509ab60dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86657cf8-ded5-4d65-845f-a53f1c8cfa0a",
        "cursor": {
          "ref": "5afc190e-b8ae-4e0c-919e-78e85a2a1e71",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6bc3d4f5-402f-4344-835e-a35c38d55cbe"
        },
        "item": {
          "id": "86657cf8-ded5-4d65-845f-a53f1c8cfa0a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0d0cb5ca-bc28-4df3-9837-e7411f3ed90c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a2ccc7d-d98e-4dce-a77f-7344c49aab83",
        "cursor": {
          "ref": "ab179aab-6670-4599-af8a-02c81c6b11c9",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1cd807e8-b629-44c8-838c-918c9e47a2c8"
        },
        "item": {
          "id": "7a2ccc7d-d98e-4dce-a77f-7344c49aab83",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7668828d-408b-43a1-925f-21bde3537a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d318f79a-4bbe-4aa9-89cb-f558e29d6dc8",
        "cursor": {
          "ref": "020648de-8a8d-4ef7-8553-85c31b7d5d42",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a088bf2f-476b-408c-b794-dbd09ba1c12c"
        },
        "item": {
          "id": "d318f79a-4bbe-4aa9-89cb-f558e29d6dc8",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "65cc6039-410a-444f-80a8-469199015225",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 906,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "564072d5-b29f-4ed7-b4ff-17985e6d8624",
        "cursor": {
          "ref": "0f83e10d-f131-4b4d-80a1-36f070fd18d3",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c58c1692-3d38-4a07-9307-4a66eae057c0"
        },
        "item": {
          "id": "564072d5-b29f-4ed7-b4ff-17985e6d8624",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "495734b0-8d46-4327-ac5d-f504d45648a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b967a9a8-cd0e-490d-b8b0-8ddff2e85f17",
        "cursor": {
          "ref": "f8f0b2ae-95e8-441b-8382-a4471b476d57",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "12c09c18-772b-4eb8-bd58-2113b00178a6"
        },
        "item": {
          "id": "b967a9a8-cd0e-490d-b8b0-8ddff2e85f17",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "33f19b4c-3312-4db7-a508-dcc8338ea193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45eb958a-13a0-4cae-acc9-57ee16a75e9a",
        "cursor": {
          "ref": "e107a538-7f94-42f2-9ce2-aecb595802e3",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a4e1e2d8-62b9-4fcf-bb52-5e578fd30966"
        },
        "item": {
          "id": "45eb958a-13a0-4cae-acc9-57ee16a75e9a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e58fb2b3-42e1-4d86-ab07-fcce5bbade98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c37cd3-093b-4aa2-bd6f-ebb400505b4a",
        "cursor": {
          "ref": "7a82caa5-f787-4293-a477-3e8c64511b49",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a0e5f0d3-b6a8-4404-b150-67e18a700ce7"
        },
        "item": {
          "id": "14c37cd3-093b-4aa2-bd6f-ebb400505b4a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "3ab88328-d5cc-4d21-8fcf-b2605553e134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1043,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98cae532-8f1a-4a88-98c3-2f7e48ebec09",
        "cursor": {
          "ref": "6f99aab0-b7e9-442c-8061-1b41298b7e67",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c00b3ac8-937f-442f-bd27-de6b85505608"
        },
        "item": {
          "id": "98cae532-8f1a-4a88-98c3-2f7e48ebec09",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ef8f133d-aa28-4336-b7e5-2d18b78c1943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1808,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "303157c9-c9bb-4704-8917-3945338466e0",
        "cursor": {
          "ref": "540e4cf3-b5bf-4b08-b6f9-a09ee8bdd84f",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "91cb18b2-308e-4ec6-8aee-a8766dff94de"
        },
        "item": {
          "id": "303157c9-c9bb-4704-8917-3945338466e0",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "3301534a-10a1-475f-9b54-c3aed1ff77ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1978,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c3e503-c6c4-44f0-a164-9b2ef8229aa0",
        "cursor": {
          "ref": "f5edb581-d37e-4f07-af72-751cb70dc33a",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7a187b9e-63f1-460f-84af-93b10dc95191"
        },
        "item": {
          "id": "58c3e503-c6c4-44f0-a164-9b2ef8229aa0",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "28f4bbdd-fb63-4a6d-987a-1adc1caaf056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2390,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "974429f3-ce05-45a3-be37-b1da144de359",
        "cursor": {
          "ref": "358603c3-9f1d-420c-9a35-55ddb024be64",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c43f6526-a7f5-46af-bd88-48639fe6a635"
        },
        "item": {
          "id": "974429f3-ce05-45a3-be37-b1da144de359",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "94c6b9ab-0d72-44f8-96d7-95c8e30e65d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1852,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8015183-d6ee-4aef-a988-1449100936fa",
        "cursor": {
          "ref": "4c40aa5d-a40f-4399-a9ff-cea837558c23",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "32aacc6e-5785-4881-8d15-f3161721b8d6"
        },
        "item": {
          "id": "e8015183-d6ee-4aef-a988-1449100936fa",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "6e634f28-90b7-434e-845a-ffbdd971a53a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1506,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4851cdc-9d17-420c-ad75-33d92f1840f2",
        "cursor": {
          "ref": "307c007a-4ad2-429b-8dc8-5e71d8eb0685",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "24186246-b749-4557-baad-a4c8a9f272b3"
        },
        "item": {
          "id": "a4851cdc-9d17-420c-ad75-33d92f1840f2",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "11ba8e98-c1d1-4455-ad56-50909b0875ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1294,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a972a8e3-0243-48e0-b777-6bf1110faa6c",
        "cursor": {
          "ref": "02f7305b-2253-46c1-8e61-2bbd795b67b6",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "300ef536-f3ba-426f-9629-81c6eb121806"
        },
        "item": {
          "id": "a972a8e3-0243-48e0-b777-6bf1110faa6c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f5c08b62-3121-4a56-ac3e-aa19ab1e248c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1cad987-645a-4651-9c9c-72357540b0ba",
        "cursor": {
          "ref": "85c4b350-81fd-4a90-83c2-2b8984b2e996",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "fef7e14e-7a2d-49fa-9eff-1d9d9d4377da"
        },
        "item": {
          "id": "e1cad987-645a-4651-9c9c-72357540b0ba",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7acb3c46-5182-498d-8dbb-7670ba1e165a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d30147-f143-4de3-b7f2-de918f80cd50",
        "cursor": {
          "ref": "6773ca63-85a4-488e-9d32-9e9f81b554a2",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3dc2f6ec-2541-44db-a1f4-bd1ffda17b3f"
        },
        "item": {
          "id": "40d30147-f143-4de3-b7f2-de918f80cd50",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "167ba01d-bd4e-4a76-b84b-7ab420b6b345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 748,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "589a8612-1677-40d8-a871-ef5815274027",
        "cursor": {
          "ref": "2fba5d09-ab4a-47e6-80da-58cbe7377204",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "fb36a184-a8f6-4885-bd95-c7ee7f72c75d"
        },
        "item": {
          "id": "589a8612-1677-40d8-a871-ef5815274027",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "0cbfa457-f23b-43c8-9308-91268d941bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b25c62-2e92-459f-9576-42663c20b52f",
        "cursor": {
          "ref": "7e50e5e7-3ae7-4387-9ee8-39128c3462f7",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "47e3ee40-a2f6-4c8f-9f05-4d5509faa252"
        },
        "item": {
          "id": "e5b25c62-2e92-459f-9576-42663c20b52f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "923767a8-144a-47d4-8cea-7828d3a50955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6654c5fd-34c8-4325-92a4-02fe6fa99a5b",
        "cursor": {
          "ref": "90443695-a952-4e8b-bbc2-8977a6791247",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b28f9049-1633-4437-b8f4-697e2ac3d859"
        },
        "item": {
          "id": "6654c5fd-34c8-4325-92a4-02fe6fa99a5b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c6d8588e-72e8-4b9e-902f-eaf55b37d299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 726,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f4f7dc-456e-4b21-882e-b4e31c797c45",
        "cursor": {
          "ref": "4486a421-a37a-4971-a5c2-26e8263595f1",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f7b672dd-080d-4cd9-946a-ab71a134fa82"
        },
        "item": {
          "id": "75f4f7dc-456e-4b21-882e-b4e31c797c45",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "5fdc6c3e-8c38-4b06-8415-aff3790c929d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da23fd2d-cbf4-404b-a834-b151d7cdacab",
        "cursor": {
          "ref": "8157e848-f371-4fa2-b735-0f35447fc193",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ca929a99-e38b-4acb-b95c-163204923d55"
        },
        "item": {
          "id": "da23fd2d-cbf4-404b-a834-b151d7cdacab",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "104a4ffd-49b4-4e0e-aca5-6524d22df262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc56ea9-fc3d-45e2-a9cb-7486d8194abe",
        "cursor": {
          "ref": "067ea77c-bc5f-4fad-aad4-8d7e616d034d",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e1ee58ad-aea7-41eb-970b-5500772c5bbb"
        },
        "item": {
          "id": "2cc56ea9-fc3d-45e2-a9cb-7486d8194abe",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b5842866-713b-4888-ad2b-4a8730c672c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 722,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0793376f-cf7e-41e9-9074-c6b858b8c578",
        "cursor": {
          "ref": "40a1bfdb-eec9-4fd4-b9c0-d397926476f6",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "042df466-a37f-469d-a5e4-f62525d0eac3"
        },
        "item": {
          "id": "0793376f-cf7e-41e9-9074-c6b858b8c578",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "182f7771-c2d1-43ec-a148-2c72d821a5b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea1edfb-8cc3-444f-af1c-832729641af8",
        "cursor": {
          "ref": "dea04737-2536-475d-b48d-4c2b8d345181",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "25f262cd-d895-45e7-9d75-0c3bed802b8f"
        },
        "item": {
          "id": "eea1edfb-8cc3-444f-af1c-832729641af8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "683fa05e-c155-4c3a-90ed-2cbe5533b301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 718,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ab649d-095c-45de-9ae2-5ae3b325dffc",
        "cursor": {
          "ref": "debcd9ab-9185-4e65-ae38-c1a24ab659d8",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5e57be5a-a38d-43bf-bcc2-78615b597e01"
        },
        "item": {
          "id": "69ab649d-095c-45de-9ae2-5ae3b325dffc",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "fb941c40-3e2d-4ab3-bcdf-c7b35b035907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d6553c-f31c-4f8e-b402-517e808fbda6",
        "cursor": {
          "ref": "ed56cc89-69a7-4aa8-bcf4-afd10f0071d9",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "506a35a0-ca5e-485c-ba81-61cecfd196ee"
        },
        "item": {
          "id": "52d6553c-f31c-4f8e-b402-517e808fbda6",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "c7ef2570-6a19-446f-a388-18c5298c6f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc06d1c-1f3f-4792-ae63-504d8dbcdb64",
        "cursor": {
          "ref": "82b09f77-4b7b-48a3-b774-0455eaf9ad04",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "91db45bc-b291-41f1-950c-d3b4bd157a23"
        },
        "item": {
          "id": "ebc06d1c-1f3f-4792-ae63-504d8dbcdb64",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "eb8673b1-03fd-44bc-a6c0-241aa0c28b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 732,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "592589b1-e68f-46dd-ab05-01bead20d3da",
        "cursor": {
          "ref": "e04f5f0b-9b7f-4e25-9960-f9c2b86003bb",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e694a130-391a-4a86-a406-eeb4f9e2bdc1"
        },
        "item": {
          "id": "592589b1-e68f-46dd-ab05-01bead20d3da",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2c3fe73e-1c65-4319-a497-c2ea364aaeb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "451b50df-5ce3-4d4c-aa80-d7ae444e332a",
        "cursor": {
          "ref": "e00b83e3-6e26-4a0f-a9b6-59e783016706",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "4ad36ab0-d796-4e12-adc9-bbfae659c532"
        },
        "item": {
          "id": "451b50df-5ce3-4d4c-aa80-d7ae444e332a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "0bc9963f-f23b-4a69-9cf6-6b867f8f4838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fee3bb9-b5e2-445d-be89-8b1a43d49018",
        "cursor": {
          "ref": "2b258acb-250f-42b2-8763-da4de17cd317",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "3f7d1dba-5e25-44b5-b88b-368e4269fb67"
        },
        "item": {
          "id": "4fee3bb9-b5e2-445d-be89-8b1a43d49018",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9b9d4c03-a55f-4f33-8377-ef15748c8c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 709,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74bd9916-57cd-4b3a-b01a-7448b7163015",
        "cursor": {
          "ref": "cbae4892-03f7-49ec-9380-c79013569ee0",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "545a58ca-2867-41a4-b6fa-60af44acbb8c"
        },
        "item": {
          "id": "74bd9916-57cd-4b3a-b01a-7448b7163015",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b244b73f-2d0f-48e8-a009-4b40abeef545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e67b349c-01ff-4b7f-a9d7-3df0e3be39f9",
        "cursor": {
          "ref": "c48e3927-f887-4ea1-a9df-43936c2f21cb",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e9fad212-7179-4702-958f-66b3c874b332"
        },
        "item": {
          "id": "e67b349c-01ff-4b7f-a9d7-3df0e3be39f9",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f4859324-5b32-43cf-9ddf-447ff2d0557e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "000375e9-f6d8-484a-b65e-4283fbadd688",
        "cursor": {
          "ref": "ff5e60bc-51a0-4588-ac7a-87f1176ddcce",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "962609d0-e16d-431a-88dd-e62a291c6723"
        },
        "item": {
          "id": "000375e9-f6d8-484a-b65e-4283fbadd688",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "23e6603c-6cf5-4f22-930c-e8708fd6c6a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f07f84ce-3c0b-40b4-a146-b53d3c048d80",
        "cursor": {
          "ref": "25ad2048-fb59-4d3d-b60d-fc9ec624166f",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "da0ae1fa-9b07-4513-8a56-60c6473767b3"
        },
        "item": {
          "id": "f07f84ce-3c0b-40b4-a146-b53d3c048d80",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "618a95ef-07ee-4590-ac87-6816add35ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694b4d40-fb6f-4023-a7f5-ee7faaa636b0",
        "cursor": {
          "ref": "cb8448ab-7c7c-4c37-92c9-c7a2f92e249e",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ab625e9c-0146-4344-a883-24a33479c87d"
        },
        "item": {
          "id": "694b4d40-fb6f-4023-a7f5-ee7faaa636b0",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "fb7b379a-b6fd-4732-8799-35b7cea9107c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfbded18-02fb-42b1-8aff-1cc48b31b1f6",
        "cursor": {
          "ref": "749a3b4d-f730-4594-ba78-83645007c846",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "5f6e777a-c7b9-4a97-af97-0743642a55c7"
        },
        "item": {
          "id": "cfbded18-02fb-42b1-8aff-1cc48b31b1f6",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "14b346d8-6d05-418e-82ee-4e265076de41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0b632b-4507-4ef0-8601-285dfdd1cb3b",
        "cursor": {
          "ref": "41cf5a6d-7e7f-46ce-911f-398950da1f94",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e4f8cf2d-47e7-4279-bc80-3bba87fe0d57"
        },
        "item": {
          "id": "bd0b632b-4507-4ef0-8601-285dfdd1cb3b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0ee7cf94-c361-41c3-9413-224ccb3767c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca227a3-6ffd-44ee-b077-27b5aa0fa0a5",
        "cursor": {
          "ref": "a0b45b61-15cb-41ca-b14e-f469ac55ca05",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "17a9e44a-9122-4585-99ed-4ea8ea3967f6"
        },
        "item": {
          "id": "bca227a3-6ffd-44ee-b077-27b5aa0fa0a5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ccdb4dd8-388a-4e96-b001-1ffba1422402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d6f7a6-09b2-4d04-884b-fcc771b0f5a2",
        "cursor": {
          "ref": "102365f8-f34f-4610-bb3a-97c339b327c7",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "aab243ec-3b01-40ad-98b5-c1bdaf9b2ee3"
        },
        "item": {
          "id": "62d6f7a6-09b2-4d04-884b-fcc771b0f5a2",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d718fdb1-cdf3-455d-884f-4332e3466acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6affd34-5cba-4cd0-a803-963e4052eea5",
        "cursor": {
          "ref": "c81c50f8-c137-4bf8-8eff-62dcb0f11dc5",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "563965da-e336-4093-8b23-1ffc023426f5"
        },
        "item": {
          "id": "d6affd34-5cba-4cd0-a803-963e4052eea5",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c99459a8-4015-4601-afe9-a6c7cd42e92f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294da6d5-de0b-4db8-a0f2-6a3e568cf102",
        "cursor": {
          "ref": "b0cb04c0-627e-437f-b3e5-54d0e557419f",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e02d5339-0481-441c-8df6-431001b52d8f"
        },
        "item": {
          "id": "294da6d5-de0b-4db8-a0f2-6a3e568cf102",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "20a6050f-5d6e-450b-9b15-580b1f7c7a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "302c0580-272e-4a45-bcb9-30943a1c7e85",
        "cursor": {
          "ref": "238f5fbf-3d4b-491f-bfdb-a0d030268022",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "19180d65-49c9-4846-bf47-baba58b40bcc"
        },
        "item": {
          "id": "302c0580-272e-4a45-bcb9-30943a1c7e85",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "978620b1-b0aa-4bbb-9fa4-ac2b6f48b35a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac30d9d4-3c2f-4e89-b1a6-bd5d882ab7cf",
        "cursor": {
          "ref": "0564a43d-859e-4068-991d-cd2ed066afab",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "3425feec-4f97-424a-9ea0-d2c063582226"
        },
        "item": {
          "id": "ac30d9d4-3c2f-4e89-b1a6-bd5d882ab7cf",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "88f80478-42b8-4e65-8884-5c58711118ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e501ab-a6a8-4c7a-b384-9b71a5130ad6",
        "cursor": {
          "ref": "ce7711ce-9cd4-4979-a57c-a772381e6a36",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5e6af1a3-e559-4864-8931-40108bdc23f3"
        },
        "item": {
          "id": "77e501ab-a6a8-4c7a-b384-9b71a5130ad6",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "890d28ad-0737-4554-a78a-47234694f47b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd232882-6990-4153-80d1-14846a5ae5d6",
        "cursor": {
          "ref": "99509b75-222a-4fb2-afda-a76a2053ef50",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "81ff594f-d6db-4b4d-a90c-09e0c166073a"
        },
        "item": {
          "id": "fd232882-6990-4153-80d1-14846a5ae5d6",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2047734b-66db-40be-8493-0c27db5c8ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 727,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a8b2a5-e1ab-4421-902d-7f24b3a89d7b",
        "cursor": {
          "ref": "655a5920-e4e1-473f-b161-a6df23adebff",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "003af8d1-ed8e-4e4d-a620-d819bf6f9643"
        },
        "item": {
          "id": "d7a8b2a5-e1ab-4421-902d-7f24b3a89d7b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3978f38a-8eff-4d58-b0aa-04028db75594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "349fb310-32ad-40a9-922c-8bc993964307",
        "cursor": {
          "ref": "a0cd6e1d-83ac-4ca5-8817-698dfa4e76fd",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ef9091f7-e296-488a-a0aa-7c372d22d43f"
        },
        "item": {
          "id": "349fb310-32ad-40a9-922c-8bc993964307",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "972e320a-7258-4b3c-96d4-845114819e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a98137-0afe-4f28-a3c7-385fac312ec9",
        "cursor": {
          "ref": "bc7d409a-7979-4539-9525-e7c100647c3f",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "6a72c5ea-8325-4968-aa79-c75d8be07406"
        },
        "item": {
          "id": "f0a98137-0afe-4f28-a3c7-385fac312ec9",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "18208676-c329-4cb8-ac52-b180c86f0c0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a3a975a-bf34-4839-9dfe-7411ce9efd58",
        "cursor": {
          "ref": "a724d3b2-f45c-4a65-b3cd-d8751b8fe30b",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a7e8ed3a-f612-4135-bdb1-7ff3b3d109f1"
        },
        "item": {
          "id": "7a3a975a-bf34-4839-9dfe-7411ce9efd58",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d4adc482-1f92-4c48-9b33-4f6f5dc275ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 889,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a93f7b-4d5c-4031-9e18-cae654d9c1ef",
        "cursor": {
          "ref": "b39aeeaa-3afb-46e5-bd92-7f99f350360a",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "95ed2e2a-703e-4146-b39d-3d9e78392255"
        },
        "item": {
          "id": "e2a93f7b-4d5c-4031-9e18-cae654d9c1ef",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4bb1aae9-1d45-41fe-8069-40b29ba445ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1202,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c1de0c0-fcae-4963-9337-90562b51e3b8",
        "cursor": {
          "ref": "52e92a28-1e6e-44dd-9729-9de4dfa5be45",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9bb27127-fcf5-4665-a09a-3c36d6a53f5d"
        },
        "item": {
          "id": "2c1de0c0-fcae-4963-9337-90562b51e3b8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d8412255-ee96-4c80-b144-219de072d7c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1089,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed91dda-7f05-49d6-ae57-f2b4f251df17",
        "cursor": {
          "ref": "08f3b379-5b25-40d1-b00e-f61f907684e9",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "cc62821c-40f0-4cf4-965c-dab3c3461d8e"
        },
        "item": {
          "id": "0ed91dda-7f05-49d6-ae57-f2b4f251df17",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "31ec4232-835f-4141-814a-9cb530aa2cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1264,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a7d78ac-6f6c-4aa2-b701-c9b5c4af6b8d",
        "cursor": {
          "ref": "e520baf2-585d-44f7-bbd1-0f5edfc5c275",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b3867706-fb20-4774-8a32-fe17874d0019"
        },
        "item": {
          "id": "9a7d78ac-6f6c-4aa2-b701-c9b5c4af6b8d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5d6d4f54-006f-40d4-8584-c7bccf8ca72e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44babf0b-c8c4-48b7-8b27-a99cc8255d07",
        "cursor": {
          "ref": "ff1352d4-ddd2-47c0-b133-f07de1a4cc45",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "98d37d1d-dcc1-4ab7-9331-b287e79d366d"
        },
        "item": {
          "id": "44babf0b-c8c4-48b7-8b27-a99cc8255d07",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "1cebe472-3e45-4bed-8c78-c2e06115aa1a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 729,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d7eb446-c1fd-4c8f-bbdc-3640cd1eb6e2",
        "cursor": {
          "ref": "3955db2c-4a1a-4dcd-9502-6c325451dd36",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "0c31fae3-4c54-401f-906d-65da54061071"
        },
        "item": {
          "id": "1d7eb446-c1fd-4c8f-bbdc-3640cd1eb6e2",
          "name": "credentials_issue"
        },
        "response": {
          "id": "2637c1e5-46e4-45fd-a958-44c22209e897",
          "status": "Created",
          "code": 201,
          "responseTime": 6833,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e98403c-1e70-42e2-a3f3-6aa4edceb642",
        "cursor": {
          "ref": "f6be6720-3c0d-438e-beed-08e41726bd76",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e576e204-8893-4793-8db5-3b9ef3592335"
        },
        "item": {
          "id": "6e98403c-1e70-42e2-a3f3-6aa4edceb642",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5472db7d-5b32-4f20-aafa-4ebc616ea0dd",
          "status": "Created",
          "code": 201,
          "responseTime": 6479,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e04f51-4438-4713-9d5d-9bbaa3b118d2",
        "cursor": {
          "ref": "dbce49f0-6c93-4d13-9237-aa3554bbeab8",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "81ce05d7-72ea-4ede-9b9a-cb0c11ab82d9"
        },
        "item": {
          "id": "90e04f51-4438-4713-9d5d-9bbaa3b118d2",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1db8fab9-b04e-484a-8203-2b90546be4a3",
          "status": "Created",
          "code": 201,
          "responseTime": 7226,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b24241e-07ca-4a71-828e-363810070873",
        "cursor": {
          "ref": "265b90e8-8f1f-471b-9a32-bf406881c6c7",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "34257222-31c3-42c0-afb4-320ee887b5a3"
        },
        "item": {
          "id": "6b24241e-07ca-4a71-828e-363810070873",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "2f287f00-2428-4fde-8931-ec11f0988408",
          "status": "Created",
          "code": 201,
          "responseTime": 6173,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a5fcaf-7d21-4a27-a570-8c7c739fca55",
        "cursor": {
          "ref": "3f353979-2e67-45e1-bfd7-0e1b97a223ff",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "79fec722-9820-410a-b4ae-2bd1c114cf5b"
        },
        "item": {
          "id": "79a5fcaf-7d21-4a27-a570-8c7c739fca55",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "091acde9-865a-4d0b-82f5-1b63de1f51ee",
          "status": "Created",
          "code": 201,
          "responseTime": 5910,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f6d45c-0081-4249-9b01-454dfb67e142",
        "cursor": {
          "ref": "ceeb57f6-f0e7-4d14-8692-479b69bbeedc",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "bc11b2d0-3304-402b-9e17-d15c9d69b4f7"
        },
        "item": {
          "id": "69f6d45c-0081-4249-9b01-454dfb67e142",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "53682d84-2aaa-4562-81fc-117ce410aa72",
          "status": "Created",
          "code": 201,
          "responseTime": 9457,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f01b643f-fa99-466b-84ff-274f0b0d17eb",
        "cursor": {
          "ref": "294331eb-92da-45c2-967b-e684d7f99d59",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "39d53681-2c3c-4926-a7aa-0164b07e2721"
        },
        "item": {
          "id": "f01b643f-fa99-466b-84ff-274f0b0d17eb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3f7c1225-4d52-489f-96b4-bfdf104cfc43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f01b643f-fa99-466b-84ff-274f0b0d17eb",
        "cursor": {
          "ref": "294331eb-92da-45c2-967b-e684d7f99d59",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "39d53681-2c3c-4926-a7aa-0164b07e2721"
        },
        "item": {
          "id": "f01b643f-fa99-466b-84ff-274f0b0d17eb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3f7c1225-4d52-489f-96b4-bfdf104cfc43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3741fa9f-256e-4379-87e2-ce705bfa9137",
        "cursor": {
          "ref": "dca736cf-b3c1-4e8d-a409-ba723d1df1ae",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c7fadce4-b083-4534-8f5d-c74352d336f2"
        },
        "item": {
          "id": "3741fa9f-256e-4379-87e2-ce705bfa9137",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "10a0e997-b0a7-4fea-b82a-5a7d5e92a8ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15bcd604-743c-4716-89d1-e2eb1a1e2e36",
        "cursor": {
          "ref": "acaa870f-0870-4ae6-be98-68ce52494a26",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "692008d3-5d6c-4167-ad61-9c5111160e15"
        },
        "item": {
          "id": "15bcd604-743c-4716-89d1-e2eb1a1e2e36",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "504bd15f-788c-411b-bb75-83c0a844639e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9092199a-9394-4623-882b-358166b3523d",
        "cursor": {
          "ref": "0dd8ef3c-52bc-4905-92a5-1b5b22a50262",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "46d098cd-2501-40fb-85c1-de26fb45c558"
        },
        "item": {
          "id": "9092199a-9394-4623-882b-358166b3523d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "aa1aa65d-793e-4544-b335-0528a15dcfcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ba4baf-d9e1-4b6d-bf80-f67c3f7c8b27",
        "cursor": {
          "ref": "6c4df56c-6f34-4bce-b2a7-cb760aa2838d",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "73c482d5-fffb-45d9-a040-ee3985c3324c"
        },
        "item": {
          "id": "b9ba4baf-d9e1-4b6d-bf80-f67c3f7c8b27",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "fe460632-1da9-44d7-8d25-db53ffe8a2e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8183ce6f-3a9c-4414-9770-05ad7f5e815b",
        "cursor": {
          "ref": "e6f117b9-0a7c-477a-82bb-e9c8e7fc1837",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c34e4d73-5e34-47bb-bb0a-175e2dea2cae"
        },
        "item": {
          "id": "8183ce6f-3a9c-4414-9770-05ad7f5e815b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "dbb13cdb-2504-4952-aaeb-d34bf97d9b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8745f2-433c-4d41-a4fa-fb63c90780a7",
        "cursor": {
          "ref": "5ccf1918-1eeb-41b6-a5fc-7400d586d6df",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "be4f1ecc-6e27-49b5-b69a-27b847983be1"
        },
        "item": {
          "id": "ee8745f2-433c-4d41-a4fa-fb63c90780a7",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "654b0850-7d10-4237-a316-b68f98508257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d597e7-28fc-4835-9dac-edcb9fa4ecee",
        "cursor": {
          "ref": "d11ae79e-7070-4afe-9bcb-16044d550523",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "04b22517-0f29-4d11-bb84-39b4136c1a8c"
        },
        "item": {
          "id": "41d597e7-28fc-4835-9dac-edcb9fa4ecee",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "57e830c6-5470-47d6-aa83-b6471610d6a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b678cd1-efcc-4a90-a565-1fe6c223aa79",
        "cursor": {
          "ref": "c7173b63-6b99-4b25-8b4a-8f6e8fb41f58",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1c9fc105-9a4b-48d3-bef9-6caca4a7f3c3"
        },
        "item": {
          "id": "4b678cd1-efcc-4a90-a565-1fe6c223aa79",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "32da11d8-91c5-4e50-ab13-59b2258dd275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 732,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb62516-8bf5-4819-8c5b-ac4d6c7fe8f7",
        "cursor": {
          "ref": "baf3c534-33b9-4155-adef-2f6a1ba02928",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1c52f10b-d3f0-4579-9f22-19304839a2ea"
        },
        "item": {
          "id": "cbb62516-8bf5-4819-8c5b-ac4d6c7fe8f7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8f914fce-6438-41a8-8a23-e77c819ee7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc90000e-97b3-4659-8e82-803da79fcf37",
        "cursor": {
          "ref": "c3683e42-5195-4b38-a779-021ecea58753",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a7daa2ef-d91c-4906-a0b1-5c24a8a5f6f3"
        },
        "item": {
          "id": "cc90000e-97b3-4659-8e82-803da79fcf37",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "352b8b0f-4e7f-4810-b84a-e5e60c06c908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1949e43-e433-43f9-9cd6-21bfce7774e2",
        "cursor": {
          "ref": "7f5e7a42-98db-45c0-b002-4633ad1db12f",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8875b660-9667-422d-96e3-6459317b06bf"
        },
        "item": {
          "id": "f1949e43-e433-43f9-9cd6-21bfce7774e2",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "56300ac8-98c1-45b5-99ff-c897d2998671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f81fb3-620d-467f-862a-19515ec2a2d4",
        "cursor": {
          "ref": "2ce949da-6b70-42b9-b429-ffcf38b642db",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "cd3e9801-9fbf-457b-a03b-6e5c6bcbe895"
        },
        "item": {
          "id": "07f81fb3-620d-467f-862a-19515ec2a2d4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f7b39f12-8998-4b82-b463-4bf7b2a32b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e195f009-daf1-45ad-887f-55c081894386",
        "cursor": {
          "ref": "92998b4d-c8a9-4cfb-ac52-63de0cf22352",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ad996829-b47e-4abd-886e-51f0585a9848"
        },
        "item": {
          "id": "e195f009-daf1-45ad-887f-55c081894386",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f70bf326-aec4-4505-972d-722b3f022a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b1122ea-cb53-4911-bc43-32ec945160ec",
        "cursor": {
          "ref": "b3185c21-6f96-4bcb-924a-03456ee43285",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f987956d-8ec8-4cf4-9bad-0cd690b77547"
        },
        "item": {
          "id": "8b1122ea-cb53-4911-bc43-32ec945160ec",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "fd2eb6c8-ccfd-4ac3-8b7d-c8e5620a5a06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "577e6beb-e561-4c34-a577-5668f3dd1272",
        "cursor": {
          "ref": "a0528201-4289-4c9f-80ea-6809b38cfca1",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "4e1b58c7-cfc1-43a5-85a3-22969c7fe129"
        },
        "item": {
          "id": "577e6beb-e561-4c34-a577-5668f3dd1272",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "842f85a1-d770-4230-9d10-5b9ed9d89405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1590ed0c-94bb-4f51-b898-cc301b557490",
        "cursor": {
          "ref": "c280ebd4-efdb-440a-ab01-4484ebd80718",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d1e7fc94-2356-45c2-93cd-6a850ca82a4a"
        },
        "item": {
          "id": "1590ed0c-94bb-4f51-b898-cc301b557490",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "06524473-2ac6-4f1d-bac9-791518d91fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb80f7c-d96a-4526-a4d7-1ffcc3261ed5",
        "cursor": {
          "ref": "53808199-1cea-4c44-8249-b93e6b95efe8",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b7fd61f7-14e8-4047-a8b8-1c19a96866ea"
        },
        "item": {
          "id": "4eb80f7c-d96a-4526-a4d7-1ffcc3261ed5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3c645208-e998-48a6-b038-aefcf6e91334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c6fa954-41c9-4c54-89bf-90ff61f6c90f",
        "cursor": {
          "ref": "1fceb258-0571-4f6b-beef-5c20ddb62a48",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "aef14f86-8e68-4386-8b7b-1ca7fcdb384b"
        },
        "item": {
          "id": "2c6fa954-41c9-4c54-89bf-90ff61f6c90f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "331b5f80-d3c6-4a8f-959e-54cd8793dcdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840f9ba6-8b2a-41cb-acbb-9181bdf791cc",
        "cursor": {
          "ref": "b7d7f745-33c1-409c-a85b-887f9653f2c3",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "79ba042f-c697-4a96-9bb0-158ff226d45f"
        },
        "item": {
          "id": "840f9ba6-8b2a-41cb-acbb-9181bdf791cc",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "06239bd0-6ec4-461d-8955-fcd4a0387fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e369733-18d7-45f0-9e69-85cfac71a465",
        "cursor": {
          "ref": "869f98aa-5b53-4ad8-9c7e-9819692d192f",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1bf4ac64-f07f-4bcb-bec6-3f15e605f951"
        },
        "item": {
          "id": "6e369733-18d7-45f0-9e69-85cfac71a465",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c961f289-ed63-4e98-a3dd-11f6cc1f8ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 724,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ac076d-4eec-458c-a5bc-20b41a106f33",
        "cursor": {
          "ref": "d8199ecc-b96d-4f67-9333-97135c719f43",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "fe40ed7d-b9be-4eba-8d43-c711518c1979"
        },
        "item": {
          "id": "55ac076d-4eec-458c-a5bc-20b41a106f33",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c280504b-8fad-46b2-a728-e59e8b235063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b89c04e-34bc-4fab-b46d-56f714dca9bd",
        "cursor": {
          "ref": "ffc6dc86-70c8-4fe6-9ad2-649156e85aa9",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6df80c4d-3547-488c-b8a8-c9427f4e4654"
        },
        "item": {
          "id": "4b89c04e-34bc-4fab-b46d-56f714dca9bd",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ad99845c-320b-4982-b657-8f7c4255b07a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "140d3ddb-2191-487b-990f-f69aa6aba404",
        "cursor": {
          "ref": "345d5e56-cc51-4cdc-8938-73fe6c03344e",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6d37c7cf-1237-432d-9eae-523f11c6a291"
        },
        "item": {
          "id": "140d3ddb-2191-487b-990f-f69aa6aba404",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a6f833d6-5bbf-4319-aee0-980eeff16187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c14dfb-2fc0-4d74-9c12-c241d2896e8d",
        "cursor": {
          "ref": "5677531a-be9e-4355-b41e-421b9604afba",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "8566edd2-7107-4d5b-96d1-87370bdfaaa3"
        },
        "item": {
          "id": "39c14dfb-2fc0-4d74-9c12-c241d2896e8d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e52ebe7a-dc4f-4b68-82c6-04d1721a8c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a163ee7-8b80-4aa7-8389-9ff8e6829d83",
        "cursor": {
          "ref": "83a0399d-5c41-4dd2-8a52-947e5c8ade39",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "8196046e-c794-46ec-894e-3cb85b8ad44b"
        },
        "item": {
          "id": "0a163ee7-8b80-4aa7-8389-9ff8e6829d83",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "924a8992-de8d-4594-a71f-0a4d89ebb678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6689ed-fcd0-4ab0-817e-c113e94b067b",
        "cursor": {
          "ref": "bc471aeb-61c7-4b80-b2ab-8360a713547d",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0c1e235c-f541-4b77-b727-b01263fc039d"
        },
        "item": {
          "id": "bb6689ed-fcd0-4ab0-817e-c113e94b067b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "11f97df9-8fbc-4f8d-aaba-171f8343d331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69f2295-21da-4c39-bb0c-513c61977068",
        "cursor": {
          "ref": "b186be4f-066b-4ed2-a30f-e4ad07570352",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ee735880-c95f-4a0c-a629-0ddeca142931"
        },
        "item": {
          "id": "c69f2295-21da-4c39-bb0c-513c61977068",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "256a0bd4-dcd2-4fab-b542-035f9feb6593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 706,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb9c140d-ab54-42d6-adf1-b118ecb1214c",
        "cursor": {
          "ref": "a4b078b5-7760-4f08-85fd-efe60bea8d50",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b54aa1b4-9713-4b2e-b2dc-47c1283a4fcb"
        },
        "item": {
          "id": "cb9c140d-ab54-42d6-adf1-b118ecb1214c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3bd1c514-708e-42fa-be37-10bde291cdb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 729,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "818c5f7c-eacd-474f-a87d-a194ae0dcf86",
        "cursor": {
          "ref": "e19e2192-50ca-45b9-99f9-90faacebcdbb",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "70b63913-7110-4d69-b43b-f410302e1b40"
        },
        "item": {
          "id": "818c5f7c-eacd-474f-a87d-a194ae0dcf86",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7862efb1-d131-4e0f-a829-f38e69f211ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 732,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac9e3b5-93a9-47dd-9d57-5d46c8a9b03c",
        "cursor": {
          "ref": "7662dfc4-758d-4680-b286-542e9a53f219",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "224c545b-d8fb-46bb-b71c-1f9ca060339c"
        },
        "item": {
          "id": "fac9e3b5-93a9-47dd-9d57-5d46c8a9b03c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "622919bd-3864-499d-af06-b5d9ffaa3581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 996,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c19a291-9ca1-4f41-930d-64fd60e00d46",
        "cursor": {
          "ref": "51cbf6ed-97f2-41b3-b789-d968bcea46dc",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a01ed6ec-ec2f-474c-8b3a-61e65a984282"
        },
        "item": {
          "id": "4c19a291-9ca1-4f41-930d-64fd60e00d46",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "abf9eee9-3da4-4bd8-92c8-539264f60d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1103,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ab43abd-50dd-4e3b-b39b-b4a434841d73",
        "cursor": {
          "ref": "c843e4c5-1bd6-48ea-bc54-8f30040c78eb",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "6831a1c8-e523-4ab7-9990-42db1ff72b9f"
        },
        "item": {
          "id": "4ab43abd-50dd-4e3b-b39b-b4a434841d73",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7e044f9e-7566-4711-8804-def144ccc3a7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f94f215-1f16-4fa1-ba33-b23eabb827f5",
        "cursor": {
          "ref": "5a0b1708-a7ca-4bc0-8100-fda7a6207659",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a354e632-7960-40ee-9881-7ba60945e506"
        },
        "item": {
          "id": "3f94f215-1f16-4fa1-ba33-b23eabb827f5",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "89f14c0f-8b2e-4cd1-aff8-72faf5b75499",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1198,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6766479a-1d01-468c-9fb4-0a0b99e31221",
        "cursor": {
          "ref": "bd034dbf-c430-4de0-974a-84e9e09edbc3",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a3ca1b85-d51f-41b8-94d2-57a9e6e14ca8"
        },
        "item": {
          "id": "6766479a-1d01-468c-9fb4-0a0b99e31221",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "015cca58-5f1e-40bc-abd2-0cf63e2741a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6766479a-1d01-468c-9fb4-0a0b99e31221",
        "cursor": {
          "ref": "bd034dbf-c430-4de0-974a-84e9e09edbc3",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a3ca1b85-d51f-41b8-94d2-57a9e6e14ca8"
        },
        "item": {
          "id": "6766479a-1d01-468c-9fb4-0a0b99e31221",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "015cca58-5f1e-40bc-abd2-0cf63e2741a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e55bee64-f558-4d72-9ba4-5235cb78cd17",
        "cursor": {
          "ref": "b8a35eaa-f8f3-495f-882a-bf881b2d5e09",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7906bffe-64b9-4028-8d16-3cf51ae52621"
        },
        "item": {
          "id": "e55bee64-f558-4d72-9ba4-5235cb78cd17",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5e1c9011-be0a-4b40-bdb8-e48299e6a439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c31c7ee-b620-4a2f-9dcd-605113468923",
        "cursor": {
          "ref": "565a806e-ce48-432f-b163-81f29993037f",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "91dc4365-96f8-45e3-bfb0-9bd335b086c5"
        },
        "item": {
          "id": "6c31c7ee-b620-4a2f-9dcd-605113468923",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "71644178-45e1-49f5-aebc-6d139a0c00d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce6ab60b-760c-43de-ac3e-6e7ef1a4e770",
        "cursor": {
          "ref": "d93f2c18-f54d-4e12-89e2-cbbfcef3b87f",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "08170c57-1b80-4f03-ad02-12b2b5c34f63"
        },
        "item": {
          "id": "ce6ab60b-760c-43de-ac3e-6e7ef1a4e770",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d1834196-226f-455c-9cee-7c6e340ef678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4de7cf-287a-4d02-a7ae-a5fc45484f0e",
        "cursor": {
          "ref": "d80e9bb1-dcf0-42c5-bb7c-70c678844fc5",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4ad377cc-cd77-4649-b95b-f69786684353"
        },
        "item": {
          "id": "0b4de7cf-287a-4d02-a7ae-a5fc45484f0e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2c82435c-6d62-4738-9a88-b5d84a349298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b40250-4e09-43a6-bedb-72ce352e22a0",
        "cursor": {
          "ref": "fb4bc485-43df-4ccd-ad17-6c67a024d701",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "7c5208ee-d800-4fdc-b48f-4b50b5a03b2c"
        },
        "item": {
          "id": "c6b40250-4e09-43a6-bedb-72ce352e22a0",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "33bdd0cc-2bed-4950-a3aa-aaa8e19b6848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c02359a-19ff-42bc-a733-e9b4e8e9cca8",
        "cursor": {
          "ref": "41b0dfb0-03e2-4173-9bc1-ec401866868f",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "80dbeefe-9c0a-4f7b-a59d-640018c229ea"
        },
        "item": {
          "id": "2c02359a-19ff-42bc-a733-e9b4e8e9cca8",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "432dd0f6-0353-4238-8272-e9f8bd95f433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef92af4-70a7-4001-b1be-e92c088f33f1",
        "cursor": {
          "ref": "0709ad04-9d4a-48c0-bd9e-b1b7cc9a2114",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "523cb252-b3c8-44df-b4a2-21a04dde48fb"
        },
        "item": {
          "id": "3ef92af4-70a7-4001-b1be-e92c088f33f1",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "dc52b3e7-4611-4399-9a5c-f5722d221723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1139,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c80b51-9bc7-492d-8e5b-ecf144772d8e",
        "cursor": {
          "ref": "c9cd87e2-1caa-4f3b-a0bd-c1d778ef0015",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f3e6e0b7-28a3-4642-bf2f-fb07d9631083"
        },
        "item": {
          "id": "65c80b51-9bc7-492d-8e5b-ecf144772d8e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f6beb3b3-f886-4fde-9b5e-38c29f19985f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 938,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f29fdf-bbf6-4316-882d-8cd9aa9fb2b2",
        "cursor": {
          "ref": "68d1d198-a60b-4504-8686-770a840f4e14",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "1132a153-aa8a-47b5-9b25-66aa5723c6f4"
        },
        "item": {
          "id": "60f29fdf-bbf6-4316-882d-8cd9aa9fb2b2",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e9bd66fa-7e34-4a86-89b2-40a8a1171878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 961,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35159d66-9be6-43a1-8c33-20ea5b80c33e",
        "cursor": {
          "ref": "d9338e54-e331-4ec1-8206-72794f7467ef",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "2aeb22f5-e751-4df6-9611-34201e30a80f"
        },
        "item": {
          "id": "35159d66-9be6-43a1-8c33-20ea5b80c33e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "3b0a78e6-6930-4181-ab5f-36c1a5586895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 934,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92f6b1d-9818-41e3-917f-b857a9ac9e48",
        "cursor": {
          "ref": "240f4fac-c514-4560-bdc7-4287f5185e16",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a718fa6e-f9af-4ae0-9dd1-5c36adca15ab"
        },
        "item": {
          "id": "e92f6b1d-9818-41e3-917f-b857a9ac9e48",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b9479ff9-0f32-4aa6-9c7e-3da4ab7a7c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "058a145c-58b7-4696-9b7c-25f6156189c8",
        "cursor": {
          "ref": "254fa46c-593e-4538-ad59-c176c9b6e58f",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "32ea7a6f-abae-45b1-aaf9-8c465a7166bf"
        },
        "item": {
          "id": "058a145c-58b7-4696-9b7c-25f6156189c8",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "90931139-fcbb-42d1-9e07-349f526ab2d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28923315-2858-4caa-9832-4f51f7fb7247",
        "cursor": {
          "ref": "6b17a4b3-02dc-4880-adb9-9b28cfe012c2",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "abebd6fe-1490-426f-a4d2-e5c590cfeec4"
        },
        "item": {
          "id": "28923315-2858-4caa-9832-4f51f7fb7247",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2120c9d9-d5bd-4fae-8418-4ff17996dc91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 962,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ae6de6-1f9f-4626-87ba-083a5e91bbb0",
        "cursor": {
          "ref": "9052dca5-ebaa-482c-9ebf-04f02665b167",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "28f6b893-50cb-401e-8633-58f05a29a4ad"
        },
        "item": {
          "id": "d7ae6de6-1f9f-4626-87ba-083a5e91bbb0",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a76778bb-74ba-4b2b-9fe5-e99d449fe505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1234,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef3aa18c-5e2b-47cd-a727-83a0dc0077a4",
        "cursor": {
          "ref": "234d0287-f9ed-4ddb-9275-9b6e1d3adc22",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "62bf6fb7-378d-485e-b784-ba4aad28c110"
        },
        "item": {
          "id": "ef3aa18c-5e2b-47cd-a727-83a0dc0077a4",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7d5606df-51f9-43e1-943a-6b16da30c661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1153,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3bbfce-fce5-4f2a-aa97-cc619debfacd",
        "cursor": {
          "ref": "afff984f-1847-49d7-9a5c-ff21b5762876",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "1903b6b6-87f1-4a98-9c55-e3d5056a032c"
        },
        "item": {
          "id": "2b3bbfce-fce5-4f2a-aa97-cc619debfacd",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "4318f3fc-0f55-46f0-87cb-be9a404fced5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "353f2c60-8b69-4a2f-939f-4c76f23738f5",
        "cursor": {
          "ref": "7a2ba106-db3a-4d40-8de1-126a7d9c0a0a",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a4b99a88-2c9b-4b70-8f85-85c92f7cf13f"
        },
        "item": {
          "id": "353f2c60-8b69-4a2f-939f-4c76f23738f5",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e98fe8d9-a5ad-4171-991b-a68e891e70f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8fda17-785c-4a82-bd19-5208a59d824b",
        "cursor": {
          "ref": "bebe8b6c-e898-43e9-b697-9aa4c7771333",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "0c20efeb-e9f7-45da-92fc-47a227fe51c1"
        },
        "item": {
          "id": "5a8fda17-785c-4a82-bd19-5208a59d824b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f16f129d-8165-4e71-a069-2255edb40697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a201c9bf-d486-4a01-b18c-55c8309f0fbd",
        "cursor": {
          "ref": "09d5126b-d255-4378-8772-664af5585b60",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b439ccb0-f3e3-4cfd-a5c4-ee6a996ab510"
        },
        "item": {
          "id": "a201c9bf-d486-4a01-b18c-55c8309f0fbd",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "0f25bbdb-1add-4171-a1db-633b6764eabf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53910275-6564-47bd-9dbd-a95eaf85d653",
        "cursor": {
          "ref": "f7342781-97d3-4023-a20e-da5866a6287a",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ae00e5e6-719f-471c-9d4c-2e2597857871"
        },
        "item": {
          "id": "53910275-6564-47bd-9dbd-a95eaf85d653",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "40039161-de33-46dc-8d1e-a98931b14587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7dcdd92-2412-469e-85ec-64e79d3f5cec",
        "cursor": {
          "ref": "2c6f02a3-fc6b-41ef-bf6f-8c761d1da11e",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "66c5cc64-38f5-46ae-999c-6f1e8d451f99"
        },
        "item": {
          "id": "a7dcdd92-2412-469e-85ec-64e79d3f5cec",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "fd3caeea-5b1e-45b5-9180-8c6ca10784a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 963,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e678ba0a-b211-4489-8386-ab84b2ebe719",
        "cursor": {
          "ref": "498e7daf-99e7-497e-9a4a-0b9d3bda1043",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "21a66b2f-c01d-4723-a2b6-5fa13e9f4ae1"
        },
        "item": {
          "id": "e678ba0a-b211-4489-8386-ab84b2ebe719",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "087fb93f-bb9d-4ae1-b748-794f35cc9bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 926,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f002088b-b12c-4e9e-a39f-32445cf5960c",
        "cursor": {
          "ref": "77fb811f-f727-4270-aa51-6b21f973ee89",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d803bd4f-dd20-4fbc-b4f7-4897a4b42bc9"
        },
        "item": {
          "id": "f002088b-b12c-4e9e-a39f-32445cf5960c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5ee7cb72-6e63-4544-808b-40a424d2bd31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 973,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f6ba17-3e65-4e58-963b-891609fa7094",
        "cursor": {
          "ref": "73e3f7ef-4fbb-4193-8c79-760dd545cfcc",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "8829cd7e-9572-4c37-8887-611ec1363287"
        },
        "item": {
          "id": "a4f6ba17-3e65-4e58-963b-891609fa7094",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "b8435949-e196-43e1-a0bb-86061e2dd8af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1062,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcfcb91b-5fce-47ff-9124-349c1f979d5f",
        "cursor": {
          "ref": "a17b9749-c39a-419e-b7a6-c7f261d1e9eb",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d0dd1df4-0ad9-4658-a6c0-02fd7ffd30f7"
        },
        "item": {
          "id": "fcfcb91b-5fce-47ff-9124-349c1f979d5f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "cdffea5e-0ec4-4521-bb06-a5e8ce4e901c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddba5e81-5b73-4107-85ef-d7317b98f6e8",
        "cursor": {
          "ref": "b963a6ae-7576-4e5d-8d09-5d76cb7110d1",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "6127c829-8e3a-4f10-b486-758de44861d9"
        },
        "item": {
          "id": "ddba5e81-5b73-4107-85ef-d7317b98f6e8",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c7e80bc6-3f37-46f0-86b4-b2f1e5035a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ce0cfc-e529-4608-87d5-900185eed414",
        "cursor": {
          "ref": "cad5c9ee-8019-4a5d-9319-fecfe9127ae9",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f7c88244-b5f7-402a-88ae-3c504951756b"
        },
        "item": {
          "id": "20ce0cfc-e529-4608-87d5-900185eed414",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "35479302-a0aa-4be0-b811-d97ff982477e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00682412-1765-4307-9321-c5a9ce7c8229",
        "cursor": {
          "ref": "3c904937-3b6b-4920-be02-2975ece9d82c",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "de02d413-8cbc-45e0-ba93-9fff4108750c"
        },
        "item": {
          "id": "00682412-1765-4307-9321-c5a9ce7c8229",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f9559a97-e273-4a6f-9db8-fceeb15b8b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c9914b-72f1-4de4-aeef-562553067258",
        "cursor": {
          "ref": "383b99b3-d72e-40ff-8361-edfb280ad7c1",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "92ec2eae-5ee5-4dc0-bc55-c8ecb2a5cdb2"
        },
        "item": {
          "id": "a0c9914b-72f1-4de4-aeef-562553067258",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7098d5a4-838f-4a81-a183-6618c565e3db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88721778-a6c5-4bc6-857b-4c15510515dd",
        "cursor": {
          "ref": "bece77da-75ba-48cd-9922-702bfa818ab1",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "73669559-8e0d-49d4-85e0-381a0490d81c"
        },
        "item": {
          "id": "88721778-a6c5-4bc6-857b-4c15510515dd",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "540ef65d-8eca-4866-a42f-ad7512bb8846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8506fdc-abbc-4c93-9b74-861ad28a761e",
        "cursor": {
          "ref": "7aa6f55f-61f3-432e-991b-e1cee8b837e2",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "20c828b8-5e98-4834-a731-5e8114dfd3f6"
        },
        "item": {
          "id": "b8506fdc-abbc-4c93-9b74-861ad28a761e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "2b5fc9e7-3420-4041-9370-938f186b553f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d06138-b9b5-4168-9d7f-fda6bd6f450e",
        "cursor": {
          "ref": "d757a312-1562-4aab-84b8-39f25f74d92e",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c5c2043a-f98e-4856-96f6-33cda05a5e55"
        },
        "item": {
          "id": "d1d06138-b9b5-4168-9d7f-fda6bd6f450e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "dc8f0422-9cda-4417-9ab0-2a01dc2cdb74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1861275b-4b98-4a73-893d-929aa206d718",
        "cursor": {
          "ref": "72612bad-638b-4e15-ad7b-eff7311c07f1",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "1734c0f3-1a5c-42f6-9674-0f4645efc273"
        },
        "item": {
          "id": "1861275b-4b98-4a73-893d-929aa206d718",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ed0f02d2-ca8b-42a8-93e6-3f270976e3e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263055de-17f0-4434-bc29-ddc1939bbb37",
        "cursor": {
          "ref": "0459fa30-5894-4ab0-b8e4-fef7f26b4bcb",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ab08bac9-57a8-4d9a-b22b-76da373460e5"
        },
        "item": {
          "id": "263055de-17f0-4434-bc29-ddc1939bbb37",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c3bc604d-f7eb-45b0-9b3d-2cc6fa7dec0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ee750a-6c18-4d9b-8480-93ac3ef7cc2e",
        "cursor": {
          "ref": "d99447b9-ada3-49eb-8586-de6e23d62032",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "9163d0ce-e527-4b0d-93c0-62847e3998d5"
        },
        "item": {
          "id": "d9ee750a-6c18-4d9b-8480-93ac3ef7cc2e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "01e84fa2-5eb1-48bd-8a4b-ce3c61bd8625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f93cdfaa-70b8-4492-b8b1-391f60ca0e9c",
        "cursor": {
          "ref": "7d35a2ac-d709-4a54-86b3-4f0d095079dd",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c4112653-cd80-41be-8382-d7a70bc68c43"
        },
        "item": {
          "id": "f93cdfaa-70b8-4492-b8b1-391f60ca0e9c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "61c769b1-8697-4602-bcf5-aeb5845268e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f4e98e-d07b-4b85-9805-f1ae4ac203d5",
        "cursor": {
          "ref": "bdf588de-3c31-42f6-9d50-314d4127b365",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6455c484-d255-4d90-9f81-548be5e4970d"
        },
        "item": {
          "id": "17f4e98e-d07b-4b85-9805-f1ae4ac203d5",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e0c8a6e6-1d42-4dcc-ba30-7a20f9b52857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf605cf-9207-43d1-9498-bcf206121fc6",
        "cursor": {
          "ref": "6b19ddc5-3b28-45a1-b242-fb536520a138",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d8fa364c-1443-4f30-866c-13178b04d5de"
        },
        "item": {
          "id": "0cf605cf-9207-43d1-9498-bcf206121fc6",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f1c361f9-25b3-4ba8-99a6-6fed922de0fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "502ac577-55f9-4ea9-ab6d-298e72759553",
        "cursor": {
          "ref": "3c461d7a-54da-492f-b85e-23fcbd5e0106",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "bac1f6db-b45b-400b-a0d3-e655683f85d9"
        },
        "item": {
          "id": "502ac577-55f9-4ea9-ab6d-298e72759553",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "09aa5fa1-8d9a-4f20-a8df-6e867489984c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d22c48-36cb-4d1d-9f5b-38f1a51d2d54",
        "cursor": {
          "ref": "33f2a10c-8a60-4c72-8565-cf991015d604",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "66a4abb6-be58-4cb9-aaf9-11441e753746"
        },
        "item": {
          "id": "77d22c48-36cb-4d1d-9f5b-38f1a51d2d54",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "143e0cef-8582-44c6-b06d-c7db39eb1f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf7fe1ab-a4c8-4745-8f7a-f00609c97c11",
        "cursor": {
          "ref": "cb3464fe-bb52-4f16-8011-49c2dc386305",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "082ba371-42bb-45cd-afb7-4d968983d8b6"
        },
        "item": {
          "id": "bf7fe1ab-a4c8-4745-8f7a-f00609c97c11",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "3121c668-086a-4684-bb57-89aa0b044719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c399574d-166b-41e2-96f3-cfcfd36a54d0",
        "cursor": {
          "ref": "fcf3035e-d841-4884-8097-3c102a91531a",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "39c1d4fc-6659-4e84-93c0-03bed520695b"
        },
        "item": {
          "id": "c399574d-166b-41e2-96f3-cfcfd36a54d0",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a06abfa1-6cf5-44b3-9b65-f208dc48188c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739a3a21-3d44-4e1f-9696-213c52be8ef6",
        "cursor": {
          "ref": "0e3627b4-d9e9-4edb-9d27-372d7eec5ff9",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "012c9701-d632-4267-a706-418a9d322b59"
        },
        "item": {
          "id": "739a3a21-3d44-4e1f-9696-213c52be8ef6",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "acadd842-07ba-4a2f-b556-7ba1f116831f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0794a333-ed5b-40ed-8dbd-29aebbc034ce",
        "cursor": {
          "ref": "9fe26d5c-b6d7-4a6b-904b-1e74071a8cf4",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d32cc63b-427c-4e05-b78c-a600262bea26"
        },
        "item": {
          "id": "0794a333-ed5b-40ed-8dbd-29aebbc034ce",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "42bde0f0-4cc0-47e2-8302-d88b214698fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bfdb1d1-b6e8-4dc9-b81e-c8c23046ec34",
        "cursor": {
          "ref": "d7814dc6-a661-4563-b435-d7d2329c7f22",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f887dabc-011a-465e-9246-a7d20e236b2b"
        },
        "item": {
          "id": "6bfdb1d1-b6e8-4dc9-b81e-c8c23046ec34",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "104b2540-bf8b-488c-8888-11db7313e829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd63cdb4-33b6-47ad-b6a1-088059deb928",
        "cursor": {
          "ref": "33e38da7-c5be-49f6-9de0-39b25fd151b7",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ee13af0f-1aca-40b8-af34-5ebe7efb8ae6"
        },
        "item": {
          "id": "dd63cdb4-33b6-47ad-b6a1-088059deb928",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "e36a166e-9a0c-4eac-8b60-dae97957e684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e9bf53-f08d-4693-bbc0-9e077118b565",
        "cursor": {
          "ref": "0b7b424a-fa78-4bb5-a241-b24f6932c1ca",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "fdee9603-f020-45e8-a233-5be6eb95cb41"
        },
        "item": {
          "id": "e0e9bf53-f08d-4693-bbc0-9e077118b565",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f3e425d6-c38b-4c56-b0e1-6157ab724df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd02ac8-6cfd-49fd-a732-922dbfea1422",
        "cursor": {
          "ref": "0816d29f-2cbd-4177-971a-c3089e8e8c26",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "06223b76-e92a-4b8f-a5ed-93cc86c5883a"
        },
        "item": {
          "id": "5fd02ac8-6cfd-49fd-a732-922dbfea1422",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6ad4fe91-b625-4b7e-819f-d3dbcb76d392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1111735-ab57-42f7-b88e-507130631ff3",
        "cursor": {
          "ref": "01446b14-92f7-439b-bc29-fe567b67dd35",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "87146c43-fa32-46ef-96a0-76952dc01ab0"
        },
        "item": {
          "id": "f1111735-ab57-42f7-b88e-507130631ff3",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8faea6f0-6d73-496e-a676-6852c83285ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b4a28e-a86b-4c68-bf83-01388cc9bc2f",
        "cursor": {
          "ref": "8e617ddf-c542-44ca-bbfe-ae28f9b6c947",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e8019c37-9b81-4867-94cf-2b7dd74aebc2"
        },
        "item": {
          "id": "70b4a28e-a86b-4c68-bf83-01388cc9bc2f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0057107f-ad0b-4d33-948b-892abcdad54b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b4e5fd7-4eaf-4e28-a44e-db6986585e25",
        "cursor": {
          "ref": "743ab446-a7fd-414a-b6a2-2a42c1bb4db3",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f3dec12e-36af-4f88-a427-5cc6648b0ae0"
        },
        "item": {
          "id": "5b4e5fd7-4eaf-4e28-a44e-db6986585e25",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f4b3bfb2-1cb7-44be-b612-1ac5f1661cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b581c0-b33a-423a-9ce0-db1f54c823cc",
        "cursor": {
          "ref": "c828ffb3-4c1a-4d1d-a797-a27c60e91843",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "32332607-dced-482d-a2c0-1a84f119107e"
        },
        "item": {
          "id": "83b581c0-b33a-423a-9ce0-db1f54c823cc",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "41a6f3b0-0f35-491b-8892-4b55460bbec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef491bd-eecc-47ff-aa13-2cf9e929373f",
        "cursor": {
          "ref": "088ad160-0240-41d5-81af-cc0838c92655",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "58b21a9e-c8d8-4830-904b-0b7840251e76"
        },
        "item": {
          "id": "1ef491bd-eecc-47ff-aa13-2cf9e929373f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "48abaff0-5d72-43e8-8f79-1de501aaaa3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc782b4-38ad-4c34-b8f8-6114ef60a421",
        "cursor": {
          "ref": "a11f7c93-370d-4779-8f0a-38b05cffa004",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d0a84dea-c70e-4521-88e3-6e33dc9780d8"
        },
        "item": {
          "id": "4cc782b4-38ad-4c34-b8f8-6114ef60a421",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d69ec67e-3024-4b79-b031-422a82233b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd99fed-311c-474d-a97d-bc7fdb7eb9b2",
        "cursor": {
          "ref": "33d46031-d387-4ac3-80ee-5189e8dda978",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b0aa1f72-6bf9-4c84-9388-b6b47fd17469"
        },
        "item": {
          "id": "bbd99fed-311c-474d-a97d-bc7fdb7eb9b2",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f61259ce-e46b-4f29-a84e-6a3c02e76a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 852,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e02d4375-0445-40a9-89e1-631bb1d51664",
        "cursor": {
          "ref": "df114d00-1f12-456d-89b1-9fb98cbe5f2e",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "43b063bb-cc37-4d43-b42f-180e50b2fd80"
        },
        "item": {
          "id": "e02d4375-0445-40a9-89e1-631bb1d51664",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c250d94d-27f8-4bda-a0c6-941fd0c53023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1002,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df798967-a9e5-48b9-ab14-4cebd900a448",
        "cursor": {
          "ref": "a59b45af-3883-49c1-99b7-cf7f973828d1",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d3b46e41-f557-4a5f-b8ac-498ff71634a4"
        },
        "item": {
          "id": "df798967-a9e5-48b9-ab14-4cebd900a448",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "076d9181-d02a-4aee-b438-27686c94f008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1133,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e58e218c-77ce-44d8-ae0a-9436acd1e026",
        "cursor": {
          "ref": "9f118956-4e2f-4439-b710-276dc5fee2e4",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9763d4ca-14bc-4453-838b-4042d9b17047"
        },
        "item": {
          "id": "e58e218c-77ce-44d8-ae0a-9436acd1e026",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a1f9e8ba-da87-465a-ae53-c35997909f77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 966,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e65e13-4478-470e-8019-b9aaebc38382",
        "cursor": {
          "ref": "e15000eb-5387-4f70-a1cd-dd9b075f36a7",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a343362e-6f62-4806-ad3b-0713836cffff"
        },
        "item": {
          "id": "a3e65e13-4478-470e-8019-b9aaebc38382",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ca7586d6-c5d0-49b0-a3c6-c2a2584de31d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b7c8835-d415-4738-a754-4aa62c240533",
        "cursor": {
          "ref": "3de3b4fe-df70-46ff-b7d7-11924b8f3bf2",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "54e17557-7076-4069-b115-43e36d7df175"
        },
        "item": {
          "id": "3b7c8835-d415-4738-a754-4aa62c240533",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d022ed03-c190-4e61-93df-284dca7bf8ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f41102-97ad-41e8-8c03-57cf8e59a771",
        "cursor": {
          "ref": "dad0ddf0-a436-43be-ae2a-d6197ac7da56",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "54e86642-9b6a-4c0c-91d4-7fd447fc5519"
        },
        "item": {
          "id": "68f41102-97ad-41e8-8c03-57cf8e59a771",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "98d15fb8-24b0-4407-b98d-d8746e3031a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc5087a3-0485-430f-9c72-9fbc2178053c",
        "cursor": {
          "ref": "ad92629a-47db-4b99-9cdb-06c599d44662",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3af192cb-f6d3-4b40-8a8a-0cfd5db8ead6"
        },
        "item": {
          "id": "bc5087a3-0485-430f-9c72-9fbc2178053c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d77e11da-38c3-43d1-bd47-d065c062637b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53516d2d-446b-46d7-a600-032a572cc355",
        "cursor": {
          "ref": "b4e63686-a0f0-49f9-a940-972a60a66aa5",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "60e6fb83-1758-4a94-a1c1-84e6bb6b7b20"
        },
        "item": {
          "id": "53516d2d-446b-46d7-a600-032a572cc355",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d1f19be7-64b3-4915-afb3-9c5cba77da03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b004ec-0ee7-493f-84ea-8f4b55309857",
        "cursor": {
          "ref": "9443a239-6402-4aec-a54d-82a963e82574",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e742a2e6-f064-4c4f-baac-290029afde1d"
        },
        "item": {
          "id": "46b004ec-0ee7-493f-84ea-8f4b55309857",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "af4ffab6-bf3b-40b4-b206-f6e427aeed49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b476d1c-de45-4e7c-ad98-58f52251db7d",
        "cursor": {
          "ref": "e6b5e378-a6a6-40a7-bc86-996d2f536c61",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a7ad140e-fe01-4ad9-8338-662ee58b15fc"
        },
        "item": {
          "id": "7b476d1c-de45-4e7c-ad98-58f52251db7d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "75b62e47-0fab-4509-ac0e-f729ba1cf018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8240197-5ff2-4e84-a983-d59e95573710",
        "cursor": {
          "ref": "a9c806a7-5eaf-40fa-872b-aa6537f3457d",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ff06ae67-311f-44e0-a58f-7bf09a26aa70"
        },
        "item": {
          "id": "a8240197-5ff2-4e84-a983-d59e95573710",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "963817a2-d2e5-4844-87b3-e6a5bfb5f8b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84bbd941-1dfc-4755-a4a9-a16be24715ef",
        "cursor": {
          "ref": "36766cf4-50ca-4d60-b9f2-49a692ffaca0",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d51a608d-f0e3-45ae-8a0f-273dd81009c3"
        },
        "item": {
          "id": "84bbd941-1dfc-4755-a4a9-a16be24715ef",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "2624031c-0b30-416f-9738-2feb82b4ed5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195813e6-7d54-40f4-b612-add70588138f",
        "cursor": {
          "ref": "88aedbf2-0402-44d4-b28a-6a93203d0494",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "857f4f62-99b3-4d33-b065-5585ea312aa8"
        },
        "item": {
          "id": "195813e6-7d54-40f4-b612-add70588138f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "49b68571-f4f0-46a5-a254-c1ba7c9cc6bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8687b107-00e5-4ce7-9f9f-b912fb62303f",
        "cursor": {
          "ref": "1fafeb90-14d8-4f02-8704-75b22d5b48c8",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "fe62f537-6dab-4857-b00f-e514bbc53e1c"
        },
        "item": {
          "id": "8687b107-00e5-4ce7-9f9f-b912fb62303f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "1c2c31b4-cb35-4676-a3c2-9aa710292a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a7cfd8-9fd0-49c2-ba6a-eaae53314b56",
        "cursor": {
          "ref": "44ae0a99-db6f-4dad-98c9-3e5e0f51272c",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "8490d786-a76d-46af-b63d-94fb87cef8fb"
        },
        "item": {
          "id": "09a7cfd8-9fd0-49c2-ba6a-eaae53314b56",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "012d6a34-e82d-4a08-a63e-3b4b3824c144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc8067c-b70d-48a0-8068-1b09f83f9987",
        "cursor": {
          "ref": "d543fe68-31d5-4fdd-98f3-e739d40e348a",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "bcbf36b6-e3db-47ed-a00c-e60a94aae47f"
        },
        "item": {
          "id": "1dc8067c-b70d-48a0-8068-1b09f83f9987",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d9bea3d6-42bf-4dc2-a036-93eb330e0437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a6b08b-c2ee-4aaf-87a3-7bd50c7536b9",
        "cursor": {
          "ref": "e5d80b92-14c9-43eb-b349-dd67f410c496",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f1ca1e32-3379-4a03-97a2-89ef3af54314"
        },
        "item": {
          "id": "18a6b08b-c2ee-4aaf-87a3-7bd50c7536b9",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5bdd5a53-7b49-43c6-b995-a55b913d1404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "537e7458-0d56-41b1-8a39-6477eb94a00c",
        "cursor": {
          "ref": "fc24d405-959f-4111-b905-b1e55d264acb",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "49e78072-2c69-412d-b896-6592afa55d64"
        },
        "item": {
          "id": "537e7458-0d56-41b1-8a39-6477eb94a00c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "1ab99496-d67b-41a3-afb3-6f55ac046dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6622c78-92ee-4c29-b1aa-ad983cf61974",
        "cursor": {
          "ref": "451f5d01-4750-4adb-aac7-0046502d5d63",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "433c0f63-b3d5-4d69-befe-e513e7eec944"
        },
        "item": {
          "id": "c6622c78-92ee-4c29-b1aa-ad983cf61974",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d9d417bc-945c-4666-984e-8a14ee2a1386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e25b9a65-01a6-4d86-a506-c05c6c26fb12",
        "cursor": {
          "ref": "1a46c6c3-542d-46ee-bf9f-1ae57b2c7500",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "895c473f-7f5a-4c25-bf55-e98db6034053"
        },
        "item": {
          "id": "e25b9a65-01a6-4d86-a506-c05c6c26fb12",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0cc531b8-e4bf-484f-8a2a-f3b3ee6a57c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "820a800b-aa73-4bf7-bcad-6555ae816230",
        "cursor": {
          "ref": "f6767293-acbd-4479-a178-2cd101caec89",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "2cb0ce44-bf7a-4aba-b540-c1b6c0d41eff"
        },
        "item": {
          "id": "820a800b-aa73-4bf7-bcad-6555ae816230",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4c454e40-3565-430b-be91-b80f2accc0e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa06cbd-05fb-4727-b0fb-9de12b42c031",
        "cursor": {
          "ref": "e4613774-0683-4c71-bf7c-08da8f33ddd1",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "6083df07-87f1-48c7-ba73-7a2c55d6aafe"
        },
        "item": {
          "id": "8fa06cbd-05fb-4727-b0fb-9de12b42c031",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "32b50ba8-1f08-4904-9e70-a30447905f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6b8f20-dbff-48b5-8499-ac23b68aba53",
        "cursor": {
          "ref": "67886d24-0e1f-4e4f-9384-071b79da3802",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b92da483-f3ef-4dcf-a7e0-2fb1baf3847f"
        },
        "item": {
          "id": "3d6b8f20-dbff-48b5-8499-ac23b68aba53",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b9440d27-27cc-4871-b55d-bb66d9fdddd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "104af100-cf10-4376-a410-d67f1cbeeaf4",
        "cursor": {
          "ref": "fbed109b-b63d-49ad-84ea-4824b2d17535",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e6c29678-d256-4859-bc0b-396658c0db87"
        },
        "item": {
          "id": "104af100-cf10-4376-a410-d67f1cbeeaf4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ee77b269-3acd-4bad-b7d4-89ad5d2ada88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f297b6a3-53ff-4662-bb71-043e597d9a8f",
        "cursor": {
          "ref": "65306aed-acc7-4e4f-85cd-3e9a1c48d47e",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "1b0437d4-4797-4514-af04-c595eaf6dd45"
        },
        "item": {
          "id": "f297b6a3-53ff-4662-bb71-043e597d9a8f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "17e6cbeb-2bcc-4198-ad50-4fd090777ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd440d2-7c7c-43ff-a965-97a2fdf53b8d",
        "cursor": {
          "ref": "19fe165d-fcb5-4cef-a55d-556f498f168b",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "93cfc532-9863-4a77-9705-afa04619a9de"
        },
        "item": {
          "id": "ccd440d2-7c7c-43ff-a965-97a2fdf53b8d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d0a42c06-e90f-4160-b56a-b864cfccce1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eff0dae-cc58-41ad-86d4-ff257ef19e34",
        "cursor": {
          "ref": "04b36143-f632-45ef-a956-5f79a2501baa",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1e8afddb-d344-4f92-8179-103cb3d98b51"
        },
        "item": {
          "id": "5eff0dae-cc58-41ad-86d4-ff257ef19e34",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "52d21ecf-1a5d-4b10-9325-e1ee65f866e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254368be-f20a-467b-a8f6-e3bd3edce16d",
        "cursor": {
          "ref": "775be10f-efc0-4f1f-b822-3cf977464c5a",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "642fa990-9637-4126-bf8a-bff3f1a2037e"
        },
        "item": {
          "id": "254368be-f20a-467b-a8f6-e3bd3edce16d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9aec3004-c7df-4513-9537-cc6a0b48b441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73dfccbf-a803-43a1-97e7-3693d56d7963",
        "cursor": {
          "ref": "754ea53c-7b67-4596-9dcd-5f14c10fc3d5",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "0a2cd74a-7f4f-409c-9011-1fe795f5b339"
        },
        "item": {
          "id": "73dfccbf-a803-43a1-97e7-3693d56d7963",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "cea79bfe-06e3-4fe7-afb1-ec00b266cc48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5654593a-1414-4d49-9563-a1f44175ffb8",
        "cursor": {
          "ref": "9f895198-a71c-48fa-be2c-3bd7a5dc35ea",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ec8381b3-aadb-44db-afe1-0d174f36cb06"
        },
        "item": {
          "id": "5654593a-1414-4d49-9563-a1f44175ffb8",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "8b8fb421-8d5a-4428-aa58-88c761f9cc01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02bb754-d618-4ef6-98b4-b91bb6bfd482",
        "cursor": {
          "ref": "df4e5049-c1cb-440e-873b-e912755a1a2b",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c2d837c0-904c-48aa-9c78-120f98b76472"
        },
        "item": {
          "id": "c02bb754-d618-4ef6-98b4-b91bb6bfd482",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "8c2c6f62-46ae-4211-b87b-e577fcb05e34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306876c0-dd79-4a18-801c-f907c14d3e30",
        "cursor": {
          "ref": "0ec2e85f-8e25-4c82-8f60-68f520bbeff6",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "59654418-7239-4528-aa5c-e1a02a4bf0de"
        },
        "item": {
          "id": "306876c0-dd79-4a18-801c-f907c14d3e30",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "52682a89-125e-44ac-b745-39adc3b8dc1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c8d184-f427-4156-9494-8ef8d960f81d",
        "cursor": {
          "ref": "9db0329e-00c0-4186-8eed-4d2e49829280",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7ad13644-047c-45b9-9b5c-99e2aa238b75"
        },
        "item": {
          "id": "f1c8d184-f427-4156-9494-8ef8d960f81d",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "4980293e-e6ec-4892-a3fa-65ac114a5536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de7d2f3-7daf-42de-bfb7-155378dcf672",
        "cursor": {
          "ref": "bd5a08d1-20d4-419c-955f-c75b81aea36b",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "67d399e7-ec54-4f49-b26d-476c00c4b906"
        },
        "item": {
          "id": "4de7d2f3-7daf-42de-bfb7-155378dcf672",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c03982aa-c58e-480c-93e1-cfb53a9b7174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43933fe0-1fca-4f58-abbb-c76b0fb7bf71",
        "cursor": {
          "ref": "3987e986-4781-4c65-85c1-a6e488bf72dc",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b0dd813b-6948-4cce-ae6a-fe9b600cb176"
        },
        "item": {
          "id": "43933fe0-1fca-4f58-abbb-c76b0fb7bf71",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "2c8273df-1b04-493a-a877-c471b3f49610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a5a962-1a79-4ebc-90dd-fee9a47e1d7f",
        "cursor": {
          "ref": "43149793-cf09-4f52-bd00-be44e102cc72",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "23f43ebc-f6f3-4741-9dcd-7682ea5a6df9"
        },
        "item": {
          "id": "26a5a962-1a79-4ebc-90dd-fee9a47e1d7f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "fdf9d703-8faf-40d3-8196-6021f638a33b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8630b658-50a6-4c32-81ac-39abd3a1a356",
        "cursor": {
          "ref": "195e4933-9247-477f-9580-38d620fd13dd",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "17594e7a-47ee-4d06-8e81-786cbb7cda78"
        },
        "item": {
          "id": "8630b658-50a6-4c32-81ac-39abd3a1a356",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d0342697-6887-42d2-9dfe-58ba89f1d2dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c4da9fb-57a3-425b-ac6f-daf9fc13bbe9",
        "cursor": {
          "ref": "217bc891-80e5-4351-bb62-6678e97525e7",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "cc75bd47-2c6a-4396-9549-a9d7bce26aa6"
        },
        "item": {
          "id": "2c4da9fb-57a3-425b-ac6f-daf9fc13bbe9",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "2d041477-ca1e-4a07-98b6-11cca9a41c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b355d3-816c-41f9-9363-124149825f65",
        "cursor": {
          "ref": "32aa3cb6-9491-4ac2-bb63-0d6cc8a302e8",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "bd91f686-3d7e-48f7-afcd-f4fecabe06ae"
        },
        "item": {
          "id": "23b355d3-816c-41f9-9363-124149825f65",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "68f9f052-8749-4d50-8011-4185a3546748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a9a6ff-ab70-4fc3-a26a-e22bcbb48c8d",
        "cursor": {
          "ref": "1e785fbe-4d56-4bc5-adf9-1629e0bcba38",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "6f9bb62d-f34f-4580-b800-02ad3746b604"
        },
        "item": {
          "id": "22a9a6ff-ab70-4fc3-a26a-e22bcbb48c8d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b9ac0bf7-02df-4699-bef6-29afc442bbc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5f6dc9-a048-436e-9a15-20dbeca4e916",
        "cursor": {
          "ref": "41e6ff04-887c-4a3f-9c6a-5f07a22a109d",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "dfdae8dd-9591-4302-8675-b57659f37644"
        },
        "item": {
          "id": "cb5f6dc9-a048-436e-9a15-20dbeca4e916",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4a149196-d0fd-4430-99c1-408b30b5b4f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "016c144c-5191-46a6-be86-77eaa0d4dca4",
        "cursor": {
          "ref": "8529f96b-42d6-4e1d-86d7-4fb4b065bb92",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a2db7c19-381a-4a3c-8087-e98340159cff"
        },
        "item": {
          "id": "016c144c-5191-46a6-be86-77eaa0d4dca4",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1234ac6b-f80c-4c74-9c0c-a68ba3a19bd1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d10869-6553-4c37-8b89-a3e6e8b503f1",
        "cursor": {
          "ref": "1a88fff2-67c6-4316-9e86-5bbf2d24b2cc",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "20ee9fb0-2142-4f9b-94a4-f4b13392da75"
        },
        "item": {
          "id": "77d10869-6553-4c37-8b89-a3e6e8b503f1",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "0c7b28e9-dec3-4b78-908e-0c46edd09375",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 500,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea12a685-0003-4d72-bfc4-abd8d305736f",
        "cursor": {
          "ref": "9d2ea5ce-823c-40ee-a98a-2d71f4866092",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1e4eeb54-da93-42d1-8497-6498e90bc2e2"
        },
        "item": {
          "id": "ea12a685-0003-4d72-bfc4-abd8d305736f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "489d0453-3a45-493c-bfa1-b1e9a1ad4a8b",
          "status": "OK",
          "code": 200,
          "responseTime": 567,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec9f02ab-c3f0-4eb6-b8e4-bd8d153f53d1",
        "cursor": {
          "ref": "7e468f9a-c948-481e-924b-96a3ec282219",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b8c018e6-5d4e-4c79-bef0-ff953d4d8466"
        },
        "item": {
          "id": "ec9f02ab-c3f0-4eb6-b8e4-bd8d153f53d1",
          "name": "credentials_verify"
        },
        "response": {
          "id": "970ec535-c4a5-4ac7-a6f3-d65a7c722d12",
          "status": "OK",
          "code": 200,
          "responseTime": 1944,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cef1f5b-ef84-40ad-99f1-ff6c5d67f551",
        "cursor": {
          "ref": "fe1c76ee-a19a-4dbe-b8be-28c96ea740a3",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8e628dfa-613a-4a8c-8b2e-155fd258207f"
        },
        "item": {
          "id": "0cef1f5b-ef84-40ad-99f1-ff6c5d67f551",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b4ec99cc-ed29-4feb-bf18-5a7ad6d807a0",
          "status": "OK",
          "code": 200,
          "responseTime": 2161,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec6d6db-0965-4829-b6b9-d7402a4183ca",
        "cursor": {
          "ref": "540c8e0d-c910-4679-b69b-023cf3f79be5",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3d40bccc-76fb-4b68-905d-9787a5700dc2"
        },
        "item": {
          "id": "aec6d6db-0965-4829-b6b9-d7402a4183ca",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ffd9fb4b-16cf-461b-80c7-a0cde5442eab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec6d6db-0965-4829-b6b9-d7402a4183ca",
        "cursor": {
          "ref": "540c8e0d-c910-4679-b69b-023cf3f79be5",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3d40bccc-76fb-4b68-905d-9787a5700dc2"
        },
        "item": {
          "id": "aec6d6db-0965-4829-b6b9-d7402a4183ca",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ffd9fb4b-16cf-461b-80c7-a0cde5442eab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec6d6db-0965-4829-b6b9-d7402a4183ca",
        "cursor": {
          "ref": "540c8e0d-c910-4679-b69b-023cf3f79be5",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3d40bccc-76fb-4b68-905d-9787a5700dc2"
        },
        "item": {
          "id": "aec6d6db-0965-4829-b6b9-d7402a4183ca",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ffd9fb4b-16cf-461b-80c7-a0cde5442eab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db92924-78c5-494c-b1c9-4a63635c25f0",
        "cursor": {
          "ref": "2fb050b3-eafa-4662-9c3d-d321d7665b93",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c0a20697-b1ee-4ac0-a30b-e9a05da803cc"
        },
        "item": {
          "id": "1db92924-78c5-494c-b1c9-4a63635c25f0",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "88c0f1d8-3d59-4cae-93ae-3138d8db0bd2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 2235,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ce5b10-da7d-4236-bd5a-ed62478b7d28",
        "cursor": {
          "ref": "1d9ab6f4-7447-484d-b921-fa22f24af1da",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f9eb2341-20b1-4f0a-b524-3b4877656ef0"
        },
        "item": {
          "id": "c0ce5b10-da7d-4236-bd5a-ed62478b7d28",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6eb778c2-1f47-43aa-99fd-d137524a5c83",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ce5b10-da7d-4236-bd5a-ed62478b7d28",
        "cursor": {
          "ref": "1d9ab6f4-7447-484d-b921-fa22f24af1da",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f9eb2341-20b1-4f0a-b524-3b4877656ef0"
        },
        "item": {
          "id": "c0ce5b10-da7d-4236-bd5a-ed62478b7d28",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6eb778c2-1f47-43aa-99fd-d137524a5c83",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3afba7f5-e8f7-4293-8e37-224b6b8e0150",
        "cursor": {
          "ref": "5d1d2847-83da-42c0-af20-ec4327830030",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "13f3ca47-ab3d-4561-8f32-41166bcbceeb"
        },
        "item": {
          "id": "3afba7f5-e8f7-4293-8e37-224b6b8e0150",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "7eb4d59d-22b1-49bb-a8a1-3fffaf5899bf",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1273,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c126b142-4975-4d0a-b3d3-a6843145be70",
        "cursor": {
          "ref": "20a1db41-dea0-4510-82fa-0cb3393b390a",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3926fa09-42eb-496d-8f66-f8b4d73623b8"
        },
        "item": {
          "id": "c126b142-4975-4d0a-b3d3-a6843145be70",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a7de1bfd-ee2a-425b-8950-e6ccc8077aea",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c126b142-4975-4d0a-b3d3-a6843145be70",
        "cursor": {
          "ref": "20a1db41-dea0-4510-82fa-0cb3393b390a",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3926fa09-42eb-496d-8f66-f8b4d73623b8"
        },
        "item": {
          "id": "c126b142-4975-4d0a-b3d3-a6843145be70",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a7de1bfd-ee2a-425b-8950-e6ccc8077aea",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2fcaff-8de8-4b4b-ad80-528e11dbe2c4",
        "cursor": {
          "ref": "6f6c0db4-bad5-4270-9fc2-8857d8352b24",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "10f61e75-a893-4bc4-bda0-141ff6f64eeb"
        },
        "item": {
          "id": "aa2fcaff-8de8-4b4b-ad80-528e11dbe2c4",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "a5b87ea8-9efa-45d8-a58d-05a5676c32da",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 815,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}