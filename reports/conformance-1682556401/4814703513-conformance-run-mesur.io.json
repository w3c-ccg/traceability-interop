{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "14a86922-ab97-411c-9fa4-44270102839d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a09358b2-b2f1-4fbe-99d2-6694f6493acd",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7dd9a47e-06d6-4f98-8404-3bc02801fc4f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8fab41a0-91b1-462b-b14b-dfc4de726f27"
                }
              }
            ]
          },
          {
            "id": "aca7ea17-eb0f-403d-bfcb-d7d9ae50e361",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2fba98fe-d461-4aee-ab65-032359d47e0d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a81f6d90-92ca-48e0-ba0c-b8d83941b814"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a494ced5-65aa-4eb8-8da6-0e5ecb2ae167",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "606845c5-f807-4b50-9a6c-5aa2cc37fd65",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b8ebe468-9fbc-4c9a-ab02-e7105ba821ab",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b070b289-252e-4e89-abfd-bee3ed680a1f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3235f9c2-c191-4cbc-8f32-1c4d619e0b61"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "47838f89-5c55-4925-a746-3951c518ebb7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "48e15066-b2ee-4c2b-9a7f-a3d0e6b6aa3e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6de626af-3355-41b7-a135-5ab8cc931c4c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f842109e-d9ff-4ba0-b18d-5484f85cb672"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0980dfac-f3fa-431e-8c37-4b907445cea9",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b9f20cf8-614f-431c-bce2-0a254ebab83b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cc8db606-0eb4-4597-a596-675a2cd7a71b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d3286a3e-a664-4fbb-adaa-1d01ab6aa50c"
            }
          }
        ]
      },
      {
        "id": "42e905dd-cb2a-4760-b626-8d1b984e3bd1",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3e30ab9e-652c-4a32-a6b2-84b81aac90af",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f85e76fd-536e-4b95-82cf-bba23ca6a962",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b61c8585-e18c-4e4d-95d7-de2718985a6e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2625ccb-2b5c-4789-ba6f-a80987ed6a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "26b96646-224d-456b-9048-7efabcb92c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba26176-046b-4bd7-b4f1-7dafebfa9547",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c37d1b1-300e-40cd-a839-c13ed4962e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3d5926c3-ba06-4961-8482-126ffa6b4ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac35c15-69ce-4e99-a5e2-2bed5e232ed0",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd85cca-04ff-4f1e-b3bd-b2e25079b856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "77f7bbb5-e52b-4cef-ab7e-4992eb6dc676"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "90838ede-7857-40b5-ac02-5adc895d2d21",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "96cddec6-bb72-4e46-9ded-70cdff8323cc",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2539c49b-e42f-4376-ae02-220d54aed444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "82139c8e-8041-4d31-a806-6d934d4e7c07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a20e54-29f1-449d-9c92-ef76754f381b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5dc1c3f-c50c-409c-9b98-5627e0307768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850ea801-0e57-4c78-bc3f-0e07aec98621",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52070a73-1b69-48de-bf1a-827bc9289681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6158229e-e913-4617-91d7-1883a6b1e459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2627b8b-2638-4260-89e2-b5d02d06c60f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "f6e49cf5-529f-4a9c-a4c0-1dfbae838d87"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9c102e44-cb31-462f-a0dd-10c05e186f7a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "79611b9e-fc25-46a5-aa78-d47709e9f91c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b7a3340-a266-4dcf-bb34-a1102b006546",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "8c4e623c-a116-4d82-bf59-de0e15104f77"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b9371620-8c07-4501-8eea-a285217a3cce",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "e1ea83d0-24ac-414a-b83c-53c785584de5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "95daccbf-735c-4e8f-9bdc-31de354a48c1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "843e7946-f31b-4dd6-bab1-ea2c368c71a2"
            }
          }
        ]
      },
      {
        "id": "3eba6c65-28df-4531-9702-f059cadc9718",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "631436b4-b523-4367-8cb0-42be90c5fe1e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "445e263b-b263-4fde-b3f6-addf777287b2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4ed94191-7bf1-4aab-b9f5-d0bbab5618bf",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b1653f-4758-4d1d-8973-3cf958a67670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f56b72de-6243-4478-833f-d1d95e878fdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb9261c-112e-4498-860b-d48d20e42f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "135d736a-4647-4f05-8d47-d0ea73a63017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9518b2cb-2710-4ed7-ac2f-45f43c40a012",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b9c279-2242-4475-ae9b-48f069c4f84d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd9ee80d-5228-4738-8767-288d4ba9535e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c0ecbc5-a9e3-43dc-aa80-75cfed93511a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa8ae3b5-53f6-4820-95b3-d6ec2385a621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "808c881e-93da-411a-914b-ccd45dfedeb6",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4227a2ea-34f5-4c0b-9d6d-6a2bc076c477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d97a668b-29be-4c75-98fa-a32865c5b6f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de77166a-da62-40c4-9676-c7d0f8ec487c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "434fb3b3-02b2-4f46-8140-576fa8558571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21bdac8f-8dd2-4301-9629-17d1e24c7647",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c56dce-e7a8-4ddf-a773-72a1d9a5d82f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f50b60dc-eab4-4043-b5a7-c9f01361e959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ff7c2c-ebf9-41f7-bcc7-34ab2c3ee60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1a75d83-b800-4604-8df7-a79f8c657f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bf8685a-eb0f-4f3c-8311-20d08d465693",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62d1a37-9b71-4c73-885e-16b2447e9c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a256ae14-0a10-413d-ac9a-6e0b54db13f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d693caef-ddf2-4dd8-95cf-3d93cf9cb798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a65fa30b-58a8-4ed5-9ccc-a449af921b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a3a9b19-c409-4071-a049-5130fb1efda7",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6eeb9a-169c-4e0c-8ded-8fc51b4ed68b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83c00ee2-6970-433d-9513-29179eeec8e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b06fc52-2a5b-4de0-b609-41f38e81f9a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec8ceeec-eb7a-455d-a165-a47878e8a8c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b325b7-b633-4026-862b-06251d7ef7b8",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8411bb8-9f35-410d-9d1d-425c0a441f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d740254b-1657-48c9-aff8-954c78da680e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "650fd93f-2007-4481-bdb7-461049bdadc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4a3c1eb-7dda-4999-91a1-165ce3e09f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f496d8-d396-4c5d-b3e0-09cd43d977ad",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "988d8b95-6f2f-4b88-900d-5ebdbb2f6317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78437959-d43a-47a4-a8aa-4d94f2b8c24a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a011287-9064-4915-acc0-12326a232cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3d6ac51-146e-4ffb-9edd-aab79fdce875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d534cb9-bdf9-465f-8a49-9dac1b859bc7",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78be530-77bb-401a-b124-89fa09495da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33de2d01-83aa-49f4-b56b-e07046708398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1309423-a3ff-4383-8e4a-e69dab0b9ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "094c2a41-653d-4b43-a4c7-f93572d616ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d683d7e-bc4f-4f73-ab21-4ec85c2a3d0a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "731b442a-0e94-4ffb-a649-370fe50b1df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce69c06e-5dec-4958-ac7e-6a2898e42c8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e19c95-8c46-4fcd-a4d4-58cd562c97e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b2aac25-33cb-4353-bc75-2ce19a0e4123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0729c5c1-54ef-4c76-9845-b68c72ea3acf",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c7a220f-0304-4918-ba13-7c545686a332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "018d77a3-e258-4c9b-9ebc-14e030bd6a7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ea5429-22b2-466f-8c04-0aff84c85a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9499f1f0-4af2-4334-b5e0-a6a365318c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d079db8-f4d6-4c2f-9d4a-c0eb2ae5a7f1",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "330b69f5-8b95-42ae-a16b-f6127c70c48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "273d4454-8290-4180-aed1-0429331c9685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ba8d63-ad27-4f45-ade6-da699fa63134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d8d7b89-9ca3-4454-b0f3-4e1cd218f4d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e136faca-54e4-42de-b072-33db48fa3693",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a990d490-8849-4a60-943f-c6e1f08f9191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cea03e6c-28d3-4a02-8a86-97388d5bbc27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f89f083-1e00-4c30-b640-67416eb4bb13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "85f93577-56fd-40cf-b649-9c93ec850534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f9d1b0e-53d2-4099-b419-4d0e5719a880",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8357af-4a28-4d2b-bd95-23962a281d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b2e209e-c60f-4ddc-a729-21be806318b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "264d20d7-113c-41dd-9436-300059eaf92a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a73ae387-c24e-47b0-9df2-17d58181c595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a6833d7-3f3a-42d3-b6ee-08e5f3784ea4",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d4bff8-d658-444e-a217-6ecc33d52a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "827a2209-1fae-41e9-993b-7bc83a7951f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e4954a-0900-490e-95aa-055f2444ad06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "819fe8c4-779c-47f2-a766-431f35c660d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a72915b-a43f-4d79-8cb2-510a10726b3b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf16cefa-1f3f-4ff7-9983-c0278cba1380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77513bf9-6929-46a1-a79c-8522418b6af6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "784e65d2-8b9b-4d6c-8432-3bbc45338b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5680cce3-de84-4cf8-a8b1-57df3539c089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b850f56a-5642-4916-91d4-eed96f5044f5",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3be5f1c7-e44f-4e40-80b7-61ab8a5e1599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a4f0bfa-4cee-4e4c-8a0c-1d7a71490959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fcca82b-012c-46f8-87a0-51d3274c9f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1ce6818-649a-485c-ac24-9b7c597559e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca36a70-0fff-497d-b3ff-54563ab8b07e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72adbf91-34ec-44b1-8b54-667a4a490370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21b6f47c-c368-481f-8210-66efc8814911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd80da1a-265b-4f36-8860-4f52cb6ec655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "866ac3b3-f885-4548-89e6-517ef8e1656a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b8cc9d-86bb-4c4f-901e-116902a3bb16",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f584020-61cb-4046-a92a-4c44bbb3d126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "978e3aee-29ec-45ca-9551-01e19a60d1ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a77744-f745-446e-ae7f-045bd5a2aa90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "823091f0-4d6c-410a-88e6-1210f958d0f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b6c8e3a-20d1-4808-94af-d678b469d848",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24caabc-9edf-4ba0-9868-6cb071603ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "893ef103-2bd4-4ed7-8f51-cd5836070bcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c3ac45-5544-48da-ae38-c5603114603b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3873bd0b-0ec2-45ed-bda4-19c2b5617f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "993f888a-7c48-4c82-b1b8-a4e74b0c92fc",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10190b7f-e3e6-405f-ad1d-c525fde58879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a21b9b5-c836-4222-a2da-600711f0c263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9cfde93-888c-4be6-b31a-c3e23fb2760d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "90b0c67d-bdfc-4aff-b858-3147536e63b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677fcddf-236a-4f26-9523-2dd95ea9ac3b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0004a1d0-cdfa-458b-aead-8a115f345c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c1da060-662a-4f10-9066-5da5f191ca80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c3e28a4-e190-409c-b708-85f303a52f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a864299b-3604-4693-9ac1-ca44ea04a18b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f28659-369c-4f17-af28-b58b2af9eb1f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a961815f-1588-4b7d-99cf-e45a8fb5f39c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8aaad82-7376-4da2-8ac7-a92944edc99f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f760420-e6e8-4bfb-8f35-c19ff9aad129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "00ac5c11-b3c7-4111-91fa-374b9d6f11c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f8171e-5a5f-44bd-9050-9303863bcf96",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a805c49-69f8-4dcd-9ed7-57223ff8dc0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96cfbf0a-ca93-4a47-8bb2-b2a470e6d554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b12f627-abfc-4492-ba1d-967ca8568d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "987bde1d-4fbf-41e2-8bbc-ac287d607922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82653650-b4f3-41bb-bac3-ac3c996a6fad",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c140d147-c0d8-4cc1-9438-10b46aa1f63f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f438a5bd-6ebc-498e-b8d1-d11e7eef21b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b68406b-e945-433c-96a7-f5909f7d071b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd27c937-593c-49c2-affc-67e1c843d70f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bf2e93f-200f-4a2e-a7c3-9cef08506ab8",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c379c73-5d8e-48e8-b73f-28e334239fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3efed1eb-0e52-4c37-ab92-ffe223f47cea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642d882a-9b30-4254-b843-941c23c5e7ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b15366f6-2141-433a-b878-66226f654e8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a691e3e8-8477-4780-8b88-b443b3e40d81",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9afedd-b2e5-4063-a02d-68e0a9a959fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02a7fc2f-ec37-4199-a80d-1f700991f45d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78547277-da8c-4f91-8571-be8a91b8d8ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e2e74c3-55d3-46b2-a97e-88c23eedec23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b37d99-53c3-4b0e-8c14-1b79e356ff37",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f34264-dae6-45d3-8ee0-3aeffd6e0bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ff0d7b0-ab84-449d-af32-dc66acf10b23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab961a6f-e3c6-456e-b78f-ef2b619cee45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ff6e4c1-ba96-4b09-b940-de9a604eb756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "881beb7a-cc57-478b-82ec-b94ef1daa31b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a97ae57c-9cef-4116-83e5-4bd652d46abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d42bfa7a-347e-43f8-be8a-d6ace9bb9358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "468dcc7a-877a-4321-b5b4-ed2ea7de4242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0c7e12e-0b4e-4f56-937f-8ea5c759b373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7960f704-a20b-4570-99c0-c77e55c41864",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fad2bdf2-7991-41f6-bff5-92502a45f490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "113dafe3-3107-422e-9a16-339f2c6131a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf54066e-c328-40f4-bb26-a2b4192e27af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d840eae-649e-4cc0-8b20-fc845ad24be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a20bab-be94-4080-af3f-1e42828a05ac",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b177945b-ed57-48bf-b1e0-4f3251e97e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fed6387-3aae-40d6-aa6e-9dcf2a9e2844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92654f27-3ba8-46c1-b3e1-483917585db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "713d9208-c351-4ffe-83ba-11e1688b4e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47cc75f5-5e58-47a3-b912-38011db47b44",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd62b231-8efa-4cf2-89b1-82851237ed36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01dc584a-d1db-47b1-89ea-a21e42df7e70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a92067f-beec-4198-b369-153aa9b18cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "63f2d3b0-ec06-4835-8007-f3b6e8671ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f27a7219-4793-44e1-a96b-e2ee094c3e67",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c36a524-9ba8-43a3-9620-53ce1e9779a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "629100e2-adb5-493f-8fb6-af68f81254ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3363a8df-98cf-4949-b287-575d727b49b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "30da0c30-2aa7-45df-99ea-415fe12c7d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e439577-72e0-4a4e-b28c-ecd5aa4b816e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8848a65b-81ea-4297-b723-8f44be4c0a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2adaaf58-0b97-4865-91bf-ab816ecd15ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d328371d-160a-41fa-92da-72afd77f2847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f94e276-7341-4681-904d-02942497a06b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a0be986-3ae5-462e-be38-2dc97c5c25ea",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e32dbbb-336c-4755-97d9-30c3bd865d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5329d175-d475-4398-8252-735557313ae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df999d2-d9aa-4700-b4ca-0ccec6c790b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "5ef9abab-3e30-4105-a52a-280aa9b64b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab2c5e0-33ba-4ecf-8fc1-c57f9fc21549",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "887e95ef-2ada-4e7f-b443-27cd52957acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f5ae64f2-1b04-459b-bd7e-3fdb4d685add"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d491ce4c-719b-4903-9b21-4ba2df1c76a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4d1824de-3db8-458d-814a-21c61e3fba16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a056128-d19e-42d0-afc4-8d1f6db96cc0",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aba56cf-51ab-414c-8e17-547bf698a41d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b529bc8-16ca-42ee-9651-4140068837fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685ccff0-316b-4de5-949d-569d7c81cfa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c6c3c00-3543-4c35-bd4f-93b252c75f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43490c9e-f6fa-4a1f-b85e-18996fb09740",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca7b61e-9c46-4e31-aefd-1190681cd18c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "308c303f-dc2a-496f-b649-fb4be4e7aa70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d8da86-3f09-490b-b62d-a0a8c6e8de0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "12043dbe-74c2-4342-a7c6-4bb6bc3a801a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c566efe9-521f-4c43-86df-8a443c0c4e62",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3c8b82-3c45-4eab-96d1-a30bc65423bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86d5a668-98e5-4a64-a755-3938a132ab99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a88d9e7-a330-4f66-be81-3a032f17e3f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5daf5f5e-c0c5-4018-bb81-07ae1f1ef1d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dcade3c-8d22-4d1f-9b7c-ba6ea88681e2",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a24d12f-5ce5-45f6-bb9f-d0fb73bf4a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5827bda-2e03-4f91-a60f-75ba250e9a96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b7c1208-323a-4763-8b8e-066553983a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b929d922-932c-4721-952e-96444714ceb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02074339-7aeb-4cac-80c6-f1fe75d044cc",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0774e3-3e60-4adb-a4b5-8f2a39b6f601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dab9ef3b-2418-4daf-9f56-6bbd33a1286a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "686aeb59-a8e3-4d5f-b56b-317f6b8f1c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "be18c481-df06-4935-a758-e501a4d3bd59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8806da3-51de-4304-9ea8-1f405f3859c6",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb67583-ddb1-4cea-8618-c949372792a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1869d6f4-f681-428c-b426-d3970b8ecebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8728116-c6c7-45b8-b20b-e34f83d6baae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "949fc0a2-4d67-420f-bce0-dc3edda75bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc04dca-d0d9-44de-b169-8725ea7b2217",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a27b2df-b303-4eac-8b18-7fc94f8db523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18a6d89f-c215-4a11-bef5-ac7ecc13e19d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5076ebea-aea3-4be8-ae33-8e26e4eee61c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9abccd51-c137-4f1f-abbf-715eba947d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096486f0-356f-4e56-9386-8392fbff7218",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50242742-a3bd-4144-8bad-b707f9ab35cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9200ad3-59b7-47b2-bb7d-841afc0f6d9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5995a6ca-ba03-429d-bdeb-ad04305d5c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7437026f-686c-4a50-9ec9-b772bcaab8de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ae2f9f-f6da-45d3-ad2e-1524649dd367",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2df81b8-8239-4fc1-9b19-368368b2356d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21004436-83e0-44d1-8867-b28a6361b125"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a531646-4250-486b-a23c-02f878f9b336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1b8de2d-2f72-495e-94f2-455d242dffaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5748fcd2-eb45-49b4-8280-902fa99293a4",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc56f8f8-cced-4344-9761-53660d3df29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "182f6198-924e-4543-9c5e-1999954fa7ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453f56ec-4e2f-4823-948d-cc2109821442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "48aa6123-545d-4b46-a698-db73f9a55def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea1377c-faeb-4a37-8fc1-2c1820fb591d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96812063-d2f2-44ca-a353-dd7c50b064d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3ff99f1-b712-4d11-a8ff-4e061cadef12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061251d9-c261-4aec-ad82-468623545796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0035c700-86e9-4338-813e-b07a356226ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ebede59-8284-4a71-a29d-ffa1e8fcb590",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3359caa3-81ec-4bf9-ae79-aa43a8dc5abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b95f3e0-a3fe-4716-8049-1d90a9470cd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed69e795-d182-4259-9767-55966e334dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f8ec19e-8781-4aaf-b706-c742bee262b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f81e092-33ba-4e95-9284-f2164f890565",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "953c4eaf-977e-426a-bb28-b26b59392e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a69f1e8-3edc-43ee-86e2-fbef19794aa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9e37f8b-e726-459a-90b3-3093f2a8b92e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ae48668-f81f-47fa-9b99-001906d6bb28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89aebf4d-e48e-469d-b93f-ce47c555053e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28016afb-fc11-4f4f-be17-1f75ba1d80ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fa7bd7e-f51e-4f03-953e-95ab278d92f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9875f2-2e85-4b48-bc39-85cddd2f2a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d08db3f2-3d67-4de5-b1dc-45e1995afd14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac943e8a-5213-4af6-8881-d84fbadb2443",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d824b1-ad82-4bef-b69c-c38261e0f463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "634d3a5d-f043-48d4-a39a-1c976f9c980b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7274edca-de89-41b6-9b4c-12dd24c9dda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2120b53c-83c7-4c22-b6ff-9825e28d4d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55aaaf2a-7296-440a-88d5-f7993cfde418",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a613b0a4-cb07-48d8-8190-160478f3ee7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d60cb4-c286-4220-a67c-08138ba9473f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5edfc181-a101-42dc-8a63-8d5c2f6bad0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d077b3a2-bca9-482c-a7e0-fa7ff51fcf77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d4a9468-5744-4ba0-b487-86fa1ea8a33a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b878cf35-0481-42e5-98b0-25db7d78270a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94a47ab0-282b-40dd-8174-ee81cf42cfe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "499862de-487d-404f-8ff2-13273b865322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b80a4d5-4fa6-405b-af59-0aadc325ad86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f7092a9-4df5-4443-9e9c-2a24d7daf59a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3967e2dc-aa54-4083-a876-a97f608d85e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55d04a78-0f33-4665-89d1-621c12daeb5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e4eb354-d48e-4eea-aa5f-af8bee41bb69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa0d38fa-e0c4-4a00-804f-02059511b936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1361307-f0e0-4881-ab93-d5534a7333d6",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b8ff88-c922-411b-95a6-57c625bf0414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "818ff61e-cafc-40c5-bae9-a32bc5d5b84e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be060bc5-ca36-4145-8d0e-69350bb3c4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb9e055f-aab8-4efc-80a9-794d7aeab845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630b0d93-4aea-42ec-b71e-a74ee5bb72a7",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28239aa6-1d7b-4c0b-bcd4-4a006521673c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9569edee-18d3-4cd5-88b6-e8d358512509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b200b197-d40a-487d-9681-46b45555094c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f4174fa0-2053-499d-b076-96c661cfc673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c89b3b2d-76ad-495e-a3df-5df612bf538e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec8d0c9-30c3-44f7-af05-9373529595a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "444f5bd3-0d81-45d2-abe8-3f44571e447a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "521f3f17-2d69-44bf-bb90-753d0c93206c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d01aa2e-cf5a-478a-adb5-5d0999ad2e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660dc2fe-adae-4a29-b273-8fdcac16c4d3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17914298-e3ca-420d-94a6-1c3d16f77966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "249cd983-5007-4e03-ac29-ab1b369b5129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2141d2e-1d05-4477-acdc-4852a1764bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7f7ad74-f611-420b-b0ad-3bd41d383bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd723d56-a918-40f5-afd3-d9135088b4fd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c819ae34-c7fa-465a-bbf6-3092ebec2596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b104f24c-5450-4f91-9334-d892ab81aa15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c27c7c5e-df88-4977-8784-6ba8f15a8c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cff40f59-afa8-4516-aba8-84ca33981230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20aaeb39-ffa1-4d1c-85f3-5bc581b5816f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37e8421-7d0a-4863-8d6b-b1b8e82db508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "083358d2-423f-4976-9c34-e9888b20a6b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76ec8e9-9a48-4dfb-bdde-9940b7b9a39b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "92e3f509-891a-436b-b585-06bf9cd44a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99bfe015-166b-4ee1-96ae-c8aa09c2e6a8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5cbeb3-b622-4379-93ea-52cbbb96f38d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84a4d9ea-0a22-48f3-b654-72ac4a247bcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e62455-c12e-4e01-8bc3-8b3680f3058d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cca3b866-bd40-4d9f-9f65-7b59c964546f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8288ac1a-6b0f-474b-8e07-a838a8892fcb",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "962e310c-9833-4144-8560-6b8ba2fcbabc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92b45274-84d4-4a4d-af9f-8ebaf40978b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca6dd65-6d3b-40ea-a52b-6e0aa5cf2a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "53877bdc-7c7e-4f8c-97b3-8e2af855a5b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d0dc601-8c1f-4031-b889-702285006179",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af7b94f-3c86-419d-b377-3e340d176d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "366954c9-f1e6-40d1-ab2c-5d2f5ed59c04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da1cf12-f67d-4320-b17f-43bfe336e3d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c31a98f7-353e-470b-b5df-f6f4d1272c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35eb9662-fd8b-4945-b690-1e17471af91d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d643917a-5a0f-4224-8a1f-9fafeb37b09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56fd2d85-bc54-4a9f-a6b3-19b766fdb272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64218c94-9f6e-488d-8107-8a2e4c6a2c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5853b78d-b269-4c44-a8eb-4461fee3abba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f70e476e-6099-439a-ac35-c63febf7b394",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daca2e27-82ae-4d89-8236-d0303e5b0d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "358cc9e7-6956-4ab3-bbd6-48c2825ca95b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd078847-040d-4326-8aa0-7a7a5c837264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aeb6c397-7f69-4790-81cd-d379bbd1c046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf36672-2b54-4455-bc19-062b12dbc1f0",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f44e489-e372-424a-8f18-4b677393cde9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e039de1a-7e17-4bd0-b9bb-ef515ac3f1d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67215941-f81c-4c6c-8aa8-89b676d49c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfba6d86-cee0-442d-9cfe-5dae29051ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "587c7c0b-1be3-4357-bb45-ece10345de74",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "314d19ec-7d17-438f-ba28-b9e679ec1501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aec794a5-6931-4b28-a512-8c35ce2dbdeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be162c56-1335-4c6f-85b3-cdbad5209d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "00629a6d-d77f-4776-a630-1c458e8967e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f03d1c1-e0ee-4764-9a81-e1b1a9f3b2fa",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f9599ab-d39d-4f98-be31-4c31635248db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d8a39e4-068a-4acb-b664-7343019836b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef9d59cd-f202-45fe-adf6-97651dbc751b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5dd1b6d-fea6-4c78-9288-50bb96b36943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec3deecc-6068-40b7-a0f0-b3b93b13768e",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85bd7f33-8451-48bf-a335-9cc42225db15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2570fef-a04d-42b7-90d5-595a001f47c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4792a06a-0108-4486-92f0-b0eefda69cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea8d4499-502f-4921-a4e8-49c166865f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de05b16c-d8f7-4be7-a5a1-41b0514936c6",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b19be4b0-3af1-4478-a467-7e9b786535c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "767444f4-c941-4128-a77b-1db8754f412a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc2a3082-466f-40d1-9a76-485a16cd077a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0a7d1ad-04ef-4132-acad-397c5be48f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f2e25c-90ce-4596-aeec-f461e314fa33",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed334d29-6e3b-48ca-8d03-63dd0563629d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b291f78-58d1-40b1-9541-19709f157d7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "171de31b-17f0-4df2-a434-f3d19032e845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e17bf071-632b-4eef-b93c-76f142fd0565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c0ddece-1d3c-487c-ba3c-41677806008e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b919796-b6b0-4e67-8068-f4fe06bd1569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b61c927c-e138-49ee-818c-3bf907592387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8abe8e39-38a8-40cd-a97e-3a53da9d4f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f856d81c-25ee-4608-b84e-08c9d7d4c64a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741be8c4-7c30-414c-874a-2806229bced3",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d7a827-343e-4b97-b1cf-3ec4b134a0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "478bb7a9-dd05-44fb-9a62-ea8c8a5e03a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c58db51-b5ad-479e-a689-c791ba215e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0243f111-e435-4472-8f62-fc5533d71ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95fc70cd-3da2-4953-8d13-7d4c43ef8d5d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a022bb3e-13c7-4e3d-a61a-4c3cfd5d62ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de991a90-1220-4904-bd1c-7c2f14dfd78a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d8b57f-173f-4415-b74b-5c7dd4a3c008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6f13c19b-dddd-4a26-9aff-5f0c3e3b19e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fceb6cf-9496-4666-b0e1-5fdfdce601f4",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb50b61d-1828-4ad8-8644-49bf77afa4c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d18ba5d-496c-4b94-bf78-548ccf5525f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e99c15-e610-481c-bda7-928e20a2789f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c977eac-95ec-4d2d-bef7-750235a09922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c930f3b-c477-4f3b-a647-9e2f0ced9f61",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be2dd63-bc9b-4e1a-8fb5-759ebb33b6bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d426c20-4e33-48f8-9d2a-d3154841fb92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fecb151e-c66f-46f7-a749-27b9df1d6667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b46f699-e3f9-42d7-aa5d-a8b09c822445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b7901a-eca5-4f92-9edd-58dec7990b91",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "749cd3c5-5cc5-410d-8221-222d929ee99c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fe88403-9b4d-40a0-b689-c8711649f89f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e9b5e6-9a0a-4fe0-979c-8789aa304c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "609d1088-8459-43bc-ba01-12996c3dd706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58a73ab1-d504-4e3d-93d9-3c1f0f1f4f27",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9addfb87-0efa-411a-b713-55fb901c2459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13eafd9b-0692-407c-b4a2-2f8ce0c9ab3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d13689-05de-47fe-958f-17f20b63cc15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3cba284-a264-430f-ac6c-b790f156116d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee1627fc-d8ae-45aa-9851-fa54bc544821",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3652ee1d-af43-439f-ad37-f876f835ebaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "060e3e11-cdd4-4d6c-bbbf-373885362660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd44184c-2c4f-4d65-939a-3d37cd9b2504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "684fdc1a-52f5-487a-9207-01a196be0db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64435c4c-3467-42fc-9ecc-8516cff106ca",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5668c48-b8e7-426d-b186-6d7c1ace29f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dc8f52f-41d9-4912-80b6-a109b30c51a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a058860d-f46c-4af9-80c4-3e7772e26910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "891d3c9e-ce8d-4b73-9e84-3f4d696cae9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "024d6920-f2eb-47b8-9bf4-71fe687bb7d1",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae5075c-2e20-4ac6-a3c4-0ed4603e33f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "487f36ce-d53a-4294-a87c-5268e154fefd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa7e29a6-3a7f-4af8-8aa0-4ef0bd218eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "50f66413-c338-4e90-866a-220162222e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "679511ae-a2b5-4b91-8c29-5495a3af2137",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e62927-a97a-46e1-87d7-971c5becc1ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7f4ff89-c7a9-4a64-b311-8a74115bb3b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b549d72-69c3-443c-8f5d-a27f2fee13b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "acf6f8eb-6ed1-404c-9237-2a1320edaef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0927060-f495-4a3a-a895-723bd398de62",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "795aa32f-4612-4a3d-82d3-105b1f9479dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bef6630-aacc-4f86-86be-247e516095ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ce92053-d0c7-49b1-8022-a202338c41c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3b69d46-950f-4386-a9ee-4b12f829e19f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c98053-345b-42a6-bc11-6c3c4873e859",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38056bb6-33cc-450e-be4c-132723857e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e43c07f4-aaf4-45c3-8d99-de2bee302e62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "532a863d-3d8c-4ad5-8f78-42f74a88ddad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "684cb1a8-7a1e-49a2-af82-8ac67c6dee20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ebc954a-751e-4c2a-a447-538468cd6463",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8409ed-1008-4b4a-933f-968b8dad5be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b9183e1-b17c-42cc-b859-abbb8c852940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed88d71-0b40-4d65-a9ec-2ec51075e0a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f2cc96b0-ab92-4947-9242-81f6398edc90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8de49b-7110-47a2-8b26-425b96a8c593",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75b6c3ea-3987-4146-a1bf-ed7fef2903f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77137bd7-5393-49b6-a3d5-5e1a8816ec1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f03f65-0e13-48f1-98c4-2ce557f33774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "68c6ea55-bc40-436d-85d2-bc1b07c0c766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0123adf-732f-479f-9130-a6fbb2002cbb",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "028a3286-5346-47fd-ad05-a492f3c2ba66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bb45a67-c2fe-4f30-b652-f0f92243df1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00506626-4b1e-464b-b6c6-67a938ffdbec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4249168b-c8c1-46f4-95d4-92a22ca79c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3807a5f2-5fde-4dc7-981c-9b786ae21f14",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bbeaff8-35c6-422c-9386-e173b06f0d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0ff2bb7-06dc-445c-9a89-0b9e47e8e882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c6f557-3e58-44f6-bb29-20cdc0abc5fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "03cfdc21-d06e-4da8-9a4b-7930006ce70d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b064fe-a8ed-4fb8-a7d6-46a0de786262",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f3716ec-e4d6-452f-b4da-8574ca97d046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d90315f-615e-4d2c-9eaa-910d4efa957d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55559952-66fd-40b2-9651-dda02ada7951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e67678d1-795d-4f2f-bc69-4c020a50331d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db57a5a-80af-4739-96bf-0830e243920f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45afe45-3818-42ec-b94c-97737ccd57ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67e4af95-ebb4-4dd4-8a1b-2b41f2a21ef8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6513f007-da36-4107-b4ab-b2740d289e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d62d7b3-96e8-4fd5-a696-334a73b77a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e14e9d1-6519-4fa0-8944-259537a4a542",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33312f82-91f5-47df-a781-c7bf15c9a986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "512dc3ce-2480-4b65-b70b-f0e27152221d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd620dd-6251-4de3-9e06-9c333883c602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "619ef30c-77ef-4fec-9fb4-9c022b2ccc8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d3d72f-8e2b-4839-90d2-ee5c7a9c639d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f100d594-73d4-4465-b5a8-45da43a676f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3b7ef663-f9cb-48ee-bc7e-1a47ac0d3399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e901fa-d475-4ea8-add0-2258de618b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "222f97f0-4aa9-4e3a-b87d-cff1930fd2d2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "92bf11d5-44c3-447a-859f-46e19b6b3ca7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "68ba63a0-ab6e-449a-bb8a-0396ec7f9ec0",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "227d0850-6378-4f0d-bb75-7d8e99e1723c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e04af221-3615-4c2c-b383-c1c9b41c9cdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a5430a-b985-4922-9bff-a36c18a9b301",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b4facb9-114d-4974-9a0e-83ee3822c0b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fec9612-0e72-4672-96d7-f01c1aa1a240",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af66338b-4ae4-47f0-a9fb-0891ebe0ff99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ec3c804f-2fe1-40da-a693-e8fec7c79ef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458f4320-107f-40a5-8797-9eb0cb66236d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f0a176d-0a55-4953-9890-4d82b4d0d256"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "933f4422-4b66-4a53-8c35-620e1b2a56ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c88c132-296a-467f-9310-34a54a09df5b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d68fe07a-d3b9-40a7-8249-2ad8c06f455e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ddb2836-a0d9-499d-9d14-4e1731fa9530"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f70e8180-cebe-496d-9b89-50623e6a28f2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4b05da2b-6817-446f-bd8b-43fb7f805e1e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9ecd8afc-0402-400f-bf5c-7d7387b82537",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "09d84c7e-4351-4c09-8dc5-3931c975cfd2"
                }
              }
            ]
          },
          {
            "id": "035673b3-0200-4307-9476-59ced157e777",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2d0e0520-2553-4229-8179-037bb30f75f3",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e43c57ec-9701-4dde-9165-164dc8ddd8a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7e291201-7c94-4029-909a-21ab5f024d14"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41eb493a-90a2-414d-9915-0bb37ac807df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f091e7ad-0371-402b-b415-d58305c87a05"
                    }
                  }
                ]
              },
              {
                "id": "086349d2-a2b7-40ed-9c3e-5cd300431b41",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ff21868-0285-4fe1-8cf2-a4d45fbce1e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1fba5fb0-9c98-4341-a95c-91d0969c55eb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ba69290-c710-4565-85d0-ba82ac321385",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "aa87957a-00cc-471b-a896-b38d470a53ce"
                    }
                  }
                ]
              },
              {
                "id": "7c803809-9e64-4b61-a618-1132190aa532",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1a716cd-213e-4e06-97a5-8eb71b5140c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "961a9ca0-6d43-486b-ad98-2f79855e55c6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "348df7bb-473e-4abd-8013-db1a9252eb03",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b637e4f1-e0c6-4ade-9bec-6f1e5d8a0faa"
                    }
                  }
                ]
              },
              {
                "id": "45608a90-64a4-48b5-b1e5-a4cede6d1b94",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5147f597-57c5-4fe2-943d-b2b842314e85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ffc51ac4-79e6-4a25-b695-db8d676a98c9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b4aedfb-c78e-45c1-a720-b67dd234ef66",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "9e5b4b7c-f885-43cc-ac0e-191712126237"
                    }
                  }
                ]
              },
              {
                "id": "ba51ea91-b844-4ccd-b0cc-5314d3019492",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1285e94-3232-4d10-89d8-155d0005e411",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "389839fb-2596-4c80-b3b7-cc8082028b43"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "00687f04-ca3b-40c1-a4dc-bba374a93340",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "66a7a6ba-030e-4919-b480-c0f6ee02feb7"
                    }
                  }
                ]
              },
              {
                "id": "8da2e10b-a645-4ff5-bf55-637ad4eb31a3",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9ef5efa-7494-4fab-868d-55313cf5ea8a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7c0c2027-ea37-4414-8240-84cc97ce41c3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c54aa389-03fa-4388-8661-7d1fe4fda12d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f1ffc7b6-c6ab-4acc-a3e2-90a85988449c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "39e58d64-0a1a-4faf-9b48-e3c7b1ded753",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2a934042-7a75-4cfc-b151-95a016fb4f1d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d6632589-1b9c-4dec-894b-08cca5588386",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0577908d-b55b-489d-b273-e5644f44707a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1778b799-07dd-4fa2-9234-1662a79c5a2a",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "250c2965-33d4-45f6-aa25-24a647762e62"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1299867e-4396-448a-ab5e-093e3cd434bb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "21e399ef-cca1-4f02-9f79-5b8149618f69"
            }
          }
        ]
      },
      {
        "id": "ad04dce4-8161-4fc4-ba9b-7ce2bff8a2e0",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f9b2de98-75a6-466a-9d98-e0dbe45770e6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ce284303-9a07-4683-95ed-af3011c2cf0e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1ea7328c-9540-45e8-925a-a612a3d2f794",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfcde719-0d4e-4dc9-8d3b-4c0440842dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e6f524a-0f62-4376-b776-314c0f720832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b6c9541-82ca-4157-b4a2-4eb81c5d2288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "df27100d-1108-4af7-b55a-8c3a8906f6f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd5fa87-8844-4917-ac31-5a506b59f0c3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abafd135-0804-4e78-be6c-3a71189eb929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fc9e902-9293-4db3-8ec3-1746ef4bda84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46772df9-0eef-4e3f-b978-72da68c11ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7640e1bb-48b0-43b7-abeb-266ff5019a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "878c6e2e-6e06-4442-bad6-dfebe2eb40c1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7acc04dc-19a1-4b4b-8808-571fdc196110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c7b065f-ee10-445e-bcec-d1a337f717ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007c2a1e-c9dc-44de-836c-f506ec78ed29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bb33648-f651-4cef-8def-6819c4a3502b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b793ca-081a-45b1-92b7-ab32bc53b6b3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6430239c-e344-4acb-90d2-dd1ec916bb59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b687f0e3-7615-4999-a84d-f673739847f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c746123-da72-4a0c-ab93-237e93612a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c8e4388-20eb-4dc1-bf88-a35edd46b1c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9af6fb7-fc11-4497-af30-080ecb283c40",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c35e5b84-93f2-407a-9749-3557fb052999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3001946b-0c55-4528-8169-af16aef0b9f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc499a7-a9df-4a62-9fa6-1a0477f6efc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "55880f05-0376-4c1f-bca1-e7b66c57c3c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d30fa2-92e3-45d5-b859-58b1d6de4a19",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdef9630-71d0-4a00-a1a9-974fdc460464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f86940f5-a432-4b8d-b4cc-4c841a894c5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a5be62-aa64-4f68-a446-97d756c1cee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "57a712a2-d7cf-440b-960c-a50a59ffe499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6bf1cf8-701c-487b-ad70-5a0fcbcd341c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35982a0-d8c9-40e8-b43f-35ff8123a688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffd829e4-dfb8-4916-8081-f31bd8043ae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec8f05a8-e6fb-4d97-a6b7-db97febbfe3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba813ffa-e551-4581-9529-f1c5f2f12078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e0f890-8da5-459c-a683-1f894ef62c8c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c10568-7082-4977-9248-7ea6d97b1e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15d2db80-b5d2-47e8-9083-86105428bd88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b45b82-a2ce-4d6b-b56b-8c89297487a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "74c1ab54-0c2c-4226-bcf6-796f837bacca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14cd421e-3b6e-4607-8bac-3f9f9d3079b0",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8afe1f65-6064-4fca-aca9-3bf569e5fdf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f586220f-5435-4f44-952e-088423130555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f70ccf1-2d08-443e-933b-4873d3ba000a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "73c8b965-0bc4-4863-8a69-4d0b4d4ba9a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8810e2b3-37d9-472b-b33f-1a7ee7390c85",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23bda913-c36c-48ee-8860-63913988db16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f894e10-e90a-44c9-acc8-4f84d3dda7c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f38fb3-0b62-44fb-96b5-d82becdc66e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb6606d5-5ce5-4cd2-9c19-5360f4eeb3bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f1f68e-5f3a-472b-9ed6-3c864483c332",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "720ddc01-cd4c-43e0-aeb6-47f60ed77c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c14395d-7402-4bef-a5ee-4c4517e07b46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb7d5ab9-9649-46d5-911d-d0be4d2c6bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7101201e-53eb-4da6-bdfc-0e10f265bee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd4e7a6b-bdb7-4f65-b61b-2be59745aadf",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a92d082-cef7-4cdf-8268-043d07817bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88bdb473-d98e-4a6d-8e6b-c97510260172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9c248de-0f98-4ca9-97ad-a633b80a4a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1a90c1ff-4897-407c-8da4-27b30d98e72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86070132-7687-46af-8cdb-a8dc43f51c63",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f59bab5e-1a4f-4a37-9808-62b81966996c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db0b2776-90d5-4ac8-98d2-a8e6c9ffa95f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f977d358-9805-4c3b-a45a-e9be0c2cd461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bed6d0bc-948e-47f0-82a7-dc77c01fa303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad76826e-1f85-45ab-a4ed-42922187117e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec70bd6a-0068-44a5-ac8a-b35a3f4f1f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac6c6278-550e-4708-8d5f-2767fd7c0f2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de2a2354-2692-4487-9fa0-5af4d0c486cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c9a9423-edaf-472c-99d2-2f832b9eed92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd9e8e54-e7e4-4162-8571-7ebbcfbf4b0d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e21388f-cfa3-4131-b23a-d968eb8b6257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad0f9d4b-c83d-473b-b2e4-4958af47d41a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c81c48-d5ca-4b0b-97fe-8d149f684d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ede97797-3f85-48e4-b5d7-c24d9440d838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034825a0-7503-4dc1-ad46-5884922e8145",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "289f20fe-99e0-4dab-86ce-a9dd431a4d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45e62db5-bd0d-4e5f-840e-490fb45a87af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc660348-d99e-42cd-9850-81c5c65f50f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e09be1ea-e4ff-47d2-8abc-edd1795f6303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3441cf7f-9ce8-46e7-8db8-f5b7e83545a8",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e593ef9a-437a-4295-b0d2-ff04b71f4576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7ccf1a9-691d-4502-b636-35a0a9275944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd518ce6-d6fd-418a-ae46-7717d7706bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "319d913e-31a2-4327-971a-e1489b078b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ba6fd0-3643-48ac-90fe-2ac753875605",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46db4d6b-43a5-47d3-8637-b2ad87d01f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54b4aa4d-4cae-4904-bc63-b17fa8747c62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a869246d-b2c8-40a0-be08-903d1081a0f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dc8547d-a570-434b-a309-207791b4dce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e06cbced-2118-466a-82ee-3bdf768b6cce",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "971fd2f4-48b6-42b8-8d97-8ecb61969cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49654494-65ae-4193-9f45-6de616e0f9f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "276f7ed7-955d-4d50-9958-b44152311069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f8af0f1-329c-4622-a754-a89650e081b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b9cdf8-494d-49f6-94f0-e4ca0e50497c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12756e6a-39fd-40fb-bd22-d7cf6aa41c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f5be781-6043-4dd9-92cb-1acd98eb8fe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f76723-463e-4daf-acb1-93899e83c449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "359140b7-fbc3-4872-bd19-8bde6f5998d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f020f1f2-5ed4-41d1-8c7a-8607d4faa0c0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54115774-8cdb-498f-9ef1-9f7583cfb65a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1355454e-58c2-4e97-a703-0769305ef717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62c2f83-43cf-42e2-a4a0-4c7d0732dbd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c58cd2f-dbe7-49ba-bf63-ed9a62fb16f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eaab589-eaf3-4b87-a931-e3b9fdcb2f5b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1342d40e-b6ad-40ad-8ad9-f97e65e71a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ad82154-be84-4ab1-a81d-5da65290e9d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90354971-afbb-4cc5-9b17-b668ffcf0a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41da6f64-ea15-4391-bd3c-4cb724b5ca7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e74fdc3-8afb-4a73-919d-7f321c7efc60",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c83e94-716d-4913-8f1e-2831762a57c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d2f7aaa-d876-4623-9888-7c2cd2a46ed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7586cea-da02-41f2-ab0f-b3c3ba88846c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de93529d-f3f1-4d4a-bf58-d6c9fddbd258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c1d483-efdd-4691-bfdb-beb04564de46",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bafcecb-255f-4b4b-b894-950fdb3fb657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e779e3d0-8009-41c1-8340-d74f76e0dbe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78df73d0-1ae8-45cd-9cd3-e7f816b4443c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd83fe59-bd43-4864-a92c-d1a088162f7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6468f31d-f5dd-4420-8d50-1deb65e610a0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef8bd31-11e3-485a-b829-fdbaaa7fc2be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39a24f6f-7622-4ded-929e-da6ca00bc3a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af9e0da7-75cb-425b-9486-6c147ed36b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7336b3b6-9695-4901-8675-1c4f369fa15c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd65587-5612-4fd8-bcac-67f475395488",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d5c8ad0-6463-4ce3-88b5-d5373f8657a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89697601-884a-462c-a292-ca7f1eee30f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18929c19-9847-4f08-9f69-42c5de3848f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcaa2760-89f7-49c5-8082-42445945714b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8698dc82-1cb4-4088-9ef7-ec3b12d6fcde",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e9254d-807c-4ae2-b9ab-d0ed8b60473c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29e3818c-4ac5-42ff-b19b-fe8968ee758d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa049904-dc19-4b07-8949-57a675c689c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a36f552-9dd0-4d3f-be3a-f20309ea5386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a5d00ef-8ade-4bf0-b58c-7a91ea178186",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e91eb5-9a3b-465f-adea-eeef128fa9f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11344fed-458e-4fc7-a6ab-97b934624ab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "857fc42b-923b-4efb-a034-0f7877fd4f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53bb267c-b30a-4244-9fab-d73513effff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58113489-9e93-4153-b427-769da738f5cb",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c37ee791-81bf-4204-aa85-e019188d4663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35d6fc8f-59ae-4824-ba15-fa078ea4bac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89f4d06b-d5a3-489d-b3d0-90defe48fb87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7edbcca-16fc-4012-83f6-431d7dfd298d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f1263d-76f5-4bd9-a993-5f13648aa3db",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "833cde69-1de8-4942-8a16-7c436743ca06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ab6fac8-a276-4d7c-89f8-266986c401d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1391c8ad-8be9-4047-a823-37a0e265f105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a921fec-3b52-45c7-be95-080ae8e368ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f9243a6-6f82-4ce5-99bb-947e704fca2f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b417109-2e3e-4ded-9fa7-038e408b7cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc316790-0dcf-408d-bc51-028ce00bde7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "862561e1-e645-43a2-82b5-667f9cb6cbbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bd66df9-4b76-4088-8794-e20c4797a8a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f617a4b0-0aa8-4455-93e8-0f0cd774f230",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce55c5d5-e69a-4153-87ad-55aa58dd13c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96f7a1ec-02b5-4e44-97f7-e06145813289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a3d1666-57ba-4d70-8f1e-585d79ec89fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "818f6299-ffbc-4bdb-b6ef-52a0b04ef7c6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "28fa30b4-9988-45ae-b515-e0b17b1cb54f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f8b81e5b-c60a-4191-9b1a-e193d9920976",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735a24c8-e780-4e71-a6d7-af8745af5a11",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "999b2887-1222-4be1-9bc6-a823c3a83e5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c56719de-9785-47fb-a767-5ad566bb1c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "144a562f-06b7-4b56-8b4c-5a33bf0fee40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9222e8-fc11-4825-8ab2-d77fa274367d",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234d3738-3013-4711-8a03-5515aef3ae11",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "03603368-466a-4813-8ad7-e3fad5036110"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46583828-80fa-4c0a-aa5a-f59c0329e053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0ccc432-2755-4ed4-bb27-662810995053"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af5fa34a-059f-4b3e-9069-dd9f27525cbd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eebc36e1-365d-4f75-ad91-cc0ad54575cd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e49a60bf-249a-4960-8803-a2bf44324782",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ca8fdcf-04f2-449e-8c4a-b4970004f139"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "af2b9837-0af6-4fa0-89fa-71ad9abcd9ca",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2af5060b-c0a1-4be8-8f1f-a7ef347aac89"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e4d8336e-b330-457c-9380-460614773b78",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a1d59acf-5a4b-4053-ba22-82221453517e"
            }
          }
        ]
      },
      {
        "id": "1d58e45b-9d2c-4432-8458-4264c0b3c120",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1ae36774-97a1-4071-980a-7392c9e10b8c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bef224bb-1e20-4f9a-a771-e841f9668333",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a567cb0e-7540-4a5d-96f8-951cd45c750d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "982fcb3b-e8dd-485f-aebe-44e600c3636a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b0350d1-5b4e-4b4f-9863-ba6dafd84f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d4558d-5673-4489-a536-ea7c7478f86e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5f0c1c2-22a5-4abf-a65b-d22e2d6fd636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1d55e4f-f24d-4403-be19-305061e44339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "594d95be-2649-4c04-a445-fc2418d39438",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0931782-a075-4aa8-927b-4ff65a2c7873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "315e398c-4a9a-49e5-b5a9-a71d41d788cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9322ba03-ce84-4956-b551-a82cecd7dc38",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b98dbff0-24be-4fc0-ba34-3a4613b8afee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32fbac12-cb4f-4722-bc48-a622ab36a1b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d44fb9-69c0-4f60-9e02-ce4854d89a4c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd376d3-5027-4c54-8e6a-f53467eaf69f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad82c878-bcae-405c-9f77-570028f9d013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c62ca64-4d59-4051-9d9c-914c9507a36c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "048470ce-3e31-460c-89d5-762036722c1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d07911e-e8ea-4990-a341-a632662ded42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a3b153-8ee2-4344-adba-1047d6f95b8e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59177dc6-37c2-43d4-86a1-22a6cd7402a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "844de9ad-5262-4f72-ad76-b1e05070f19b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0319a18f-898b-4230-a218-fb592aba4a10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eeb2540-af28-4a63-bb20-217873c8afe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de8ef308-133a-481f-b71c-637f65c591c3",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982ab54a-f17b-4ebe-acf4-30fe00fb2a10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25801747-f41d-4609-8163-a23e6586f193"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a261f14-5a9b-42e5-9793-1fd49840d8e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80888dea-c219-42e0-9544-fcf2fe31ae99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da19848-e26a-416c-a135-dcb818f6f7d8",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da5f55c-0ffa-431d-b030-b0f12639248d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "620ccc15-9903-4ec2-a2df-fb101f8ae80f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7825bbe-573d-434a-bb44-b9a8f1419596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c95ef5da-88b6-44b8-af54-c74ede76e7b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c312255-f8a5-4a3c-92cb-20c41063f297",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7919f97-743c-4ec6-9ea5-8816a2d57a8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c852dae5-f10a-4d0e-9162-0d12c326dd84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f49786-d7d6-4b5a-9176-05a2fa2c21e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24704a72-bd13-4cd8-b083-5e5cc36cfb75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c5aab80-b441-49f3-a1b5-ce16b9116458",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2785a6d3-663e-4dd6-8a73-7239ebd82994",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce09c209-f0fb-40df-a562-895613a7903b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8484a63-4ee0-4dcb-985d-c240b3c78308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e558dfc-ed82-4ea5-bc91-a9a7ec6a2144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b5ade26-1714-4bec-9b41-f8824664f41b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "142e4834-741b-4ac4-a4c5-9e970b47fd83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d79006b5-362c-46e2-a34f-9bffc42f3e80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a9bde8f-3920-4f80-b085-9055ce84cab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ec5dc58-a887-4050-a25d-5ee6c11aaee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a265798f-ad56-4486-a512-f3ccb34d7f07",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d774c6-2fc2-4568-8eb6-807e9b80175e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73f06e01-676b-49d2-9a30-9493d71060a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0091f4d9-0bb8-41e5-980f-f01ba382a7d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccd326bd-0b3b-4f6f-ab40-347917bfc42e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f24352-2c67-4980-9c98-afacf9000c65",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f0ff29-0fbc-426a-ab70-8e3b41d58a5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06425101-d8e7-4359-8c2b-6a20e65e17f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60f283c-6a45-466c-ae0b-e4df98b2fe5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e3d7025-dc1c-4103-a9da-85570d116e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829725de-997c-4af4-9ceb-4b6551556ac2",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c00c62-ba0a-46fd-9c26-ab6680b0d282",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36cddc39-430e-4410-b299-680dfba31d4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc95bbf-830b-4fb3-aabc-9f76319c0615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f08fba5-f84f-4173-a56f-c094dc335524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb0cdcb-4bc2-4f7a-a23c-95c811c0e0b6",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d1f8f16-b367-4f8a-8ac8-ab8b9369e4a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71e04fb8-3b4c-45cd-8108-03ec7ec88965"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c694bf3-6114-4c08-a9b8-50b347fcf197",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "049b8ef1-22a8-4d0a-a277-19027ec37b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e3e6f8f-391d-4352-a4ec-78891fdf1a12",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7efcae60-ac11-418b-ad34-7376a3b56a13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03c8bbca-5c85-432c-a1a9-2350dee37ad0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c568a342-f81a-45f9-83b9-3a36838384f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "469c318e-cab5-4562-b8b8-5ee6be7ed5ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72fb6232-214b-4c88-893d-e51ab873baaa",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ecad1c-4c29-4347-9745-fa586444e73d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adc8e2e9-fb44-4e9c-8a21-48c1d3a40122"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe7e567-1d83-4f5d-a443-e5a2f802b0c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bba9673e-afc4-4f28-a3f9-c64c7b9bba7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8de6a01-5154-481f-b746-1abcd48919af",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba2e04a-f31c-4c42-8701-2f63b70a608d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9402419-3d32-4b66-81ca-f17d4b5ab949"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00988848-2b11-4304-8dd6-98bf4de4ab8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab5149d1-be48-494f-a30f-fcbd4eb84def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2527c695-44cf-4eb4-a54d-17420b9b2c9f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633d758b-1f45-4cc1-87c4-1b2021634386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e953f7c-a4bf-423e-9c2e-21149b2cfed0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4e675e-0ce0-4b3b-9d3a-41e4a1a155f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0951f07b-99fe-4e15-b11a-3364d491fa92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc8b2b6-43f0-445d-a778-ff03894ac200",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2cfed7-728a-42ac-81e0-7f69a42bc666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a67f00c-9854-4a66-b166-639574579ec8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ab8fec-9270-40be-ae52-42d186007932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba6bc12a-571b-4291-89e1-c37e59051965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e6e4b44-b697-4dec-ae9d-37716030d9d7",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db2dfee-00da-4e18-8843-7636d32668d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0bfa42b-ef34-4eb1-ab05-aea11d9310d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35194803-b3d4-4ef0-99bf-972c19ba58bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2dcc921-64c2-4c15-9077-ab3fed12cfd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88e73ea8-90d3-4c4d-9d35-e3f6029eec41",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e81a702-77fa-4048-9d39-30864238602a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40caf662-0cc7-4748-8ede-6f171bcf8e5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d766382-61f5-4086-876b-fec8726ea3b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8f81f88-f442-49e9-b79e-dbbf66b8a36c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b836a36f-50a8-4c66-8c35-99b696599513",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07daf4c7-4760-4023-b730-7e09ad1a0b8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c6738e9-1df4-4725-9bfc-c0789f03cecd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af035ffd-9487-4f8d-bfa7-f487b48d8c85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ac97e16-50ba-4ad9-a2cf-d52198d29691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "903ade90-931c-4794-9531-8cc32ec7f359",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f4a14c-7c3c-47ab-8f5a-aa376a49ee72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3920936e-c15d-44cc-bdaf-97be748459c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a240c06f-2a52-4ac9-849c-4c69494660ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa5d13db-02b0-4010-be43-98207e412971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88127ed6-38e4-4cc0-bbc8-3f59fa55eeb7",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d278a1fe-6804-4e83-9f37-df965346dded",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aed31f16-2baf-4547-a9c4-e76d6e3b4b65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69fc2370-8da7-4fd7-9158-2b91140cdf0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc075aea-b0f6-42c1-bc15-2e0bd77cfed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c9d8d48-d9da-40e8-9c68-04cbae6f36fc",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efaed15c-07f1-42db-b8ef-63d2109dea77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a22da789-1f61-4eaa-8a45-4fa656da5cd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c1a36ae-fe03-48fd-9e6e-36b688cc545e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62ec3f97-d7e9-4214-bc7d-8636a842494a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8008892e-fe8c-43f4-b242-c5efc7c2202b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d88ad5-42ae-4afa-abad-18a9b36eca47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72af9333-409f-411c-a0e9-9a621a6461bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a13cfb83-37a7-464b-bb67-ad4cddfca168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0805009e-993f-4902-83a3-ca02b0297e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b4be345-a451-49e7-bf04-61c5d2124cd4",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f0750ad-d889-4dba-af02-39b0e545e0bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c8336c0-adf6-41c3-a9c2-c34be6db1a15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34e74c7c-0681-45a3-883e-8c42a5617ec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c4c8db3-6e71-4d4c-ac5e-cad73e81e72e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b29ad789-3150-4438-a039-542d8f68f563",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d9c5e33-807b-46b2-8cb0-7d41eb0f973f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "560f87f1-b7c3-4465-be2b-1e30eb01d846"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f36aee15-77bf-4d8a-a615-e0f792c69d5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72bb0cc7-9393-4682-8d21-a8f9be915f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc6bcb7-6136-4c5e-86c2-aa8832a4745d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e3526a-e2e7-421e-ba38-3c5aed50670f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa7f7d8f-7f8c-472d-94b2-62486887801d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08021e8c-3f92-4f74-bd4c-f1f6dca1b564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "270a1508-8152-413b-b4bf-520806cebe64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9717795a-007d-4a7c-bcfb-cd1169b7d07b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20866e07-f324-45eb-9aac-8137fa2cad4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77dbc19b-bccf-4236-b4f9-5b6c0204ca6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc58525-297e-415d-b15e-7c68f429ddf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ec3fa4f-6601-4d76-9b97-c56c39372005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c98706db-0b96-4c5e-b1a7-1ad225276b03",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d368af7-d31c-4e8a-933e-82a85f6cd2a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "346ee04a-7019-42d9-921a-060b5fa6bb5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd65307-4b2a-4b7d-8426-c1285f5f95e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06b4794a-3e1a-4b9c-92d8-c81b694f4488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef77dcc-2f2b-4af8-aebf-ee3a96801c1d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "013357f7-dfcc-460c-821a-991e7762fe8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2f449dd-38f0-44ff-8310-899957e56735"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a927964b-038c-4789-9a9a-3f039fcbd400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "904017dc-29e3-45ac-8ede-448592a3ec29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4193c63e-614c-46ef-897b-99f4479923df",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e583551a-ebcb-4c1d-ad75-25723b2a00a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35cc74db-f89a-4419-bf22-ce4fc6b828a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c333cfd-8f77-4909-b15b-969c3c92ff50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a8e0271-3956-42b8-ac86-a243a41285e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0117326a-658a-4ed0-b4a6-2c53ef098a66",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e47faf-b3f4-4c09-a7d6-ff43b2529af5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ea01750-7ada-4e31-80d4-f3f0126af9e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2402f1c0-32b2-4371-ac9d-563455e815dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b2aca06-5e2a-40e8-8d23-b7c3c71c403c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71af975d-cfdb-450d-83f4-7d9644101e82",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af81cb74-cf7d-4202-88c6-2a257e9e38ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a23b6e9-5ea8-408a-896f-49ff6e44ed09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0205ac7e-c264-4eea-9e8c-73e7477bfb75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74fe2741-c710-4448-9f07-542336b88e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d91457e5-018f-4807-a2d1-73f7bed00725",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd0b9aa-8804-40b3-978c-71c23c9dd86f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3f2e9f4-1a6b-4622-af04-800b1e633d7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e61e7b3e-86f6-492d-9d9c-50c3b610c68d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b7259f5-4682-4019-8e90-02ae362eac2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1cf15fa-e7ba-4261-9f88-b81ad8dc070a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3583f9e2-0895-404f-a5b6-c2f171782102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00fe6419-fd62-4ec2-9e1d-f01b08057cb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "853c046c-bd8b-46d1-a120-10c58eb68d68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83378ee3-6469-4049-bf3c-7de4fa0a7197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7b686f-b21b-4369-88f1-ce2d7c86d94f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e80beb-b808-4df9-8804-3379a7444ef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d94c0987-c6a1-4f93-8e6f-1c43e5426e7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef013aa-5ae5-4a79-95c6-df4d3ac893e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2853046c-0c51-427d-b2b6-f9c4ca595acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2371574-fb10-4d92-85c5-dc9733f8e63c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7324c8df-1b8e-4626-9344-9d73e115ff0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00cebda4-c1f7-4e0b-9330-79751ecdde1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ced7d2-9e07-46a9-bd92-e0ce48ccba83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fc3e029-bc8b-4335-8c36-c159f33e3507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f536d428-68e3-42dd-a2af-df59baa9b57f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4085e629-1862-4fac-a68f-a278c28f3928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec6ff9f5-526f-4eea-8f76-91c181694bba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "701c248d-b0c1-43fb-b779-2f25e3b1a368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37415d5e-2569-40f9-bf7c-5433478e1a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ebd074-789b-45b9-a231-0fb198922a74",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e9a966-b4b1-44d8-8407-287a0e98d0f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c902ace-0d05-4758-9526-01e9929b961d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8485f609-e0a3-4de1-b932-6fa528bcf61f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c904c080-3763-4bdd-8aa5-80d31a5b07e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb736e3-f132-41bd-8c02-42eddfec6533",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc5bffce-9867-44ed-806f-3177e4fb2f88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da62cce7-1cc8-49bf-97a7-77b57b407d62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee36d44-3c0f-403e-bee1-94806f190c3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eefe9a9a-f39c-4a7f-93b3-0224079d07f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8850a84-4bb0-4d18-ab6c-0511f15c3163",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e6d2266-a70d-442d-ba1d-8b3e2bfcf3da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c005b92a-c053-4ecf-8a2b-310e18a2a760"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f0978c-0eb0-4ae4-a41b-d67a949b978e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "401635b4-2f26-4cb6-ba9a-43a069b6751b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c187008a-91a1-4124-89c8-6f373978efe2",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf36270d-9252-486c-88f1-105047be3535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ad11be9-2614-45c0-895a-2b6928dac3ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "557b7073-06db-47bf-878c-0ac309a5c939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af355fae-f553-400c-bc17-197d4b17ad24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a67cee0f-aa3a-4b15-b3b8-c2cf5dabec1c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda886c9-82dd-40df-9762-fa04b06b1d92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b0b06aa-6ffa-4009-bbad-d559561f6d5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e943dfd-49f7-44a7-b9b5-ac5fae1c090c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "801aceaf-0123-4a6e-858f-86eea396745e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2a56df-8167-4314-ab30-07d9041f3be6",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1bd9cd1-b421-4cb0-b6be-19b05fc74d55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daa28185-0c2f-4bb0-962d-b2aaf2da6bd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee35b6f3-cf08-44a2-9d50-6598d918576b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e474a4fa-fc1e-469b-900f-e885b9ab2d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a1e20bd-b4c9-4cb3-b09c-cabaf8bb55b1",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6d1aa9-d24b-46e1-99c2-0b1549c22f7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a129986-5861-4aeb-852a-5af21c06369f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef7af6b-0ead-4f19-b8e5-d023f357feaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d06b533d-866a-498e-bbc9-7e510c5e17d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f5f916-f8db-4362-a2ba-cdcc924370b7",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f5ecbe-4dc2-4492-9fe1-116a9455ef0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b07a602-f273-46e5-832b-21d8c48965cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69efc9d3-473e-4e14-9b69-b855b0519a14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b5dd64e-a8e7-43e1-9650-84db18dbc10f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5de1783-51f9-43ef-b18f-dd4d68f405f4",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c50284ad-5747-4d4f-9310-880cfffbec50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "926228d1-0e38-4a40-b5b5-9599f9d20df7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "089926e2-0ff9-4896-8ee5-a51b01ed4a57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c5a661c-7ccc-4f83-8678-70ee8ddb9324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b41300-cf44-40dd-b147-e5a2e34fe8c1",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd40ab1-125c-48ce-8536-d707d0688daa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "087e6baa-a6c7-4874-8cc8-c4009f9a372d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e35ae206-69e1-496b-9c9a-96e6040473d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eb42951-db5e-4584-aeee-54a9cbf64f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51188e9c-a38f-4046-925a-8c19f385309d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f5b0a8-f51f-457a-927b-5c811c5b2ff1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "550ff842-7bee-4cd4-b7ad-14013580f784"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eecd633-c543-4767-a76f-5fab0e652f9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f3f1b48-0073-431c-9523-7b43e4d53fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a449dab1-4fd0-4ab4-bff7-d5d37f3ef9aa",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd52644-e9fc-4ebe-a743-5ba7e4c4f3c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adca16d8-4bf7-439b-86b1-0142a58d1c43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efac7837-3fea-401c-9cb5-0a91235edde3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fad5380-cb72-48e0-b1c2-35ef41b66f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef36b45a-1c68-4459-bee2-02bb4aa13c77",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd67f5fe-ab3e-49b2-bd13-f7f25e2ca64f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aa17fa1-0b65-4ecf-aad1-2ad744f472cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5933124-9334-4583-b8ea-4b5a1dfdad3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc4d32e6-179e-4a88-981d-732d798a3f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a544c2-2cbe-4fe3-ae3b-6e79d537549f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35974524-bf55-4063-9769-de092b9abf44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf6db454-ccec-41ed-8f35-69df6558b89d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68251177-4f42-4aa2-b369-24bb2f0a7999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f64e0c81-bdc1-4d2c-9f8d-768e82abfa05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77250fb6-cde9-462d-bad0-e81e6fe891c3",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5285fbb-9782-4d0f-ac19-a84364925764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1d7a60c-ab48-4c66-9512-1a82530a42af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ad590f-c9ba-42ef-aec3-0e5bba549a84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cead11ec-1663-4ba7-b4fd-712dfd0db8de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a677fc-6068-4f51-a9e9-b323fbb685ca",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "133426c5-84b0-4406-90de-da824f02d76e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b45dceb2-102c-4972-82e7-2fe338849d9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "380a7928-6a5b-4e21-a347-e32db3d7f052",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3717a532-91fc-4c43-8044-e9a16afddeac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3022cc77-79f0-4423-acf7-d7d33f05fe19",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf7c58dc-6dc2-4a13-9d64-abb8dee8761f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d0d719f-3370-42c4-953e-9663b000ba6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7ea094-4936-4bd1-ad5e-4e10266add31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfc4019a-516d-4a1c-8910-8a068a92fea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c0ce34e-9229-4b99-b89d-516624416037",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca6be83-b9fb-453a-914c-f1bd39930104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33037584-3357-4ce9-943c-f1e2dae58b24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e79832-e1c6-4863-90a8-207e46928168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98733c1f-d92b-4bd6-ac80-ec7f428d4473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559ccc12-7144-4c78-be11-f5683b67c240",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8adca4f5-be70-4b2b-88f5-cc58f07c0693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09d73752-cb8a-4071-9e09-ef225f6c1fdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb491f0-5600-496e-a1bd-d2e4b6108018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e77522b-50fa-4246-8c94-8a93a1e78dad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86362ff9-9dde-4fa2-aa36-99a734b68bf8",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c7ee868-0265-4bc4-a251-b14223e81503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "561328c8-0539-4fb0-a480-045b08955baa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6a9348-09e1-4e84-8e62-e68bad869973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59d6be2a-2c49-40dc-87ad-7d20b641f9ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7cc6f79-d5bc-4cc3-b999-5afe407402ca",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d2a41a-fda4-4ef2-a791-ca5cea340b62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3279d846-8184-49de-939c-133046603ebc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f291152-9dab-446b-8ab4-4b549041a6c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30329722-314c-4212-a42d-fd5ad022fb25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2edf9a88-f84b-4fad-b9b1-421369ec9495",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd16fbbb-d3da-4444-9815-4457866ec7fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a7eb101-ae3d-448e-ba68-2cfc37b05c1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e39a88a-5a93-4989-90b2-307ce3a8919f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feddfdd5-58b4-4e78-bb58-45db700bf8fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a3b2342-88ec-4b60-9868-9f9d8fbd2145",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e46b5d9-3107-47fd-8b37-55457eee2263",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8410b945-dbeb-481e-bdd4-f74c6580fd33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73c04a4f-b9ca-40a5-923b-a30ca4d40a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d09b4f7b-95ad-4b7e-9f0c-043b27fbcd4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4bfba13-93b8-493c-9b32-bd794bc55cd0",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1389b8bb-d737-4900-8aa4-8092bd576b22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ed7c5f0-bfd0-43cc-aaea-823b75b007a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b34716f-e475-497d-b822-262e80a2a9df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6595501d-85bd-44c9-859b-9e44535f2cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c91cb9-b7b4-4e81-b7e1-a18fd25048ec",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8837889-9cab-4421-b444-91c48402dc72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b4a6ead-8d1a-4f9b-8a77-981e8952041f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a8d7813-a18b-4bf7-8231-45ff30871f23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28624dbc-d3e6-46cf-b152-6d79566413f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162a3d4e-21be-458f-8e57-522b8fc725af",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac2ce4dc-af92-43cc-a970-394b4b152119",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46356805-0e88-4abf-8b25-9b5def179254"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c37d2887-f6c0-46d0-b3b7-ead992326208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fb12a7b-3e8a-4d44-90b8-7d1cb30d1ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "898ab99a-68c9-49ec-8a2f-0b5a6a692412",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c4a28ea-0006-4b14-88a2-877a09bab9a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75b3d2ad-95e9-41be-92e2-3d97cdd0e873"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1946ac4-5732-461a-9a68-d2ba4fb42e1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "025ca859-6bd4-4d79-9176-e011fd71bdfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db763fba-9362-45c8-83c2-1b4ce9895457",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "804236a5-8633-4ee3-b4f3-9c690087ac06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3aade3a0-1920-4502-8cf8-138aa1421c90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6f04c8-4c17-4cd4-ac15-690e74803135",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1642fcdf-3a6f-4899-b9c1-46c539700624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2617a97b-9f39-45b5-8f87-272e319f9aeb",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8645c297-14b1-4e13-b4f1-ba9fa7869071",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3365857-1289-4003-a5c7-2787ca41c6f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee906583-81e5-4ac0-b694-1c3cdc54e363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd736877-455d-49ca-94a1-9e0ab557e11c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f8407b-5144-4e4f-9d54-def105eca12a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db021f85-c9b0-4f47-a1ae-ebca38f685fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "098cf648-b51a-4489-834c-ed5873047c77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e2a4ed-e2b4-48f4-a5f7-eeb009353bf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53a91823-9520-49ef-843e-6c10307c8ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5e158f-b07f-4cdc-a6cd-6db724211070",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "386f9221-6275-46bf-a593-cadc816872ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b92bd41-fc5d-4fa8-8d35-6f02d35b9d2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b233c9f-79e3-4a0e-ac1a-1b9d15abc1f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22edd29d-1b66-4382-9017-f0e70c881724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89242da4-72f1-4988-9ac6-ff858fb377ea",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19584b30-0813-4cbb-9780-61f4383af958",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "433bae03-9222-4f4c-8035-9ecb2d5ed204"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3224920-5871-46e1-ad6e-9e262c582978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8808bf87-47e2-4292-87c9-07bd22802681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60307f1-af80-49ff-88d1-32d4aac9a937",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac1625c0-4fe1-48de-b035-877a6ce6afc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "469f5ad7-60e3-49bb-be07-88a6daaf0312"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55628629-a1af-4627-8ff3-e464d96c42d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dde8f45e-414d-4303-bfea-7335d896e02c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e7752e-d8e3-41a3-985a-c70048797d8d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c656fb25-cffc-4465-95aa-91abf4f00813",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9ce974f-9c89-4a85-99b5-8cfb840b377b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "880a7b69-3c89-49d9-bf6e-1f1451288857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96b34d0d-d438-4b83-ab2b-fdc035812d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632d3996-746e-4964-949d-adc7856f745d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c828c6c-2d1c-432b-8ddd-1d29fee984e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f508c0f7-848c-4d32-b65e-56e88302ce40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c424f489-3822-41a0-aefc-f4192fcfebe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e3a874c-7404-44b8-9ef0-663b108f542d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cfd66ce-70dd-49e8-885c-2bd50a5be94f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1abe3c9-e817-44c6-891e-1df84f874a5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e45951a-2678-4083-ad8c-d5f109a66214"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea25a174-04f3-490b-a2ca-f36de6b9e1cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cf6807a-2292-4617-83b9-7bef40b1da99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4287b4a5-4758-4416-8b73-6e4dff36af35",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac46b02-e20e-4dd6-870d-ebaeaf5d97e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6dc81c2-14df-4d6a-92d5-21765653247b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f0bcf39-0e08-4183-8ac4-d6c01affb7e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8f90f7e-a5e3-4b6b-a88d-38ffef8b9c52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a48352-068e-4546-a3b3-4ace201bcea8",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e88bc75-c2b0-496a-98cd-deb3d013ce2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d0b11d3-0a25-4624-b64d-ad11ef5bbf61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6efdc7a3-03c9-4ee1-bd75-a939137b6bca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e605c98-75cb-47ef-b5c2-569faff27817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1600d83-2e06-42a0-94c1-4923c1db0fd1",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77bd9e81-bc01-4bdd-83cb-e07b8da2e545",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5291c77-3ce6-47cc-888b-11109321f7be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66714f0c-8482-4301-bb4e-c4beea298a0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c284f593-6095-45ec-a47a-aec8860acfa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c423bfa-69ba-4346-beb3-c0bf110c1762",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae356652-7ca5-4aa2-8802-31050585d471",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea135972-235c-46da-92bd-3c847f0e7ddd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a2dca3e-0008-4106-8057-d09cc9c5d100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c860b78f-34c3-4d4d-adfa-e95bec6d6146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea46d6b-7dcb-4958-8fa3-db83de681ed8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dff1ff5-8b40-4165-8180-055f70d3b231",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93e85ca5-df14-4539-ac26-18a661462172"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d90efd13-d0cf-4dbd-81b7-e44c787d81a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5e5cd6f-761c-458a-b5a7-ef07284056ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09520daa-e3f4-462a-9c2a-c9c86ada92f1",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3605fd4f-ba6b-44e5-b2ca-38ed6fb0ce49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68956448-d1b0-4d43-a994-96938330ec40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe9c7b5-47af-42a9-b75e-1fd771665044",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c167c457-62ef-4e3a-892a-137ef7139c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e599acb-505f-4481-ac21-0d88d9fa5c59",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f92d13-47ef-4e15-a119-ba4c18cf3346",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "011e2173-3197-49ca-8455-eaa0cc346817"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f2773e-ae8c-4a02-a6d2-277c8a97fe86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5e040d4-47c0-4b05-80c6-22f075b98eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ad3e98-5bc5-487c-8877-0d80678e313f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "127ed69c-11a9-44e0-bff0-5dfedca3a9b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e7e89ca-e3fc-4d42-afd1-58faf6b25e1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e7587d4-5120-4768-8c44-82add1d8864e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bc5af84-b9ca-40fd-8e96-81c45d8dddf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a629aa7-d7db-4e6f-8d59-08032b9e6d60",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e93be69c-0e39-4ab0-b7ac-6f84320c42e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44b69746-8787-4d79-872f-f5278295c959"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48af27ff-9a2b-4fb3-8049-1bd7a2b0414f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afc7ad14-0bbb-4857-bc0a-6f12375e2c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38be6962-90e6-44d5-90c9-ed6636f0c97e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b7927e5-6142-4206-8a20-c96caea5d15b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6be149a8-f20a-4265-843e-806af0a363dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c358b9a-ef2d-47db-97dc-243a0e80efb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be0b5783-db47-4fae-ae79-18ece358d7e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d44b571-ba91-499c-9276-9c7093fc757c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1624b1c5-3cee-4c34-8ceb-7bb6e97bb440",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fabb9b6-041c-4d9d-a30b-38472c0a9eb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59266859-23f6-4840-9c67-0ad45d1b489d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b845a7aa-dd8b-4979-83d6-7dd415660cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328ca4be-37d4-40f8-b4d2-0278c4cda88d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9045fe9-e7b2-4f61-9df2-678606866fe4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc282f72-6c90-458b-9175-d3e2b8c706a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f52984-738a-46a3-ae29-a26d27c41dc4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec4ff574-6c11-4814-a85f-65f306af1aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c11f7d6-eb6a-49cb-b733-432ab72f5adf",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "908f53c8-ef2d-4244-b54d-c7d34c5121fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61eff849-d284-48f2-8479-91ba5af83dd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f46d579-3764-4c99-b0d1-de04bb0d72f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe893c36-0873-45b7-a7cb-6d956d3973b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f343e721-48a7-4c40-a048-21146dfcebe5",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a48d034-517b-4d92-acdf-6c1278d2615d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d0f7a9a-390a-4b14-b244-518f780f9623"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b169d217-84ce-4c0a-a2dd-1371eb80d8dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f442b9b2-fde1-4eaa-bd26-ed7f5e4dd802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08cc0415-558e-4409-beb5-c32f83b7421b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7defc735-5347-457e-b343-8c59c340fae3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53e3a4e5-2a56-4964-a54e-7f6c5005c304"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a0d6c9-513a-46e6-a440-b63c326bfb55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae62ce12-1f2c-4de5-a022-d22f8d72c66e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0828afab-21f4-4106-bf60-337efe0d537d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e65cd408-aefc-4579-990a-c2b6fec8b3eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4343b8e2-2dfc-411d-b4fe-696e44e53ec3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9f7b7f-f957-40f5-af01-70c065441d76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ef932f8-9e33-4f47-835d-0028ea7dc4df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654c9c3f-2ae1-4108-8be1-8754d4e2ac2e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20238e6e-9587-4b14-bb90-5a4e89771bb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b64af62e-80d6-4ab2-a0a6-30d446daad13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae7289a-ea80-4886-b323-c670eaf48b89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60a1ade6-965c-49e8-8db8-754559e4374a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1798c1-60ea-4246-8f9f-20fb73b24085",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "160e1318-cabd-4488-a57d-ec15a9ace93e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87ff71d1-3e4e-42d0-a2fe-240c483430d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a3003c-08fd-4c6e-8ff0-8dc8ea4ca7af",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b33a8a20-7e75-40fd-8fd6-624b2756b288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef48bbaf-0198-450c-a923-9f9b320821a2",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f41049-e34a-413e-8433-36e6f97e0941",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a3a9834-1e3d-4501-b06a-3d5230ce1d5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fdd09cd-3898-4921-9bee-3b170a559fc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6723e77-f93a-49ce-b94d-cba4d4b46d7d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "566e838a-e89b-4137-af85-df7b5657ed12",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "41722a04-5f24-4c37-acd0-1a39697eb076"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f10de63e-0b75-447d-95cd-c4053aab148a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ad736383-5a4f-4d6c-90e0-914ff08fda08"
                    }
                  }
                ]
              },
              {
                "id": "e112d40c-1d58-445d-9e72-03f3f57a688a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b70270e4-1102-4a98-babe-e27e398d9ca7",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e23605-827e-4c1a-b7e1-9e897f32cccf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2308aabc-a412-4ee1-bacd-d68d2a89ee71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f89eb26-d736-442b-8ad0-1309ac85d685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "370bae7e-fa13-4046-943e-32da30c72da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41115f59-b5ec-45c5-8c9b-f50996cf4df0",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd26503a-66ca-47e2-8c98-757b4c439939",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3ff6d877-f0ee-420b-8328-295666c1b63a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea645467-ac49-4eb7-8f47-c06536577f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d2322aa5-6716-4579-9432-c78ea233fcaa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e932c778-4d7b-4135-b822-b4ffb8cc066a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df527018-59d7-4c20-8e93-943beb8bdd03"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4d2d865-2e4f-449d-b944-8055cdf6ee15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ffb654d9-762d-4f4d-927a-931a147e8e1c"
                    }
                  }
                ]
              },
              {
                "id": "29e9a43f-9c47-4e67-a142-3eab7ab6046a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "feaaba2d-c4d1-43e7-b965-b100fdf962be",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d430bd8e-57d8-405a-ad27-3e2088b6f117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "dac2774b-c99b-4e8c-b97d-f3b35d75892f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52877936-8a23-4def-bb29-ea188a134f29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e17360d7-4199-42e0-bd8d-7d7cfce8f8f8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f3dc4ce6-1e73-4ef1-a171-e98a37eac247",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c7d567da-b31b-4172-8c03-5c18b0e5361c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "75afb82a-9512-48dd-87ba-64ebae8b2693",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "289a833a-725d-46d0-bdd6-78b9961e4877"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf121e3b-b319-4ce8-858b-b192b6ecc8a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b7e76bb-1d9b-4ff3-b947-b0ed5c82a2ba"
                    }
                  }
                ]
              },
              {
                "id": "5dcc4f7e-ad80-40be-9810-7cc251b57adc",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "48d5cb8b-737b-4cfb-b1ed-7dec4e698fb1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f830bfe0-c948-40c4-9645-fa0bfc74000a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "efd3f878-c060-40b5-b3cf-e5e6c51585b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e784da4-9b11-49db-bdcc-a5b59c8a62ff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eba54a02-7e86-4626-883e-e3b95a953ab2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "21402e3a-68a0-491b-ab21-c6f7960a481c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ae9fe8b-e83f-474c-8e16-e5f193140025",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0a1d9770-ef0d-46d2-809f-bc7945f2c1e2"
            }
          }
        ]
      },
      {
        "id": "aef2c495-da77-4166-b4c9-91ab1781cfae",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b02b1d8f-49df-48df-a47b-c40a8cbffcdc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "604844ef-803f-491a-8048-14bf9b7a7e10",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b63cebda-ce00-4bcb-95ec-51285b76d128",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0cd68e-798f-4249-b27f-9d472f61e848",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f3245060-463a-46e8-ae7e-bcdc4f7cd475"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "815e3974-2c97-4291-b4d0-b0058db3097f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "48bed07c-b3bd-4107-95e0-cb8c67321dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceab5ff5-2885-4d8e-b7e5-c45a179dd0dd",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71afca97-f926-45aa-86b9-dba78feaaddf",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3979f583-e21b-45b0-9fcd-bd6af5b9943a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bef881f-82c6-4dc6-83d0-6c3ea2f7cb9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "906e13ca-dd03-4a13-9e29-ac12b4eb63ab"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c24babfa-5f30-447a-b4f6-61f41003dc32",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4c7fbb1-1930-4374-b658-4ad2ee14e055"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c1e20aa-2764-4578-8768-76a6cc3c558c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5377a872-2346-4c38-802d-8177b2a045e5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e15d1615-9e8b-4df6-9970-509178e4eaa5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0d6b4a4a-9457-415c-8dfb-b61cca1b5813"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "273450b3-7efe-4e94-9b49-4ab93d70acdb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "318088d4-9fd0-4283-9209-b1e1922ac176"
            }
          }
        ]
      },
      {
        "id": "daecf785-1d50-475f-839a-c59666698423",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "00397b8c-09de-4c1e-b8ef-d3d0feae2336",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4ede16cd-d674-4591-9977-e81c0243daf5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6cb1fe6e-9840-408f-aadf-fcdce1f6bb6a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04edd025-73cb-419a-a885-9617f8ab8a68",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed6a18be-910d-4f94-a38d-4adfdcdd2b28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb92e947-9557-408a-b145-e5e05cb2abf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "59f851e2-0258-4183-99bc-57996ebeafc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d63438-05cf-4d05-a110-dfe9923d9541",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c416ed-e2de-409b-bc90-1aeee17482b3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "000ec20f-fc92-4140-9692-f15e554ba124"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef957fe-810d-4094-9a0a-6a694ee471c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c0657e4-1757-45d2-ae3a-34a023a7b95f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "69d60d08-75ad-4b0f-9ec6-09d39675938f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "697b4f5f-b816-4ddc-bba8-3244f703fa4b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "65f3cd00-8947-401d-8043-4de02c30fb3f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23b02780-e4cc-44a8-850f-aec0a6a63712"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9dd21300-8743-44b3-a2e8-0e6c3de9d8ea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9b4bfa67-c961-4b90-a19c-c87d7036e76d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "90eea305-0b3d-40ef-a76b-f1747c167f6b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c1c962c4-8a8d-4462-8f84-385ab48c4772"
            }
          }
        ]
      },
      {
        "id": "f97c5936-e705-478c-9f2f-2c909c4d9e3f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "cadd4cf7-de75-4fe8-9978-cba03845a9a9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "03b5d745-2324-4a1a-a527-e64c117f68d8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "64c562c8-af9e-4038-8fdf-692da1ce7b6d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55932653-868c-480f-8369-76bf6b2bac41",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1cc0b03d-a9fb-449a-bfff-9339ba94bdd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e3a85e-9be9-49ac-9d72-a1d5a371ff02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "69f9ad03-a3bd-46c9-a006-589ac5c5eb4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba167539-a771-4ad4-bfcb-1471238ec8d8",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c115404b-b6e9-45fc-beec-a0e39fbfe843",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d513f065-8c78-4e08-8db8-eb28574af137"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5597db-f86e-47bc-9d95-aecdc092de83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "835bc38f-9d53-4afe-a883-fd2992282f0b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cdda66b1-4530-471b-8fac-b18599538b65",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21304327-9c9a-40f9-bd7a-bcf0a2265104"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d91745d8-d1fd-4174-b7d9-814ef34c0e23",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eac22fe9-a59a-423d-a60c-991af2f38ae7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "11587c9a-38f9-48af-979c-a7fc478ca814",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ecd556bd-c9cc-4921-ad5a-30fe6b6039e8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a1e6d651-ba6c-4a62-8a88-0050e7296a7d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dda138e6-bf86-4ed7-bbb9-f6519e876399"
            }
          }
        ]
      },
      {
        "id": "bd4da274-dafc-4640-a76c-07c9e7984dcf",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "91e212e9-dd31-4dec-b1a8-50838e1023ae",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "beb6c105-d2fa-4c48-b555-55cbb281f794",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "25a0117a-5e0c-4cd1-919b-9215d65bf20b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "28458e6c-be74-44c1-aac7-9de8eb39af09",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7f18a244-8e26-4f8e-90a1-d71b85a002be",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 40.05384615384615,
      "responseMin": 15,
      "responseMax": 326,
      "responseSd": 34.96026569571223,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1682555955101,
      "completed": 1682555976322
    },
    "executions": [
      {
        "id": "a09358b2-b2f1-4fbe-99d2-6694f6493acd",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ac1e99bd-8abb-43dc-a535-7b4999d433a3",
          "httpRequestId": "abc6c270-fba4-416a-aeb4-7d967da75b9f"
        },
        "item": {
          "id": "a09358b2-b2f1-4fbe-99d2-6694f6493acd",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a3361e65-29cd-4a0b-8153-8f750c099eb7",
          "status": "OK",
          "code": 200,
          "responseTime": 97,
          "responseSize": 0
        }
      },
      {
        "id": "aca7ea17-eb0f-403d-bfcb-d7d9ae50e361",
        "cursor": {
          "ref": "308fb674-4db3-461e-8129-dae77baeda46",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "21f3a4b3-23cc-4f49-92b6-5d27a5596227"
        },
        "item": {
          "id": "aca7ea17-eb0f-403d-bfcb-d7d9ae50e361",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "4b8f54c9-de89-47f0-a166-864ec3c0d304",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "b8ebe468-9fbc-4c9a-ab02-e7105ba821ab",
        "cursor": {
          "ref": "20b369e7-a512-4bd9-9d15-5dcf505577ab",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "1652da16-e8c7-4587-a5ac-4d532b96ff1b"
        },
        "item": {
          "id": "b8ebe468-9fbc-4c9a-ab02-e7105ba821ab",
          "name": "did_json"
        },
        "response": {
          "id": "d1a20f48-b73b-49e9-8a72-29158c69c789",
          "status": "OK",
          "code": 200,
          "responseTime": 133,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b61c8585-e18c-4e4d-95d7-de2718985a6e",
        "cursor": {
          "ref": "a55cf388-ebde-4965-9076-8dcf9ddb3f15",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "134dc92d-1f65-4449-bdf6-07fd77a06ee1"
        },
        "item": {
          "id": "b61c8585-e18c-4e4d-95d7-de2718985a6e",
          "name": "did:invalid"
        },
        "response": {
          "id": "32a82d94-2922-41e8-87f1-016e29fda16a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b61c8585-e18c-4e4d-95d7-de2718985a6e",
        "cursor": {
          "ref": "a55cf388-ebde-4965-9076-8dcf9ddb3f15",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "134dc92d-1f65-4449-bdf6-07fd77a06ee1"
        },
        "item": {
          "id": "b61c8585-e18c-4e4d-95d7-de2718985a6e",
          "name": "did:invalid"
        },
        "response": {
          "id": "32a82d94-2922-41e8-87f1-016e29fda16a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba26176-046b-4bd7-b4f1-7dafebfa9547",
        "cursor": {
          "ref": "9b1b267f-6396-4b10-9238-c6656cda9bbe",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "be220215-ab82-459d-af2a-bb7367c7d6a5"
        },
        "item": {
          "id": "9ba26176-046b-4bd7-b4f1-7dafebfa9547",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8a66010d-91fd-4ede-8e30-8d149a5c3686",
          "status": "Not Found",
          "code": 404,
          "responseTime": 75,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac35c15-69ce-4e99-a5e2-2bed5e232ed0",
        "cursor": {
          "ref": "11e8e0bc-bd45-40bc-a149-c3fbaece47f4",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3b026a2e-f63f-4d9e-b9ea-4dd1fb18b90b"
        },
        "item": {
          "id": "dac35c15-69ce-4e99-a5e2-2bed5e232ed0",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "43ce7958-f868-4ae8-9f54-41b67d658d77",
          "status": "Not Found",
          "code": 404,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96cddec6-bb72-4e46-9ded-70cdff8323cc",
        "cursor": {
          "ref": "573405c0-5935-4f27-a31c-4cc096a0ef02",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7f141a81-2132-4645-800c-2a489461075a"
        },
        "item": {
          "id": "96cddec6-bb72-4e46-9ded-70cdff8323cc",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7b6f059d-efff-4fb9-a333-6e03dc63c601",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850ea801-0e57-4c78-bc3f-0e07aec98621",
        "cursor": {
          "ref": "e743a5c5-1d08-4b3f-8ce7-4eabc10172d2",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "71198e2c-3eef-4b39-ac1d-a925dfa58eb1"
        },
        "item": {
          "id": "850ea801-0e57-4c78-bc3f-0e07aec98621",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "4e30ceef-da0e-4669-9958-8f662af0f36f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850ea801-0e57-4c78-bc3f-0e07aec98621",
        "cursor": {
          "ref": "e743a5c5-1d08-4b3f-8ce7-4eabc10172d2",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "71198e2c-3eef-4b39-ac1d-a925dfa58eb1"
        },
        "item": {
          "id": "850ea801-0e57-4c78-bc3f-0e07aec98621",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "4e30ceef-da0e-4669-9958-8f662af0f36f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79611b9e-fc25-46a5-aa78-d47709e9f91c",
        "cursor": {
          "ref": "33fd02ab-dede-4b37-bc01-4be2375ef63b",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "e2be0b7e-5a6f-46f6-8b5c-679b0dcaae49"
        },
        "item": {
          "id": "79611b9e-fc25-46a5-aa78-d47709e9f91c",
          "name": "identifiers"
        },
        "response": {
          "id": "990b4acb-adbe-4ea7-aa7b-247d87eb9ec3",
          "status": "OK",
          "code": 200,
          "responseTime": 76,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed94191-7bf1-4aab-b9f5-d0bbab5618bf",
        "cursor": {
          "ref": "3004aa4e-9551-49dc-a292-df46c4e09e4d",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d9ef9702-5f67-4d4a-a7d4-8ebd10168bdc"
        },
        "item": {
          "id": "4ed94191-7bf1-4aab-b9f5-d0bbab5618bf",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6306b64a-c267-48c2-ad96-4d368256a900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed94191-7bf1-4aab-b9f5-d0bbab5618bf",
        "cursor": {
          "ref": "3004aa4e-9551-49dc-a292-df46c4e09e4d",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d9ef9702-5f67-4d4a-a7d4-8ebd10168bdc"
        },
        "item": {
          "id": "4ed94191-7bf1-4aab-b9f5-d0bbab5618bf",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6306b64a-c267-48c2-ad96-4d368256a900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9518b2cb-2710-4ed7-ac2f-45f43c40a012",
        "cursor": {
          "ref": "adc0f535-beef-4f17-81d3-cef4aaaaa991",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "bc3cce6c-ee30-4857-9a8e-dadb1bad961f"
        },
        "item": {
          "id": "9518b2cb-2710-4ed7-ac2f-45f43c40a012",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a7fc8dfa-823a-4926-8a7e-3c9c232561f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "808c881e-93da-411a-914b-ccd45dfedeb6",
        "cursor": {
          "ref": "23b872b1-2e14-4bcd-aaf2-2430044a50fc",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c1939dd6-0e46-4728-8ea3-4d6066699c1b"
        },
        "item": {
          "id": "808c881e-93da-411a-914b-ccd45dfedeb6",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "be556ec8-952d-463d-b483-048807c955ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21bdac8f-8dd2-4301-9629-17d1e24c7647",
        "cursor": {
          "ref": "fb67f739-440d-4e35-816f-2243f56fd86b",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e260d2c2-0fac-40d5-ba93-634e927bb9f7"
        },
        "item": {
          "id": "21bdac8f-8dd2-4301-9629-17d1e24c7647",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "bb205220-061e-4eef-95fe-0a65b3c20911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf8685a-eb0f-4f3c-8311-20d08d465693",
        "cursor": {
          "ref": "a59274a3-0a43-4ba4-829d-3d0563fe6432",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3058feea-3326-443e-be60-ad04f77b5a38"
        },
        "item": {
          "id": "6bf8685a-eb0f-4f3c-8311-20d08d465693",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "07fb4c70-42a9-475d-9a21-67ac6afc1809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a3a9b19-c409-4071-a049-5130fb1efda7",
        "cursor": {
          "ref": "42b6734c-d469-4b2c-9ed3-8b330b6eafd0",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9f154d24-4268-4beb-8707-ff938dc14c11"
        },
        "item": {
          "id": "9a3a9b19-c409-4071-a049-5130fb1efda7",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "19e9d404-152e-43ca-9e77-1904ccff40db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b325b7-b633-4026-862b-06251d7ef7b8",
        "cursor": {
          "ref": "bdf7f5b6-b00c-4696-bf08-7a91ffa0d502",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "db0bd064-3d2d-4685-b3b3-81ad5c47b1fe"
        },
        "item": {
          "id": "62b325b7-b633-4026-862b-06251d7ef7b8",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "464c777c-24e0-4fb3-a587-1260e2d14f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f496d8-d396-4c5d-b3e0-09cd43d977ad",
        "cursor": {
          "ref": "b6c5cc89-b0a4-45b8-b5ca-988444c558a6",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "eec1cc2a-8343-4d9d-b054-551dd3f8056f"
        },
        "item": {
          "id": "03f496d8-d396-4c5d-b3e0-09cd43d977ad",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "69bd22d1-9177-4d63-8176-b823679b2729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d534cb9-bdf9-465f-8a49-9dac1b859bc7",
        "cursor": {
          "ref": "a022e8a7-b7da-414b-9e27-ce3acbba75af",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a22a0dde-5df0-4c09-8143-38c7b0ae594d"
        },
        "item": {
          "id": "9d534cb9-bdf9-465f-8a49-9dac1b859bc7",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "1304e09f-10fa-42fa-89f7-395583335e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d683d7e-bc4f-4f73-ab21-4ec85c2a3d0a",
        "cursor": {
          "ref": "1e90f794-a0f1-41e7-b394-a226f6e93f55",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "cc2b8236-31c0-4259-b934-3b548972f3d1"
        },
        "item": {
          "id": "7d683d7e-bc4f-4f73-ab21-4ec85c2a3d0a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a259de0f-4160-4f6e-b21a-a850e9378830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0729c5c1-54ef-4c76-9845-b68c72ea3acf",
        "cursor": {
          "ref": "e9a26386-7192-4a80-a0b2-1a93de19fbe1",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5449c37f-1c14-4d4c-948d-3c39946b0d50"
        },
        "item": {
          "id": "0729c5c1-54ef-4c76-9845-b68c72ea3acf",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "2f7b6192-4a98-4e36-8955-95784312aa76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d079db8-f4d6-4c2f-9d4a-c0eb2ae5a7f1",
        "cursor": {
          "ref": "c104d24f-ee88-4f7b-b12d-56ca9f9c4df8",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a8bd07a3-53a7-4183-9283-50149cc9ff24"
        },
        "item": {
          "id": "5d079db8-f4d6-4c2f-9d4a-c0eb2ae5a7f1",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "633de1fc-54bd-447f-b1e4-2fd3d51b10a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e136faca-54e4-42de-b072-33db48fa3693",
        "cursor": {
          "ref": "9db255ef-3d70-4c59-9374-01fc9886f52c",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a9163c73-83cf-4390-b684-ccc452e32ae0"
        },
        "item": {
          "id": "e136faca-54e4-42de-b072-33db48fa3693",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "75df9b55-937c-4ba1-8ae2-51f7e1a0fd3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f9d1b0e-53d2-4099-b419-4d0e5719a880",
        "cursor": {
          "ref": "8d5a5819-df02-4b12-aa60-e16094fbef28",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f8b18cf5-f3f9-4e7f-9c57-a12f3c0db190"
        },
        "item": {
          "id": "8f9d1b0e-53d2-4099-b419-4d0e5719a880",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "55000f4b-ec5e-4729-9ffe-00a2f37ec7d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a6833d7-3f3a-42d3-b6ee-08e5f3784ea4",
        "cursor": {
          "ref": "115726f3-631b-45f2-b1ae-e2bb5bcfd3b7",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "72082f56-3a9d-448a-97f3-2fcc1b9b1011"
        },
        "item": {
          "id": "0a6833d7-3f3a-42d3-b6ee-08e5f3784ea4",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4c6efa16-e610-495e-9ea0-c3c379db0426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a72915b-a43f-4d79-8cb2-510a10726b3b",
        "cursor": {
          "ref": "ecec5208-231d-4862-b23d-8e33cb3526cd",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "fd30baa1-d9fd-4e01-9ce3-f6bd07fab3b7"
        },
        "item": {
          "id": "2a72915b-a43f-4d79-8cb2-510a10726b3b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "717fd210-0b8f-44f1-9223-99f6cc65f075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b850f56a-5642-4916-91d4-eed96f5044f5",
        "cursor": {
          "ref": "7eda001d-8b9e-440a-93a0-fffc1b849f76",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "fcd064fe-4518-4c22-a5ff-4fdf727b8b31"
        },
        "item": {
          "id": "b850f56a-5642-4916-91d4-eed96f5044f5",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "5a236deb-deb5-4792-bf52-07d825213216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca36a70-0fff-497d-b3ff-54563ab8b07e",
        "cursor": {
          "ref": "0caa7d17-77df-48ba-8a73-7382df557fbe",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ecbbbbb4-141f-4a86-b452-4eb80e3349b5"
        },
        "item": {
          "id": "5ca36a70-0fff-497d-b3ff-54563ab8b07e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "7368d3e0-5740-4e08-9c47-3701c5e257ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b8cc9d-86bb-4c4f-901e-116902a3bb16",
        "cursor": {
          "ref": "c589a02a-4d2c-40d2-801c-93cbabe0c827",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9426e94a-f557-4fee-89b5-09fa6b34be6c"
        },
        "item": {
          "id": "d1b8cc9d-86bb-4c4f-901e-116902a3bb16",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8dbe55f5-ef75-4075-a6ae-65d2e7902d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6c8e3a-20d1-4808-94af-d678b469d848",
        "cursor": {
          "ref": "a66407f2-1275-42a7-a099-cbe47492f100",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "103a8185-2ba3-4377-8035-faba16b6ea32"
        },
        "item": {
          "id": "0b6c8e3a-20d1-4808-94af-d678b469d848",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ce895907-a0ec-4a1f-9f0a-034a10cb925e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "993f888a-7c48-4c82-b1b8-a4e74b0c92fc",
        "cursor": {
          "ref": "f5a639ab-cf7d-4cf8-9703-03bcffd9a95e",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "7702311b-6b93-4b4b-a1ed-93cda9b370e2"
        },
        "item": {
          "id": "993f888a-7c48-4c82-b1b8-a4e74b0c92fc",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "9359b3ad-18b2-4d06-b9a4-fcf043724669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677fcddf-236a-4f26-9523-2dd95ea9ac3b",
        "cursor": {
          "ref": "22096268-4796-4af4-9fdd-76ee7de295ab",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "765d3f47-fcaa-4188-987a-26312f61f14a"
        },
        "item": {
          "id": "677fcddf-236a-4f26-9523-2dd95ea9ac3b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "2081da79-fa1a-4d0c-9fd5-1c76c11462d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f28659-369c-4f17-af28-b58b2af9eb1f",
        "cursor": {
          "ref": "a0873caa-28a7-4461-9a2a-c5bdc5a5b5a2",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "fc08c734-c1ea-44bb-8a87-c093300b1846"
        },
        "item": {
          "id": "b3f28659-369c-4f17-af28-b58b2af9eb1f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "fdf45d60-2c84-4eb3-92ae-5a83288d7bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f8171e-5a5f-44bd-9050-9303863bcf96",
        "cursor": {
          "ref": "bdfab1f3-f3d0-46c6-87a8-feae23a8b99e",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e501ebd8-a8a2-486a-b7c9-71d611b42b9b"
        },
        "item": {
          "id": "40f8171e-5a5f-44bd-9050-9303863bcf96",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "12bf0d74-600a-4287-87f4-1f7cdb8e59a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82653650-b4f3-41bb-bac3-ac3c996a6fad",
        "cursor": {
          "ref": "5f928360-2341-4002-8373-064822c699ac",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f8bd9311-af97-4e52-a3c2-fd3564563ff3"
        },
        "item": {
          "id": "82653650-b4f3-41bb-bac3-ac3c996a6fad",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "538ba731-2971-47cb-a9f0-cf2421df89eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf2e93f-200f-4a2e-a7c3-9cef08506ab8",
        "cursor": {
          "ref": "d36da819-4d8d-42d7-9381-6fe6919182b8",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "3400f9e8-8bc9-49bf-9ff0-37e69a1eea7d"
        },
        "item": {
          "id": "4bf2e93f-200f-4a2e-a7c3-9cef08506ab8",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8425fa69-cb2c-496e-b4bc-920ff30f9824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a691e3e8-8477-4780-8b88-b443b3e40d81",
        "cursor": {
          "ref": "3b90ada0-573c-4c63-b8a7-c7dcafb7dc0c",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c3860da2-3de3-4998-bf55-83c37d71221e"
        },
        "item": {
          "id": "a691e3e8-8477-4780-8b88-b443b3e40d81",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "24884ad9-9f61-498e-8aa4-e6bd2f5f38f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b37d99-53c3-4b0e-8c14-1b79e356ff37",
        "cursor": {
          "ref": "c0cb4d61-6b74-437e-84b1-f9760646a9fe",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7ff3971e-5a21-4882-b00c-96f7bce60e1f"
        },
        "item": {
          "id": "83b37d99-53c3-4b0e-8c14-1b79e356ff37",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "2c9cb76c-49db-417b-b917-76ebfe8704fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881beb7a-cc57-478b-82ec-b94ef1daa31b",
        "cursor": {
          "ref": "b7dc7743-a061-435b-b85d-3bac76043f86",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "2e4e23ee-eb2b-4664-9e73-2da9a3593c50"
        },
        "item": {
          "id": "881beb7a-cc57-478b-82ec-b94ef1daa31b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "916db524-7652-4b9b-8e76-f5cef4a8c35b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7960f704-a20b-4570-99c0-c77e55c41864",
        "cursor": {
          "ref": "e428ac45-b5ef-4949-a94e-f017b6b69f64",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "439ac6ee-f40a-4bd5-8b6c-f87af9f37812"
        },
        "item": {
          "id": "7960f704-a20b-4570-99c0-c77e55c41864",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9199608e-011c-40eb-a3a1-c8ef3e94f9e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a20bab-be94-4080-af3f-1e42828a05ac",
        "cursor": {
          "ref": "e75ddeca-9911-4ad5-80a2-79ec163539b6",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "727a3bd2-7256-486b-8de0-68c29cb79f29"
        },
        "item": {
          "id": "c2a20bab-be94-4080-af3f-1e42828a05ac",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "539d2127-52f5-421f-ae7d-6ad20803c01a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47cc75f5-5e58-47a3-b912-38011db47b44",
        "cursor": {
          "ref": "dd9fd86d-6d79-46dc-8350-da7f2950a574",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "fd2e08b9-7d8b-4b63-9a12-671e9fc053e3"
        },
        "item": {
          "id": "47cc75f5-5e58-47a3-b912-38011db47b44",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "adfc784f-0cd1-4520-94b0-b5f3a76dfbf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f27a7219-4793-44e1-a96b-e2ee094c3e67",
        "cursor": {
          "ref": "f2d92088-e3fe-49db-a375-b15f4c1431b2",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "44ee18e7-6bfb-492f-a31b-b9992310ea8f"
        },
        "item": {
          "id": "f27a7219-4793-44e1-a96b-e2ee094c3e67",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d3067f8d-4bcf-4b4b-b0d2-f968bbd4fae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e439577-72e0-4a4e-b28c-ecd5aa4b816e",
        "cursor": {
          "ref": "157d84d2-81c2-49da-bb76-9e9a6e33685e",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "6a5cec66-fded-4b77-b6f6-bbe03ed9b9e7"
        },
        "item": {
          "id": "5e439577-72e0-4a4e-b28c-ecd5aa4b816e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "4be15b95-b5a1-4b04-aa7b-3db448303bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0be986-3ae5-462e-be38-2dc97c5c25ea",
        "cursor": {
          "ref": "1af2b63b-bca6-4ad4-b924-51ff4a90769d",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f321b87f-5245-480c-89f8-03e96ad5b5bd"
        },
        "item": {
          "id": "2a0be986-3ae5-462e-be38-2dc97c5c25ea",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "55b0ee98-3a06-4093-8abc-6d9d745d9507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab2c5e0-33ba-4ecf-8fc1-c57f9fc21549",
        "cursor": {
          "ref": "edcf627e-7025-4f8a-9472-13b67bfbf4f2",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "dee72295-49cf-40d7-b965-3e2f6f092c57"
        },
        "item": {
          "id": "5ab2c5e0-33ba-4ecf-8fc1-c57f9fc21549",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "18cb0e87-c123-4680-ba57-352ec1e09a67",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 41,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a056128-d19e-42d0-afc4-8d1f6db96cc0",
        "cursor": {
          "ref": "54fc9590-abae-4259-a935-47e6273b7990",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "db729524-f665-47f2-b646-cf61ec382208"
        },
        "item": {
          "id": "1a056128-d19e-42d0-afc4-8d1f6db96cc0",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "185720bd-b50b-4626-bc04-53d1ea69fc41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43490c9e-f6fa-4a1f-b85e-18996fb09740",
        "cursor": {
          "ref": "fbfe5923-8d0b-4d21-b18c-0e8042fd2120",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "bfa35b54-4554-435e-b694-fdd8497b8728"
        },
        "item": {
          "id": "43490c9e-f6fa-4a1f-b85e-18996fb09740",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "27627586-a050-4abf-8d7f-5a9d9e7cbf64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c566efe9-521f-4c43-86df-8a443c0c4e62",
        "cursor": {
          "ref": "787076c1-fe32-4f09-b59d-2f65dae2d778",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b7f6dcca-2cd4-492d-90b4-5ff2923387c0"
        },
        "item": {
          "id": "c566efe9-521f-4c43-86df-8a443c0c4e62",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "8fbd6fea-3a00-46c0-8511-c330f25c20dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dcade3c-8d22-4d1f-9b7c-ba6ea88681e2",
        "cursor": {
          "ref": "27db38de-00e7-44e1-b01a-8f327fed4fa4",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d4b74d7a-73b7-4a08-b572-419b1cb2db17"
        },
        "item": {
          "id": "3dcade3c-8d22-4d1f-9b7c-ba6ea88681e2",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "cd7b7b2c-ea28-47b5-9158-162320426a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02074339-7aeb-4cac-80c6-f1fe75d044cc",
        "cursor": {
          "ref": "5d76b70d-2acd-48b7-b004-1c46018e59e6",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "5e285669-a0c9-48d9-9cdd-763519ab6f03"
        },
        "item": {
          "id": "02074339-7aeb-4cac-80c6-f1fe75d044cc",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "c0028069-3f5b-4d98-b087-50a18e955e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8806da3-51de-4304-9ea8-1f405f3859c6",
        "cursor": {
          "ref": "c31dffa5-0969-48db-bf91-dba0b5712eaf",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "117fc099-9811-48ae-accd-63f63fd9684c"
        },
        "item": {
          "id": "a8806da3-51de-4304-9ea8-1f405f3859c6",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "27c56353-df1f-40ae-b4f4-ac78b847e7d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc04dca-d0d9-44de-b169-8725ea7b2217",
        "cursor": {
          "ref": "26e3f86c-18b4-4bc4-a6b6-ad0a88a46a83",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "8608ac52-3e95-48f7-b8a0-34b13c4ae840"
        },
        "item": {
          "id": "4cc04dca-d0d9-44de-b169-8725ea7b2217",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "76d5540f-28eb-4f25-b31d-614aadb8ef2b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 41,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096486f0-356f-4e56-9386-8392fbff7218",
        "cursor": {
          "ref": "ed92b055-ee92-4001-a3ab-2bcb4e1430d8",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "8420ac86-4725-465b-9f51-e109b7cc6ada"
        },
        "item": {
          "id": "096486f0-356f-4e56-9386-8392fbff7218",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2e93e9f4-44f4-4e74-85ea-6706d4d142bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ae2f9f-f6da-45d3-ad2e-1524649dd367",
        "cursor": {
          "ref": "8dcb767f-585d-42be-949e-4558ebe4f951",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "5771586c-0141-4368-9ae5-cfc1d034edfb"
        },
        "item": {
          "id": "f3ae2f9f-f6da-45d3-ad2e-1524649dd367",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ad49f997-b855-4a1f-b24f-99f775cd6bf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5748fcd2-eb45-49b4-8280-902fa99293a4",
        "cursor": {
          "ref": "71c8b359-e51d-4074-bf27-ebafb3d05d30",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "88a80b12-cc30-401c-a94e-2639b73217f2"
        },
        "item": {
          "id": "5748fcd2-eb45-49b4-8280-902fa99293a4",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "cb521d0e-e972-408a-ad86-42f538b48507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea1377c-faeb-4a37-8fc1-2c1820fb591d",
        "cursor": {
          "ref": "c6bb7bdc-b0fc-4174-96cf-a7b2a38ebe6a",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e7979da5-e47e-4359-a645-39ea4c81cb06"
        },
        "item": {
          "id": "cea1377c-faeb-4a37-8fc1-2c1820fb591d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "6be3b841-68ae-497b-8d5a-82b3e6008545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ebede59-8284-4a71-a29d-ffa1e8fcb590",
        "cursor": {
          "ref": "13790f3b-9f52-4a90-9188-5d87b722af11",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d9d1e9b4-3dba-469f-9f79-37c918478a3f"
        },
        "item": {
          "id": "5ebede59-8284-4a71-a29d-ffa1e8fcb590",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "5ea39ffc-5a3d-483f-a4b7-3c57e83f4fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f81e092-33ba-4e95-9284-f2164f890565",
        "cursor": {
          "ref": "c16578f4-62ed-43bb-a36b-fb0a2a63aae1",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ba13029b-59c2-4b75-9ca9-59814b3d9aff"
        },
        "item": {
          "id": "3f81e092-33ba-4e95-9284-f2164f890565",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "95a61fdf-56dc-4e30-9168-a6dc05177e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89aebf4d-e48e-469d-b93f-ce47c555053e",
        "cursor": {
          "ref": "48baf0ae-78dd-43d9-ab85-4a9bfd852543",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "1881b39d-1429-4df6-8af6-1c946f7bd319"
        },
        "item": {
          "id": "89aebf4d-e48e-469d-b93f-ce47c555053e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "5a4847fc-375f-4927-9ed1-63006df2a614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac943e8a-5213-4af6-8881-d84fbadb2443",
        "cursor": {
          "ref": "68a18417-ec86-44ee-9967-b652a7eab6d6",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "bb24130a-dc8f-44eb-b032-1b9f33dd14e7"
        },
        "item": {
          "id": "ac943e8a-5213-4af6-8881-d84fbadb2443",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f16d1e7a-fe12-4d08-85a7-9dd6da79b543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55aaaf2a-7296-440a-88d5-f7993cfde418",
        "cursor": {
          "ref": "7a2f83ef-1fd7-4ea1-b8be-e81e5cd95a7e",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f2a9ffee-f18d-43ad-bd6c-5e9fba1bfe6e"
        },
        "item": {
          "id": "55aaaf2a-7296-440a-88d5-f7993cfde418",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "27ec9988-e9cf-43c9-874d-f42dcc7fda6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d4a9468-5744-4ba0-b487-86fa1ea8a33a",
        "cursor": {
          "ref": "085f4f71-f0c2-4fe1-9171-55d808d3f628",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d094e082-e411-44fc-b56b-52366ad9590e"
        },
        "item": {
          "id": "0d4a9468-5744-4ba0-b487-86fa1ea8a33a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c7d32879-c2fd-402c-8b64-4f2d41aeab85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7092a9-4df5-4443-9e9c-2a24d7daf59a",
        "cursor": {
          "ref": "971195b5-44c8-4ce1-8749-15ccac47f4bf",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e1b275c1-8b07-41f0-868e-b5d263b240b2"
        },
        "item": {
          "id": "0f7092a9-4df5-4443-9e9c-2a24d7daf59a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "500a3001-4503-47f3-a437-521d68010ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1361307-f0e0-4881-ab93-d5534a7333d6",
        "cursor": {
          "ref": "954d486d-a043-42a8-84de-e094eae03a1a",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "bd981041-ef69-4bcf-a5a3-3a7eb0c01a60"
        },
        "item": {
          "id": "c1361307-f0e0-4881-ab93-d5534a7333d6",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7cf4f983-693d-4b11-8bd5-269cdc9f3d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630b0d93-4aea-42ec-b71e-a74ee5bb72a7",
        "cursor": {
          "ref": "2a29ee2a-3855-426e-876a-7232bcf8aa9c",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9314021e-9351-4fda-8c6a-405a9c21c2ec"
        },
        "item": {
          "id": "630b0d93-4aea-42ec-b71e-a74ee5bb72a7",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "2aced7e9-a38e-4c77-a5b3-5341c3f93382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89b3b2d-76ad-495e-a3df-5df612bf538e",
        "cursor": {
          "ref": "6df5aae6-9e84-426c-be19-2b4ba5ceb056",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6c42bbf3-0ccf-49d6-a5ed-e0d1bd9385d2"
        },
        "item": {
          "id": "c89b3b2d-76ad-495e-a3df-5df612bf538e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d1b29d3a-2fc6-4a60-bc2b-63251a154f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660dc2fe-adae-4a29-b273-8fdcac16c4d3",
        "cursor": {
          "ref": "27c191ea-cfe1-4ff8-a6f3-b555cb8637a2",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "1316153f-0184-47da-a0da-1f367295184e"
        },
        "item": {
          "id": "660dc2fe-adae-4a29-b273-8fdcac16c4d3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "cd7dd787-9e51-43ca-af8f-742260d7c431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd723d56-a918-40f5-afd3-d9135088b4fd",
        "cursor": {
          "ref": "b7817b60-7411-4ef2-b01e-cfd1e50d3e8d",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ca0208ff-e6c1-4a60-be0e-04163e6bb36a"
        },
        "item": {
          "id": "bd723d56-a918-40f5-afd3-d9135088b4fd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "13aff820-9151-4ea1-9fd6-e075c92d0dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20aaeb39-ffa1-4d1c-85f3-5bc581b5816f",
        "cursor": {
          "ref": "65fa15f3-43de-43b0-a4dc-438b9c0c6dc0",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c56c2545-8e9f-474f-8cf6-3a8485b9d30e"
        },
        "item": {
          "id": "20aaeb39-ffa1-4d1c-85f3-5bc581b5816f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4c3e52b7-a367-49bd-aedc-d35b9a31edb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99bfe015-166b-4ee1-96ae-c8aa09c2e6a8",
        "cursor": {
          "ref": "ebff8a03-e0a5-48c4-9cad-c1d30cfd7e32",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "9c78f2dd-c329-495e-b763-09a626ed5628"
        },
        "item": {
          "id": "99bfe015-166b-4ee1-96ae-c8aa09c2e6a8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f6dd3b45-4600-4a5b-8a9d-7cda7ededda8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8288ac1a-6b0f-474b-8e07-a838a8892fcb",
        "cursor": {
          "ref": "e69aaca3-1401-4e99-ab12-bc95ca376244",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "02a8e544-c3d8-451a-9e28-82b6a80f557a"
        },
        "item": {
          "id": "8288ac1a-6b0f-474b-8e07-a838a8892fcb",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "885998d3-5fe7-40d1-aadc-d296f67c2de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d0dc601-8c1f-4031-b889-702285006179",
        "cursor": {
          "ref": "b77c1439-5a53-4231-bd13-21586164ffcd",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "3879a285-d5fa-4224-ad5d-99f80b87e1df"
        },
        "item": {
          "id": "1d0dc601-8c1f-4031-b889-702285006179",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "7ffae3b8-a5de-4d91-90ae-8238f95b48fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35eb9662-fd8b-4945-b690-1e17471af91d",
        "cursor": {
          "ref": "d9bba3b6-799c-4d9d-a4f5-a4d0f5e376c6",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7306326f-0336-4fba-a0b8-27db8725fd38"
        },
        "item": {
          "id": "35eb9662-fd8b-4945-b690-1e17471af91d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f99a9959-5c5c-427f-a480-75156e53ad0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f70e476e-6099-439a-ac35-c63febf7b394",
        "cursor": {
          "ref": "bd0a9175-a1b0-43c8-ba0d-be6fd9dc5c57",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c0d0d731-df6b-42bd-a8d7-9f29ebb37687"
        },
        "item": {
          "id": "f70e476e-6099-439a-ac35-c63febf7b394",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "9759ee73-873e-4d98-9a84-7fb5a2666342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf36672-2b54-4455-bc19-062b12dbc1f0",
        "cursor": {
          "ref": "77a65bb4-be3e-4d6d-8745-a4e8b3ed8e06",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3912ec85-b2df-41ed-9b5f-3bcb49f25f2b"
        },
        "item": {
          "id": "9bf36672-2b54-4455-bc19-062b12dbc1f0",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "b9d826f0-b16c-41fc-984a-3d3efb68bf03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "587c7c0b-1be3-4357-bb45-ece10345de74",
        "cursor": {
          "ref": "84a07380-ce71-461e-be5a-f2032bb5416e",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "eac629d0-b703-4644-9a1e-4582874abde5"
        },
        "item": {
          "id": "587c7c0b-1be3-4357-bb45-ece10345de74",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "40f157b4-ecef-4b4d-b38b-556d497f3971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f03d1c1-e0ee-4764-9a81-e1b1a9f3b2fa",
        "cursor": {
          "ref": "a882b6b9-24d4-427f-8836-94dfc2fa8780",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "80ac1578-8b14-469e-aca7-cb04e187936b"
        },
        "item": {
          "id": "7f03d1c1-e0ee-4764-9a81-e1b1a9f3b2fa",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f153dbc5-1565-4ce2-854a-c1105b4d2f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec3deecc-6068-40b7-a0f0-b3b93b13768e",
        "cursor": {
          "ref": "20823dd2-bb5c-4784-85aa-7f2c5f968784",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "02224cd7-0577-4523-acef-3cf920fd6243"
        },
        "item": {
          "id": "ec3deecc-6068-40b7-a0f0-b3b93b13768e",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b6047887-bb85-464b-8596-ad12697448e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de05b16c-d8f7-4be7-a5a1-41b0514936c6",
        "cursor": {
          "ref": "007b431b-ba40-4133-b625-cb0aeec602eb",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4f08135d-a112-4266-abd8-9f2337f837e1"
        },
        "item": {
          "id": "de05b16c-d8f7-4be7-a5a1-41b0514936c6",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "cc129a0a-4ccc-4e83-8c2e-162796efc2c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f2e25c-90ce-4596-aeec-f461e314fa33",
        "cursor": {
          "ref": "fb31517e-66ab-4b99-8b77-85dfbc0fd6a5",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "cd98ca83-61fe-44ba-aba4-0b833312efaa"
        },
        "item": {
          "id": "92f2e25c-90ce-4596-aeec-f461e314fa33",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "58c42d54-be3c-4079-a4bb-30ec5a880e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0ddece-1d3c-487c-ba3c-41677806008e",
        "cursor": {
          "ref": "05968d49-540a-42a1-9d5f-9e48278c02bf",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "69507c23-7ab5-4ab9-abd2-ec295b430f5d"
        },
        "item": {
          "id": "6c0ddece-1d3c-487c-ba3c-41677806008e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e7a58461-2585-44b4-a9a3-3539c9d46718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741be8c4-7c30-414c-874a-2806229bced3",
        "cursor": {
          "ref": "f155a3a5-d5fc-487f-ace8-8b60477ae509",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6891d353-61f2-4edd-892e-0830363a4d80"
        },
        "item": {
          "id": "741be8c4-7c30-414c-874a-2806229bced3",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "dce9a426-3140-4d88-a8af-7a01c50bdb28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95fc70cd-3da2-4953-8d13-7d4c43ef8d5d",
        "cursor": {
          "ref": "1806c531-3a03-4c13-bfe1-370865f8e4de",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0ac818ea-b565-4174-bd67-89a0f185a895"
        },
        "item": {
          "id": "95fc70cd-3da2-4953-8d13-7d4c43ef8d5d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "783d3af7-10b9-4b31-b2a8-372684af0283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fceb6cf-9496-4666-b0e1-5fdfdce601f4",
        "cursor": {
          "ref": "794e0635-4bc4-4ff2-a280-9718f0158e49",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "16e84cf2-c60b-4a1e-80f6-15c4c5781243"
        },
        "item": {
          "id": "3fceb6cf-9496-4666-b0e1-5fdfdce601f4",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "fe811650-786e-4f2c-9f38-32b1c164ee8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c930f3b-c477-4f3b-a647-9e2f0ced9f61",
        "cursor": {
          "ref": "55d1b12b-6d1e-4290-a108-f7f03e08ce77",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "74024246-bd7a-4fed-b5ab-8abaf42221ff"
        },
        "item": {
          "id": "8c930f3b-c477-4f3b-a647-9e2f0ced9f61",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5da6506e-7b4f-4456-8569-87ebdba72bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b7901a-eca5-4f92-9edd-58dec7990b91",
        "cursor": {
          "ref": "ad3436cc-8dfb-4973-ad1a-79d108532e10",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "09ce43af-33c4-48ec-ba12-f412072417bd"
        },
        "item": {
          "id": "16b7901a-eca5-4f92-9edd-58dec7990b91",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "da4a4166-f764-4d42-8061-304689944faa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58a73ab1-d504-4e3d-93d9-3c1f0f1f4f27",
        "cursor": {
          "ref": "33c19879-8ec8-4eec-9e33-2d1e220dbd68",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3d10b453-9ae3-45d0-aa92-b1f1d3ce9544"
        },
        "item": {
          "id": "58a73ab1-d504-4e3d-93d9-3c1f0f1f4f27",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "007d1c4d-5579-499d-bffc-75d97b2bf48c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1627fc-d8ae-45aa-9851-fa54bc544821",
        "cursor": {
          "ref": "f605817d-0ee4-4a4c-aa47-477412868197",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d7019040-1f66-4e54-86f5-1076e6e43f79"
        },
        "item": {
          "id": "ee1627fc-d8ae-45aa-9851-fa54bc544821",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d9985bca-0131-46e2-a3cf-918ce454c038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64435c4c-3467-42fc-9ecc-8516cff106ca",
        "cursor": {
          "ref": "6c021109-4c7d-48b6-a215-69eaee550c2b",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "8720c117-c917-4fbd-92fa-f07e1da23070"
        },
        "item": {
          "id": "64435c4c-3467-42fc-9ecc-8516cff106ca",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "236b776b-8f6f-463a-a26a-3f3d9a87125d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "024d6920-f2eb-47b8-9bf4-71fe687bb7d1",
        "cursor": {
          "ref": "fdd6eb90-ccb8-453d-97e3-d6e752bb552d",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ef69942d-422d-4563-bda1-309e69422360"
        },
        "item": {
          "id": "024d6920-f2eb-47b8-9bf4-71fe687bb7d1",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d3d0cd03-a631-4568-94af-edbfa89850ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "679511ae-a2b5-4b91-8c29-5495a3af2137",
        "cursor": {
          "ref": "b6bedf68-6464-4358-a57f-0aee3d719a6c",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "82906dba-e55c-45fb-984a-872525f07bbb"
        },
        "item": {
          "id": "679511ae-a2b5-4b91-8c29-5495a3af2137",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "dc0040c0-1ad7-4cb5-8ab6-9406a41621df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0927060-f495-4a3a-a895-723bd398de62",
        "cursor": {
          "ref": "a59d734d-82e0-4219-9294-5064e294cf6f",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "69fcc024-1408-4aaf-9f3f-85f43576c102"
        },
        "item": {
          "id": "b0927060-f495-4a3a-a895-723bd398de62",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b79e8a1a-af4d-469e-baf7-41be02f754d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c98053-345b-42a6-bc11-6c3c4873e859",
        "cursor": {
          "ref": "73616295-4cc1-4b95-91b5-2fbc815977a2",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d5dbb26e-dd93-4f78-938f-015b9af6abfb"
        },
        "item": {
          "id": "90c98053-345b-42a6-bc11-6c3c4873e859",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "9007f2f2-8317-45b8-8d35-2f81d725b59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ebc954a-751e-4c2a-a447-538468cd6463",
        "cursor": {
          "ref": "974f4bb5-eb60-4fa8-a1f4-1a16123e7df4",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ba2c82f9-bc7b-4cb6-8a62-43b9775ff47e"
        },
        "item": {
          "id": "0ebc954a-751e-4c2a-a447-538468cd6463",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7bb26294-1777-4607-ac87-16bad68cff9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8de49b-7110-47a2-8b26-425b96a8c593",
        "cursor": {
          "ref": "fc148d6c-9181-4bee-b1a1-dc8fded7bac1",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b4e5b980-d15c-4550-b37d-17f71c176ddd"
        },
        "item": {
          "id": "5a8de49b-7110-47a2-8b26-425b96a8c593",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d837ffad-5df0-4129-9d2d-a036d4575cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0123adf-732f-479f-9130-a6fbb2002cbb",
        "cursor": {
          "ref": "69705d1d-b076-4e5c-88f0-29eab04a2411",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "156f209e-61ea-486d-a76c-f6b40e0dcedf"
        },
        "item": {
          "id": "a0123adf-732f-479f-9130-a6fbb2002cbb",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b55cd95b-6a9b-4297-b264-752f37d74348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3807a5f2-5fde-4dc7-981c-9b786ae21f14",
        "cursor": {
          "ref": "d8b2fdd8-88da-413c-85c0-643d47f36a2c",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "deaa89c7-8d6b-4083-a005-13ec76da481a"
        },
        "item": {
          "id": "3807a5f2-5fde-4dc7-981c-9b786ae21f14",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0c8e0809-c3bf-43b2-a5b5-2ad93285ff04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b064fe-a8ed-4fb8-a7d6-46a0de786262",
        "cursor": {
          "ref": "2efb4b30-6049-4593-868c-78b9e7d4dbbf",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a1598368-9ed4-42df-b43a-dd253ba46e9f"
        },
        "item": {
          "id": "d1b064fe-a8ed-4fb8-a7d6-46a0de786262",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "dc539801-1c55-4efd-8802-03a6f1358e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db57a5a-80af-4739-96bf-0830e243920f",
        "cursor": {
          "ref": "e64070b0-a080-495a-b14b-96c4d4c142a4",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "5c454372-ae82-4475-8859-8f4a5006a6ff"
        },
        "item": {
          "id": "3db57a5a-80af-4739-96bf-0830e243920f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1fab082e-2c01-4bbb-a19f-0f9bf0464187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e14e9d1-6519-4fa0-8944-259537a4a542",
        "cursor": {
          "ref": "0389f8b5-3413-4708-817e-b51d5ef04527",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7c9df60e-5a1a-434e-9f54-bd3c035748ba"
        },
        "item": {
          "id": "0e14e9d1-6519-4fa0-8944-259537a4a542",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "6ce44b47-7a77-4350-822e-397aff2bf7fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d3d72f-8e2b-4839-90d2-ee5c7a9c639d",
        "cursor": {
          "ref": "7c6d869e-e2b8-4484-8849-14ebcd1da668",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "90e60578-5f35-421b-afed-c51e5ab13a66"
        },
        "item": {
          "id": "80d3d72f-8e2b-4839-90d2-ee5c7a9c639d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d19ff338-e379-4fd5-bdf5-f7f17adcb264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ba63a0-ab6e-449a-bb8a-0396ec7f9ec0",
        "cursor": {
          "ref": "10495973-8852-4e7c-bbe8-11bf540e4150",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "79dc9b1e-39d0-4b56-a482-7bb2cc81f802"
        },
        "item": {
          "id": "68ba63a0-ab6e-449a-bb8a-0396ec7f9ec0",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a1616788-4896-4c30-89c6-5aff44f51246",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fec9612-0e72-4672-96d7-f01c1aa1a240",
        "cursor": {
          "ref": "31e7036a-b241-44ba-a390-9109166bc37f",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f182cbe1-3b64-4d4a-b3a2-980a3fe622e9"
        },
        "item": {
          "id": "7fec9612-0e72-4672-96d7-f01c1aa1a240",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "0122f3d2-7263-41d9-b076-591e4ab9dbba",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 135,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d0e0520-2553-4229-8179-037bb30f75f3",
        "cursor": {
          "ref": "3d3ac989-d067-490b-9a4d-f2064cb3cc3d",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9702ede7-636e-4d74-a9f3-52fa8c7f84f7"
        },
        "item": {
          "id": "2d0e0520-2553-4229-8179-037bb30f75f3",
          "name": "credentials_issue"
        },
        "response": {
          "id": "4fc08d0c-fa3a-497a-a850-f7ad4ce17189",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "086349d2-a2b7-40ed-9c3e-5cd300431b41",
        "cursor": {
          "ref": "00a0743e-19f7-4a79-a154-d78ba27c9bc7",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "071dbb4c-6f13-4ab8-ab2b-ae39821fbf5a"
        },
        "item": {
          "id": "086349d2-a2b7-40ed-9c3e-5cd300431b41",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "7dd14ab3-7fa9-49fd-9394-ad2b657ce57f",
          "status": "Created",
          "code": 201,
          "responseTime": 87,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c803809-9e64-4b61-a618-1132190aa532",
        "cursor": {
          "ref": "715595be-6e5b-4a49-b597-874d28b0cc51",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2729f1d6-d49c-400c-858e-e9be131576a4"
        },
        "item": {
          "id": "7c803809-9e64-4b61-a618-1132190aa532",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c3421afc-8a6e-442e-9b4f-8f20a61c67d8",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "45608a90-64a4-48b5-b1e5-a4cede6d1b94",
        "cursor": {
          "ref": "4c889366-cb51-48f9-b928-f2f6c9c79ed7",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "38150c88-ce21-4c10-b247-5a1b1b7e9f96"
        },
        "item": {
          "id": "45608a90-64a4-48b5-b1e5-a4cede6d1b94",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8c9e782b-37f0-43e1-809e-fcfbad46cddc",
          "status": "Created",
          "code": 201,
          "responseTime": 51,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba51ea91-b844-4ccd-b0cc-5314d3019492",
        "cursor": {
          "ref": "483c2ead-9a8c-46d7-8576-49841c8b05f8",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8a5bf5c4-b4c4-4c27-b2a8-8e8e7266d616"
        },
        "item": {
          "id": "ba51ea91-b844-4ccd-b0cc-5314d3019492",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "95dab3aa-d163-421a-ab8c-d099fcde4ede",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da2e10b-a645-4ff5-bf55-637ad4eb31a3",
        "cursor": {
          "ref": "fb6b7424-18ec-45d7-ae8e-163171a52818",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b43142d3-6609-4923-aa3d-6deae7bbbf25"
        },
        "item": {
          "id": "8da2e10b-a645-4ff5-bf55-637ad4eb31a3",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6359e403-33c7-4aec-88a3-86d4b88bd05b",
          "status": "Created",
          "code": 201,
          "responseTime": 48,
          "responseSize": 905
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea7328c-9540-45e8-925a-a612a3d2f794",
        "cursor": {
          "ref": "4b23d9e3-ad36-422d-8202-492b0a9a0a64",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "734075c0-71aa-40b5-9b00-0e20581388ac"
        },
        "item": {
          "id": "1ea7328c-9540-45e8-925a-a612a3d2f794",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a3e4ab5a-61bb-4537-8784-fc58a7a89ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea7328c-9540-45e8-925a-a612a3d2f794",
        "cursor": {
          "ref": "4b23d9e3-ad36-422d-8202-492b0a9a0a64",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "734075c0-71aa-40b5-9b00-0e20581388ac"
        },
        "item": {
          "id": "1ea7328c-9540-45e8-925a-a612a3d2f794",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a3e4ab5a-61bb-4537-8784-fc58a7a89ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd5fa87-8844-4917-ac31-5a506b59f0c3",
        "cursor": {
          "ref": "5a00e353-979c-42f8-be82-30b93af5f2c2",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "05178fda-176d-41b0-be5e-f1aa544f224d"
        },
        "item": {
          "id": "afd5fa87-8844-4917-ac31-5a506b59f0c3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d5fd542b-3ccc-49ba-a4d1-42605584dc08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "878c6e2e-6e06-4442-bad6-dfebe2eb40c1",
        "cursor": {
          "ref": "e756b190-86fe-4be5-a68b-1d42e04aedb5",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a8d831a1-e8a5-40a9-9fdc-999e0364a9fd"
        },
        "item": {
          "id": "878c6e2e-6e06-4442-bad6-dfebe2eb40c1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d2a583cf-5ece-4219-842a-eb25b78c99bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b793ca-081a-45b1-92b7-ab32bc53b6b3",
        "cursor": {
          "ref": "ecb6dfca-242f-450c-bfb5-1be02997cf0e",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "70f73fbc-a7db-4608-aef1-784193590824"
        },
        "item": {
          "id": "35b793ca-081a-45b1-92b7-ab32bc53b6b3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7b6e9666-80d6-4eb9-8741-4330ea2aa808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9af6fb7-fc11-4497-af30-080ecb283c40",
        "cursor": {
          "ref": "8ccbae0f-c688-4a05-9e05-96de5bc60405",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "15910f22-f77a-4697-af59-eef164c7cff4"
        },
        "item": {
          "id": "a9af6fb7-fc11-4497-af30-080ecb283c40",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7e0cb138-bec0-4f01-83d3-44e17f48733a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d30fa2-92e3-45d5-b859-58b1d6de4a19",
        "cursor": {
          "ref": "bf52257e-e337-41c4-a209-0b9c1f580074",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "451e66dd-935f-4229-b66f-5a760014d5bd"
        },
        "item": {
          "id": "42d30fa2-92e3-45d5-b859-58b1d6de4a19",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ff8c6e66-976f-477f-ac04-2eea5779e614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6bf1cf8-701c-487b-ad70-5a0fcbcd341c",
        "cursor": {
          "ref": "a8347ff7-b1ad-4076-908c-65f0575e1d75",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "caed791e-4d17-4e9e-add7-b291f49d7068"
        },
        "item": {
          "id": "f6bf1cf8-701c-487b-ad70-5a0fcbcd341c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a51a5579-3a06-480c-8ca2-fa5a08271cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e0f890-8da5-459c-a683-1f894ef62c8c",
        "cursor": {
          "ref": "ce230e5c-d174-4b68-8b0a-274ec853a2fd",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "deb08a50-9145-49ca-8007-33abdeda4cb5"
        },
        "item": {
          "id": "52e0f890-8da5-459c-a683-1f894ef62c8c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "92788b2c-031b-4b25-a12e-dae8c3849c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14cd421e-3b6e-4607-8bac-3f9f9d3079b0",
        "cursor": {
          "ref": "50b3d310-9414-48cd-be4a-24d10734bc30",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "bf80650a-3b3d-4de8-9aba-bfc290560f2d"
        },
        "item": {
          "id": "14cd421e-3b6e-4607-8bac-3f9f9d3079b0",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bb347c4d-6e8f-4694-8d22-73d34933ff3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8810e2b3-37d9-472b-b33f-1a7ee7390c85",
        "cursor": {
          "ref": "25a10c22-5d43-4161-8469-e10f49973a2f",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "09f2f9b5-4e0f-4c0c-a1c5-4f14bf72d1f8"
        },
        "item": {
          "id": "8810e2b3-37d9-472b-b33f-1a7ee7390c85",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "dd368e52-b9b7-4dae-a265-28394a268239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f1f68e-5f3a-472b-9ed6-3c864483c332",
        "cursor": {
          "ref": "be894fae-ecf1-4d17-97ae-cf1e1b53a921",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "bd6e203b-7404-44fe-8079-c5eea725a8e5"
        },
        "item": {
          "id": "e6f1f68e-5f3a-472b-9ed6-3c864483c332",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0e53887c-97ea-4058-a04c-adba888b2dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd4e7a6b-bdb7-4f65-b61b-2be59745aadf",
        "cursor": {
          "ref": "4a5bd50c-bfbd-44c7-a979-e983224161b5",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a715d1cd-740e-4981-ae6f-0b7aae6434d9"
        },
        "item": {
          "id": "bd4e7a6b-bdb7-4f65-b61b-2be59745aadf",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "43a7f356-9048-40bf-886f-d2c1e8655bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86070132-7687-46af-8cdb-a8dc43f51c63",
        "cursor": {
          "ref": "1ff7751b-c8d5-4277-ae01-feb619873edc",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "03c2ed09-6a5f-4334-a37e-3f3be65cc307"
        },
        "item": {
          "id": "86070132-7687-46af-8cdb-a8dc43f51c63",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0153394c-5578-49db-b323-181164c11ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad76826e-1f85-45ab-a4ed-42922187117e",
        "cursor": {
          "ref": "7961d6fe-f29f-4097-8f06-b2272cd7da03",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "44e612d8-7355-470b-8881-790d43a73133"
        },
        "item": {
          "id": "ad76826e-1f85-45ab-a4ed-42922187117e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "33d263f6-7910-4a36-b834-40df6fd4d13e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9e8e54-e7e4-4162-8571-7ebbcfbf4b0d",
        "cursor": {
          "ref": "1a1c32c8-21b5-44e4-9229-27283c2d1d33",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c0991078-7761-4a2a-abcf-a2db968b4bac"
        },
        "item": {
          "id": "cd9e8e54-e7e4-4162-8571-7ebbcfbf4b0d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5dabb454-daa0-49d9-b6d4-c862c81256ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034825a0-7503-4dc1-ad46-5884922e8145",
        "cursor": {
          "ref": "6ec48c7c-3df6-4d92-bdda-6386dd7fa9f9",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "bef5c651-07c0-4db1-a5b1-c6fb47e4e354"
        },
        "item": {
          "id": "034825a0-7503-4dc1-ad46-5884922e8145",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0bf302f1-24b3-4a2b-9d01-e2fc7f1a504e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3441cf7f-9ce8-46e7-8db8-f5b7e83545a8",
        "cursor": {
          "ref": "bea52d1d-31ba-4bd2-8cf5-a3c6ec8557e0",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "1645a61f-d91a-4944-9909-ab35b30eee11"
        },
        "item": {
          "id": "3441cf7f-9ce8-46e7-8db8-f5b7e83545a8",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "cb09363a-2e99-4c9a-b056-9fad061944e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ba6fd0-3643-48ac-90fe-2ac753875605",
        "cursor": {
          "ref": "53c93dfd-d873-42c0-aa7e-d970830e213b",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "41d15fad-548d-4333-9ec1-f6e6a7d7c835"
        },
        "item": {
          "id": "c0ba6fd0-3643-48ac-90fe-2ac753875605",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3f3ac692-65a8-4c2f-adfa-77eb9ae560b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e06cbced-2118-466a-82ee-3bdf768b6cce",
        "cursor": {
          "ref": "b972df6f-1c2b-4863-953d-8f5d5fe280f2",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "eff11ca0-d296-457e-8d80-f4866e1ae4e6"
        },
        "item": {
          "id": "e06cbced-2118-466a-82ee-3bdf768b6cce",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f627fea6-7271-4305-888a-9fb193c344ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b9cdf8-494d-49f6-94f0-e4ca0e50497c",
        "cursor": {
          "ref": "b35f5147-2e1f-42ad-bddf-c2d6bfc53fb5",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "7f9e71f0-1efa-4c12-a0b4-8536e66563f7"
        },
        "item": {
          "id": "18b9cdf8-494d-49f6-94f0-e4ca0e50497c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8bfa8272-ccc9-4ba9-96d5-bfd3876c549e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f020f1f2-5ed4-41d1-8c7a-8607d4faa0c0",
        "cursor": {
          "ref": "5ece914c-cf9b-4793-b59b-641dc7a35c6d",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "9b0e672b-b8e0-4316-9b2d-ee9f33fa58b8"
        },
        "item": {
          "id": "f020f1f2-5ed4-41d1-8c7a-8607d4faa0c0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "37f6ec3b-58f4-48a1-9e3b-534eb858e6ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eaab589-eaf3-4b87-a931-e3b9fdcb2f5b",
        "cursor": {
          "ref": "00797461-3fa3-42c9-87a8-96dbea2a3eb9",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "871a12d6-59f9-429d-b8b1-9dda283aa0b6"
        },
        "item": {
          "id": "5eaab589-eaf3-4b87-a931-e3b9fdcb2f5b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "365d7ee4-34b0-46ad-81c2-3c77e366bc46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e74fdc3-8afb-4a73-919d-7f321c7efc60",
        "cursor": {
          "ref": "baf52113-20a4-4e3f-b997-db999696e65f",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e3043571-1f62-41e1-b52b-5d2e2af33934"
        },
        "item": {
          "id": "0e74fdc3-8afb-4a73-919d-7f321c7efc60",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5a6a6cb6-5ad8-48ad-8793-8fb1bf9e6ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c1d483-efdd-4691-bfdb-beb04564de46",
        "cursor": {
          "ref": "1228e7e0-49d0-402f-86c2-8d24d4283464",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "09dae0e3-d7a2-41db-9f14-ea424f6128fb"
        },
        "item": {
          "id": "99c1d483-efdd-4691-bfdb-beb04564de46",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "80224b24-9fa8-4c20-9a2b-5f4eecec2901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6468f31d-f5dd-4420-8d50-1deb65e610a0",
        "cursor": {
          "ref": "148c7218-11b9-4f07-9761-dcef859811e5",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c81c7372-57c9-4279-8749-11624f045c77"
        },
        "item": {
          "id": "6468f31d-f5dd-4420-8d50-1deb65e610a0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "bdd171ec-3c41-4448-8187-f0cb07893664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd65587-5612-4fd8-bcac-67f475395488",
        "cursor": {
          "ref": "f9ca658d-7284-485e-a384-a17d1a1b5658",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4fb494ea-0a36-4bef-aac4-067bbd28079b"
        },
        "item": {
          "id": "1cd65587-5612-4fd8-bcac-67f475395488",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "10294912-66e9-4d8e-8aae-94ebb327b20a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8698dc82-1cb4-4088-9ef7-ec3b12d6fcde",
        "cursor": {
          "ref": "712fa4c0-91ce-46a5-9f4a-00107a75669e",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9c979909-e925-4031-9a1f-c2ce7524e8b5"
        },
        "item": {
          "id": "8698dc82-1cb4-4088-9ef7-ec3b12d6fcde",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9f516c86-c7d7-4785-bb67-f95fecae32b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5d00ef-8ade-4bf0-b58c-7a91ea178186",
        "cursor": {
          "ref": "53849aac-aa3c-474e-8b79-703f8cafc0d2",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "12736680-0abb-482e-8be7-9679f67dd627"
        },
        "item": {
          "id": "9a5d00ef-8ade-4bf0-b58c-7a91ea178186",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9500a9e0-8ad5-43b5-8325-71e3a420e677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58113489-9e93-4153-b427-769da738f5cb",
        "cursor": {
          "ref": "bf3d86c7-e1d6-4ab6-a556-b18ff56518a3",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "04df24ec-a68d-44e2-bed5-b86a11efdb89"
        },
        "item": {
          "id": "58113489-9e93-4153-b427-769da738f5cb",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "69683b65-b574-48fe-a055-2633fde020d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f1263d-76f5-4bd9-a993-5f13648aa3db",
        "cursor": {
          "ref": "250fab45-bfb8-4c37-be96-66eaa3b6f63a",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "52ca2685-1549-4c66-bd94-021c46d505ed"
        },
        "item": {
          "id": "54f1263d-76f5-4bd9-a993-5f13648aa3db",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1a53ca47-95ee-4469-b09a-018990b3080b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f9243a6-6f82-4ce5-99bb-947e704fca2f",
        "cursor": {
          "ref": "dd0ae1c9-4f8d-4282-af53-43cdb38bd050",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "4879287e-347c-4e80-9a44-fd4cdd6227a3"
        },
        "item": {
          "id": "4f9243a6-6f82-4ce5-99bb-947e704fca2f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "af8125d0-275a-4efd-a5a7-6a902043cf95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f617a4b0-0aa8-4455-93e8-0f0cd774f230",
        "cursor": {
          "ref": "74957382-80ec-4206-8c71-5dabaecdd689",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3d33243e-0835-4f30-b191-0a83cfc5290f"
        },
        "item": {
          "id": "f617a4b0-0aa8-4455-93e8-0f0cd774f230",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "38779c1a-e992-48aa-ab92-c4b4fed81aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b81e5b-c60a-4191-9b1a-e193d9920976",
        "cursor": {
          "ref": "b473035d-bfa7-4316-9e96-54da912533f7",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "99df97de-ad3d-44e9-8b80-355a4143ee19"
        },
        "item": {
          "id": "f8b81e5b-c60a-4191-9b1a-e193d9920976",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cea4c153-dfd4-488e-9ab7-355080a5fd70",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9222e8-fc11-4825-8ab2-d77fa274367d",
        "cursor": {
          "ref": "e513ee0c-1f07-482f-a51f-0ab45ce25a1f",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "2e754e14-eaf2-4bca-a659-f5100bed61a2"
        },
        "item": {
          "id": "ba9222e8-fc11-4825-8ab2-d77fa274367d",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "95158797-c14d-4da7-bfc4-e3d759eba777",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a567cb0e-7540-4a5d-96f8-951cd45c750d",
        "cursor": {
          "ref": "c73a5278-c708-4964-b7cc-10678cf6b626",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1c188522-e3aa-4d9b-9ed6-318ef93dba21"
        },
        "item": {
          "id": "a567cb0e-7540-4a5d-96f8-951cd45c750d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c2e4e4bd-5168-4d46-8ed2-e8d9562f628d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a567cb0e-7540-4a5d-96f8-951cd45c750d",
        "cursor": {
          "ref": "c73a5278-c708-4964-b7cc-10678cf6b626",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1c188522-e3aa-4d9b-9ed6-318ef93dba21"
        },
        "item": {
          "id": "a567cb0e-7540-4a5d-96f8-951cd45c750d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c2e4e4bd-5168-4d46-8ed2-e8d9562f628d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d4558d-5673-4489-a536-ea7c7478f86e",
        "cursor": {
          "ref": "0da05917-a2f6-480c-b625-8be357330d23",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e919886c-4560-4b8b-95b2-24356b5df780"
        },
        "item": {
          "id": "e7d4558d-5673-4489-a536-ea7c7478f86e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9447837e-2cd7-423c-a592-4e377a787c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594d95be-2649-4c04-a445-fc2418d39438",
        "cursor": {
          "ref": "2c74f3cd-b2ce-4fad-a5e2-db0f2d904ab1",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "584f939e-05ce-4863-bdb4-771a6ae374c9"
        },
        "item": {
          "id": "594d95be-2649-4c04-a445-fc2418d39438",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "466bf761-c16b-4afa-a5db-e9707b8662c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9322ba03-ce84-4956-b551-a82cecd7dc38",
        "cursor": {
          "ref": "36ac0762-acad-4d51-984d-131bd727b4d9",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "18284560-c831-46e3-9177-8cbb7f54e5d5"
        },
        "item": {
          "id": "9322ba03-ce84-4956-b551-a82cecd7dc38",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "efe78b74-b1db-448d-a9ea-d391c872b98f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d44fb9-69c0-4f60-9e02-ce4854d89a4c",
        "cursor": {
          "ref": "a1b21930-96a4-4518-a5ca-3b8249f25447",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e38e860e-b106-4ee1-8d05-99919b26ec0e"
        },
        "item": {
          "id": "f1d44fb9-69c0-4f60-9e02-ce4854d89a4c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "23b3f668-7142-4f04-aeb0-df4d8d8d269e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c62ca64-4d59-4051-9d9c-914c9507a36c",
        "cursor": {
          "ref": "c1515f97-1503-47d3-92fb-9f6578f29838",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "29202376-a4a0-4837-a579-08c91de1ff99"
        },
        "item": {
          "id": "9c62ca64-4d59-4051-9d9c-914c9507a36c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e5946786-f238-40cc-8d91-3fd9edd67bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a3b153-8ee2-4344-adba-1047d6f95b8e",
        "cursor": {
          "ref": "b6c022e5-af6f-45a5-b9a7-ed808b00143b",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "32ea89d1-7fcf-4dcc-b55b-f717f4106259"
        },
        "item": {
          "id": "16a3b153-8ee2-4344-adba-1047d6f95b8e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "909df1fa-1efc-4854-8842-63e75305a8d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8ef308-133a-481f-b71c-637f65c591c3",
        "cursor": {
          "ref": "9de815b0-2537-44f2-a7d7-34f14019f079",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f4c5e2a1-ddfb-4c56-91f7-add146eb7d5c"
        },
        "item": {
          "id": "de8ef308-133a-481f-b71c-637f65c591c3",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "7d058a34-66fe-4cf5-b467-153bc0bfc64c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da19848-e26a-416c-a135-dcb818f6f7d8",
        "cursor": {
          "ref": "374ae1e7-b4d8-4063-8e8d-09fb47b4c504",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8cb8eb53-8e0d-487f-9299-f6402616bb98"
        },
        "item": {
          "id": "9da19848-e26a-416c-a135-dcb818f6f7d8",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "7c3b787a-a892-40bc-9f21-8857c306be3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c312255-f8a5-4a3c-92cb-20c41063f297",
        "cursor": {
          "ref": "7226ba57-7b34-4e45-95a2-685bb66a936a",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "1bf21d7b-214b-4ae0-9415-ab15967ba05c"
        },
        "item": {
          "id": "8c312255-f8a5-4a3c-92cb-20c41063f297",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "dcedf9d5-b750-4530-8991-e6f1558c821e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c5aab80-b441-49f3-a1b5-ce16b9116458",
        "cursor": {
          "ref": "31ce4aa6-6087-48c9-a735-43fc6417567a",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b3267cdf-da85-4712-83be-eea4fdc37521"
        },
        "item": {
          "id": "5c5aab80-b441-49f3-a1b5-ce16b9116458",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e5088e45-cd33-4632-bcb3-c53e6638c17c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b5ade26-1714-4bec-9b41-f8824664f41b",
        "cursor": {
          "ref": "ef01ba25-c651-4b96-a470-8d2bc4faf175",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "14758adb-d9c6-4b33-aad6-26937490fef8"
        },
        "item": {
          "id": "6b5ade26-1714-4bec-9b41-f8824664f41b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "eba05b9e-98e4-44a6-9e30-6b1b164f8b4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a265798f-ad56-4486-a512-f3ccb34d7f07",
        "cursor": {
          "ref": "61552daa-451b-49a1-9785-3aea16007fcb",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "38191c5d-0b2b-47c2-b099-07ca09459881"
        },
        "item": {
          "id": "a265798f-ad56-4486-a512-f3ccb34d7f07",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a0eb65f0-39c8-49e9-b434-8ed85c9ff06a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f24352-2c67-4980-9c98-afacf9000c65",
        "cursor": {
          "ref": "983c56e3-6aa7-4c97-9569-5c3c4b1c39b9",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "44926889-80e1-49b0-bbe6-ce6d5e4c014d"
        },
        "item": {
          "id": "70f24352-2c67-4980-9c98-afacf9000c65",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0a744c08-5d92-420e-bcdc-15608f71f0e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829725de-997c-4af4-9ceb-4b6551556ac2",
        "cursor": {
          "ref": "7fd54093-6baa-4289-b7dc-0e2c5777b939",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "64f8e6be-1299-4675-a699-c01e9aa807e5"
        },
        "item": {
          "id": "829725de-997c-4af4-9ceb-4b6551556ac2",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "69cc21b7-eaae-441e-96d1-6e905bad49ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb0cdcb-4bc2-4f7a-a23c-95c811c0e0b6",
        "cursor": {
          "ref": "83bb133c-331d-42fb-9b7f-5c874781d2f3",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a46d1dda-be52-4e65-a09c-c61a87cdbdf8"
        },
        "item": {
          "id": "cbb0cdcb-4bc2-4f7a-a23c-95c811c0e0b6",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5a8af6f1-2f1d-4f2b-8661-1cd7ac672b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e3e6f8f-391d-4352-a4ec-78891fdf1a12",
        "cursor": {
          "ref": "51d75552-9903-4550-84b8-2751dce0b795",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f849bf23-d92b-47f7-9e97-e94d1d2174bf"
        },
        "item": {
          "id": "9e3e6f8f-391d-4352-a4ec-78891fdf1a12",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "321f4339-daef-4ac9-9462-0883a895b2b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72fb6232-214b-4c88-893d-e51ab873baaa",
        "cursor": {
          "ref": "ed2b5447-aa77-42f7-9ac6-3c848d919c46",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "90ee419b-edb5-41ec-aba5-e491492fff2c"
        },
        "item": {
          "id": "72fb6232-214b-4c88-893d-e51ab873baaa",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "8c8d7687-6870-40c7-b853-e3bf74ad22a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8de6a01-5154-481f-b746-1abcd48919af",
        "cursor": {
          "ref": "8ed5d23f-e123-4e22-8847-9d1772132f21",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "40fb7315-a4af-4138-9a89-6ba46d1c4fb5"
        },
        "item": {
          "id": "a8de6a01-5154-481f-b746-1abcd48919af",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "69ccecb3-536f-4880-9947-f253101e893d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2527c695-44cf-4eb4-a54d-17420b9b2c9f",
        "cursor": {
          "ref": "09c13d5a-82aa-453e-b298-541bf2c2ae2f",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b9f3020c-2c2d-4e0e-ad5f-b30c50dbf0c9"
        },
        "item": {
          "id": "2527c695-44cf-4eb4-a54d-17420b9b2c9f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "5efd1a68-3604-4964-836d-953b1da4f081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc8b2b6-43f0-445d-a778-ff03894ac200",
        "cursor": {
          "ref": "a0893add-cdab-48a3-bf29-ec0bdc10ce9c",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "12445b05-01f5-40ce-8812-5e7353d2142c"
        },
        "item": {
          "id": "ccc8b2b6-43f0-445d-a778-ff03894ac200",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "88829c24-7489-4676-bd9a-a2c434d280f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e6e4b44-b697-4dec-ae9d-37716030d9d7",
        "cursor": {
          "ref": "c7ce5370-4ffb-413b-be7f-4e4fe8c84ec4",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "16e8926d-b1c2-417e-af37-a893589c0bbd"
        },
        "item": {
          "id": "0e6e4b44-b697-4dec-ae9d-37716030d9d7",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "bdfe4b15-a73c-40f5-a7d4-a6a043c123db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e73ea8-90d3-4c4d-9d35-e3f6029eec41",
        "cursor": {
          "ref": "0eeb5e3e-c38e-4cbe-8c80-bc0c09066628",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e2f31c66-0fbc-4a67-b897-8dc80ada9f91"
        },
        "item": {
          "id": "88e73ea8-90d3-4c4d-9d35-e3f6029eec41",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "06e160b3-cdc4-4c28-9b49-b362e8422df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b836a36f-50a8-4c66-8c35-99b696599513",
        "cursor": {
          "ref": "694eaaa0-e642-4fde-b7e2-e4183aeffdfd",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "1f14fb45-8ab7-4c78-93f9-468d0db36c17"
        },
        "item": {
          "id": "b836a36f-50a8-4c66-8c35-99b696599513",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a26585b5-2e8b-41f5-9aee-30dbc23d42f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "903ade90-931c-4794-9531-8cc32ec7f359",
        "cursor": {
          "ref": "af75f8fb-861b-49b3-8290-ec60be4ab8cc",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "58ffd0fa-93c2-4d70-8172-82f89dd72898"
        },
        "item": {
          "id": "903ade90-931c-4794-9531-8cc32ec7f359",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "eda61bdf-8566-4d8f-84d6-096fed9505bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88127ed6-38e4-4cc0-bbc8-3f59fa55eeb7",
        "cursor": {
          "ref": "faf4021d-fafb-4571-99ee-9ee8da7ab1cb",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d535b8c0-e979-48ce-8a74-5f4cf7ef28d1"
        },
        "item": {
          "id": "88127ed6-38e4-4cc0-bbc8-3f59fa55eeb7",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4f9fad52-dd76-43cb-955f-000cf854b1d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c9d8d48-d9da-40e8-9c68-04cbae6f36fc",
        "cursor": {
          "ref": "311ed13b-e762-4dc7-a678-39e08b7bd9e7",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "69a1c4a7-ca59-4e19-888d-2370cb278b53"
        },
        "item": {
          "id": "6c9d8d48-d9da-40e8-9c68-04cbae6f36fc",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3f18bb15-0792-43eb-abd9-d313e631b115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8008892e-fe8c-43f4-b242-c5efc7c2202b",
        "cursor": {
          "ref": "3ffadff2-ab2c-403e-9c9e-7ae470cca59d",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "eaa137fe-1856-464a-b94e-f67cfa6914ca"
        },
        "item": {
          "id": "8008892e-fe8c-43f4-b242-c5efc7c2202b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "fed31541-98c2-4929-9f26-f3656bbdb3ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b4be345-a451-49e7-bf04-61c5d2124cd4",
        "cursor": {
          "ref": "38d74a57-1a26-4b83-8be9-dbbf3d853aec",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "17e4e2a8-34eb-4ac7-910c-edd2e647452d"
        },
        "item": {
          "id": "4b4be345-a451-49e7-bf04-61c5d2124cd4",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e358c75f-f838-4895-8e02-0eb6264f491f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b29ad789-3150-4438-a039-542d8f68f563",
        "cursor": {
          "ref": "685121bc-c876-4a05-99c2-59962aff68cc",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "947797e3-5330-488c-a22e-5387322b773d"
        },
        "item": {
          "id": "b29ad789-3150-4438-a039-542d8f68f563",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ba75677d-e6c1-441d-bb00-9e0f58b7f907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc6bcb7-6136-4c5e-86c2-aa8832a4745d",
        "cursor": {
          "ref": "9f0d09c1-34ed-4141-bda8-29b686ed7105",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "541a1730-20c8-497e-a1a1-fc5e590fc83a"
        },
        "item": {
          "id": "5dc6bcb7-6136-4c5e-86c2-aa8832a4745d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "02e7e397-4e37-4e7e-badc-e571da32ed29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9717795a-007d-4a7c-bcfb-cd1169b7d07b",
        "cursor": {
          "ref": "63b28a2c-8f3e-4a13-981f-1275868949cc",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "968375bf-aacc-4811-a1be-008cd626535b"
        },
        "item": {
          "id": "9717795a-007d-4a7c-bcfb-cd1169b7d07b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "1dcbbd0d-7469-4268-86f7-3bf575028860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98706db-0b96-4c5e-b1a7-1ad225276b03",
        "cursor": {
          "ref": "a714d0f7-298d-42f8-b52b-660fee18a3d1",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f06ee8e0-eb67-46b3-babd-4af83879570f"
        },
        "item": {
          "id": "c98706db-0b96-4c5e-b1a7-1ad225276b03",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "77b770f8-e8b0-4f52-9a22-5927cd805905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef77dcc-2f2b-4af8-aebf-ee3a96801c1d",
        "cursor": {
          "ref": "32636402-d737-4930-9c40-7d6967d1db1b",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a116ad79-1df8-4c42-98b8-68b264a437de"
        },
        "item": {
          "id": "aef77dcc-2f2b-4af8-aebf-ee3a96801c1d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "28f0e20e-ecbb-4813-b9ab-5c8d11a8e894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4193c63e-614c-46ef-897b-99f4479923df",
        "cursor": {
          "ref": "4c64dfe1-6154-486e-ba23-be4306445f63",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "36ba4876-fc2b-478d-8e12-1794b1f9699e"
        },
        "item": {
          "id": "4193c63e-614c-46ef-897b-99f4479923df",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "1ad8d337-9312-42b2-a2db-b51bea4bf2b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0117326a-658a-4ed0-b4a6-2c53ef098a66",
        "cursor": {
          "ref": "c050e500-04f0-4141-bcdf-dc47d0862029",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "fc3ea822-d3a7-4d2f-a988-f0d271385c29"
        },
        "item": {
          "id": "0117326a-658a-4ed0-b4a6-2c53ef098a66",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e0d87d0a-4d80-4542-9181-167c0899cced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71af975d-cfdb-450d-83f4-7d9644101e82",
        "cursor": {
          "ref": "5f12c1d0-ced9-48bd-ab56-d9c80bec08ff",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a1334004-26b6-4a56-8142-f0ded7885a50"
        },
        "item": {
          "id": "71af975d-cfdb-450d-83f4-7d9644101e82",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "280462d4-9123-4093-b8cc-a2c5315baed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d91457e5-018f-4807-a2d1-73f7bed00725",
        "cursor": {
          "ref": "b8acaa73-51a6-4e48-950e-09d3e60185ae",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6f2d0e59-6a2d-4a6a-af6b-74202e65b6a3"
        },
        "item": {
          "id": "d91457e5-018f-4807-a2d1-73f7bed00725",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e3113a05-7426-4248-9e8d-5c881407a7f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1cf15fa-e7ba-4261-9f88-b81ad8dc070a",
        "cursor": {
          "ref": "5dbc637a-8c68-40cd-a01c-d1f65d9441fd",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7d460f0a-0991-4572-aa36-7a200203fb8b"
        },
        "item": {
          "id": "f1cf15fa-e7ba-4261-9f88-b81ad8dc070a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "aa6db9c8-f821-4f1f-a975-d113b3f5aaa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7b686f-b21b-4369-88f1-ce2d7c86d94f",
        "cursor": {
          "ref": "dffbe597-64f9-4c67-b9b1-c32cfc0188b6",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "eac34db3-a22d-4ec9-82c0-6b1715dd7d8b"
        },
        "item": {
          "id": "9c7b686f-b21b-4369-88f1-ce2d7c86d94f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "08216c6f-1edc-47b1-a5d2-fae228f1f87f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2371574-fb10-4d92-85c5-dc9733f8e63c",
        "cursor": {
          "ref": "c3fe16a9-1989-4ca6-8896-2e7c475c0e52",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5f1d9775-c809-4a54-898b-51ab44b35da0"
        },
        "item": {
          "id": "a2371574-fb10-4d92-85c5-dc9733f8e63c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "64bd3801-9a24-42c0-bb43-410e08cf09e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f536d428-68e3-42dd-a2af-df59baa9b57f",
        "cursor": {
          "ref": "e2ae630c-dc6e-40b8-833b-b240902e7cac",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "61cc0da9-eed0-49d2-967c-20139fd570be"
        },
        "item": {
          "id": "f536d428-68e3-42dd-a2af-df59baa9b57f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ed92211a-9053-4d96-8836-9020411f2f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ebd074-789b-45b9-a231-0fb198922a74",
        "cursor": {
          "ref": "cdbc736c-05e7-4217-b754-33cef313dc8c",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7f6917a3-2a03-4ccc-8638-9dcdd164ee5b"
        },
        "item": {
          "id": "17ebd074-789b-45b9-a231-0fb198922a74",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "042f88ea-1f8e-40f6-8c28-bff0178908ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb736e3-f132-41bd-8c02-42eddfec6533",
        "cursor": {
          "ref": "48ec6862-6075-4862-959d-e40f8405c21b",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "25811a42-88e8-4422-9978-96e193b854a0"
        },
        "item": {
          "id": "0fb736e3-f132-41bd-8c02-42eddfec6533",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "fba3cbbc-89ad-489c-9f3c-0a9fc70fe0ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8850a84-4bb0-4d18-ab6c-0511f15c3163",
        "cursor": {
          "ref": "236e467b-6f3d-4a84-8525-08b51ea68432",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2208a9c8-e961-42e8-aedc-404432d88f33"
        },
        "item": {
          "id": "d8850a84-4bb0-4d18-ab6c-0511f15c3163",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c8cae02d-8f20-49c8-aab8-3bc6dff71580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c187008a-91a1-4124-89c8-6f373978efe2",
        "cursor": {
          "ref": "995d0ea3-8b2a-4894-b9c9-3168f77cca49",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "924e3d47-3f1a-46ef-aff5-8451540fe0c5"
        },
        "item": {
          "id": "c187008a-91a1-4124-89c8-6f373978efe2",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "91534d97-918f-4805-aa7b-eb724b0d2378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67cee0f-aa3a-4b15-b3b8-c2cf5dabec1c",
        "cursor": {
          "ref": "fa3c5f25-a7ba-4b43-b6b3-de3fc0692bd9",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1f8bfafe-69e0-4374-9ee2-e92b631a7bb1"
        },
        "item": {
          "id": "a67cee0f-aa3a-4b15-b3b8-c2cf5dabec1c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "605758e8-4f08-49d2-96a1-cf4152b48d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2a56df-8167-4314-ab30-07d9041f3be6",
        "cursor": {
          "ref": "920b832f-a696-4c19-8199-d293e8d2ed5a",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "3005751e-2d1a-4deb-872c-05f98cea505a"
        },
        "item": {
          "id": "ce2a56df-8167-4314-ab30-07d9041f3be6",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e7457933-5765-4880-9d32-77f602e299e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a1e20bd-b4c9-4cb3-b09c-cabaf8bb55b1",
        "cursor": {
          "ref": "d9f97b9e-962c-41eb-a32a-49dc17c120c6",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "dad113fb-dec9-466c-b268-a139bfbf8643"
        },
        "item": {
          "id": "9a1e20bd-b4c9-4cb3-b09c-cabaf8bb55b1",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b67cbdbd-4faf-46f4-a10f-6c5041783227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f5f916-f8db-4362-a2ba-cdcc924370b7",
        "cursor": {
          "ref": "ccabe862-fc6a-48e2-83e5-ea3fdc6f3512",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "56214877-842e-43f0-b71d-f2fa1b5db55d"
        },
        "item": {
          "id": "d8f5f916-f8db-4362-a2ba-cdcc924370b7",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e774f45e-1532-41ee-b2ff-aca96415d9c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5de1783-51f9-43ef-b18f-dd4d68f405f4",
        "cursor": {
          "ref": "3e26f2c0-2e2e-4465-a548-096a652cfe26",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f1729a87-5c7b-4461-bdbf-362c6fe39e85"
        },
        "item": {
          "id": "c5de1783-51f9-43ef-b18f-dd4d68f405f4",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ba310a8d-3321-4f8b-bd34-94c3eaabfb16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b41300-cf44-40dd-b147-e5a2e34fe8c1",
        "cursor": {
          "ref": "7f7e55a4-fd5e-403f-bfb1-1d6949dfc579",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "87fe6fc7-b6d0-49f7-9dd6-e9d7c94106f1"
        },
        "item": {
          "id": "24b41300-cf44-40dd-b147-e5a2e34fe8c1",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f3c9f5ee-5217-4d12-9a68-fffd4b151c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51188e9c-a38f-4046-925a-8c19f385309d",
        "cursor": {
          "ref": "274f0fc7-4fc5-4e8d-83a1-96c5afdb0524",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5ec5f903-0895-44b9-ae70-78855a5fed4b"
        },
        "item": {
          "id": "51188e9c-a38f-4046-925a-8c19f385309d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "53d83b97-1762-40ef-a990-a7f40c92bc38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a449dab1-4fd0-4ab4-bff7-d5d37f3ef9aa",
        "cursor": {
          "ref": "0d60e867-ad44-4e77-9124-55ad181226e4",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b92e6b77-cfee-49e4-a3a5-c38dba2f0537"
        },
        "item": {
          "id": "a449dab1-4fd0-4ab4-bff7-d5d37f3ef9aa",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "def23a69-cba0-495d-9512-e850e852af03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef36b45a-1c68-4459-bee2-02bb4aa13c77",
        "cursor": {
          "ref": "9f888db2-5ffe-4a5a-9385-bb27b69f7502",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "6a8ffc39-4f40-4475-8743-9dbaa1bf6c8f"
        },
        "item": {
          "id": "ef36b45a-1c68-4459-bee2-02bb4aa13c77",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "fc3d69df-5630-4a54-b39f-54281ce1643d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a544c2-2cbe-4fe3-ae3b-6e79d537549f",
        "cursor": {
          "ref": "46d88a65-c3ba-4dae-92c6-92484689d6f2",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2438339a-c113-4b76-a867-ab9bba436d48"
        },
        "item": {
          "id": "c3a544c2-2cbe-4fe3-ae3b-6e79d537549f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e9a919b3-1d52-42b3-b10f-ea4646aaadd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77250fb6-cde9-462d-bad0-e81e6fe891c3",
        "cursor": {
          "ref": "77d00f54-03e9-4a8f-8c15-38be5cbe927a",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "52af3a1e-3c9a-49c8-9985-be3b1d03f8bd"
        },
        "item": {
          "id": "77250fb6-cde9-462d-bad0-e81e6fe891c3",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "6b5bb496-04b4-435c-984b-7ce437c57bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a677fc-6068-4f51-a9e9-b323fbb685ca",
        "cursor": {
          "ref": "fafa4ad4-c58e-4535-99fc-37e102b0823a",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "0f60fb71-d124-47e7-a2fa-b38247c49936"
        },
        "item": {
          "id": "20a677fc-6068-4f51-a9e9-b323fbb685ca",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b93bd528-19ba-41fe-820e-08d1c2a7fcd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3022cc77-79f0-4423-acf7-d7d33f05fe19",
        "cursor": {
          "ref": "d1a0f967-6097-444b-a2a1-cb3c9a8be573",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f8ebb25a-28ff-43a9-994a-8e262862cbda"
        },
        "item": {
          "id": "3022cc77-79f0-4423-acf7-d7d33f05fe19",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "98b1554f-7bb9-4b2b-bf30-a3cc76e03095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c0ce34e-9229-4b99-b89d-516624416037",
        "cursor": {
          "ref": "6d13e858-aa9f-4345-8d4c-53bc2cf2f999",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "3056117e-5753-4780-bcc1-b4cc4d0dcf96"
        },
        "item": {
          "id": "3c0ce34e-9229-4b99-b89d-516624416037",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "dddd299d-fbd5-4983-b0b7-ef9c01e20b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 146,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559ccc12-7144-4c78-be11-f5683b67c240",
        "cursor": {
          "ref": "e6551824-c045-46e1-904b-ea3edbda266e",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d5a0e4bb-cddc-47b5-a639-ef9666114a30"
        },
        "item": {
          "id": "559ccc12-7144-4c78-be11-f5683b67c240",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2eb0f33f-ce02-4141-bf34-7cc3de02c4e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86362ff9-9dde-4fa2-aa36-99a734b68bf8",
        "cursor": {
          "ref": "cd754f3b-925b-44b4-ba47-f18750a95f5b",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "001ed231-a647-4410-9291-a8a428de7770"
        },
        "item": {
          "id": "86362ff9-9dde-4fa2-aa36-99a734b68bf8",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4417241b-ef2a-43ca-a4aa-7e3816abf701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7cc6f79-d5bc-4cc3-b999-5afe407402ca",
        "cursor": {
          "ref": "31101909-0c59-4567-9be6-30af8ee7a499",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7b8ed4bd-1e37-4e25-bb62-955e8f700dc0"
        },
        "item": {
          "id": "b7cc6f79-d5bc-4cc3-b999-5afe407402ca",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "66bec510-d3ae-48a7-9e23-7e42ba6bdea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2edf9a88-f84b-4fad-b9b1-421369ec9495",
        "cursor": {
          "ref": "e918c421-1745-45ff-9d9a-a3f6625f7758",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "58ab02f7-fa6f-4523-8092-ead72a4f127d"
        },
        "item": {
          "id": "2edf9a88-f84b-4fad-b9b1-421369ec9495",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b8f10360-6c80-49de-b80a-b7052b3fe965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a3b2342-88ec-4b60-9868-9f9d8fbd2145",
        "cursor": {
          "ref": "938b77f0-ee3d-4b7b-9d5d-89e49d804bbc",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e5223f88-760f-464c-8932-5089bbf89e7b"
        },
        "item": {
          "id": "0a3b2342-88ec-4b60-9868-9f9d8fbd2145",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "874c6faa-d697-4cf8-ba4f-e6fb102acb4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4bfba13-93b8-493c-9b32-bd794bc55cd0",
        "cursor": {
          "ref": "df6b508b-a4fa-499e-9ed5-c634d1cd83d7",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b9fe5032-38c9-47c7-9525-1e0cdc030dce"
        },
        "item": {
          "id": "f4bfba13-93b8-493c-9b32-bd794bc55cd0",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "fd05c4af-51e9-45de-819a-339c81d3b79d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c91cb9-b7b4-4e81-b7e1-a18fd25048ec",
        "cursor": {
          "ref": "12d02e3b-1428-413b-9f24-b9248b94a6d7",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "708cba55-34dd-4529-9f29-14fff9e1a645"
        },
        "item": {
          "id": "84c91cb9-b7b4-4e81-b7e1-a18fd25048ec",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "5f1b639a-57ef-446b-aa9b-c69270c8b8d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162a3d4e-21be-458f-8e57-522b8fc725af",
        "cursor": {
          "ref": "2bca5e75-9660-41ff-88d6-22cc35795760",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "899a5fbb-ce87-4b08-88a3-0957807401a6"
        },
        "item": {
          "id": "162a3d4e-21be-458f-8e57-522b8fc725af",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f4e73d55-4fc4-4c99-ac3d-b1169025321b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "898ab99a-68c9-49ec-8a2f-0b5a6a692412",
        "cursor": {
          "ref": "e64b0e6c-0f05-43f7-8fd9-0dccdbca5aab",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c4279904-f4f8-4ebe-918e-4e206db49bb0"
        },
        "item": {
          "id": "898ab99a-68c9-49ec-8a2f-0b5a6a692412",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d422fd9b-b464-4460-901c-0fc5872dd2fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db763fba-9362-45c8-83c2-1b4ce9895457",
        "cursor": {
          "ref": "af830cce-ec7f-4b33-b10f-f71970824fea",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "792c26a9-755c-4e12-83b3-e863ad84d771"
        },
        "item": {
          "id": "db763fba-9362-45c8-83c2-1b4ce9895457",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d24b6db8-501a-44cb-9136-026e149407b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2617a97b-9f39-45b5-8f87-272e319f9aeb",
        "cursor": {
          "ref": "9807f18a-803b-439f-a276-ab5b13c7578d",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c161ad1a-c451-42f6-8873-b7cc975f030d"
        },
        "item": {
          "id": "2617a97b-9f39-45b5-8f87-272e319f9aeb",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "83af5a20-d6c6-4e04-a262-bdaa3f66809b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f8407b-5144-4e4f-9d54-def105eca12a",
        "cursor": {
          "ref": "fcdf271f-2063-4cf8-bf9a-3dba11c9e70a",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ae700310-d96e-4a23-9e25-14ce8bd337aa"
        },
        "item": {
          "id": "66f8407b-5144-4e4f-9d54-def105eca12a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f2cdb8c7-ca33-4d3c-860e-223751874d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5e158f-b07f-4cdc-a6cd-6db724211070",
        "cursor": {
          "ref": "c62bb2c0-ca1f-4621-8d9e-09dcd744b407",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "911742fd-13ac-4c06-8cfa-357ea6b006a3"
        },
        "item": {
          "id": "fd5e158f-b07f-4cdc-a6cd-6db724211070",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "8638e5f0-aa97-4d17-a321-2cd17dc912f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89242da4-72f1-4988-9ac6-ff858fb377ea",
        "cursor": {
          "ref": "8ae16659-f427-46d8-82b8-a05c5f6a7d61",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0244a5fb-5669-48a6-a03d-04b193e44d02"
        },
        "item": {
          "id": "89242da4-72f1-4988-9ac6-ff858fb377ea",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7164480a-ccc8-41c0-94f5-90048cbd3aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60307f1-af80-49ff-88d1-32d4aac9a937",
        "cursor": {
          "ref": "1bf11588-e4bf-49b5-bf67-2483a5b02c8e",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "fef619c3-dab4-4875-b9f0-6c3456daa712"
        },
        "item": {
          "id": "d60307f1-af80-49ff-88d1-32d4aac9a937",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6800261a-0c3f-416a-bdd7-491c1dce949d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e7752e-d8e3-41a3-985a-c70048797d8d",
        "cursor": {
          "ref": "fab563bc-0aa5-4fed-b8c1-75688ea71e35",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "69ebe560-15ee-4e39-bf5a-2f6495225508"
        },
        "item": {
          "id": "a8e7752e-d8e3-41a3-985a-c70048797d8d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "78e62763-b0c7-41d6-9d7c-64d931076adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632d3996-746e-4964-949d-adc7856f745d",
        "cursor": {
          "ref": "b25c7eeb-4f0e-4ebd-ab77-26d989021492",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ed4e4e7c-5b5f-433f-b5c1-731cc6f2aa85"
        },
        "item": {
          "id": "632d3996-746e-4964-949d-adc7856f745d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d56b1a0e-e898-493b-a2e6-a3c556ed665f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cfd66ce-70dd-49e8-885c-2bd50a5be94f",
        "cursor": {
          "ref": "231af851-4260-4f21-9b83-c30b54350095",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8f3db815-a833-44eb-8e26-b703488e678e"
        },
        "item": {
          "id": "8cfd66ce-70dd-49e8-885c-2bd50a5be94f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "97add885-3171-41b3-b7a2-8d3854bfdaa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4287b4a5-4758-4416-8b73-6e4dff36af35",
        "cursor": {
          "ref": "932ffaa0-ed10-4996-a85a-0a97dd36f803",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "10449879-ed66-4c74-8334-b8a1f7016566"
        },
        "item": {
          "id": "4287b4a5-4758-4416-8b73-6e4dff36af35",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "58fbcb56-5e15-4ea5-92a1-fa98788d81b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a48352-068e-4546-a3b3-4ace201bcea8",
        "cursor": {
          "ref": "3c765594-3a84-4db8-acf3-de6015b45805",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "1d6b6e45-2a8e-4952-9496-0e9e5a785c3f"
        },
        "item": {
          "id": "14a48352-068e-4546-a3b3-4ace201bcea8",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "24229737-a86a-414a-bd97-4dd87e8f7c71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1600d83-2e06-42a0-94c1-4923c1db0fd1",
        "cursor": {
          "ref": "a491d32b-87db-43eb-a79d-6534a1f76ac7",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "8a1ad35d-8d54-4c45-9c53-e97ae9e5916d"
        },
        "item": {
          "id": "c1600d83-2e06-42a0-94c1-4923c1db0fd1",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "66de7275-8d0c-4949-b8d0-34b7fe89fbde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c423bfa-69ba-4346-beb3-c0bf110c1762",
        "cursor": {
          "ref": "bbc628b6-7c94-4399-846c-c0af9b450fea",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "6a24b3fb-4a8e-4e99-b751-b7be0a89dd94"
        },
        "item": {
          "id": "7c423bfa-69ba-4346-beb3-c0bf110c1762",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "93ebc90f-5fd6-4508-ab5a-56f873bf1ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea46d6b-7dcb-4958-8fa3-db83de681ed8",
        "cursor": {
          "ref": "e6b17ba2-b77f-4229-a12f-338d2c7fbb4c",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f618b0af-d314-4b21-bc8e-321656e44133"
        },
        "item": {
          "id": "4ea46d6b-7dcb-4958-8fa3-db83de681ed8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f2155a55-e088-4fdc-83f6-7d33d8578f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09520daa-e3f4-462a-9c2a-c9c86ada92f1",
        "cursor": {
          "ref": "cc3c0e14-04b2-475b-a9c1-5039409b9d30",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "2537bf3b-070d-4b17-aee4-fa45f1afddee"
        },
        "item": {
          "id": "09520daa-e3f4-462a-9c2a-c9c86ada92f1",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "56a49ec1-6f1f-48d6-9aab-0729c72ef28e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e599acb-505f-4481-ac21-0d88d9fa5c59",
        "cursor": {
          "ref": "1cf35e1c-f309-432a-b291-e4546fbe704d",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b0e72444-870b-4ef9-a7d4-0f8de90290ad"
        },
        "item": {
          "id": "5e599acb-505f-4481-ac21-0d88d9fa5c59",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b2cfe10e-f327-4716-943c-a69833698bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ad3e98-5bc5-487c-8877-0d80678e313f",
        "cursor": {
          "ref": "3194d508-9a99-4f9c-bfd3-5872d2d5c180",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d6538235-ec3d-40a1-a95e-5b52ebc67413"
        },
        "item": {
          "id": "16ad3e98-5bc5-487c-8877-0d80678e313f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "fd4092c6-3a2c-4a29-bf73-c6970557aa9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a629aa7-d7db-4e6f-8d59-08032b9e6d60",
        "cursor": {
          "ref": "b159ba8e-83f5-4e80-a172-965cf49a492a",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "642ea2d2-9553-43bc-a2ab-cd7d9da19532"
        },
        "item": {
          "id": "1a629aa7-d7db-4e6f-8d59-08032b9e6d60",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "0a19d7ec-ad59-4b02-bdfa-67655da18cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38be6962-90e6-44d5-90c9-ed6636f0c97e",
        "cursor": {
          "ref": "c39a9462-2205-442b-82dc-5a587de91315",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "29fae3bd-af81-4e3d-b20b-20d3684fb7bf"
        },
        "item": {
          "id": "38be6962-90e6-44d5-90c9-ed6636f0c97e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e610d035-ebc3-4f4a-be58-937a6549f88e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d44b571-ba91-499c-9276-9c7093fc757c",
        "cursor": {
          "ref": "75829e8e-3ddb-4b86-8599-0a3fe6c9d0b7",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c14b8ab8-affd-481f-b521-66c4a29e1903"
        },
        "item": {
          "id": "0d44b571-ba91-499c-9276-9c7093fc757c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b9d768ec-312a-4e01-a862-c8565a9be357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328ca4be-37d4-40f8-b4d2-0278c4cda88d",
        "cursor": {
          "ref": "1e6b2417-5a6f-404b-8e38-0957d8676a8b",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "8222df38-81fa-4975-a6ba-59bbaa98836c"
        },
        "item": {
          "id": "328ca4be-37d4-40f8-b4d2-0278c4cda88d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4533fd74-9460-4dd2-8428-70c6693f8c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c11f7d6-eb6a-49cb-b733-432ab72f5adf",
        "cursor": {
          "ref": "01b294ac-764b-4f21-a706-2cc4006dc43d",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "225baeb5-f319-44fd-bd63-1f757b265231"
        },
        "item": {
          "id": "2c11f7d6-eb6a-49cb-b733-432ab72f5adf",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0f621b13-a1c5-444d-ad5d-d761a372db87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f343e721-48a7-4c40-a048-21146dfcebe5",
        "cursor": {
          "ref": "9341a69d-5a65-492a-8dc6-be0ea8507439",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "7ea6ad2c-6de0-4662-b8d6-b80fbb6d569f"
        },
        "item": {
          "id": "f343e721-48a7-4c40-a048-21146dfcebe5",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "26336ebd-edec-4c2a-8cd9-2edfd0eee836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08cc0415-558e-4409-beb5-c32f83b7421b",
        "cursor": {
          "ref": "36ae6297-ad89-43ae-a82f-614df308d33b",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d53f2967-1e9c-4efb-8aa8-049c4cd411a9"
        },
        "item": {
          "id": "08cc0415-558e-4409-beb5-c32f83b7421b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8769bb72-60d2-412f-977d-f43ae5ed5e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0828afab-21f4-4106-bf60-337efe0d537d",
        "cursor": {
          "ref": "a9670a0c-c67d-4f04-8dfc-d5216917c87e",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "16980419-8ccd-464c-b0eb-c477e65464ec"
        },
        "item": {
          "id": "0828afab-21f4-4106-bf60-337efe0d537d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "abce6625-a205-4e12-93c6-a3d99e15ced9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654c9c3f-2ae1-4108-8be1-8754d4e2ac2e",
        "cursor": {
          "ref": "424b9b62-87c9-4a33-a74b-368b60c00bb5",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "772ed07b-67e0-439a-a350-d9ff4e92108e"
        },
        "item": {
          "id": "654c9c3f-2ae1-4108-8be1-8754d4e2ac2e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "db543e8d-8da0-4ccb-bfbe-e889f8a90933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1798c1-60ea-4246-8f9f-20fb73b24085",
        "cursor": {
          "ref": "212227c3-bc5f-46a1-83eb-f8dda0909766",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "4916c866-bbc4-46c3-814d-127997c891b1"
        },
        "item": {
          "id": "ff1798c1-60ea-4246-8f9f-20fb73b24085",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ee5f80fb-cc3b-4edf-921d-cc4ac3dc740b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef48bbaf-0198-450c-a923-9f9b320821a2",
        "cursor": {
          "ref": "6295d01a-926a-4590-a169-d93af3bbd509",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "bd439802-7fe1-4939-b9e6-c8fd2fce15bf"
        },
        "item": {
          "id": "ef48bbaf-0198-450c-a923-9f9b320821a2",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b01035c4-fccf-49b0-beb6-0330a720840f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b70270e4-1102-4a98-babe-e27e398d9ca7",
        "cursor": {
          "ref": "a1ac4a15-5d92-40b8-abab-4e46f4861921",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5869e08e-f945-4c6a-817c-d7439c3ac475"
        },
        "item": {
          "id": "b70270e4-1102-4a98-babe-e27e398d9ca7",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "470227ac-e0d9-4658-9da9-80adbd49f148",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41115f59-b5ec-45c5-8c9b-f50996cf4df0",
        "cursor": {
          "ref": "2f8bfc1a-4e12-417f-9ed2-3d54f1866728",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "55f47cb7-4dc1-48e6-87ee-1c5a125ca4c7"
        },
        "item": {
          "id": "41115f59-b5ec-45c5-8c9b-f50996cf4df0",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "4dbf4bd3-a558-4c95-9e68-06b3ada3e602",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feaaba2d-c4d1-43e7-b965-b100fdf962be",
        "cursor": {
          "ref": "10122cdf-05d7-45c1-b980-991ebfb358d1",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ae5c3410-ae2c-4599-99ab-6aef5a02c7bc"
        },
        "item": {
          "id": "feaaba2d-c4d1-43e7-b965-b100fdf962be",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c2926ba0-d0f3-49ca-9d93-3467641de757",
          "status": "OK",
          "code": 200,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7d567da-b31b-4172-8c03-5c18b0e5361c",
        "cursor": {
          "ref": "347da7e4-206d-4a32-bb97-e61fddf7f249",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "8709f220-7873-49b7-878f-6139edf53b88"
        },
        "item": {
          "id": "c7d567da-b31b-4172-8c03-5c18b0e5361c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b032e736-92fc-4dd2-b9ec-aa8608e9f257",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dcc4f7e-ad80-40be-9810-7cc251b57adc",
        "cursor": {
          "ref": "0d62605d-bd99-4a3b-8508-6f3e11e03157",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "29982466-568a-4507-a8d5-6e3f47515056"
        },
        "item": {
          "id": "5dcc4f7e-ad80-40be-9810-7cc251b57adc",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a159e258-4602-4399-95a5-da74020d9b96",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b63cebda-ce00-4bcb-95ec-51285b76d128",
        "cursor": {
          "ref": "43f1f39a-5f7b-42f8-ac0a-3a00a94212b2",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "94e92b55-fea5-453d-8433-24c3a6baf85a"
        },
        "item": {
          "id": "b63cebda-ce00-4bcb-95ec-51285b76d128",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d481c7b8-b42d-4c72-96f4-97ca14b339b8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b63cebda-ce00-4bcb-95ec-51285b76d128",
        "cursor": {
          "ref": "43f1f39a-5f7b-42f8-ac0a-3a00a94212b2",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "94e92b55-fea5-453d-8433-24c3a6baf85a"
        },
        "item": {
          "id": "b63cebda-ce00-4bcb-95ec-51285b76d128",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d481c7b8-b42d-4c72-96f4-97ca14b339b8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b63cebda-ce00-4bcb-95ec-51285b76d128",
        "cursor": {
          "ref": "43f1f39a-5f7b-42f8-ac0a-3a00a94212b2",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "94e92b55-fea5-453d-8433-24c3a6baf85a"
        },
        "item": {
          "id": "b63cebda-ce00-4bcb-95ec-51285b76d128",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d481c7b8-b42d-4c72-96f4-97ca14b339b8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceab5ff5-2885-4d8e-b7e5-c45a179dd0dd",
        "cursor": {
          "ref": "f3e5bb67-ba54-424c-8d82-144f0f5cb6de",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ba33273f-d068-4450-8ad3-19c9494f0339"
        },
        "item": {
          "id": "ceab5ff5-2885-4d8e-b7e5-c45a179dd0dd",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "0d790ff8-55c0-4758-a594-f75b61659711",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb1fe6e-9840-408f-aadf-fcdce1f6bb6a",
        "cursor": {
          "ref": "d5e3fe3b-0b3f-4fa9-a9f4-039b210d3908",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8ae2c079-d3ab-40c2-b15b-e64701f886b7"
        },
        "item": {
          "id": "6cb1fe6e-9840-408f-aadf-fcdce1f6bb6a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "64156130-d15b-428b-9f42-e4e69c566f4f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb1fe6e-9840-408f-aadf-fcdce1f6bb6a",
        "cursor": {
          "ref": "d5e3fe3b-0b3f-4fa9-a9f4-039b210d3908",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8ae2c079-d3ab-40c2-b15b-e64701f886b7"
        },
        "item": {
          "id": "6cb1fe6e-9840-408f-aadf-fcdce1f6bb6a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "64156130-d15b-428b-9f42-e4e69c566f4f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d63438-05cf-4d05-a110-dfe9923d9541",
        "cursor": {
          "ref": "2220ef75-b3b5-415f-9d24-f0a67378c76b",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4e7a7447-8cde-4c81-921f-33e270adbeb3"
        },
        "item": {
          "id": "94d63438-05cf-4d05-a110-dfe9923d9541",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "62be39a4-b3ac-48be-b064-9987deb23de2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c562c8-af9e-4038-8fdf-692da1ce7b6d",
        "cursor": {
          "ref": "488d0cca-d4af-4877-ad57-cc56c4a2bc07",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "43e23395-e4cc-46b2-abd4-59429c0884fc"
        },
        "item": {
          "id": "64c562c8-af9e-4038-8fdf-692da1ce7b6d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d7c0a781-3850-4201-9e34-760a034df8bc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c562c8-af9e-4038-8fdf-692da1ce7b6d",
        "cursor": {
          "ref": "488d0cca-d4af-4877-ad57-cc56c4a2bc07",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "43e23395-e4cc-46b2-abd4-59429c0884fc"
        },
        "item": {
          "id": "64c562c8-af9e-4038-8fdf-692da1ce7b6d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d7c0a781-3850-4201-9e34-760a034df8bc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba167539-a771-4ad4-bfcb-1471238ec8d8",
        "cursor": {
          "ref": "a449c09f-3c18-4841-95a0-3eeb8081578e",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "a64676c1-619e-4913-8256-60c20895b4ca"
        },
        "item": {
          "id": "ba167539-a771-4ad4-bfcb-1471238ec8d8",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "b6cb7933-3d5d-418c-b3e5-b97c4ab47011",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}